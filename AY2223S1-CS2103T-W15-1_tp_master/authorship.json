[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"florentianayuwono"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W15-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W15-1/tp/actions)","lastModifiedDate":"2022-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"florentianayuwono"},"content":"# SoConnect","lastModifiedDate":"2022-09-22"},{"lineNumber":6,"author":{"gitId":"florentianayuwono"},"content":"SoConnect is a desktop app for NUS SoC students to manage their contacts, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, SoConnect can get your contact management tasks done faster than traditional GUI apps!ðŸš€âœ¨","lastModifiedDate":"2022-09-22"},{"lineNumber":7,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":8,"author":{"gitId":"florentianayuwono"},"content":"* For the detailed documentation of this project, see the **[SoConnect Website](https://ay2223s1-cs2103t-w15-1.github.io/tp/)**.","lastModifiedDate":"2022-09-22"},{"lineNumber":9,"author":{"gitId":"florentianayuwono"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-22"}],"authorContributionMap":{"florentianayuwono":6,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"Eugene-Ong-W-X"},"content":"mainClassName \u003d \u0027soconnect.Main\u0027","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    archiveFileName \u003d \u0027SoConnect.jar\u0027","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"Eugene-Ong-W-X"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"Eugene-Ong-W-X"},"content":"run {","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Eugene-Ong-W-X":6,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2022-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":6,"author":{"gitId":"florentianayuwono"},"content":"# About Us","lastModifiedDate":"2022-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"florentianayuwono"},"content":"You can reach us at the email `florenyu[at]comp.nus.edu.sg`","lastModifiedDate":"2022-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Eugene-Ong-W-X"},"content":"### Eugene Ong Wei Xiang","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"florentianayuwono"},"content":"\u003cimg src\u003d\"images/eugene-ong-w-x.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"florentianayuwono"},"content":"[[github](https://github.com/eugene-ong-w-x)]","lastModifiedDate":"2022-09-22"},{"lineNumber":19,"author":{"gitId":"florentianayuwono"},"content":"[[portfolio](team/eugene-ong-w-x.md)]","lastModifiedDate":"2022-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"florentianayuwono"},"content":"* Responsibilities: Overall project coordination, deliverables, scheduling and tracking","lastModifiedDate":"2022-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"### Florentiana Yuwono","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"florentianayuwono"},"content":"\u003cimg src\u003d\"images/florentianayuwono.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"florentianayuwono"},"content":"[[github](http://github.com/florentianayuwono)] [[portfolio](team/florentianayuwono.md)]","lastModifiedDate":"2022-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"florentianayuwono"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2022-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"florentianayuwono"},"content":"### Chong Chee Kai, Clarence","lastModifiedDate":"2022-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"florentianayuwono"},"content":"\u003cimg src\u003d\"images/chongcheekaiclarence.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"florentianayuwono"},"content":"[[github](http://github.com/chongcheekaiclarence)]","lastModifiedDate":"2022-09-22"},{"lineNumber":38,"author":{"gitId":"florentianayuwono"},"content":"[[portfolio](team/chongcheekaiclarence.md)]","lastModifiedDate":"2022-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"florentianayuwono"},"content":"* Responsibilities: Integration","lastModifiedDate":"2022-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"### Pang Kuang Wei","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"florentianayuwono"},"content":"\u003cimg src\u003d\"images/pangkuangwei.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"florentianayuwono"},"content":"[[github](http://github.com/pangkuangwei)]","lastModifiedDate":"2022-09-22"},{"lineNumber":48,"author":{"gitId":"florentianayuwono"},"content":"[[portfolio](team/pangkuangwei.md)]","lastModifiedDate":"2022-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"florentianayuwono"},"content":"* Responsibilities: Testing","lastModifiedDate":"2022-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Wu Changjun","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"florentianayuwono"},"content":"\u003cimg src\u003d\"images/ugholaf.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"florentianayuwono"},"content":"[[github](http://github.com/ugholaf)]","lastModifiedDate":"2022-09-22"},{"lineNumber":58,"author":{"gitId":"florentianayuwono"},"content":"[[portfolio](team/ugholaf.md)]","lastModifiedDate":"2022-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"Eugene-Ong-W-X":2,"florentianayuwono":21,"-":38}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"Ugholaf"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`).","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"Ugholaf"},"content":"### Autocomplete component","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"Ugholaf"},"content":"**API** : [`Autocomplete.java`](https://github.com/AY2223S1-CS2103T-W15-1/tp/blob/master/src/main/java/seedu/address/logic/autocomplete/Autocomplete.java)","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"Ugholaf"},"content":"**TODO: Add AutocompleteClassDiagram**","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"Ugholaf"},"content":"The `Autocomplete` component,","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"Ugholaf"},"content":"* stores the unique names in SoConnect.","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"Ugholaf"},"content":"* depends on some classes in the `Model` component (because the `Autocomplete` component gets a list of unique names from the objects that belong to the `Model`).","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"Eugene-Ong-W-X"},"content":"### Sorting feature","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"Eugene-Ong-W-X"},"content":"#### Implementation","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"Eugene-Ong-W-X"},"content":"The sorting mechanism is facilitated by `SortCommand` and `SortCommandParser`.","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"Eugene-Ong-W-X"},"content":"Additionally, the mechanism utilises the following operations in `UniquePersonList`:","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* `UniquePersonList#sortByName(Boolean isReverse)`â€‰â€”â€‰Sorts the contact list by name in alphabetical order.","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* `UniquePersonList#sortByPhone(Boolean isReverse)`â€‰â€”â€‰Sorts the contact list by phone number in increasing order.","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* `UniquePersonList#sortByEmail(Boolean isReverse)`â€‰â€”â€‰Sorts the contact list by email in alphabetical order.","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* `UniquePersonList#sortByAddress(Boolean isReverse)`â€‰â€”â€‰Sorts the contact list by address in alphabetical order.","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* `UniquePersonList#sortByTag(Tag tag, Boolean isReverse)`â€‰â€”â€‰Sorts the contact list by a specified tag.","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"Eugene-Ong-W-X"},"content":"These operations sort in reverse order when `isReverse` is true.","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"Eugene-Ong-W-X"},"content":"These operations are exposed in the `Model` interface under the same method name.","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"Eugene-Ong-W-X"},"content":"Given below is an example usage scenario and how the sorting mechanism behaves at each step.","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"Eugene-Ong-W-X"},"content":"Step 1. The user executes `sort t/!friend n/` command to perform a multi-level sort. `SortCommandParser` calls `ArgumentTokenizer#tokenizeToList()` to separate the parameters of `t/!friend` and `n/`.","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"Eugene-Ong-W-X"},"content":"Step 2. The `sort` command sorts the currently displayed list by name first, calling `Model#sortByName(Boolean isReverse)` where `isReverse \u003d false`.","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"Eugene-Ong-W-X"},"content":"Step 3. The `sort` command sorts the currently displayed list by the `friend` tag next, calling `Model#sortByTag(Tag tag, Boolean isReverse)` where `isReverse \u003d true`.","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"Eugene-Ong-W-X"},"content":"The following sequence diagram shows how the sort operation works:","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"Eugene-Ong-W-X"},"content":"(insert sequence diagram here)","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"Eugene-Ong-W-X"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `SortCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"Eugene-Ong-W-X"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":199,"author":{"gitId":"Eugene-Ong-W-X"},"content":"Step 4. The user is shown the sorted list. The sorted list contains the same contacts as the previous displayed list. It has two sections, the first section contains contacts without the `friend` tag and the second section contains contacts with the `friend` tag. Each section is sorted by name in alphabetical order.","lastModifiedDate":"2022-10-10"},{"lineNumber":200,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":201,"author":{"gitId":"Eugene-Ong-W-X"},"content":"The following activity diagram summarizes what happens when a user executes a sort command:","lastModifiedDate":"2022-10-10"},{"lineNumber":202,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":203,"author":{"gitId":"Eugene-Ong-W-X"},"content":"(insert activity diagram here)","lastModifiedDate":"2022-10-10"},{"lineNumber":204,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":205,"author":{"gitId":"Eugene-Ong-W-X"},"content":"#### Design consideration","lastModifiedDate":"2022-10-11"},{"lineNumber":206,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":207,"author":{"gitId":"Eugene-Ong-W-X"},"content":"**Aspect: How to implement multi-level sorting:**","lastModifiedDate":"2022-10-10"},{"lineNumber":208,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":209,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* **Alternative 1 (current choice):** Sort the list once for each parameter entered by the user.","lastModifiedDate":"2022-10-10"},{"lineNumber":210,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2022-10-10"},{"lineNumber":211,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    * Cons: May have performance issues in terms of time needed to sort.","lastModifiedDate":"2022-10-10"},{"lineNumber":212,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":213,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* **Alternative 2:** Single complex sorting method that combines all the individual sorting for each parameter.","lastModifiedDate":"2022-10-10"},{"lineNumber":214,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    * Pros: Save time as only 1 sorting operation is carried out.","lastModifiedDate":"2022-10-10"},{"lineNumber":215,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    * Cons: Harder to modify when more parameters are added. Can result in more bugs due to complexity.","lastModifiedDate":"2022-10-10"},{"lineNumber":216,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":217,"author":{"gitId":"Eugene-Ong-W-X"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2022-10-10"},{"lineNumber":218,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":219,"author":{"gitId":"florentianayuwono"},"content":"### Search feature","lastModifiedDate":"2022-10-11"},{"lineNumber":220,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":221,"author":{"gitId":"florentianayuwono"},"content":"#### Implementation","lastModifiedDate":"2022-10-11"},{"lineNumber":222,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":223,"author":{"gitId":"florentianayuwono"},"content":"The search mechanism is facilitated by `SearchCommand` and `SearchCommandParser`.","lastModifiedDate":"2022-10-11"},{"lineNumber":224,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":225,"author":{"gitId":"florentianayuwono"},"content":"This feature allows user to customise the contacts displayed based on the information provided. For example, user can decide to have specific search result that satisfies all the conditions or to have more generic result that only satisfies one of the conditions.","lastModifiedDate":"2022-10-11"},{"lineNumber":226,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":227,"author":{"gitId":"florentianayuwono"},"content":"It implements the following main operations:","lastModifiedDate":"2022-10-11"},{"lineNumber":228,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":229,"author":{"gitId":"florentianayuwono"},"content":"* `SearchCommand#execute(Model model)`â€‰â€”â€‰Updates filtered person list to contain contacts that match the search query.","lastModifiedDate":"2022-10-11"},{"lineNumber":230,"author":{"gitId":"florentianayuwono"},"content":"* `SearchCommandParser#parse()`â€‰â€”â€‰Parses search query based on the condition and information specified.","lastModifiedDate":"2022-10-11"},{"lineNumber":231,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":232,"author":{"gitId":"florentianayuwono"},"content":"Given below is an example usage scenario and how the search mechanism behaves at each step.","lastModifiedDate":"2022-10-11"},{"lineNumber":233,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":234,"author":{"gitId":"florentianayuwono"},"content":"Step 1. The user executes `search n/John a/NUS` command to perform a joint search. `SearchCommandParser` calls `ArgumentTokenizer#tokenize` to group the search parameters according to the prefix `/n` and `/a`.","lastModifiedDate":"2022-10-11"},{"lineNumber":235,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":236,"author":{"gitId":"florentianayuwono"},"content":"Step 2. The `search` command search the Address Book by matching the search parameters and condition with the available contact information, calling `StringUtil#containsKeywordsIgnoreCase(String sentence, String keywords)`.","lastModifiedDate":"2022-10-11"},{"lineNumber":237,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":238,"author":{"gitId":"florentianayuwono"},"content":"The following sequence diagram shows how the search operation works:","lastModifiedDate":"2022-10-11"},{"lineNumber":239,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":240,"author":{"gitId":"florentianayuwono"},"content":"(insert sequence diagram here)","lastModifiedDate":"2022-10-11"},{"lineNumber":241,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":242,"author":{"gitId":"florentianayuwono"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `SearchCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-10-11"},{"lineNumber":243,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":244,"author":{"gitId":"florentianayuwono"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":245,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":246,"author":{"gitId":"florentianayuwono"},"content":"Step 3. The user is shown the searched list. The searched list contains all contacts that are relevant to the user\u0027s search query.","lastModifiedDate":"2022-10-11"},{"lineNumber":247,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":248,"author":{"gitId":"florentianayuwono"},"content":"The following activity diagram summarizes what happens when a user executes a search command:","lastModifiedDate":"2022-10-11"},{"lineNumber":249,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":250,"author":{"gitId":"florentianayuwono"},"content":"(insert activity diagram here)","lastModifiedDate":"2022-10-11"},{"lineNumber":251,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":252,"author":{"gitId":"florentianayuwono"},"content":"#### Design consideration","lastModifiedDate":"2022-10-11"},{"lineNumber":253,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":254,"author":{"gitId":"florentianayuwono"},"content":"**Aspect: How to implement searching:**","lastModifiedDate":"2022-10-11"},{"lineNumber":255,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":256,"author":{"gitId":"florentianayuwono"},"content":"* **Alternative 1 (current choice):** Search the list once for each parameter entered by the user.","lastModifiedDate":"2022-10-11"},{"lineNumber":257,"author":{"gitId":"florentianayuwono"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2022-10-11"},{"lineNumber":258,"author":{"gitId":"florentianayuwono"},"content":"    * Cons: May have performance issues in terms of time needed to search.","lastModifiedDate":"2022-10-11"},{"lineNumber":259,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":260,"author":{"gitId":"florentianayuwono"},"content":"* **Alternative 2:** Single complex searching method that combines all the individual searching for each parameter.","lastModifiedDate":"2022-10-11"},{"lineNumber":261,"author":{"gitId":"florentianayuwono"},"content":"    * Pros: Save time as only 1 search operation is carried out.","lastModifiedDate":"2022-10-11"},{"lineNumber":262,"author":{"gitId":"florentianayuwono"},"content":"    * Cons: Harder to modify when more parameters are added. Can result in more bugs due to complexity.","lastModifiedDate":"2022-10-11"},{"lineNumber":263,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":264,"author":{"gitId":"florentianayuwono"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2022-10-11"},{"lineNumber":265,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":266,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"Eugene-Ong-W-X"},"content":"#### Proposed implementation","lastModifiedDate":"2022-10-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()`â€‰â€”â€‰Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()`â€‰â€”â€‰Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()`â€‰â€”â€‰Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David â€¦â€‹` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"The `redo` command does the oppositeâ€‰â€”â€‰it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David â€¦â€‹` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"florentianayuwono"},"content":"#### Design consideration","lastModifiedDate":"2022-10-11"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"ChongCheeKaiClarence"},"content":"### Tag adding feature","lastModifiedDate":"2022-10-11"},{"lineNumber":347,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":348,"author":{"gitId":"PangKuangWei"},"content":"#### Implementation","lastModifiedDate":"2022-10-11"},{"lineNumber":349,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":350,"author":{"gitId":"ChongCheeKaiClarence"},"content":"The tag adding mechanism is facilitated by `TagAddCommand` and `TagAddCommandParser`.","lastModifiedDate":"2022-10-11"},{"lineNumber":351,"author":{"gitId":"ChongCheeKaiClarence"},"content":"Additionally, The mechanism utilises the following operations in `UniqueTagList` and `UniquePersonList`.","lastModifiedDate":"2022-10-11"},{"lineNumber":352,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":353,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* `UniqueTagList#hasTag(Tag tag)` - Checks if the tagList has the tag.","lastModifiedDate":"2022-10-11"},{"lineNumber":354,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* `UniquePersonList#setPerson(Person target, Person editedPerson)` - Sets the same person with the new tag.","lastModifiedDate":"2022-10-11"},{"lineNumber":355,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":356,"author":{"gitId":"ChongCheeKaiClarence"},"content":"These operations are exposed in the `Model` interface under the same method name.","lastModifiedDate":"2022-10-11"},{"lineNumber":357,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":358,"author":{"gitId":"ChongCheeKaiClarence"},"content":"Given below is an example usage scenario and how the tag adding mechanism behaves at each step.","lastModifiedDate":"2022-10-11"},{"lineNumber":359,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":360,"author":{"gitId":"ChongCheeKaiClarence"},"content":"Step 1. The user executes `tag add 1 t/friend` command to add the tag, `friend`, to the person indicated by the `INDEX`, 1.","lastModifiedDate":"2022-10-11"},{"lineNumber":361,"author":{"gitId":"ChongCheeKaiClarence"},"content":"`TagAddCommandParser` calls  `ArgumentTokenizer#tokenizeToList()` to separate the parameters of `1` and `t/friend`.","lastModifiedDate":"2022-10-11"},{"lineNumber":362,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":363,"author":{"gitId":"ChongCheeKaiClarence"},"content":"Step 2. The `tag add` command collects the list of persons shown, containing them in `Model#getFilteredPersonList()`.","lastModifiedDate":"2022-10-11"},{"lineNumber":364,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":365,"author":{"gitId":"ChongCheeKaiClarence"},"content":"Step 3. The `tag add` command checks if the index is valid, calling `Index#getZeroBased()`.","lastModifiedDate":"2022-10-11"},{"lineNumber":366,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":367,"author":{"gitId":"ChongCheeKaiClarence"},"content":"Step 4. The `tag add` command receives the person indicated by the index, containing it in `List#get(int index)`.","lastModifiedDate":"2022-10-11"},{"lineNumber":368,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":369,"author":{"gitId":"ChongCheeKaiClarence"},"content":"Step 5. The `tag add` command creates the same person with the new tag included, containing it in `TagAddCommand#createEditedPerson(Person personToEdit, Tag tag)`.","lastModifiedDate":"2022-10-11"},{"lineNumber":370,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":371,"author":{"gitId":"ChongCheeKaiClarence"},"content":"Step 6. The `tag add` command replaces the old person with the new, updated person, calling `Model#setPerson(Person target, Person editedPerson)`.","lastModifiedDate":"2022-10-11"},{"lineNumber":372,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":373,"author":{"gitId":"ChongCheeKaiClarence"},"content":"The following activity diagram summarizes what happens when a user executes a tag add command:","lastModifiedDate":"2022-10-11"},{"lineNumber":374,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":375,"author":{"gitId":"ChongCheeKaiClarence"},"content":"(insert activity diagram here)","lastModifiedDate":"2022-10-11"},{"lineNumber":376,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":377,"author":{"gitId":"ChongCheeKaiClarence"},"content":"#### Design consideration","lastModifiedDate":"2022-10-11"},{"lineNumber":378,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":379,"author":{"gitId":"ChongCheeKaiClarence"},"content":"**Aspect: How to implement tag add:**","lastModifiedDate":"2022-10-11"},{"lineNumber":380,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":381,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* **Alternative 1 (current choice):** Creates a new `Person` with the tag included.","lastModifiedDate":"2022-10-11"},{"lineNumber":382,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    * Pros: Prevents direct access into the tags of a `Person`.","lastModifiedDate":"2022-10-11"},{"lineNumber":383,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    * Cons: Potential error occurs if some form of duplication is allowed.","lastModifiedDate":"2022-10-11"},{"lineNumber":384,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":385,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* **Alternative 2:** Directly add the tag into the `Person` .","lastModifiedDate":"2022-10-11"},{"lineNumber":386,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2022-10-11"},{"lineNumber":387,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    * Cons: Easy to access into the tags of a `Person`. Could cause accidental bugs.","lastModifiedDate":"2022-10-11"},{"lineNumber":388,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":389,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"PangKuangWei"},"content":"### Customise Order Feature","lastModifiedDate":"2022-10-11"},{"lineNumber":394,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":395,"author":{"gitId":"PangKuangWei"},"content":"#### Implementation","lastModifiedDate":"2022-10-11"},{"lineNumber":396,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":397,"author":{"gitId":"PangKuangWei"},"content":"This feature is mainly implemented by the `CustomiseCommand` and `PersonCard` classes. The following methods are the main ones:","lastModifiedDate":"2022-10-11"},{"lineNumber":398,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":399,"author":{"gitId":"PangKuangWei"},"content":"* `CustomiseCommand#changeAttributeOrder(Model model)` - saves the new attribute order in the `preferences.json` file.","lastModifiedDate":"2022-10-11"},{"lineNumber":400,"author":{"gitId":"PangKuangWei"},"content":"* `PersonCard#setAttributes()` - reads the order from the `preferences.json` file and builds the `PersonCard` in the order specified.","lastModifiedDate":"2022-10-11"},{"lineNumber":401,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":402,"author":{"gitId":"PangKuangWei"},"content":"_{diagrams and more in depth explanation to be added}_","lastModifiedDate":"2022-10-11"},{"lineNumber":403,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":404,"author":{"gitId":"PangKuangWei"},"content":"#### Design consideration","lastModifiedDate":"2022-10-11"},{"lineNumber":405,"author":{"gitId":"PangKuangWei"},"content":"* **Alternative 1 (current choice):** Sets the order in 4 placeholder JavaFX `FlowPane`.","lastModifiedDate":"2022-10-11"},{"lineNumber":406,"author":{"gitId":"PangKuangWei"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2022-10-11"},{"lineNumber":407,"author":{"gitId":"PangKuangWei"},"content":"  * Cons: Unable to have different styling for different attributes.","lastModifiedDate":"2022-10-11"},{"lineNumber":408,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":409,"author":{"gitId":"PangKuangWei"},"content":"* **Alternative 2:** Have 24 different FXML files and choose the one with the required order.","lastModifiedDate":"2022-10-11"},{"lineNumber":410,"author":{"gitId":"PangKuangWei"},"content":"  * Pros: Easy to implement and can have different styling for different attributes.","lastModifiedDate":"2022-10-11"},{"lineNumber":411,"author":{"gitId":"PangKuangWei"},"content":"  * Cons: Hard to maintain and make changes.","lastModifiedDate":"2022-10-11"},{"lineNumber":412,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":413,"author":{"gitId":"PangKuangWei"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2022-10-11"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":420,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":421,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":422,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":423,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"Eugene-Ong-W-X"},"content":"**Target user profile**: NUS SoC Student","lastModifiedDate":"2022-09-25"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* has a need to manage a significant number of contacts (from NUS modules and co-curricular activities)","lastModifiedDate":"2022-09-25"},{"lineNumber":434,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* prefer desktop apps over other types (easy access to laptop for NUS/SoC modules)","lastModifiedDate":"2022-09-25"},{"lineNumber":435,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* can type fast (from SoC coding modules)","lastModifiedDate":"2022-09-25"},{"lineNumber":436,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* prefers typing to mouse interactions (from SoC coding modules)","lastModifiedDate":"2022-09-25"},{"lineNumber":437,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* is reasonably comfortable using CLI apps (from SoC coding modules)","lastModifiedDate":"2022-09-25"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"Eugene-Ong-W-X"},"content":"**Value proposition**:","lastModifiedDate":"2022-09-25"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":441,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-09-25"},{"lineNumber":442,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* organise and separate their school contacts from personal contacts","lastModifiedDate":"2022-09-25"},{"lineNumber":443,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* practice and train their typing speed","lastModifiedDate":"2022-09-25"},{"lineNumber":444,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* increase their familiarity with using CLI tools","lastModifiedDate":"2022-09-25"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| Priority | As a â€¦                  | I want to â€¦                                            | So that I canâ€¦                                                             |","lastModifiedDate":"2022-10-09"},{"lineNumber":452,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| -------- | ----------------------- | ------------------------------------------------------ | -------------------------------------------------------------------------- |","lastModifiedDate":"2022-10-09"},{"lineNumber":453,"author":{"gitId":"-"},"content":"| `* * *`  | new user                | see usage instructions                                 | refer to instructions when I forget how to use the App                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `* * *`  | user                    | add a new contact                                      |                                                                            |","lastModifiedDate":"2022-09-25"},{"lineNumber":455,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `* * *`  | user                    | delete a contact                                       | remove entries that I no longer need                                       |","lastModifiedDate":"2022-09-25"},{"lineNumber":456,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `* * *`  | user                    | view all my contacts                                   | keep track of all my contacts                                              |","lastModifiedDate":"2022-09-25"},{"lineNumber":457,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `* *`    | user                    | edit a contact                                         | update it or correct mistakes                                              |","lastModifiedDate":"2022-09-25"},{"lineNumber":458,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `* *`    | user                    | clear all my contacts                                  | save time deleting them one by one                                         |","lastModifiedDate":"2022-09-25"},{"lineNumber":459,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `* *`    | user                    | create a new tag                                       | categorise my contacts                                                     |","lastModifiedDate":"2022-09-25"},{"lineNumber":460,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `* *`    | user                    | delete a tag                                           | remove redundant tags                                                      |","lastModifiedDate":"2022-09-25"},{"lineNumber":461,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `* *`    | user                    | edit a tag                                             | provide better naming                                                      |","lastModifiedDate":"2022-09-25"},{"lineNumber":462,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `* *`    | user                    | tag a contact                                          | add it to a category                                                       |","lastModifiedDate":"2022-09-25"},{"lineNumber":463,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `* *`    | user                    | untag a contact                                        | remove it from a category                                                  |","lastModifiedDate":"2022-09-25"},{"lineNumber":464,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `* *`    | user                    | search using a name, phone number, email or address    | find a contact easily without reading through the list                     |","lastModifiedDate":"2022-09-25"},{"lineNumber":465,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `* *`    | user                    | search with a tag                                      | find groups of contacts that share a common tag                            |","lastModifiedDate":"2022-09-25"},{"lineNumber":466,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `* *`    | user                    | search with multiple tags                              | narrow my search results to only contacts that have all the specified tags |","lastModifiedDate":"2022-09-25"},{"lineNumber":467,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `* *`    | user                    | search with multiple tags                              | broaden my result results to contacts that have any of the specified tags  |","lastModifiedDate":"2022-09-25"},{"lineNumber":468,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `* *`    | user                    | view contacts related to my search query               | find contacts even when I mistype their name                               |","lastModifiedDate":"2022-09-25"},{"lineNumber":469,"author":{"gitId":"-"},"content":"| `* *`    | user                    | hide private contact details                           | minimize chance of someone else seeing them by accident                    |","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `* *`    | user                    | show private contact details                           | view them when I need to                                                   |","lastModifiedDate":"2022-09-25"},{"lineNumber":471,"author":{"gitId":"Ugholaf"},"content":"| `* *`    | user                    | have an autocomplete for the names that I am searching | search faster by names and minimize the chance of an unsuccessful search   |","lastModifiedDate":"2022-09-30"},{"lineNumber":472,"author":{"gitId":"Ugholaf"},"content":"| `* *`    | user                    | have an autocomplete for the tags that I am searching  | search faster by tags and minimize the chance of an unsuccessful search    |","lastModifiedDate":"2022-09-30"},{"lineNumber":473,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `* *`    | user with many contacts | specify the default order of my contacts               | avoid re-sorting the list everytime                                        |","lastModifiedDate":"2022-09-25"},{"lineNumber":474,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `* *`    | user with many contacts | sort contacts by name, email, phone number, or address | organise my contacts list                                                  |","lastModifiedDate":"2022-09-25"},{"lineNumber":475,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `* *`    | user with many contacts | sort contacts according to tags                        | view contacts with a specified tag before other contacts                   |","lastModifiedDate":"2022-09-25"},{"lineNumber":476,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `* *`    | user with many contacts | sort contacts by multiple fields                       | organise my contacts list with greater degree                              |","lastModifiedDate":"2022-09-25"},{"lineNumber":477,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `*`      | user with many contacts | mark some contacts as my favourites                    | spot them easily among other contacts                                      |","lastModifiedDate":"2022-09-25"},{"lineNumber":478,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `*`      | user with many contacts | sort favourite contacts before others                  | see them before other contacts                                             |","lastModifiedDate":"2022-09-25"},{"lineNumber":479,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `*`      | user                    | change the order of information for contacts           | view more important information before others                              |","lastModifiedDate":"2022-09-25"},{"lineNumber":480,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| `*`      | user                    | customise the theme of the app                         | adjust it to my comfort and liking                                         |","lastModifiedDate":"2022-09-25"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":482,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"ChongCheeKaiClarence"},"content":"(For all use cases below, the **System** is the `SoConnect` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-25"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"ChongCheeKaiClarence"},"content":"2.  SoConnect shows a list of persons","lastModifiedDate":"2022-09-25"},{"lineNumber":494,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"ChongCheeKaiClarence"},"content":"4.  SoConnect deletes the person","lastModifiedDate":"2022-09-25"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* 1a. The list is empty.","lastModifiedDate":"2022-09-25"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    * 3a1. SoConnect shows an error message.","lastModifiedDate":"2022-09-25"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"Ugholaf"},"content":"**Use case: Search contacts**","lastModifiedDate":"2022-09-29"},{"lineNumber":512,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":513,"author":{"gitId":"ChongCheeKaiClarence"},"content":"**MSS**","lastModifiedDate":"2022-09-25"},{"lineNumber":514,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":515,"author":{"gitId":"ChongCheeKaiClarence"},"content":"1.  User requests to search a specific word in the list","lastModifiedDate":"2022-09-25"},{"lineNumber":516,"author":{"gitId":"ChongCheeKaiClarence"},"content":"2.  SoConnect shows a list of persons related to the word.","lastModifiedDate":"2022-09-25"},{"lineNumber":517,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":518,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    Use case ends.","lastModifiedDate":"2022-09-25"},{"lineNumber":519,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":520,"author":{"gitId":"ChongCheeKaiClarence"},"content":"**Extension**","lastModifiedDate":"2022-09-25"},{"lineNumber":521,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* 1a. The list is empty.","lastModifiedDate":"2022-09-25"},{"lineNumber":522,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":523,"author":{"gitId":"ChongCheeKaiClarence"},"content":"  Use case ends","lastModifiedDate":"2022-09-25"},{"lineNumber":524,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":525,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* 3a. There is no input after search.","lastModifiedDate":"2022-09-25"},{"lineNumber":526,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":527,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    * 3a1. SoConnect shows the same list of persons.","lastModifiedDate":"2022-09-25"},{"lineNumber":528,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":529,"author":{"gitId":"ChongCheeKaiClarence"},"content":"      Use case ends.","lastModifiedDate":"2022-09-25"},{"lineNumber":530,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":531,"author":{"gitId":"ChongCheeKaiClarence"},"content":"**Use case: Edit a tag**","lastModifiedDate":"2022-09-25"},{"lineNumber":532,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":533,"author":{"gitId":"ChongCheeKaiClarence"},"content":"**MSS**","lastModifiedDate":"2022-09-25"},{"lineNumber":534,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":535,"author":{"gitId":"ChongCheeKaiClarence"},"content":"1.  User requests for list of tags.","lastModifiedDate":"2022-09-25"},{"lineNumber":536,"author":{"gitId":"ChongCheeKaiClarence"},"content":"2.  SoConnect shows the list of tags.","lastModifiedDate":"2022-09-25"},{"lineNumber":537,"author":{"gitId":"ChongCheeKaiClarence"},"content":"3.  User changes a tag.","lastModifiedDate":"2022-09-25"},{"lineNumber":538,"author":{"gitId":"ChongCheeKaiClarence"},"content":"4.  SoConnect updates the tag.","lastModifiedDate":"2022-09-25"},{"lineNumber":539,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":540,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    Use case ends.","lastModifiedDate":"2022-09-25"},{"lineNumber":541,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":542,"author":{"gitId":"ChongCheeKaiClarence"},"content":"**Extensions**","lastModifiedDate":"2022-09-25"},{"lineNumber":543,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":544,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* 1a. There are no tags.","lastModifiedDate":"2022-09-25"},{"lineNumber":545,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":546,"author":{"gitId":"ChongCheeKaiClarence"},"content":"  Use case ends.","lastModifiedDate":"2022-09-25"},{"lineNumber":547,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":548,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* 3a. There is no such current tag.","lastModifiedDate":"2022-09-25"},{"lineNumber":549,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":550,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    * 3a1. SoConnect shows an error message.","lastModifiedDate":"2022-09-25"},{"lineNumber":551,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":552,"author":{"gitId":"ChongCheeKaiClarence"},"content":"      Use case resumes at step 2","lastModifiedDate":"2022-09-25"},{"lineNumber":553,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":554,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* 3b. The new tag already exist.","lastModifiedDate":"2022-09-25"},{"lineNumber":555,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":556,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    * 3b1. SoConnect shows an error message.","lastModifiedDate":"2022-09-25"},{"lineNumber":557,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":558,"author":{"gitId":"ChongCheeKaiClarence"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-25"},{"lineNumber":559,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":560,"author":{"gitId":"ChongCheeKaiClarence"},"content":"**Use case: Add tag to Contact**","lastModifiedDate":"2022-09-25"},{"lineNumber":561,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":562,"author":{"gitId":"ChongCheeKaiClarence"},"content":"**MSS**","lastModifiedDate":"2022-09-25"},{"lineNumber":563,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":564,"author":{"gitId":"ChongCheeKaiClarence"},"content":"1.  User requests for the contact.","lastModifiedDate":"2022-10-11"},{"lineNumber":565,"author":{"gitId":"ChongCheeKaiClarence"},"content":"2.  SoConnect gives the contact.","lastModifiedDate":"2022-10-11"},{"lineNumber":566,"author":{"gitId":"Ugholaf"},"content":"3.  User requests to add tag to the contact.","lastModifiedDate":"2022-09-29"},{"lineNumber":567,"author":{"gitId":"ChongCheeKaiClarence"},"content":"4.  SoConnect adds the tag to the contact.","lastModifiedDate":"2022-09-25"},{"lineNumber":568,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":569,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    Use case ends.","lastModifiedDate":"2022-09-25"},{"lineNumber":570,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":571,"author":{"gitId":"ChongCheeKaiClarence"},"content":"**Extensions**","lastModifiedDate":"2022-09-25"},{"lineNumber":572,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":573,"author":{"gitId":"ChongCheeKaiClarence"},"content":"*  1a. There is no such name in the contacts.","lastModifiedDate":"2022-09-25"},{"lineNumber":574,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":575,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    * 1a1. SoConnect shows an error message.","lastModifiedDate":"2022-09-25"},{"lineNumber":576,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":577,"author":{"gitId":"ChongCheeKaiClarence"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-09-25"},{"lineNumber":578,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":579,"author":{"gitId":"ChongCheeKaiClarence"},"content":"*  3a. There is no such tag in the taglist.","lastModifiedDate":"2022-09-25"},{"lineNumber":580,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":581,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    * 3a1. SoConnect shows aan error message.","lastModifiedDate":"2022-09-25"},{"lineNumber":582,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":583,"author":{"gitId":"ChongCheeKaiClarence"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-25"},{"lineNumber":584,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":585,"author":{"gitId":"ChongCheeKaiClarence"},"content":"**Use case: Autocomplete a word**","lastModifiedDate":"2022-09-25"},{"lineNumber":586,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":587,"author":{"gitId":"ChongCheeKaiClarence"},"content":"**MSS**","lastModifiedDate":"2022-09-25"},{"lineNumber":588,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":589,"author":{"gitId":"ChongCheeKaiClarence"},"content":"1.  User inputs word","lastModifiedDate":"2022-09-25"},{"lineNumber":590,"author":{"gitId":"ChongCheeKaiClarence"},"content":"2.  SoConnect gives a selection of possible words.","lastModifiedDate":"2022-09-25"},{"lineNumber":591,"author":{"gitId":"ChongCheeKaiClarence"},"content":"3.  User chooses the right word.","lastModifiedDate":"2022-09-25"},{"lineNumber":592,"author":{"gitId":"ChongCheeKaiClarence"},"content":"4.  SoConnect changes inputted word to the chosen word.","lastModifiedDate":"2022-09-25"},{"lineNumber":593,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":594,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    Use case ends.","lastModifiedDate":"2022-09-25"},{"lineNumber":595,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":596,"author":{"gitId":"ChongCheeKaiClarence"},"content":"**Extension**","lastModifiedDate":"2022-09-25"},{"lineNumber":597,"author":{"gitId":"ChongCheeKaiClarence"},"content":"*  1a. The word changes.","lastModifiedDate":"2022-09-25"},{"lineNumber":598,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":599,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    * 1a1. SoConnect updates the selection of possible words.","lastModifiedDate":"2022-09-25"},{"lineNumber":600,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":601,"author":{"gitId":"ChongCheeKaiClarence"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-09-25"},{"lineNumber":602,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":603,"author":{"gitId":"Eugene-Ong-W-X"},"content":"**Use case: Sort by name**","lastModifiedDate":"2022-10-10"},{"lineNumber":604,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":605,"author":{"gitId":"ChongCheeKaiClarence"},"content":"**MSS**","lastModifiedDate":"2022-09-25"},{"lineNumber":606,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":607,"author":{"gitId":"Eugene-Ong-W-X"},"content":"1.  User enters command to sort the contact list by name.","lastModifiedDate":"2022-10-11"},{"lineNumber":608,"author":{"gitId":"Eugene-Ong-W-X"},"content":"2.  SoConnect sorts the list by name and displays the new list.","lastModifiedDate":"2022-10-10"},{"lineNumber":609,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":610,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    Use case ends.","lastModifiedDate":"2022-09-25"},{"lineNumber":611,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":612,"author":{"gitId":"ChongCheeKaiClarence"},"content":"**Use case: Hide all contact\u0027s phone number**","lastModifiedDate":"2022-09-25"},{"lineNumber":613,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":614,"author":{"gitId":"ChongCheeKaiClarence"},"content":"**MSS**","lastModifiedDate":"2022-09-25"},{"lineNumber":615,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":616,"author":{"gitId":"ChongCheeKaiClarence"},"content":"1.  User requests phone number to be hidden.","lastModifiedDate":"2022-09-25"},{"lineNumber":617,"author":{"gitId":"ChongCheeKaiClarence"},"content":"2.  SoConnect removes phone number from displaying in the contact.","lastModifiedDate":"2022-09-25"},{"lineNumber":618,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":619,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    Use case ends.","lastModifiedDate":"2022-09-25"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"PangKuangWei"},"content":"4.  Should be for a single user i.e. (not a multi-user product).","lastModifiedDate":"2022-09-25"},{"lineNumber":627,"author":{"gitId":"PangKuangWei"},"content":"5.  Should have its data stored locally and the data should be in a human editable text file.","lastModifiedDate":"2022-09-25"},{"lineNumber":628,"author":{"gitId":"PangKuangWei"},"content":"6.  Should not use a Database Management System for data storage.","lastModifiedDate":"2022-09-25"},{"lineNumber":629,"author":{"gitId":"PangKuangWei"},"content":"7.  Should work without requiring an installer.","lastModifiedDate":"2022-09-25"},{"lineNumber":630,"author":{"gitId":"PangKuangWei"},"content":"8.  Should not depend on a remote server.","lastModifiedDate":"2022-09-25"},{"lineNumber":631,"author":{"gitId":"PangKuangWei"},"content":"9.  Should not cause any resolution-related inconveniences to the user.","lastModifiedDate":"2022-09-25"},{"lineNumber":632,"author":{"gitId":"PangKuangWei"},"content":"10. Should be packaged in a single JAR file and its size should not exceed 100MB.","lastModifiedDate":"2022-09-25"},{"lineNumber":633,"author":{"gitId":"PangKuangWei"},"content":"11. Should not have hard-to-test features or features that make the product hard-to-test i.e. (Features that require creating user accounts, login, logout etc., audio-related features and Features that depend heavily on remote APIs)","lastModifiedDate":"2022-09-25"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"Ugholaf"},"content":"* **CLI**: A text-based user interface used to run programs","lastModifiedDate":"2022-09-29"},{"lineNumber":639,"author":{"gitId":"Ugholaf"},"content":"* **GUI**: A graphical user interface (GUI) is a form of user interface that allows users to interact with programs through graphical icons and audio indicator","lastModifiedDate":"2022-09-29"},{"lineNumber":640,"author":{"gitId":"Ugholaf"},"content":"* **JavaFX**: A Java library used to develop client applications","lastModifiedDate":"2022-09-30"},{"lineNumber":641,"author":{"gitId":"Ugholaf"},"content":"* **kLoC**: Stands for thousands of lines of code","lastModifiedDate":"2022-09-30"},{"lineNumber":642,"author":{"gitId":"Ugholaf"},"content":"* **NUS**: National University of Singapore","lastModifiedDate":"2022-09-30"},{"lineNumber":643,"author":{"gitId":"Ugholaf"},"content":"* **SoC**: School of Computing, a computing school in NUS","lastModifiedDate":"2022-09-30"},{"lineNumber":644,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"Ugholaf"},"content":"* **Autocomplete**: A feature that shows a list of completed words or strings without the user needing to type them in full","lastModifiedDate":"2022-09-29"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":647,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Ugholaf":21,"Eugene-Ong-W-X":94,"ChongCheeKaiClarence":151,"florentianayuwono":48,"PangKuangWei":30,"-":354}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2022-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":6,"author":{"gitId":"florentianayuwono"},"content":"# User Guide","lastModifiedDate":"2022-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"florentianayuwono"},"content":"SoConnect is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, SoConnect can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"florentianayuwono"},"content":"1. Download the latest `soconnect.jar` from [here](https://github.com/AY2223S1-CS2103T-W15-1/tp/releases).","lastModifiedDate":"2022-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"florentianayuwono"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your SoConnect.","lastModifiedDate":"2022-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Items with `â€¦`â€‹ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"ChongCheeKaiClarence"},"content":"  e.g. `[t/TAG]â€¦â€‹` can be used as `Â ` (i.e. 0 times), `t/friend`, `t/friend t/family`, etc.","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"ChongCheeKaiClarence"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS`","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567`","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"Eugene-Ong-W-X"},"content":"### Sort Contacts : `sort`","lastModifiedDate":"2022-09-25"},{"lineNumber":92,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":93,"author":{"gitId":"Eugene-Ong-W-X"},"content":"Sort the list of contacts displayed by certain parameter(s).","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":95,"author":{"gitId":"Eugene-Ong-W-X"},"content":"Default sorting orders:","lastModifiedDate":"2022-09-25"},{"lineNumber":96,"author":{"gitId":"Ugholaf"},"content":"* Alphabetical order for *names*, *emails*, *addresses*.","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"Ugholaf"},"content":"* Increasing order for *phone numbers*.","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* Contacts that have a specified *tag* appear before those without the *tag*.","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":100,"author":{"gitId":"Eugene-Ong-W-X"},"content":"Format: `sort [n/] [p/] [e/] [a/] [t/TAG]â€¦â€‹`","lastModifiedDate":"2022-09-25"},{"lineNumber":101,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* To sort in reverse order, use these modified parameters: `[n/!] [p/!] [e/!] [a/!] [t/!TAG]`.","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* To sort with multiple parameters, arrange the parameters in order of decreasing priority.","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":104,"author":{"gitId":"Eugene-Ong-W-X"},"content":"Example:","lastModifiedDate":"2022-09-25"},{"lineNumber":105,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* `sort n/` sorts by names. (E.g. `David` appears before `Mike`)","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* `sort t/!friend` sorts by the `friend` tag in reverse. (E.g. `Mike` appears before `David` who has the `friend` tag)","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* `sort t/friend n/` sorts by the `friend` tag first, followed by names. (E.g. `David` and `Fred` who have the `friend` tag appear before `Mike`, `David` appears before `Fred`)","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"ChongCheeKaiClarence"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS]`","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"ChongCheeKaiClarence"},"content":"*  `edit 2 n/Betsy Crower` Edits the name of the 2nd person to be `Betsy Crower`.","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"ChongCheeKaiClarence"},"content":"### Create a Tag: `tag create`","lastModifiedDate":"2022-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":125,"author":{"gitId":"ChongCheeKaiClarence"},"content":"Creates a new tag","lastModifiedDate":"2022-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":127,"author":{"gitId":"ChongCheeKaiClarence"},"content":"Format: `tag create t/TAG`","lastModifiedDate":"2022-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":129,"author":{"gitId":"ChongCheeKaiClarence"},"content":"Example:","lastModifiedDate":"2022-09-24"},{"lineNumber":130,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* `tag create t/family` creates a `family` tag.","lastModifiedDate":"2022-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":132,"author":{"gitId":"ChongCheeKaiClarence"},"content":"### Edit a tag: `tag edit`","lastModifiedDate":"2022-09-24"},{"lineNumber":133,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":134,"author":{"gitId":"ChongCheeKaiClarence"},"content":"Renames an existing tag.","lastModifiedDate":"2022-09-24"},{"lineNumber":135,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":136,"author":{"gitId":"ChongCheeKaiClarence"},"content":"Format: `tag edit t/TAG1 t/ TAG2`","lastModifiedDate":"2022-09-24"},{"lineNumber":137,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":138,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* `TAG1` is the current name of the tag and `TAG2` is the new name of the tag.","lastModifiedDate":"2022-09-24"},{"lineNumber":139,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":140,"author":{"gitId":"ChongCheeKaiClarence"},"content":"Example:","lastModifiedDate":"2022-09-24"},{"lineNumber":141,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* `tag edit t/friend t/bestFriend` changes the friend tag to a bestFriend tag.","lastModifiedDate":"2022-09-24"},{"lineNumber":142,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":143,"author":{"gitId":"ChongCheeKaiClarence"},"content":"### Add a Tag to a Contact: `tag add`","lastModifiedDate":"2022-09-24"},{"lineNumber":144,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":145,"author":{"gitId":"ChongCheeKaiClarence"},"content":"Adds an existing tag to an existing contact.","lastModifiedDate":"2022-09-24"},{"lineNumber":146,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":147,"author":{"gitId":"ChongCheeKaiClarence"},"content":"Format: `tag add INDEX t/TAG`","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"ChongCheeKaiClarence"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"ChongCheeKaiClarence"},"content":"A person can have any number of tags. Add as many as you want.","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"ChongCheeKaiClarence"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":153,"author":{"gitId":"ChongCheeKaiClarence"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"ChongCheeKaiClarence"},"content":"Note: The tag has to be made first before you can add it into a contact.","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"ChongCheeKaiClarence"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":157,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* Adds a `TAG` to the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":159,"author":{"gitId":"ChongCheeKaiClarence"},"content":"Example:","lastModifiedDate":"2022-09-24"},{"lineNumber":160,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* `tag add 1 t/friend` adds the friend tag to the first contact shown in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"florentianayuwono"},"content":"###  Search for a Contact: `search`","lastModifiedDate":"2022-09-22"},{"lineNumber":163,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":164,"author":{"gitId":"florentianayuwono"},"content":"Search for contacts using partial information.","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":166,"author":{"gitId":"florentianayuwono"},"content":"Format: `search [CONDITION] [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]â€¦`","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":168,"author":{"gitId":"florentianayuwono"},"content":"* `search t/TAG1 t/TAG2â€¦` searches for contacts that contain all the given tags.","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"florentianayuwono"},"content":"* `search and n/NAME p/PHONEâ€¦` searches for contacts that match all the given information.","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"florentianayuwono"},"content":"* `search n/NAME p/PHONEâ€¦` and `search and n/NAME p/PHONEâ€¦` will return the same contacts that match all the given information.","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"florentianayuwono"},"content":"* `search or t/TAG1 t/TAG2â€¦` searches for contacts that contain any of the given tags.","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"florentianayuwono"},"content":"* The search using `n/NAME` is case-insensitive. e.g `hans` will match `Hans`.","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"florentianayuwono"},"content":"* Displays a list of relevant contacts related to the search query if no search result available.","lastModifiedDate":"2022-09-22"},{"lineNumber":174,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":175,"author":{"gitId":"florentianayuwono"},"content":"Example:","lastModifiedDate":"2022-09-22"},{"lineNumber":176,"author":{"gitId":"Ugholaf"},"content":"* `search t/family` returns all people tagged with family in the contact list.","lastModifiedDate":"2022-09-30"},{"lineNumber":177,"author":{"gitId":"florentianayuwono"},"content":"* `search and a/NUS p/86178789` returns all contacts with that address and phone number.","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"florentianayuwono"},"content":"* `search t/cs2103t t/tp` returns all contacts tagged with both cs2103t and tp.","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"florentianayuwono"},"content":"* `search or t/friends t/family` returns all contacts tagged with either friends or family.","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"florentianayuwono"},"content":"* `search n/Johm` is supposed to return an empty result since there is no person named `Johm` in the contact list, but now it will return people with names similar to that. For example, `John`.","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":182,"author":{"gitId":"Ugholaf"},"content":"### Autocomplete: `search`","lastModifiedDate":"2022-09-29"},{"lineNumber":183,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":184,"author":{"gitId":"Ugholaf"},"content":"Show a list of names or tags that match the current search query.","lastModifiedDate":"2022-09-29"},{"lineNumber":185,"author":{"gitId":"Ugholaf"},"content":"This feature is only available when searching for names or tags.","lastModifiedDate":"2022-09-29"},{"lineNumber":186,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":187,"author":{"gitId":"Ugholaf"},"content":"Format: `search [n/NAME_PREFIX]`, `search [t/TAG_PREFIX]`","lastModifiedDate":"2022-09-29"},{"lineNumber":188,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":189,"author":{"gitId":"Ugholaf"},"content":"* Only names or tags with their prefix that match the current name or tag search query will be returned. E.g. `An` will match `Angel` but not `Jordan`.","lastModifiedDate":"2022-09-29"},{"lineNumber":190,"author":{"gitId":"Ugholaf"},"content":"* The search is case-insensitive. E.g `hans` will match `Hans`.","lastModifiedDate":"2022-09-29"},{"lineNumber":191,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":192,"author":{"gitId":"Ugholaf"},"content":"Example:","lastModifiedDate":"2022-09-29"},{"lineNumber":193,"author":{"gitId":"Ugholaf"},"content":"* `search n/An` will show a list of names that start with `An`.","lastModifiedDate":"2022-09-29"},{"lineNumber":194,"author":{"gitId":"Ugholaf"},"content":"* `search t/fa` will show a list of tags that start with `fa`.","lastModifiedDate":"2022-09-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"PangKuangWei"},"content":"### Hide Contact Details: `customise hide`","lastModifiedDate":"2022-09-24"},{"lineNumber":211,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":212,"author":{"gitId":"PangKuangWei"},"content":"Hide certain information of all contacts displayed.","lastModifiedDate":"2022-10-10"},{"lineNumber":213,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":214,"author":{"gitId":"PangKuangWei"},"content":"Format: `customise hide [p/] [e/] [a/] [t/]`","lastModifiedDate":"2022-09-24"},{"lineNumber":215,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":216,"author":{"gitId":"PangKuangWei"},"content":"* Hides the information specified.","lastModifiedDate":"2022-09-24"},{"lineNumber":217,"author":{"gitId":"PangKuangWei"},"content":"* If the information specified is already hidden, it will stay hidden.","lastModifiedDate":"2022-09-24"},{"lineNumber":218,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":219,"author":{"gitId":"PangKuangWei"},"content":"Example:","lastModifiedDate":"2022-09-24"},{"lineNumber":220,"author":{"gitId":"Ugholaf"},"content":"* `customise hide e/` The application no longer shows emails in the contact list.","lastModifiedDate":"2022-09-30"},{"lineNumber":221,"author":{"gitId":"PangKuangWei"},"content":"* `customise hide p/ t/` The application no longer shows phone numbers and tags in the contact list.","lastModifiedDate":"2022-10-10"},{"lineNumber":222,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":223,"author":{"gitId":"PangKuangWei"},"content":"### Show Contact Details: `customise show`","lastModifiedDate":"2022-09-24"},{"lineNumber":224,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":225,"author":{"gitId":"PangKuangWei"},"content":"Show certain information of all contacts displayed.","lastModifiedDate":"2022-10-10"},{"lineNumber":226,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":227,"author":{"gitId":"PangKuangWei"},"content":"Format: `customise show [p/] [e/] [a/] [t/]`","lastModifiedDate":"2022-09-24"},{"lineNumber":228,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":229,"author":{"gitId":"PangKuangWei"},"content":"* Shows the information specified.","lastModifiedDate":"2022-09-24"},{"lineNumber":230,"author":{"gitId":"PangKuangWei"},"content":"* If the information specified is already shown, it will stay shown.","lastModifiedDate":"2022-09-24"},{"lineNumber":231,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":232,"author":{"gitId":"PangKuangWei"},"content":"Example:","lastModifiedDate":"2022-09-24"},{"lineNumber":233,"author":{"gitId":"Ugholaf"},"content":"* `customise show a/` The application now shows addresses in the contact list.","lastModifiedDate":"2022-09-30"},{"lineNumber":234,"author":{"gitId":"PangKuangWei"},"content":"* `customise show p/ t/` The application now shows phone numbers and tags in the contact list.","lastModifiedDate":"2022-10-10"},{"lineNumber":235,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":236,"author":{"gitId":"PangKuangWei"},"content":"### Customise Order of Details: `customise order`","lastModifiedDate":"2022-09-24"},{"lineNumber":237,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":238,"author":{"gitId":"PangKuangWei"},"content":"Customise order of information shown in all contacts shown.","lastModifiedDate":"2022-09-24"},{"lineNumber":239,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":240,"author":{"gitId":"PangKuangWei"},"content":"Format: `customise order [p/] [e/] [a/] [t/]`","lastModifiedDate":"2022-09-24"},{"lineNumber":241,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":242,"author":{"gitId":"PangKuangWei"},"content":"* Attributes not given will be ordered last in default order. (tag \u003e phone \u003e email \u003e address)","lastModifiedDate":"2022-10-10"},{"lineNumber":243,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":244,"author":{"gitId":"PangKuangWei"},"content":"Example:","lastModifiedDate":"2022-09-24"},{"lineNumber":245,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":246,"author":{"gitId":"PangKuangWei"},"content":"* `customise order a/ e/ p/` The application will show address first, followed by email, phone number, then tags.","lastModifiedDate":"2022-10-11"},{"lineNumber":247,"author":{"gitId":"PangKuangWei"},"content":"* `customise order a/` The application will show address first. The rest of the attributes will follow the default order. Therefore, address will be followed by tags, phone number and then email.","lastModifiedDate":"2022-10-11"},{"lineNumber":248,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":249,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"Eugene-Ong-W-X"},"content":"SoConnect data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-10-10"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":267,"author":{"gitId":"Eugene-Ong-W-X"},"content":"SoConnect data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-10-10"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":270,"author":{"gitId":"Eugene-Ong-W-X"},"content":"If your changes to the data file makes its format invalid, SoConnect will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-10-10"},{"lineNumber":271,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"Ugholaf"},"content":"| Action         | Format, Examples                                                                                                                                               |","lastModifiedDate":"2022-09-29"},{"lineNumber":289,"author":{"gitId":"ChongCheeKaiClarence"},"content":"|----------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-10"},{"lineNumber":290,"author":{"gitId":"ChongCheeKaiClarence"},"content":"| **Add**        | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665`                         |","lastModifiedDate":"2022-10-10"},{"lineNumber":291,"author":{"gitId":"Ugholaf"},"content":"| **Clear**      | `clear`                                                                                                                                                        |","lastModifiedDate":"2022-09-29"},{"lineNumber":292,"author":{"gitId":"PangKuangWei"},"content":"| **Customise**  | `customise hide [t/] [p/] [e/] [a/]` \u003cbr\u003e `customise show [t/] [p/] [e/] [a/]` \u003cbr\u003e `customise order [t/] [p/] [e/] [a/]` \u003cbr\u003e e.g, `customise hide a/ e/ p/` `customise show a/` `customise order a/ p/` |","lastModifiedDate":"2022-10-11"},{"lineNumber":293,"author":{"gitId":"Ugholaf"},"content":"| **Delete**     | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                            |","lastModifiedDate":"2022-09-29"},{"lineNumber":294,"author":{"gitId":"ChongCheeKaiClarence"},"content":"| **Edit**       | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                              |","lastModifiedDate":"2022-10-10"},{"lineNumber":295,"author":{"gitId":"florentianayuwono"},"content":"| **Search**     | `search [CONDITION] [n/NAME] [p/PHONE_NUMBER]â€¦â€‹`\u003cbr\u003e e.g., `seach or n/John Doe t/cs2103t`                                                                      |","lastModifiedDate":"2022-10-11"},{"lineNumber":296,"author":{"gitId":"Ugholaf"},"content":"| **List**       | `list`                                                                                                                                                         |","lastModifiedDate":"2022-09-29"},{"lineNumber":297,"author":{"gitId":"Eugene-Ong-W-X"},"content":"| **Sort**       | `sort [n/] [p/] [e/] [a/] [t/TAG]â€¦â€‹` \u003cbr\u003e e.g., `sort t/!friend n/`                                                                                            |","lastModifiedDate":"2022-10-10"},{"lineNumber":298,"author":{"gitId":"Ugholaf"},"content":"| **Help**       | `help`                                                                                                                                                         |","lastModifiedDate":"2022-09-29"},{"lineNumber":299,"author":{"gitId":"Ugholaf"},"content":"| **Create Tag** | `tag create t/TAG` \u003cbr\u003e e.g., `tag create t/friend`                                                                                                            |","lastModifiedDate":"2022-09-29"},{"lineNumber":300,"author":{"gitId":"Ugholaf"},"content":"| **Edit Tag**   | `tag edit t/TAG1 t/TAG2`  \u003cbr\u003e e.g., `tag edit t/friend t/bestFriend`                                                                                          |","lastModifiedDate":"2022-09-29"},{"lineNumber":301,"author":{"gitId":"ChongCheeKaiClarence"},"content":"| **Add Tag**    | `tag add INDEX t/TAG` \u003cbr\u003e e.g., `tag add 1 t/friend`                                                                                                          |","lastModifiedDate":"2022-10-10"},{"lineNumber":302,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"Eugene-Ong-W-X":20,"Ugholaf":25,"ChongCheeKaiClarence":43,"florentianayuwono":24,"PangKuangWei":39,"-":151}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"florentianayuwono"},"content":"    content: \"SoConnect\";","lastModifiedDate":"2022-09-22"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"florentianayuwono":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"florentianayuwono"},"content":"title: SoConnect","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"florentianayuwono"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W15-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W15-1/tp/actions)","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W15-1/tp/branch/master/graph/badge.svg?token\u003dN56Z27OWOL)](https://codecov.io/gh/AY2223S1-CS2103T-W15-1/tp)","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"florentianayuwono"},"content":"SoConnect is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, SoConnect can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"florentianayuwono"},"content":"* If you are interested in using SoConnect, head over to the [_Quick Start_ section of the **User Guide**](https://ay2223s1-cs2103t-w15-1.github.io/tp/UserGuide.html#quick-start).","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"florentianayuwono"},"content":"* If you are interested about developing SoConnect, the [**Developer Guide**](https://ay2223s1-cs2103t-w15-1.github.io/tp/DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"florentianayuwono"},"content":"* This product is adapted from [AddressBook Level-3](https://nus-cs2103-ay2223s1.github.io/tp/)","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"florentianayuwono":6,"-":14}},{"path":"docs/team/chongcheekaiclarence.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ChongCheeKaiClarence"},"content":"---","lastModifiedDate":"2022-09-24"},{"lineNumber":2,"author":{"gitId":"ChongCheeKaiClarence"},"content":"layout: page","lastModifiedDate":"2022-09-24"},{"lineNumber":3,"author":{"gitId":"ChongCheeKaiClarence"},"content":"title: Chong Chee Kai Clarence\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"ChongCheeKaiClarence"},"content":"---","lastModifiedDate":"2022-09-24"},{"lineNumber":5,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"ChongCheeKaiClarence"},"content":"### Project: SoConnect","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"ChongCheeKaiClarence"},"content":"SoConnect is a desktop app for NUS SoC students to manage their contacts, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"ChongCheeKaiClarence"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dchongcheekaiclarence\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":14,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* **Project management**:","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    * Set up Github project board.","lastModifiedDate":"2022-09-24"},{"lineNumber":16,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":17,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-24"},{"lineNumber":18,"author":{"gitId":"ChongCheeKaiClarence"},"content":"  to be added soon","lastModifiedDate":"2022-09-24"},{"lineNumber":19,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":20,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    * User Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":22,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        * Added documentation for the features `tag create`, `tag edit` and `tag add`.","lastModifiedDate":"2022-09-24"},{"lineNumber":23,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":24,"author":{"gitId":"ChongCheeKaiClarence"},"content":"      to be added soon","lastModifiedDate":"2022-09-24"},{"lineNumber":25,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":26,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* **Community**:","lastModifiedDate":"2022-09-24"},{"lineNumber":27,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    to be added soon","lastModifiedDate":"2022-09-24"},{"lineNumber":28,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":29,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* **Tools**:","lastModifiedDate":"2022-09-24"},{"lineNumber":30,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    to be added soon","lastModifiedDate":"2022-09-24"},{"lineNumber":31,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":32,"author":{"gitId":"ChongCheeKaiClarence"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-24"}],"authorContributionMap":{"ChongCheeKaiClarence":32}},{"path":"docs/team/eugene-ong-w-x.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Eugene-Ong-W-X"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"Eugene-Ong-W-X"},"content":"layout: page","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"Eugene-Ong-W-X"},"content":"title: Eugene Ong Wei Xiang\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"Eugene-Ong-W-X"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"Eugene-Ong-W-X"},"content":"### Project: SoConnect","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"Eugene-Ong-W-X"},"content":"SoConnect is a desktop app for NUS SoC students to manage their contacts, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"Eugene-Ong-W-X"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* **New Feature**: Added the ability to undo/redo previous commands. (remove)","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003deugene-ong-w-x\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* **Project management**:","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub (remove)","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    * Project Lead","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]()) (remove)","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]()) (remove)","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    * User Guide:","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]() (remove)","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]() (remove)","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-25"},{"lineNumber":33,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        * Added implementation details of the `delete` feature. (remove)","lastModifiedDate":"2022-09-25"},{"lineNumber":34,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":35,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* **Community**:","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]() (remove)","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]()) (remove)","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]()) (remove)","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]()) (remove)","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* **Tools**:","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]()) (remove)","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo (remove)","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"Eugene-Ong-W-X":43}},{"path":"docs/team/florentianayuwono.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"florentianayuwono"},"content":"---","lastModifiedDate":"2022-09-22"},{"lineNumber":2,"author":{"gitId":"florentianayuwono"},"content":"layout: page","lastModifiedDate":"2022-09-22"},{"lineNumber":3,"author":{"gitId":"florentianayuwono"},"content":"title: Florentiana Yuwono\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-22"},{"lineNumber":4,"author":{"gitId":"florentianayuwono"},"content":"---","lastModifiedDate":"2022-09-22"},{"lineNumber":5,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":6,"author":{"gitId":"florentianayuwono"},"content":"### Project: SoConnect","lastModifiedDate":"2022-09-22"},{"lineNumber":7,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":8,"author":{"gitId":"florentianayuwono"},"content":"SoConnect is a desktop app for NUS SoC students to manage their contacts, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-22"},{"lineNumber":9,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":10,"author":{"gitId":"florentianayuwono"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-22"},{"lineNumber":11,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":12,"author":{"gitId":"florentianayuwono"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-09-22"},{"lineNumber":13,"author":{"gitId":"florentianayuwono"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-09-22"},{"lineNumber":14,"author":{"gitId":"florentianayuwono"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-09-22"},{"lineNumber":15,"author":{"gitId":"florentianayuwono"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-09-22"},{"lineNumber":16,"author":{"gitId":"florentianayuwono"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-22"},{"lineNumber":17,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":18,"author":{"gitId":"florentianayuwono"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-09-22"},{"lineNumber":19,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":20,"author":{"gitId":"Eugene-Ong-W-X"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dflorentianayuwono\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":22,"author":{"gitId":"florentianayuwono"},"content":"* **Project management**:","lastModifiedDate":"2022-09-22"},{"lineNumber":23,"author":{"gitId":"florentianayuwono"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-09-22"},{"lineNumber":24,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":25,"author":{"gitId":"florentianayuwono"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-22"},{"lineNumber":26,"author":{"gitId":"florentianayuwono"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-09-22"},{"lineNumber":27,"author":{"gitId":"florentianayuwono"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-09-22"},{"lineNumber":28,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":29,"author":{"gitId":"florentianayuwono"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-22"},{"lineNumber":30,"author":{"gitId":"florentianayuwono"},"content":"  * User Guide:","lastModifiedDate":"2022-09-22"},{"lineNumber":31,"author":{"gitId":"florentianayuwono"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-09-22"},{"lineNumber":32,"author":{"gitId":"florentianayuwono"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-09-22"},{"lineNumber":33,"author":{"gitId":"florentianayuwono"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-22"},{"lineNumber":34,"author":{"gitId":"florentianayuwono"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-22"},{"lineNumber":35,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":36,"author":{"gitId":"florentianayuwono"},"content":"* **Community**:","lastModifiedDate":"2022-09-22"},{"lineNumber":37,"author":{"gitId":"florentianayuwono"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-09-22"},{"lineNumber":38,"author":{"gitId":"florentianayuwono"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-09-22"},{"lineNumber":39,"author":{"gitId":"florentianayuwono"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-22"},{"lineNumber":40,"author":{"gitId":"florentianayuwono"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-09-22"},{"lineNumber":41,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":42,"author":{"gitId":"florentianayuwono"},"content":"* **Tools**:","lastModifiedDate":"2022-09-22"},{"lineNumber":43,"author":{"gitId":"florentianayuwono"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-09-22"},{"lineNumber":44,"author":{"gitId":"florentianayuwono"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-09-22"},{"lineNumber":45,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":46,"author":{"gitId":"florentianayuwono"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-22"}],"authorContributionMap":{"Eugene-Ong-W-X":1,"florentianayuwono":45}},{"path":"docs/team/pangkuangwei.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"---","lastModifiedDate":"2022-09-24"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"layout: page","lastModifiedDate":"2022-09-24"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"title: Pang Kuang Wei\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"---","lastModifiedDate":"2022-09-24"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"### Project: SoConnect","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"SoConnect is a desktop app for NUS SoC students to manage their contacts, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dpangkuangwei\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"  to be added soon","lastModifiedDate":"2022-09-24"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-24"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"  * User Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"    to be added soon","lastModifiedDate":"2022-09-24"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"    to be added soon","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-09-24"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"  to be added soon","lastModifiedDate":"2022-09-24"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2022-09-24"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"  to be added soon","lastModifiedDate":"2022-09-24"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2022-09-24"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"  to be added soon","lastModifiedDate":"2022-09-24"}],"authorContributionMap":{"PangKuangWei":27}},{"path":"docs/team/ugholaf.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"title: Wu Changjun\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"### Project: SoConnect","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"SoConnect is a desktop app for NUS SoC students to manage their contacts, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dugholaf\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"* **Enhancements implemented**: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"* **Contributions to the UG**: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"    * User Guide: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"    * Developer Guide: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"* **Contributions to team-based tasks**: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"* **Review/mentoring contributions**: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"* **Contributions beyond the project team**: to be added soon","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"Ugholaf":25}},{"path":"src/main/java/soconnect/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.util.FileUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Ugholaf":3,"-":61}},{"path":"src/main/java/soconnect/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"Eugene-Ong-W-X"},"content":" * as a named module. We don\u0027t use JavaFX via the module system, so it can\u0027t","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"Ugholaf":1,"Eugene-Ong-W-X":1,"-":23}},{"path":"src/main/java/soconnect/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.Config;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.Version;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.util.StringUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.Logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.LogicManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ReadOnlySoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.ReadOnlyTodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.SoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.TodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"import soconnect.storage.JsonSoConnectStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.storage.JsonTodoListStorage;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"import soconnect.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"import soconnect.storage.SoConnectStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"import soconnect.storage.Storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"import soconnect.storage.StorageManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.storage.TodoListStorage;","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"import soconnect.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"import soconnect.ui.Ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"import soconnect.ui.UiManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"Ugholaf"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing SoConnect ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"Ugholaf"},"content":"        SoConnectStorage soConnectStorage \u003d new JsonSoConnectStorage(userPrefs.getSoConnectFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        TodoListStorage todoListStorage \u003d new JsonTodoListStorage(userPrefs.getTodoListFilePath());","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        storage \u003d new StorageManager(soConnectStorage, todoListStorage, userPrefsStorage);","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s SoConnect and TodoList and","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * from {@code userPrefs}.\u003cbr\u003e Sample data will be used instead if SoConnect or TodoList is not found, or empty","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * data files will be used instead if errors occur when reading.","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":82,"author":{"gitId":"Ugholaf"},"content":"        Optional\u003cReadOnlySoConnect\u003e soConnectOptional;","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        ReadOnlySoConnect initialSoConnectData;","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Optional\u003cReadOnlyTodoList\u003e todoListOptional;","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        ReadOnlyTodoList initialTodoListData;","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"Ugholaf"},"content":"            soConnectOptional \u003d storage.readSoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"Ugholaf"},"content":"            if (soConnectOptional.isEmpty()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"Ugholaf"},"content":"                logger.info(\"Data file not found. Will be starting with a sample SoConnect\");","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            initialSoConnectData \u003d soConnectOptional.orElseGet(SampleDataUtil::getSampleSoConnect);","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"Ugholaf"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty SoConnect\");","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            initialSoConnectData \u003d new SoConnect();","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":97,"author":{"gitId":"Ugholaf"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty SoConnect\");","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            initialSoConnectData \u003d new SoConnect();","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            todoListOptional \u003d storage.readTodoList();","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            if (todoListOptional.isEmpty()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                logger.info(\"Data file not found. Will be starting with a sample TodoList\");","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            initialTodoListData \u003d todoListOptional.orElseGet(SampleDataUtil::getSampleTodoList);","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty TodoList\");","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            initialTodoListData \u003d new TodoList();","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TodoList\");","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            initialTodoListData \u003d new TodoList();","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return new ModelManager(initialSoConnectData, initialTodoListData, userPrefs);","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"Ugholaf"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty SoConnect\");","lastModifiedDate":"2022-10-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"Ugholaf"},"content":"        logger.info(\"Starting SoConnect \" + MainApp.VERSION);","lastModifiedDate":"2022-10-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"Ugholaf"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping SoConnect ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ugholaf":35,"Eugene-Ong-W-X":27,"-":143}},{"path":"src/main/java/soconnect/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":" * Config values used by the app.","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ugholaf":2,"-":61}},{"path":"src/main/java/soconnect/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"    public static final String DEFAULT_ORDER \u003d \"TAGS\u003ePHONE\u003eEMAIL\u003eADDRESS\";","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"    private static final String DEFAULT_HIDDEN_ATTRIBUTES \u003d \"NONE\";","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"    private final String attributeOrder;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"    private final String hiddenAttributes;","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"        attributeOrder \u003d DEFAULT_ORDER;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"        hiddenAttributes \u003d DEFAULT_HIDDEN_ATTRIBUTES;","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"     * @param windowWidth The width of the window.","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"Ugholaf"},"content":"     * @param windowHeight The height of the window.","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"Ugholaf"},"content":"     * @param xPosition The x-coordinate of the window coordinates.","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"Ugholaf"},"content":"     * @param yPosition The y-coordinate of the window coordinates.","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"Ugholaf"},"content":"     * @param attributeOrder The order of the attributes displayed in string format.","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"Ugholaf"},"content":"     * @param hiddenAttributes The attributes that are hidden in string format.","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"PangKuangWei"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition,","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"PangKuangWei"},"content":"            String attributeOrder, String hiddenAttributes) {","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"PangKuangWei"},"content":"        this.attributeOrder \u003d attributeOrder;","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"PangKuangWei"},"content":"        this.hiddenAttributes \u003d hiddenAttributes;","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"PangKuangWei"},"content":"    public String getAttributeOrder() {","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"PangKuangWei"},"content":"        return attributeOrder;","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"PangKuangWei"},"content":"    public String getHiddenAttributes() {","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"PangKuangWei"},"content":"        return hiddenAttributes;","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"PangKuangWei"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates)","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"PangKuangWei"},"content":"                \u0026\u0026 attributeOrder.equals(o.attributeOrder)","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"PangKuangWei"},"content":"                \u0026\u0026 hiddenAttributes.equals(o.hiddenAttributes);","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"PangKuangWei"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates, attributeOrder, hiddenAttributes);","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"PangKuangWei"},"content":"        sb.append(\"Position : \" + windowCoordinates + \"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"PangKuangWei"},"content":"        sb.append(\"Attribute Order : \" + attributeOrder + \"\\n\");","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"PangKuangWei"},"content":"        sb.append(\"Hidden Attributes : \" + hiddenAttributes);","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ugholaf":7,"PangKuangWei":26,"-":74}},{"path":"src/main/java/soconnect/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":" * Configures and manages loggers and handlers, including their logging level.","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":" * Named {@link Logger}s can be obtained from this class.\u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"    private static final String LOG_FILE \u003d \"SoConnect.log\";","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"     * Initializes with a custom log level (specified in the {@code config} object).","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed.\u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"Ugholaf"},"content":"     * @throws IOException If there are problems opening the file.","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ugholaf":8,"-":105}},{"path":"src/main/java/soconnect/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ugholaf":1,"-":12}},{"path":"src/main/java/soconnect/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":" * Represents a version with major, minor and patch number.","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"Ugholaf"},"content":"     * @param versionString Version number string.","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"Ugholaf"},"content":"     * @return A Version object.","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ugholaf":5,"-":112}},{"path":"src/main/java/soconnect/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.core.index;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Ugholaf":1,"-":53}},{"path":"src/main/java/soconnect/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.exceptions;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":" * Represents an error during conversion of data from one format to another.","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ugholaf":2,"-":9}},{"path":"src/main/java/soconnect/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.exceptions;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"     * @param message Should contain relevant information on the failed constraint(s).","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"     * @param message Should contain relevant information on the failed constraint(s).","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"     * @param cause Cause of the main exception.","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ugholaf":4,"-":17}},{"path":"src/main/java/soconnect/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import soconnect.MainApp;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":" * A container for App specific utility functions.","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"     * @throws IllegalArgumentException If {@code condition} is false.","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"     * @throws IllegalArgumentException With {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Ugholaf":5,"-":37}},{"path":"src/main/java/soconnect/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":" * Utility methods related to Collections.","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ugholaf":2,"-":33}},{"path":"src/main/java/soconnect/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.Config;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Ugholaf":3,"-":20}},{"path":"src/main/java/soconnect/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":" * Writes and reads files.","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"     * @throws IOException If the file or directory cannot be created.","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"Ugholaf"},"content":"     * Creates parent directories of file if it has a parent directory.","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"Ugholaf"},"content":"     * Assumes file exists.","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ugholaf":7,"-":78}},{"path":"src/main/java/soconnect/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":" * Converts a Java object instance to JSON and vice versa.","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"Ugholaf"},"content":"     * @param filePath Cannot be null.","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"Ugholaf"},"content":"     * @throws DataConversionException If the file format is not as expected.","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"Ugholaf"},"content":"     * @param jsonFile Cannot be null.","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"Ugholaf"},"content":"     * @param filePath Cannot be null.","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"Ugholaf"},"content":"     * @throws IOException If there was an error during writing to the file.","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"Ugholaf"},"content":"     * Converts a given string representation of a JSON data to instance of a class.","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"Ugholaf"},"content":"     * @param \u003cT\u003e The generic type to create an instance of.","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"Ugholaf"},"content":"     * @return The instance of T with the specified values in the JSON string.","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"Ugholaf"},"content":"     * Converts a given instance of a class into its JSON data string representation.","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"Ugholaf"},"content":"     * @param instance The T object to be converted into the JSON string.","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"Ugholaf"},"content":"     * @param \u003cT\u003e The generic type to create an instance of.","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"Ugholaf"},"content":"     * @return JSON data representation of the given class instance, in string.","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"Ugholaf"},"content":"         * Gets the logging level that matches loggingLevelString.","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"Ugholaf"},"content":"         * Returns null if there are no matches.","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ugholaf":22,"-":124}},{"path":"src/main/java/soconnect/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":10,"author":{"gitId":"florentianayuwono"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"     * @param sentence Cannot be null.","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"     * @param word Cannot be null, cannot be empty, must be a single word.","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"        requireAllNonNull(sentence, word);","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"florentianayuwono"},"content":"        String[] wordsInPreppedSentence \u003d sentence.split(\"\\\\s+\");","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"florentianayuwono"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"florentianayuwono"},"content":"     * Returns true if the {@code sentence} contains the {@code keywords}.","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"florentianayuwono"},"content":"     *   Ignores case, but full keywords match is required.","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"florentianayuwono"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"florentianayuwono"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"florentianayuwono"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc DEF\") \u003d\u003d true","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"florentianayuwono"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"florentianayuwono"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"Ugholaf"},"content":"     * @param sentence Cannot be null.","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"Ugholaf"},"content":"     * @param keywords Cannot be null, cannot be empty, can be multiple words.","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"florentianayuwono"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"florentianayuwono"},"content":"    public static boolean containsKeywordsIgnoreCase(String sentence, String keywords) {","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"florentianayuwono"},"content":"        requireAllNonNull(sentence, keywords);","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"florentianayuwono"},"content":"        String preppedWord \u003d keywords.trim();","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"florentianayuwono"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"florentianayuwono"},"content":"        List\u003cString\u003e preppedKeywords \u003d Arrays.asList(preppedWord.toUpperCase().split(\"\\\\s+\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"florentianayuwono"},"content":"        checkArgument(preppedKeywords.size() \u003e 0, \"Word parameter cannot be empty\");","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"florentianayuwono"},"content":"        List\u003cString\u003e wordsInPreppedSentence \u003d Arrays.asList(sentence.toUpperCase().split(\"\\\\s+\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"florentianayuwono"},"content":"        return wordsInPreppedSentence.containsAll(preppedKeywords);","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"florentianayuwono"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"florentianayuwono"},"content":"     * Returns true if the {@code sentence} contains some of the {@code keywords}.","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"florentianayuwono"},"content":"     *   Ignores case and order, but full keywords match is not required.","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"florentianayuwono"},"content":"     *   In the event of not match, decrease the keywords size by one-fourth.","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"florentianayuwono"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"florentianayuwono"},"content":"     *   Matching algorithm:","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"florentianayuwono"},"content":"     *   1. Matches all occurrences of characters in {@code keywords} to {@code sentence}.","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"florentianayuwono"},"content":"     *      Returns true if full match is found, despite incorrect ordering","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"florentianayuwono"},"content":"     *      or unequal number of duplicate characters {@code keywords}.","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"florentianayuwono"},"content":"     *   2. If (1) returns false, decrease the number of characters in {@code keywords} needed to be matched by 25%.","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"florentianayuwono"},"content":"     *   3. Repeat from (1) with new {@code keywords} generated from (2).","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"florentianayuwono"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"florentianayuwono"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"florentianayuwono"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"florentianayuwono"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc DEF\") \u003d\u003d true","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"florentianayuwono"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true //not a full word match","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"florentianayuwono"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"florentianayuwono"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"florentianayuwono"},"content":"     * @param sentence Cannot be null.","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"florentianayuwono"},"content":"     * @param keywords Cannot be null, cannot be empty, can be multiple words.","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"florentianayuwono"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"florentianayuwono"},"content":"    public static boolean containsSomeKeywordsIgnoreCase(String sentence, String keywords) {","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"florentianayuwono"},"content":"        requireAllNonNull(sentence, keywords);","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"florentianayuwono"},"content":"        String preppedWord \u003d keywords.trim();","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"florentianayuwono"},"content":"        List\u003cString\u003e preppedKeywords \u003d Arrays.asList(preppedWord.toUpperCase().split(\"(?!^\\\\s+)\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"florentianayuwono"},"content":"        checkArgument(preppedKeywords.size() \u003e 0, \"Word parameter cannot be empty\");","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"florentianayuwono"},"content":"        List\u003cString\u003e wordsInPreppedSentence \u003d Arrays.asList(sentence.toUpperCase().split(\"(?!^\\\\s+)\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"florentianayuwono"},"content":"        if (wordsInPreppedSentence.containsAll(preppedKeywords)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"florentianayuwono"},"content":"            return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"florentianayuwono"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"florentianayuwono"},"content":"        double reductionMultiplier \u003d 0.75;","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"florentianayuwono"},"content":"        int reducedKeywordsLength \u003d (int) (preppedKeywords.size() * reductionMultiplier);","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"florentianayuwono"},"content":"        return wordsInPreppedSentence.containsAll(preppedKeywords.subList(0, reducedKeywordsLength));","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"florentianayuwono"},"content":"        return t.getMessage() + \"\\n\" + sw;","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":116,"author":{"gitId":"Ugholaf"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer,","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"Ugholaf"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE}. \u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"Ugholaf"},"content":"     * Will return false for any other non-null string input,","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"Ugholaf"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters).","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"Ugholaf"},"content":"     * @throws NullPointerException If {@code s} is null.","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ugholaf":16,"florentianayuwono":63,"-":54}},{"path":"src/main/java/soconnect/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.autocomplete.Autocomplete;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.CommandResult;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ReadOnlySoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.todo.Todo;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":" * API of the Logic component.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"     * @return The result of the command execution.","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"     * Returns the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"     * @see Model#getSoConnect()","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"    ReadOnlySoConnect getSoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"     * Returns an unmodifiable view of the filtered list of persons.","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":42,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"Ugholaf"},"content":"     * Returns an unmodifiable view of the filtered list of todos.","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"Ugholaf"},"content":"    ObservableList\u003cTodo\u003e getFilteredTodoList();","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"Ugholaf"},"content":"     * Stub - this depends on the search query,","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"Ugholaf"},"content":"     * e.g if the user search todo by Tag, the header is the name of the tag,","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"Ugholaf"},"content":"     * if the user search todo by date, the header will be the give date.","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"Ugholaf"},"content":"    String getTodoHeader();","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"Ugholaf"},"content":"     * Returns the user prefs\u0027 SoConnect file path.","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"Ugholaf"},"content":"    Path getSoConnectFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"PangKuangWei"},"content":"     * Returns the user prefs\u0027 attribute order in GUI settings.","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"PangKuangWei"},"content":"    String getAttributeOrder();","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"PangKuangWei"},"content":"     * Returns the user prefs\u0027 hidden attributes in GUI settings.","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"PangKuangWei"},"content":"    String getHiddenAttributes();","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"Ugholaf"},"content":"     * Returns the AutocompleteManager.","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"Ugholaf"},"content":"    Autocomplete getAutocompleteManager();","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Ugholaf":38,"PangKuangWei":10,"-":35}},{"path":"src/main/java/soconnect/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.autocomplete.Autocomplete;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.autocomplete.AutocompleteManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.Command;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.CommandResult;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.SoConnectParser;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ReadOnlySoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.todo.Todo;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"import soconnect.storage.Storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"    private final SoConnectParser soConnectParser;","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"    private final Autocomplete autocomplete;","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"Ugholaf"},"content":"        soConnectParser \u003d new SoConnectParser();","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"Ugholaf"},"content":"        autocomplete \u003d new AutocompleteManager(model.getUniqueNames());","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"Ugholaf"},"content":"        Command command \u003d soConnectParser.parseCommand(commandText);","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"Ugholaf"},"content":"            storage.saveSoConnect(model.getSoConnect());","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"Ugholaf"},"content":"            autocomplete.updateUniqueNames(model.getUniqueNames());","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"Ugholaf"},"content":"    public ReadOnlySoConnect getSoConnect() {","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"Ugholaf"},"content":"        return model.getSoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":74,"author":{"gitId":"Ugholaf"},"content":"    // Stub - to be removed after Todo is implemented.","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"Ugholaf"},"content":"    public ObservableList\u003cTodo\u003e getFilteredTodoList() {","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"Ugholaf"},"content":"        return FXCollections.observableArrayList(new Todo(\"Description\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"Ugholaf"},"content":"    public String getTodoHeader() {","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"Ugholaf"},"content":"        return \"Today\";","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"Ugholaf"},"content":"    public Path getSoConnectFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"Ugholaf"},"content":"        return model.getSoConnectFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"Ugholaf"},"content":"    public Autocomplete getAutocompleteManager() {","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"Ugholaf"},"content":"        return this.autocomplete;","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"PangKuangWei"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"PangKuangWei"},"content":"    public String getAttributeOrder() {","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"PangKuangWei"},"content":"        return model.getAttributeOrder();","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"PangKuangWei"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"PangKuangWei"},"content":"    public String getHiddenAttributes() {","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"PangKuangWei"},"content":"        return model.getHiddenAttributes();","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Ugholaf":43,"PangKuangWei":10,"-":61}},{"path":"src/main/java/soconnect/logic/autocomplete/Autocomplete.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.autocomplete;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import java.util.TreeSet;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":" * API of Autocomplete component.","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"public interface Autocomplete {","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"     * Current autocomplete only supports the find command.","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"    String AUTOCOMPLETE_COMMAND_WORD \u003d \"find \";","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"     * Updates the set of unique names whenever a command is executed.","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"     * @param uniqueNames The updated set of unique names.","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"    void updateUniqueNames(TreeSet\u003cString\u003e uniqueNames);","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"     * Generates a list of autocomplete entries that starts with the given searchValue.","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"     * @param searchValue The value to be matched with.","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"     * @return A list of matching autocomplete entries.","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"    List\u003cString\u003e getAutocompleteEntries(String searchValue);","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"Ugholaf":29}},{"path":"src/main/java/soconnect/logic/autocomplete/AutocompleteManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.autocomplete;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import java.util.SortedSet;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import java.util.TreeSet;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":" * Manager of the autocomplete component.","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"public class AutocompleteManager implements Autocomplete {","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AutocompleteManager.class);","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"    private SortedSet\u003cString\u003e uniqueNames;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"     * Constructs a {@code AutocompleteManager} with the given uniqueNames.","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"     * @param uniqueNames A set of unique names in the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"    public AutocompleteManager(TreeSet\u003cString\u003e uniqueNames) {","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"        this.uniqueNames \u003d uniqueNames;","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"    public void updateUniqueNames(TreeSet\u003cString\u003e uniqueNames) {","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"        this.uniqueNames \u003d uniqueNames;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"        logger.info(\"Updated unique list of names.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"    public List\u003cString\u003e getAutocompleteEntries(String searchValue) {","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"        List\u003cString\u003e searchResult \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"        if (searchValue.length() \u003d\u003d 0) {","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Ugholaf"},"content":"            return searchResult;","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Ugholaf"},"content":"        String lowerCaseSearchValue \u003d searchValue.toLowerCase();","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Ugholaf"},"content":"        searchResult \u003d uniqueNames.stream()","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Ugholaf"},"content":"                .filter(name -\u003e name.toLowerCase().startsWith(lowerCaseSearchValue)).collect(Collectors.toList());","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Ugholaf"},"content":"        return searchResult;","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Ugholaf"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Ugholaf"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Ugholaf"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Ugholaf"},"content":"            return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"Ugholaf"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"Ugholaf"},"content":"        if (!(obj instanceof AutocompleteManager)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"Ugholaf"},"content":"            return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"Ugholaf"},"content":"        // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"Ugholaf"},"content":"        AutocompleteManager other \u003d (AutocompleteManager) obj;","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"Ugholaf"},"content":"        return uniqueNames.equals(other.uniqueNames);","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"Ugholaf":63}},{"path":"src/main/java/soconnect/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":" * Adds a person to the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the SoConnect. \"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + PREFIX_TAG + \"friends \";","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the SoConnect\";","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static final String MESSAGE_WRONG_TAG_COMMAND \u003d \"Please use Tag commands to add tags\";","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"Ugholaf"},"content":"     * Creates an AddCommand to add the specified {@code Person}.","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ugholaf":13,"ChongCheeKaiClarence":3,"-":50}},{"path":"src/main/java/soconnect/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.SoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":" * Clears the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"SoConnect has been cleared!\";","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"        model.setSoConnect(new SoConnect());","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ugholaf":6,"-":17}},{"path":"src/main/java/soconnect/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"     * @return Feedback message of the operation result for display.","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public abstract CommandResult execute(Model model) throws CommandException, ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ugholaf":5,"ChongCheeKaiClarence":1,"-":15}},{"path":"src/main/java/soconnect/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"     * The application should exit.","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ugholaf":7,"-":68}},{"path":"src/main/java/soconnect/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":" * Deletes a person identified using it\u0027s displayed index from the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ugholaf":7,"-":46}},{"path":"src/main/java/soconnect/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":" * Edits the details of an existing person in the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS]\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided\";","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"Ugholaf"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the SoConnect\";","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static final String MESSAGE_WRONG_TAG_COMMAND \u003d \"Please use Tag commands to edit tags\";","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"Ugholaf"},"content":"     * Constructs an {@code EditCommand} to edit the details of an existing person in SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"Ugholaf"},"content":"     * @param index Index of the person in the filtered person list to edit.","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"Ugholaf"},"content":"     * @param editPersonDescriptor Details to edit the person with.","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Set\u003cTag\u003e updatedTags \u003d personToEdit.getTags();","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Ugholaf":23,"ChongCheeKaiClarence":4,"-":200}},{"path":"src/main/java/soconnect/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting SoConnect as requested ...\";","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Ugholaf":3,"-":16}},{"path":"src/main/java/soconnect/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":" * Finds and lists all persons in SoConnect whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Eugene-Ong-W-X"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Ugholaf":5,"Eugene-Ong-W-X":1,"-":36}},{"path":"src/main/java/soconnect/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ugholaf":2,"-":19}},{"path":"src/main/java/soconnect/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":" * Lists all persons in the SoConnect to the user.","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ugholaf":4,"-":20}},{"path":"src/main/java/soconnect/logic/commands/SearchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"florentianayuwono"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"florentianayuwono"},"content":"import static soconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"florentianayuwono"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"florentianayuwono"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"florentianayuwono"},"content":" * Searches and lists all people in SoConnect whose information contains the argument keyword.","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"florentianayuwono"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"florentianayuwono"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"florentianayuwono"},"content":"public class SearchCommand extends Command {","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"florentianayuwono"},"content":"    public static final String COMMAND_WORD \u003d \"search\";","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"florentianayuwono"},"content":"    public static final String AND_CONDITION \u003d \"and\";","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"florentianayuwono"},"content":"    public static final String OR_CONDITION \u003d \"or\";","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"florentianayuwono"},"content":"    public static final String EMPTY_CONDITION \u003d \"\";","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"florentianayuwono"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"florentianayuwono"},"content":"            + \": Searches all people whose information contains \"","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"florentianayuwono"},"content":"            + \"the specified keyword (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"florentianayuwono"},"content":"            + \"Parameters: KEYWORD [CONDITION] [KEYWORD]...\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"florentianayuwono"},"content":"            + \"Example: \" + COMMAND_WORD + \" t/friend, \"","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"florentianayuwono"},"content":"            + COMMAND_WORD + \" \" + AND_CONDITION + \" n/John a/NUS\"","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"florentianayuwono"},"content":"            + COMMAND_WORD + \" \" + OR_CONDITION + \" p/12345678 e/betsy@nus.edu\";","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"florentianayuwono"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"florentianayuwono"},"content":"    private final Predicate\u003cPerson\u003e alternativePredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"florentianayuwono"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"     * Constructs a {@code SearchCommand} to search contacts in SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"florentianayuwono"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"florentianayuwono"},"content":"    public SearchCommand(Predicate\u003cPerson\u003e predicate, Predicate\u003cPerson\u003e alternativePredicate) {","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"florentianayuwono"},"content":"        requireAllNonNull(predicate, alternativePredicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"florentianayuwono"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"florentianayuwono"},"content":"        this.alternativePredicate \u003d alternativePredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"florentianayuwono"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"florentianayuwono"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"florentianayuwono"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"florentianayuwono"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"florentianayuwono"},"content":"        if (model.isFilteredPersonListEmpty()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"florentianayuwono"},"content":"            model.updateFilteredPersonList(alternativePredicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"florentianayuwono"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"florentianayuwono"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"florentianayuwono"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"florentianayuwono"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"florentianayuwono"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"florentianayuwono"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"florentianayuwono"},"content":"                || (other instanceof SearchCommand // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"florentianayuwono"},"content":"                \u0026\u0026 predicate.equals(((SearchCommand) other).predicate)","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"florentianayuwono"},"content":"                \u0026\u0026 alternativePredicate.equals(((SearchCommand) other).alternativePredicate)); // state check","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"florentianayuwono"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"Ugholaf":5,"florentianayuwono":57}},{"path":"src/main/java/soconnect/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.Prefix;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"Eugene-Ong-W-X"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":" * Sorts the list of contacts in SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Eugene-Ong-W-X"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"Eugene-Ong-W-X"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        + \": Sort the list of contacts displayed by certain parameter(s).\\n\"","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        + \"Insert a ! after a / to sort in reverse.\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        + \"Sort with multiple parameters, succeeding parameters will be used as tiebreakers \"","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        + \"when sorting with preceding parameters.\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        + \"Parameters: \"","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        + \"[\" + PREFIX_NAME + \"] \"","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        + \"[\" + PREFIX_PHONE + \"] \"","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        + \"[\" + PREFIX_EMAIL + \"] \"","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        + \"[\" + PREFIX_ADDRESS + \"] \"","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_TAG + \"!friend\";","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"List has been sorted.\";","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public static final String MESSAGE_WRONG_PREFIX \u003d \"Invalid parameter(s).\";","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private final List\u003cSortArgument\u003e argList;","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"Ugholaf"},"content":"     * Constructs a {@code SortCommand} to sort the list of contacts SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public SortCommand(List\u003cSortArgument\u003e argList) {","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        requireAllNonNull(argList);","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        this.argList \u003d argList;","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        // Start sorting from the last argument. Each sort is stable, preserving the previous order.","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        for (int i \u003d argList.size() - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            SortArgument currSort \u003d argList.get(i);","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            Prefix prefixParam \u003d currSort.getPrefix();","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            boolean isReverse \u003d currSort.isReverse();","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            if (prefixParam.equals(PREFIX_NAME)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                model.sortByName(isReverse);","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            } else if (prefixParam.equals(PREFIX_PHONE)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                model.sortByPhone(isReverse);","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            } else if (prefixParam.equals(PREFIX_EMAIL)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                model.sortByEmail(isReverse);","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            } else if (prefixParam.equals(PREFIX_ADDRESS)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                model.sortByAddress(isReverse);","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            } else if (prefixParam.equals(PREFIX_TAG)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                model.sortByTag(currSort.getTag(), isReverse);","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                throw new CommandException(MESSAGE_WRONG_PREFIX);","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        if (!(other instanceof SortCommand)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        if (argList.size() !\u003d ((SortCommand) other).argList.size()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        boolean result \u003d true;","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        for (int i \u003d 0; i \u003c argList.size(); i++) {","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            result \u003d argList.get(i).equals(((SortCommand) other).argList.get(i));","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            if (result \u003d\u003d false) {","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                break;","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return result;","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"Ugholaf"},"content":"     * Represents an argument for a {@code SortCommand}.","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Consists of a prefix, whether the sort is reversed, and a tag if the prefix is PREFIX_TAG.","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public static class SortArgument {","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        private final Prefix prefix;","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        private final boolean isSortingReversed;","lastModifiedDate":"2022-10-07"},{"lineNumber":107,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        private final Tag tag;","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        /**","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"Ugholaf"},"content":"         * Constructs a {@code SortArgument}.","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"Eugene-Ong-W-X"},"content":"         *","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"Ugholaf"},"content":"         * @param prefix            The prefix to use as the parameter.","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"Ugholaf"},"content":"         * @param isSortingReversed Whether the sorting order should be reversed.","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"Ugholaf"},"content":"         * @param tag               The tag to sort with, if the prefix is PREFIX_TAG.","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"Eugene-Ong-W-X"},"content":"         */","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public SortArgument(Prefix prefix, boolean isSortingReversed, Tag tag) {","lastModifiedDate":"2022-10-07"},{"lineNumber":117,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            this.isSortingReversed \u003d isSortingReversed;","lastModifiedDate":"2022-10-07"},{"lineNumber":119,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            this.tag \u003d tag;","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public Prefix getPrefix() {","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            return prefix;","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public boolean isReverse() {","lastModifiedDate":"2022-10-07"},{"lineNumber":127,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            return isSortingReversed;","lastModifiedDate":"2022-10-07"},{"lineNumber":128,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public Tag getTag() {","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            return tag;","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            if (this \u003d\u003d other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            if (!(other instanceof SortArgument)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            SortArgument otherSort \u003d (SortArgument) other;","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            if (tag \u003d\u003d null \u0026\u0026 otherSort.tag !\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            if (tag \u003d\u003d otherSort.tag) {","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                return isSortingReversed \u003d\u003d otherSort.isSortingReversed \u0026\u0026 prefix.equals(otherSort.prefix);","lastModifiedDate":"2022-10-07"},{"lineNumber":148,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            return isSortingReversed \u003d\u003d otherSort.isSortingReversed","lastModifiedDate":"2022-10-07"},{"lineNumber":150,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                \u0026\u0026 prefix.equals(otherSort.prefix)","lastModifiedDate":"2022-10-07"},{"lineNumber":151,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                \u0026\u0026 tag.equals(otherSort.tag);","lastModifiedDate":"2022-10-07"},{"lineNumber":152,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":154,"author":{"gitId":"Eugene-Ong-W-X"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"Ugholaf":18,"Eugene-Ong-W-X":136}},{"path":"src/main/java/soconnect/logic/commands/TagAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"ChongCheeKaiClarence"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"ChongCheeKaiClarence"},"content":" * Adds a tag to a contact.","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"ChongCheeKaiClarence"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"ChongCheeKaiClarence"},"content":"public class TagAddCommand extends Command {","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static final String MESSAGE_USAGE \u003d TagCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + COMMAND_WORD + \": Adds a tag to the contact \"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + PREFIX_TAG + \"TAG...\\n\"","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + \"Example: \" + TagCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static final String MESSAGE_ADD_TAG_SUCCESS \u003d \"Tag added: %1$s\";","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static final String MESSAGE_NO_SUCH_TAG \u003d \"This tag does not exist\";","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static final String MESSAGE_TAG_ALREADY_ADDED \u003d \"The contact already has the tag\";","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static final String MESSAGE_NO_TAG \u003d \"Please specify a tag\";","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    private final Index index;","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    private final Tag tag;","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"Ugholaf"},"content":"     * Constructs an {@code TagAddCommand} to add the specified {@code Tag} to the","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"Ugholaf"},"content":"     * person identified using it\u0027s displayed {@code Index} from SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public TagAddCommand(Index index, Tag tag) {","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        requireAllNonNull(index, tag);","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        if (!model.hasTag(tag)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            throw new CommandException(MESSAGE_NO_SUCH_TAG);","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        } else if (personToEdit.getTags().contains(tag)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            throw new CommandException(MESSAGE_TAG_ALREADY_ADDED);","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            Person editedPerson \u003d createEditedPerson(personToEdit, tag);","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            return new CommandResult(String.format(MESSAGE_ADD_TAG_SUCCESS, tag));","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Recreates the same person with updated tags.","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    private static Person createEditedPerson(Person personToEdit,","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                                             Tag tag) {","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        requireNonNull(personToEdit);","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Address updatedAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Set\u003cTag\u003e oldTags \u003d personToEdit.getTags();","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        List\u003cTag\u003e tagList \u003d new ArrayList\u003c\u003e(oldTags);","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        tagList.add(tag);","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e(tagList);","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"ChongCheeKaiClarence"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"Ugholaf":16,"ChongCheeKaiClarence":87}},{"path":"src/main/java/soconnect/logic/commands/TagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"ChongCheeKaiClarence"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"ChongCheeKaiClarence"},"content":" * Contains to command word to separate tag specific commands from other commands.","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"ChongCheeKaiClarence"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"ChongCheeKaiClarence"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static final String COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public CommandResult execute(Model model) throws CommandException, ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        throw new ParseException(\"tag should not be stand alone\");","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"ChongCheeKaiClarence"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"Ugholaf":4,"ChongCheeKaiClarence":14}},{"path":"src/main/java/soconnect/logic/commands/TagCreateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"ChongCheeKaiClarence"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"ChongCheeKaiClarence"},"content":" * Creates a tag in the tagList.","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"ChongCheeKaiClarence"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"ChongCheeKaiClarence"},"content":"public class TagCreateCommand extends Command {","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static final String COMMAND_WORD \u003d \"create\";","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static final String MESSAGE_USAGE \u003d TagCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"            + COMMAND_WORD + \": Creates a tag to the SoConnect. \"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + PREFIX_TAG + \"TAG...\\n\"","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + \"Example: \" + TagCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New tag added: %1$s\";","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"    public static final String MESSAGE_DUPLICATE_TAG \u003d \"This tag already exists in the SoConnect\";","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    private final Tag toCreate;","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"     * Constructs an {@code TagCreateCommand} to create the specified {@code Tag} in SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public TagCreateCommand(Tag tag) {","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        requireNonNull(tag);","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        this.toCreate \u003d tag;","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        if (model.hasTag(toCreate)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TAG);","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        model.addTag(toCreate);","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toCreate));","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                || (other instanceof TagCreateCommand // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                \u0026\u0026 toCreate.equals(((TagCreateCommand) other).toCreate));","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"ChongCheeKaiClarence"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"Ugholaf":8,"ChongCheeKaiClarence":48}},{"path":"src/main/java/soconnect/logic/commands/TagEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"ChongCheeKaiClarence"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":" * Edits the details of an existing tag in the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"ChongCheeKaiClarence"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"ChongCheeKaiClarence"},"content":"public class TagEditCommand extends Command {","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static final String MESSAGE_USAGE \u003d TagCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"            + COMMAND_WORD + \": Edits a tag to the taglist in the SoConnect. \"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + PREFIX_TAG + \"TAG\"","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + PREFIX_TAG + \"TAG...\\n\"","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + \"Example: \" + TagCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + PREFIX_TAG + \"friend\"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            + PREFIX_TAG + \"bestFriend\";","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Tag has changed from %1$s to %2$s\";","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"Both tags need to be provided\";","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static final String MESSAGE_DUPLICATE_TAG \u003d \"This new tag already exists\";","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static final String MESSAGE_TAG_NOT_FOUND \u003d \"This old tag does not exist\";","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    private final Tag oldTag;","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    private final Tag newTag;","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"     * Constructs a {@code TagEditCommand} to edit the details of an existing {@code Tag}.","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * @param oldTag The tag to be changed.","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * @param newTag The tag that is changed to.","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public TagEditCommand(Tag oldTag, Tag newTag) {","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        this.newTag \u003d newTag;","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        this.oldTag \u003d oldTag;","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public CommandResult execute(Model model) throws CommandException, ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        if (!model.hasTag(oldTag)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            throw new CommandException(MESSAGE_TAG_NOT_FOUND);","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        } else if (model.hasTag(newTag)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            throw new CommandException((MESSAGE_DUPLICATE_TAG));","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            model.editTag(oldTag, newTag);","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, oldTag, newTag));","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"ChongCheeKaiClarence"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"Ugholaf":10,"ChongCheeKaiClarence":51}},{"path":"src/main/java/soconnect/logic/commands/customise/CustomiseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package soconnect.logic.commands.customise;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.TAGS;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.model.Model.PREDICATE_SHOW_NO_PERSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.commands.Command;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":" * Customises the user experience.","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"public abstract class CustomiseCommand extends Command {","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"    public static final String COMMAND_WORD \u003d \"customise\";","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" order: Changes the order of the details\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"            + \"[\" + PREFIX_PHONE + \"] \"","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"            + \"[\" + PREFIX_EMAIL + \"] \"","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"            + \"[\" + PREFIX_ADDRESS + \"] \"","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"            + \"[\" + PREFIX_TAG + \"]\\n\"","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"            + \"Example: \" + COMMAND_WORD + \" order p/ a/\\n\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"            + COMMAND_WORD + \" hide / \" + COMMAND_WORD + \" show: Changes the visibility of the details\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"            + \"[\" + PREFIX_PHONE + \"] \"","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"PangKuangWei"},"content":"            + \"[\" + PREFIX_EMAIL + \"] \"","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"PangKuangWei"},"content":"            + \"[\" + PREFIX_ADDRESS + \"] \"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"PangKuangWei"},"content":"            + \"[\" + PREFIX_TAG + \"]\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"PangKuangWei"},"content":"            + \"Examples: \" + COMMAND_WORD + \" hide p/ a/, \" + COMMAND_WORD + \" show a/ e/ p/ t/\";","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"    public static final String MESSAGE_UNKNOWN_CUSTOMISE_COMMAND \u003d \"Unknown customise command\\n%1$s\";","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"PangKuangWei"},"content":"    public static final String MESSAGE_DUPLICATE_ATTRIBUTE \u003d \"There should not be duplicate attributes\";","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"PangKuangWei"},"content":"    public static final int NUMBER_OF_CUSTOMISABLE_ATTRIBUTES \u003d 4; //0: ADDRESS, 1: EMAIL, 2: PHONE, 3: TAGS","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"PangKuangWei"},"content":"    public static final String NONE \u003d \"NONE\";","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"PangKuangWei"},"content":"     * The attributes of the contacts excluding name.","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"PangKuangWei"},"content":"    public enum Attribute {","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"PangKuangWei"},"content":"        ADDRESS,","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"PangKuangWei"},"content":"        EMAIL,","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"PangKuangWei"},"content":"        PHONE,","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"PangKuangWei"},"content":"        TAGS","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"PangKuangWei"},"content":"     * Toggles the attributes between being shown or hidden.","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"Ugholaf"},"content":"     * @param model {@code Model} which the command operates on.","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"Ugholaf"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"PangKuangWei"},"content":"    protected void toggleAttributes(Model model, boolean isSetToHide, List\u003cAttribute\u003e attributeList)","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"PangKuangWei"},"content":"            throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"PangKuangWei"},"content":"        GuiSettings currSettings \u003d model.getGuiSettings();","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"PangKuangWei"},"content":"        String currHiddenAttributes \u003d currSettings.getHiddenAttributes().trim();","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"PangKuangWei"},"content":"        boolean[] isHidden \u003d new boolean[NUMBER_OF_CUSTOMISABLE_ATTRIBUTES];","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"PangKuangWei"},"content":"        if (!currHiddenAttributes.equals(NONE)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"PangKuangWei"},"content":"            String[] currHiddenAttributesArr \u003d currHiddenAttributes.split(\",\");","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"PangKuangWei"},"content":"            try {","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"PangKuangWei"},"content":"                setCurrentHiddenState(currHiddenAttributesArr, isHidden);","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"PangKuangWei"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"PangKuangWei"},"content":"                isHidden \u003d new boolean[NUMBER_OF_CUSTOMISABLE_ATTRIBUTES];","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"PangKuangWei"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"PangKuangWei"},"content":"        setNewHiddenState(isHidden, isSetToHide, attributeList);","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"PangKuangWei"},"content":"        int xCoordinate \u003d 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"PangKuangWei"},"content":"        int yCoordinate \u003d 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"PangKuangWei"},"content":"        if (currSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"PangKuangWei"},"content":"            xCoordinate \u003d (int) currSettings.getWindowCoordinates().getX();","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"PangKuangWei"},"content":"            yCoordinate \u003d (int) currSettings.getWindowCoordinates().getY();","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"PangKuangWei"},"content":"        GuiSettings newSettings \u003d new GuiSettings(currSettings.getWindowWidth(), currSettings.getWindowHeight(),","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"PangKuangWei"},"content":"                xCoordinate, yCoordinate, currSettings.getAttributeOrder(), convertHiddenToString(isHidden));","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"PangKuangWei"},"content":"        model.setGuiSettings(newSettings);","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"PangKuangWei"},"content":"        refreshList(model);","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"PangKuangWei"},"content":"     * Sets the array elements to true if attributes are hidden based on the input String array.","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"Ugholaf"},"content":"     * @param strArr An array of string representations of the attributes.","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"Ugholaf"},"content":"     * @param isHidden A boolean array where index 0 represents address, index 1 represents email","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"Ugholaf"},"content":"     *                 index 2 represents phone and index 3 represents tags.","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"PangKuangWei"},"content":"    private void setCurrentHiddenState(String[] strArr, boolean[] isHidden) {","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"PangKuangWei"},"content":"        for (String s : strArr) {","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"PangKuangWei"},"content":"            isHidden[convertAttributeToIndex(s)] \u003d true;","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"PangKuangWei"},"content":"     * Sets the new attributes to be hidden based on the arguments.","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"Ugholaf"},"content":"     * @param isHidden A boolean array where index 0 represents address, index 1 represents email,","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"Ugholaf"},"content":"     *                 index 2 represents phone and index 3 represents tags.","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"Ugholaf"},"content":"     * @param isSetToHide Is set to true to hide and false to show.","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"PangKuangWei"},"content":"    private void setNewHiddenState(boolean[] isHidden, boolean isSetToHide, List\u003cAttribute\u003e attributeList) {","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"PangKuangWei"},"content":"        for (Attribute argument : attributeList) {","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"PangKuangWei"},"content":"            isHidden[convertAttributeToIndex(argument.toString())] \u003d isSetToHide;","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"PangKuangWei"},"content":"     * Converts the boolean array to a string representing what attributes are hidden.","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"Ugholaf"},"content":"     * @param isHidden A boolean array where index 0 represents address, index 1 represents email,","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"Ugholaf"},"content":"     *                 index 2 represents phone and index 3 represents tags.","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"Ugholaf"},"content":"     * @return A string representation of what attributes are hidden.","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"PangKuangWei"},"content":"    private String convertHiddenToString(boolean[] isHidden) throws CommandException {","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"PangKuangWei"},"content":"        if (isHidden \u003d\u003d null || isHidden.length !\u003d NUMBER_OF_CUSTOMISABLE_ATTRIBUTES) {","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"PangKuangWei"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"PangKuangWei"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"PangKuangWei"},"content":"        if (isHidden[0]) {","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"PangKuangWei"},"content":"            sb.append(ADDRESS).append(\",\");","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"PangKuangWei"},"content":"        if (isHidden[1]) {","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"PangKuangWei"},"content":"            sb.append(EMAIL).append(\",\");","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"PangKuangWei"},"content":"        if (isHidden[2]) {","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"PangKuangWei"},"content":"            sb.append(PHONE).append(\",\");","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"PangKuangWei"},"content":"        if (isHidden[3]) {","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"PangKuangWei"},"content":"            sb.append(TAGS).append(\",\");","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"PangKuangWei"},"content":"        if (sb.length() \u003d\u003d 0) {","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"PangKuangWei"},"content":"            return NONE;","lastModifiedDate":"2022-10-17"},{"lineNumber":150,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":152,"author":{"gitId":"PangKuangWei"},"content":"        sb.deleteCharAt(sb.length() - 1);","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"PangKuangWei"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":155,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"PangKuangWei"},"content":"     * Converts the given attribute into the index corresponding to the attribute.","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"Ugholaf"},"content":"     * @param attribute The string representation of the attribute.","lastModifiedDate":"2022-10-14"},{"lineNumber":160,"author":{"gitId":"Ugholaf"},"content":"     * @return An index that corresponds to the attribute.","lastModifiedDate":"2022-10-14"},{"lineNumber":161,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"PangKuangWei"},"content":"    private int convertAttributeToIndex(String attribute) {","lastModifiedDate":"2022-10-06"},{"lineNumber":163,"author":{"gitId":"PangKuangWei"},"content":"        switch(attribute) {","lastModifiedDate":"2022-10-05"},{"lineNumber":164,"author":{"gitId":"PangKuangWei"},"content":"        case \"ADDRESS\":","lastModifiedDate":"2022-10-05"},{"lineNumber":165,"author":{"gitId":"PangKuangWei"},"content":"            return 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":166,"author":{"gitId":"PangKuangWei"},"content":"        case \"EMAIL\":","lastModifiedDate":"2022-10-05"},{"lineNumber":167,"author":{"gitId":"PangKuangWei"},"content":"            return 1;","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"PangKuangWei"},"content":"        case \"PHONE\":","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"PangKuangWei"},"content":"            return 2;","lastModifiedDate":"2022-10-05"},{"lineNumber":170,"author":{"gitId":"PangKuangWei"},"content":"        case \"TAGS\":","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"PangKuangWei"},"content":"            return 3;","lastModifiedDate":"2022-10-05"},{"lineNumber":172,"author":{"gitId":"PangKuangWei"},"content":"        default:","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"PangKuangWei"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2022-10-05"},{"lineNumber":174,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":175,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":178,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":179,"author":{"gitId":"PangKuangWei"},"content":"     * Refreshes the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":180,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":181,"author":{"gitId":"Ugholaf"},"content":"     * @param model {@code Model} which the command operates on.","lastModifiedDate":"2022-10-14"},{"lineNumber":182,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":183,"author":{"gitId":"PangKuangWei"},"content":"    protected static void refreshList(Model model) {","lastModifiedDate":"2022-10-15"},{"lineNumber":184,"author":{"gitId":"PangKuangWei"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_NO_PERSON);","lastModifiedDate":"2022-10-15"},{"lineNumber":185,"author":{"gitId":"PangKuangWei"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-15"},{"lineNumber":186,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":187,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"Ugholaf":23,"PangKuangWei":164}},{"path":"src/main/java/soconnect/logic/commands/customise/CustomiseHideCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package soconnect.logic.commands.customise;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.commands.CommandResult;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":" * Customises the user experience by hiding attributes.","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"public class CustomiseHideCommand extends CustomiseCommand {","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"    public static final String COMMAND_WORD \u003d \"hide\";","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"    public static final String MESSAGE_USAGE \u003d CustomiseCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"            + COMMAND_WORD + \" : Hides details\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"            + \"[\" + PREFIX_PHONE + \"] \"","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"            + \"[\" + PREFIX_EMAIL + \"] \"","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"            + \"[\" + PREFIX_ADDRESS + \"] \"","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"            + \"[\" + PREFIX_TAG + \"]\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"            + \"Examples: \" + CustomiseCommand.COMMAND_WORD + \" \" + COMMAND_WORD + \" p/ a/\";","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Attributes specified are hidden.\";","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"    public final List\u003cAttribute\u003e attributeList;","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"     * Constructs a CustomiseHideCommand object.","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"PangKuangWei"},"content":"     * @param attributeList A List of attributes.","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"PangKuangWei"},"content":"    public CustomiseHideCommand(List\u003cAttribute\u003e attributeList) {","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"PangKuangWei"},"content":"        requireNonNull(attributeList);","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"PangKuangWei"},"content":"        this.attributeList \u003d attributeList;","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"PangKuangWei"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"PangKuangWei"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"PangKuangWei"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"PangKuangWei"},"content":"        toggleAttributes(model, true, attributeList);","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"PangKuangWei"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"PangKuangWei"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"PangKuangWei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"PangKuangWei"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"PangKuangWei"},"content":"                || (other instanceof CustomiseHideCommand)","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"PangKuangWei"},"content":"                \u0026\u0026 attributeList.equals(((CustomiseHideCommand) other).attributeList);","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"PangKuangWei":60}},{"path":"src/main/java/soconnect/logic/commands/customise/CustomiseOrderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package soconnect.logic.commands.customise;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.commands.CommandResult;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":" * Customises the user experience by ordering attributes.","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"public class CustomiseOrderCommand extends CustomiseCommand {","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"    public static final String COMMAND_WORD \u003d \"order\";","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"    public static final String MESSAGE_USAGE \u003d CustomiseCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"            + COMMAND_WORD + \" : Changes the order of the details\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"            + \"[\" + PREFIX_PHONE + \"] \"","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"            + \"[\" + PREFIX_EMAIL + \"] \"","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"            + \"[\" + PREFIX_ADDRESS + \"] \"","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"            + \"[\" + PREFIX_TAG + \"]\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"            + \"Example: \" + CustomiseCommand.COMMAND_WORD + \" \" + COMMAND_WORD + \" p/ a/\";","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Preferred order of details changed.\";","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"    public final List\u003cAttribute\u003e attributeList;","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"PangKuangWei"},"content":"     * Constructs a CustomiseOrderCommand object.","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"PangKuangWei"},"content":"     * @param attributeList The List of ordered attributes.","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"PangKuangWei"},"content":"    public CustomiseOrderCommand(List\u003cAttribute\u003e attributeList) {","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"        requireNonNull(attributeList);","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"        this.attributeList \u003d attributeList;","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"PangKuangWei"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"PangKuangWei"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"PangKuangWei"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"PangKuangWei"},"content":"        GuiSettings currSettings \u003d model.getGuiSettings();","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"PangKuangWei"},"content":"        int xCoordinate \u003d 0;","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"        int yCoordinate \u003d 0;","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"PangKuangWei"},"content":"        if (currSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"PangKuangWei"},"content":"            xCoordinate \u003d (int) currSettings.getWindowCoordinates().getX();","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"PangKuangWei"},"content":"            yCoordinate \u003d (int) currSettings.getWindowCoordinates().getY();","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"PangKuangWei"},"content":"        GuiSettings newSettings \u003d new GuiSettings(currSettings.getWindowWidth(), currSettings.getWindowHeight(),","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"PangKuangWei"},"content":"                xCoordinate, yCoordinate, convertOrderToString(attributeList), currSettings.getHiddenAttributes());","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"PangKuangWei"},"content":"        model.setGuiSettings(newSettings);","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"PangKuangWei"},"content":"        refreshList(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"PangKuangWei"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"PangKuangWei"},"content":"     * Converts a given Attribute array into a string.","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"PangKuangWei"},"content":"     * @param attributeList An array of Attribute objects.","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"PangKuangWei"},"content":"     * @return The string representation of the attribute order.","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"PangKuangWei"},"content":"     * @throws CommandException If the execution of the command encountered an error.","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"PangKuangWei"},"content":"    private String convertOrderToString(List\u003cAttribute\u003e attributeList) throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"PangKuangWei"},"content":"        if (attributeList \u003d\u003d null || attributeList.size() !\u003d 4) {","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"PangKuangWei"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"PangKuangWei"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"PangKuangWei"},"content":"        for (int i \u003d 0; i \u003c attributeList.size() - 1; i++) {","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"PangKuangWei"},"content":"            sb.append(attributeList.get(i).toString()).append(\"\u003e\");","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"PangKuangWei"},"content":"        sb.append(attributeList.get(attributeList.size() - 1));","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"PangKuangWei"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"PangKuangWei"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"PangKuangWei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"PangKuangWei"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"PangKuangWei"},"content":"                || (other instanceof CustomiseOrderCommand)","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"PangKuangWei"},"content":"                \u0026\u0026 attributeList.equals(((CustomiseOrderCommand) other).attributeList);","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"PangKuangWei":95}},{"path":"src/main/java/soconnect/logic/commands/customise/CustomiseShowCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package soconnect.logic.commands.customise;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.commands.CommandResult;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":" * Customises the user experience by showing attributes.","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"public class CustomiseShowCommand extends CustomiseCommand {","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"    public static final String COMMAND_WORD \u003d \"show\";","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"    public static final String MESSAGE_USAGE \u003d CustomiseCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"            + COMMAND_WORD + \" : Shows details\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"            + \"[\" + PREFIX_PHONE + \"] \"","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"            + \"[\" + PREFIX_EMAIL + \"] \"","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"            + \"[\" + PREFIX_ADDRESS + \"] \"","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"            + \"[\" + PREFIX_TAG + \"]\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"            + \"Examples: \" + CustomiseCommand.COMMAND_WORD + \" \" + COMMAND_WORD + \" p/ a/\";","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Attributes specified are shown.\";","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"    public final List\u003cAttribute\u003e attributeList;","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"     * Constructs a CustomiseShowCommand object.","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"PangKuangWei"},"content":"     * @param attributeList A List of attributes.","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"PangKuangWei"},"content":"    public CustomiseShowCommand(List\u003cAttribute\u003e attributeList) {","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"PangKuangWei"},"content":"        requireNonNull(attributeList);","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"PangKuangWei"},"content":"        this.attributeList \u003d attributeList;","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"PangKuangWei"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"PangKuangWei"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"PangKuangWei"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"PangKuangWei"},"content":"        toggleAttributes(model, false, attributeList);","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"PangKuangWei"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"PangKuangWei"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"PangKuangWei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"PangKuangWei"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"PangKuangWei"},"content":"                || (other instanceof CustomiseShowCommand)","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"PangKuangWei"},"content":"                \u0026\u0026 attributeList.equals(((CustomiseShowCommand) other).attributeList);","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"PangKuangWei":60}},{"path":"src/main/java/soconnect/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands.exceptions;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.Command;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Ugholaf":2,"-":17}},{"path":"src/main/java/soconnect/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.AddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":" * Parses input arguments and creates a new AddCommand object.","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"Ugholaf"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        } else if (arePrefixesPresent(argMultimap, PREFIX_TAG)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            throw new ParseException(AddCommand.MESSAGE_WRONG_TAG_COMMAND);","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Set\u003cTag\u003e tagList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Ugholaf":19,"ChongCheeKaiClarence":4,"-":41}},{"path":"src/main/java/soconnect/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"florentianayuwono"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"     * Prefixes mapped to their respective arguments.","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated.","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"     * @param argValue Argument value to be associated with the specified prefix key.","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"florentianayuwono"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"florentianayuwono"},"content":"     * Returns all prefixes inside {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"florentianayuwono"},"content":"     * If the prefix does not exist, this will return an empty list.","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"florentianayuwono"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"florentianayuwono"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"florentianayuwono"},"content":"    public List\u003cPrefix\u003e getAllPrefixes() {","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"florentianayuwono"},"content":"        List\u003cPrefix\u003e prefixes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"florentianayuwono"},"content":"        argMultimap.forEach((prefix, arguments) -\u003e prefixes.add(prefix));","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"florentianayuwono"},"content":"        return prefixes;","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"florentianayuwono"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"florentianayuwono"},"content":"     * Returns all available values without considering the prefix.","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"florentianayuwono"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"florentianayuwono"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"florentianayuwono"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"florentianayuwono"},"content":"    public List\u003cString\u003e getAllValues() {","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"florentianayuwono"},"content":"        List\u003cList\u003cString\u003e\u003e values \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"florentianayuwono"},"content":"        argMultimap.forEach((prefix, arguments) -\u003e values.add(getAllValues(prefix)));","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"florentianayuwono"},"content":"        return values.stream().flatMap(List\u003cString\u003e::stream).collect(Collectors.toList());","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"florentianayuwono"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"florentianayuwono"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"florentianayuwono"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"florentianayuwono"},"content":"                || (other instanceof ArgumentMultimap // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"florentianayuwono"},"content":"                \u0026\u0026 getAllPrefixes().equals(((ArgumentMultimap) other).getAllPrefixes())","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"florentianayuwono"},"content":"                \u0026\u0026 getAllValues().equals(((ArgumentMultimap) other).getAllValues())); // state check","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"Ugholaf":6,"florentianayuwono":31,"-":56}},{"path":"src/main/java/soconnect/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with.","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments.","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Tokenizes an arguments string and returns an {@code List\u003cPrefixArgument\u003e} object that stores a list of","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * PrefixArguments. Each PrefixArgument contains a prefix and its argument value. Only the given prefixes will be","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * recognized in the arguments string. The PrefixArguments are in the same order as that their prefix appeared in","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * argsString.","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Ugholaf"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with.","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"Ugholaf"},"content":"     * @return           List of prefixes and their respective argument values.","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public static List\u003cPrefixArgument\u003e tokenizeToList(String argsString, Prefix... prefixes) {","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return extractArgumentsToList(argsString, positions);","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"Ugholaf"},"content":"     * @param prefixes   Prefixes to find in the arguments string.","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"Ugholaf"},"content":"     * @return           List of zero-based prefix positions in the given arguments string.","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":82,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * E.g. if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"Ugholaf"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}.","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"Ugholaf"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments.","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":104,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sortPrefixPositions(argsString.length(), prefixPositions);","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        // Store prefixes and their argument values (if any)","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return argMultimap;","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Extracts prefixes and their argument values, converts them to {@code PrefixArgument}, and returns a {@code List}","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * of {@code PrefixArgument}. Prefixes are extracted based on their zero-based positions in {@code argsString}.","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @return                List of PrefixArgument, in the order that the prefixes appeared in {@code argsString}","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private static List\u003cPrefixArgument\u003e extractArgumentsToList(String argsString,","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                                                               List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sortPrefixPositions(argsString.length(), prefixPositions);","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":131,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        List\u003cPrefixArgument\u003e argList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":136,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            argList.add(new PrefixArgument(argPrefix, argValue));","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":139,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return argList;","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"Ugholaf"},"content":"     * Sorts a list of PrefixPositions by their positions.","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Inserts dummy PrefixPositions at the start and end of the list to denote the boundaries of the argument string.","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"Ugholaf"},"content":"     * @param len             The length of the argument string.","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"Ugholaf"},"content":"     * @param prefixPositions The list of PrefixPositions to sort.","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private static void sortPrefixPositions(int len, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        // Sort by start position","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        prefixPositions.sort(Comparator.comparingInt(PrefixPosition::getStartPosition));","lastModifiedDate":"2022-10-05"},{"lineNumber":152,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2022-10-05"},{"lineNumber":155,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), len);","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":181,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        private final int startPosition;","lastModifiedDate":"2022-10-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":198,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":199,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Represents a prefix and its argument value.","lastModifiedDate":"2022-10-05"},{"lineNumber":200,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":201,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public static class PrefixArgument {","lastModifiedDate":"2022-10-05"},{"lineNumber":202,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        private final Prefix prefix;","lastModifiedDate":"2022-10-05"},{"lineNumber":203,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        private final String argument;","lastModifiedDate":"2022-10-05"},{"lineNumber":204,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":205,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        PrefixArgument(Prefix prefix, String argument) {","lastModifiedDate":"2022-10-05"},{"lineNumber":206,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2022-10-05"},{"lineNumber":207,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            this.argument \u003d argument;","lastModifiedDate":"2022-10-05"},{"lineNumber":208,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":209,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":210,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public String getArgument() {","lastModifiedDate":"2022-10-05"},{"lineNumber":211,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            return argument;","lastModifiedDate":"2022-10-05"},{"lineNumber":212,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":213,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":214,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public Prefix getPrefix() {","lastModifiedDate":"2022-10-05"},{"lineNumber":215,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            return prefix;","lastModifiedDate":"2022-10-05"},{"lineNumber":216,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":217,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":218,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Ugholaf":12,"Eugene-Ong-W-X":79,"-":128}},{"path":"src/main/java/soconnect/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands.","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"florentianayuwono"},"content":"    public static final String INDICATOR_NAME \u003d \"n/\";","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"florentianayuwono"},"content":"    public static final String INDICATOR_PHONE \u003d \"p/\";","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"florentianayuwono"},"content":"    public static final String INDICATOR_EMAIL \u003d \"e/\";","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"florentianayuwono"},"content":"    public static final String INDICATOR_ADDRESS \u003d \"a/\";","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"florentianayuwono"},"content":"    public static final String INDICATOR_TAG \u003d \"t/\";","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"florentianayuwono"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(INDICATOR_NAME);","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"florentianayuwono"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(INDICATOR_PHONE);","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"florentianayuwono"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(INDICATOR_EMAIL);","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"florentianayuwono"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(INDICATOR_ADDRESS);","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"florentianayuwono"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(INDICATOR_TAG);","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Ugholaf":2,"florentianayuwono":11,"-":8}},{"path":"src/main/java/soconnect/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":" * Parses input arguments and creates a new DeleteCommand object.","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Ugholaf":9,"-":20}},{"path":"src/main/java/soconnect/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.EditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":" * Parses input arguments and creates a new EditCommand object.","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"                    EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"Ugholaf"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            throw new ParseException(EditCommand.MESSAGE_WRONG_TAG_COMMAND);","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Ugholaf":16,"ChongCheeKaiClarence":3,"-":45}},{"path":"src/main/java/soconnect/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.FindCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":" * Parses input arguments and creates a new FindCommand object.","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Ugholaf":9,"-":24}},{"path":"src/main/java/soconnect/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.Command;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"     * @throws ParseException If {@code userInput} does not conform the expected format.","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Ugholaf":5,"-":12}},{"path":"src/main/java/soconnect/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.util.StringUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"     * @throws ParseException If the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"Ugholaf"},"content":"     * @throws ParseException If the given {@code name} is invalid.","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"Ugholaf"},"content":"     * @throws ParseException If the given {@code phone} is invalid.","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"Ugholaf"},"content":"     * @throws ParseException If the given {@code address} is invalid.","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"Ugholaf"},"content":"     * @throws ParseException If the given {@code email} is invalid.","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"Ugholaf"},"content":"     * @throws ParseException If the given {@code tag} is invalid.","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code List\u003cTag\u003e}.","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static List\u003cTag\u003e parseTagsIntoList(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        requireNonNull(tags);","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        final List\u003cTag\u003e tagSet \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        return tagSet;","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Ugholaf":16,"ChongCheeKaiClarence":14,"-":109}},{"path":"src/main/java/soconnect/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Ugholaf":1,"-":38}},{"path":"src/main/java/soconnect/logic/parser/SearchCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"florentianayuwono"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"florentianayuwono"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.SearchCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.model.person.search.ContactContainsAllKeywordsPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.model.person.search.ContactContainsAnyKeywordsPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.model.person.search.ContactMightBeRelevantPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"florentianayuwono"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"florentianayuwono"},"content":" * Parses input arguments and creates a new {@code SearchCommand} object.","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"florentianayuwono"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"florentianayuwono"},"content":"public class SearchCommandParser implements Parser\u003cSearchCommand\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"florentianayuwono"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"florentianayuwono"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code SearchCommand}","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"florentianayuwono"},"content":"     * and returns a {@code SearchCommand} object for execution.","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"florentianayuwono"},"content":"     * @throws ParseException If the user input does not conform with the expected format.","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"florentianayuwono"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"florentianayuwono"},"content":"    public SearchCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"florentianayuwono"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"florentianayuwono"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"florentianayuwono"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"florentianayuwono"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"florentianayuwono"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SearchCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"florentianayuwono"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"florentianayuwono"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"florentianayuwono"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"florentianayuwono"},"content":"        String condition \u003d argMultimap.getPreamble().toLowerCase();","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"florentianayuwono"},"content":"        return parseSearchCondition(argMultimap, condition);","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"florentianayuwono"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"florentianayuwono"},"content":"     * Determines the type of {@code SearchCommand} based on the specified {@code String}","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"florentianayuwono"},"content":"     * condition from the user.","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"florentianayuwono"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"florentianayuwono"},"content":"     * @throws ParseException If the user input does not conform with the expected format.","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"florentianayuwono"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"florentianayuwono"},"content":"    private SearchCommand parseSearchCondition(ArgumentMultimap argMultimap, String condition) throws ParseException {","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"florentianayuwono"},"content":"        boolean isJointCondition;","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"florentianayuwono"},"content":"        switch (condition) {","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"florentianayuwono"},"content":"        // Search commands with empty and \"and\" preamble are both treated as","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"florentianayuwono"},"content":"        // search for result that satisfy all prefix conditions","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"florentianayuwono"},"content":"        case SearchCommand.AND_CONDITION:","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"florentianayuwono"},"content":"        case SearchCommand.EMPTY_CONDITION:","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"florentianayuwono"},"content":"            isJointCondition \u003d true;","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"florentianayuwono"},"content":"            return parseSearchWithCondition(argMultimap, isJointCondition);","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"florentianayuwono"},"content":"        case SearchCommand.OR_CONDITION:","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"florentianayuwono"},"content":"            isJointCondition \u003d false;","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"florentianayuwono"},"content":"            return parseSearchWithCondition(argMultimap, isJointCondition);","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"florentianayuwono"},"content":"        default:","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"florentianayuwono"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SearchCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"florentianayuwono"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"florentianayuwono"},"content":"    private SearchCommand parseSearchWithCondition(ArgumentMultimap argMultimap, Boolean isJointCondition) {","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"florentianayuwono"},"content":"        Predicate\u003cPerson\u003e contactMightBeRelevantPredicate \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"florentianayuwono"},"content":"                new ContactMightBeRelevantPredicate(argMultimap.getAllValues());","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"florentianayuwono"},"content":"        if (isJointCondition) {","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"florentianayuwono"},"content":"            return new SearchCommand(new ContactContainsAllKeywordsPredicate(argMultimap),","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"florentianayuwono"},"content":"                    contactMightBeRelevantPredicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"florentianayuwono"},"content":"        } else {","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"florentianayuwono"},"content":"            return new SearchCommand(new ContactContainsAnyKeywordsPredicate(argMultimap),","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"florentianayuwono"},"content":"                    contactMightBeRelevantPredicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"florentianayuwono"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"florentianayuwono"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"Ugholaf":10,"florentianayuwono":71}},{"path":"src/main/java/soconnect/logic/parser/SoConnectParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.AddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.Command;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.EditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.FindCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.ListCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.SearchCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.SortCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.TagCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.commands.customise.CustomiseCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.parser.customise.CustomiseCommandParser;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"public class SoConnectParser {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"     * @param userInput Full user input string.","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"     * @return The command based on the user input.","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"Ugholaf"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"        case CustomiseCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"PangKuangWei"},"content":"            return new CustomiseCommandParser().parse(arguments);","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"florentianayuwono"},"content":"        case SearchCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"florentianayuwono"},"content":"            return new SearchCommandParser().parse(arguments);","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        case TagCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            return new TagCommandParser().parse(arguments);","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":87,"author":{"gitId":"Ugholaf"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ugholaf":21,"Eugene-Ong-W-X":3,"ChongCheeKaiClarence":3,"florentianayuwono":3,"PangKuangWei":5,"-":56}},{"path":"src/main/java/soconnect/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.ArgumentTokenizer.PrefixArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.ArgumentTokenizer.tokenizeToList;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.ParserUtil.parseTag;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.SortCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.SortCommand.SortArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"Eugene-Ong-W-X"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":" * Parses input arguments and creates a new SortCommand object.","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Eugene-Ong-W-X"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"Eugene-Ong-W-X"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * and returns an SortCommand object for execution.","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        List\u003cPrefixArgument\u003e argList \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            tokenizeToList(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        boolean hasArguments \u003d argList.size() !\u003d 1;","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        if (!hasArguments) {","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        List\u003cSortArgument\u003e sortArgs \u003d convertPrefixArgToSortArg(argList);","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        for (SortArgument arg : sortArgs) {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            if (arg \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return new SortCommand(sortArgs);","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"Ugholaf"},"content":"     * Converts a list of PrefixArgument to a list of SortArgument.","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * First dummy PrefixArgument in the list, which represents the preamble, is excluded.","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"Ugholaf"},"content":"     * @param argList List of PrefixArgument.","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"Ugholaf"},"content":"     * @return        List of SortArgument.","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private List\u003cSortArgument\u003e convertPrefixArgToSortArg(List\u003cPrefixArgument\u003e argList) {","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return argList.subList(1, argList.size()).stream().map(this::convertArguments).collect(Collectors.toList());","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"Ugholaf"},"content":"     * Converts a PrefixArgument to a SortArgument.","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"Ugholaf"},"content":"     * @param prefixArg PrefixArgument to convert.","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"Ugholaf"},"content":"     * @return          SortArgument.","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private SortArgument convertArguments(PrefixArgument prefixArg) {","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Prefix prefix \u003d prefixArg.getPrefix();","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        String arg \u003d prefixArg.getArgument();","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        // Sorting is reversed if the prefix is followed by a \u0027!\u0027","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        boolean isReverse \u003d !arg.isEmpty() \u0026\u0026 arg.charAt(0) \u003d\u003d \u0027!\u0027;","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            if (prefix.equals(PREFIX_TAG)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                Tag tag \u003d isReverse ? parseTag(arg.substring(1)) : parseTag(arg);","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                return new SortArgument(prefix, isReverse, tag);","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            } else {","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                return new SortArgument(prefix, isReverse, null);","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            return null;","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"Eugene-Ong-W-X"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"Ugholaf":22,"Eugene-Ong-W-X":64}},{"path":"src/main/java/soconnect/logic/parser/TagAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.TagAddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"ChongCheeKaiClarence"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"ChongCheeKaiClarence"},"content":" * Parses input arguments and creates a new TagAddCommand object","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"ChongCheeKaiClarence"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"ChongCheeKaiClarence"},"content":"public class TagAddCommandParser implements Parser\u003cTagAddCommand\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Parses the given {@code String} of arguments in the context of the TagAddCommand","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * and returns an TagAddCommand object for execution.","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public TagAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Index index;","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Tag tag;","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        try {","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            tag \u003d ParserUtil.parseTag(argMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            throw new ParseException(TagAddCommand.MESSAGE_NO_TAG);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        return new TagAddCommand(index, tag);","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"ChongCheeKaiClarence"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"Ugholaf":9,"ChongCheeKaiClarence":36}},{"path":"src/main/java/soconnect/logic/parser/TagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.Command;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.TagAddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.TagCreateCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.TagEditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"ChongCheeKaiClarence"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"ChongCheeKaiClarence"},"content":" * Parses tag specific user input.","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"ChongCheeKaiClarence"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"ChongCheeKaiClarence"},"content":"public class TagCommandParser {","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"     * @param userInput Full user input string.","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"     * @return The command based on the user input.","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public Command parse(String userInput) throws ParseException {","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        case TagCreateCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            return new TagCreateCommandParser().parse(arguments);","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        case TagEditCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            return new TagEditCommandParser().parse(arguments);","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        case TagAddCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            return new TagAddCommandParser().parse(arguments);","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        default:","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"ChongCheeKaiClarence"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"Ugholaf":12,"ChongCheeKaiClarence":44}},{"path":"src/main/java/soconnect/logic/parser/TagCreateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.TagCreateCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"ChongCheeKaiClarence"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":" * Parses input arguments and creates a new TagCreateCommand object.","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"ChongCheeKaiClarence"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"ChongCheeKaiClarence"},"content":"public class TagCreateCommandParser implements Parser\u003cTagCreateCommand\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Parses the given {@code String} of arguments in the context of the TagCreateCommand","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * and returns an TagCreateCommand object for execution.","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public TagCreateCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TAG)","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCreateCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Tag tag \u003d ParserUtil.parseTag(argMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        return new TagCreateCommand(tag);","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"ChongCheeKaiClarence"},"content":"}","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"Ugholaf":9,"ChongCheeKaiClarence":36}},{"path":"src/main/java/soconnect/logic/parser/TagEditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.TagEditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"ChongCheeKaiClarence"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":" * Parses input arguments and creates a new TagEditCommand object.","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"ChongCheeKaiClarence"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"ChongCheeKaiClarence"},"content":"public class TagEditCommandParser implements Parser\u003cTagEditCommand\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Parses the given {@code String} of arguments in the context of the TagEditCommand","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * and returns an TagEditCommand object for execution.","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public TagEditCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TAG)","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagEditCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        List\u003cTag\u003e tagList \u003d ParserUtil.parseTagsIntoList(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        if (tagList.size() !\u003d 2) {","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            throw new ParseException(TagEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Tag oldTagName \u003d tagList.get(0);","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Tag newTagName \u003d tagList.get(1);","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        return new TagEditCommand(oldTagName, newTagName);","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"ChongCheeKaiClarence"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"Ugholaf":9,"ChongCheeKaiClarence":45}},{"path":"src/main/java/soconnect/logic/parser/customise/CustomiseCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package soconnect.logic.parser.customise;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.TAGS;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.MESSAGE_UNKNOWN_CUSTOMISE_COMMAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.INDICATOR_ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.INDICATOR_EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.INDICATOR_PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.INDICATOR_TAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.commands.customise.CustomiseCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.commands.customise.CustomiseHideCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.commands.customise.CustomiseOrderCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.commands.customise.CustomiseShowCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.parser.ArgumentTokenizer.PrefixArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.parser.Parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.parser.Prefix;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":" * Parses input arguments and creates a new CustomiseCommand object.","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"public class CustomiseCommandParser implements Parser\u003cCustomiseCommand\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"PangKuangWei"},"content":"     * Parses the given String of arguments in the context of the CustomiseCommand","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"PangKuangWei"},"content":"     * and returns a CustomiseCommand object for execution.","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"PangKuangWei"},"content":"     * @param input Remaining user input string.","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"     * @return The command based on the user input.","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"PangKuangWei"},"content":"    public CustomiseCommand parse(String input) throws ParseException {","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"PangKuangWei"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(input.trim());","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"PangKuangWei"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"PangKuangWei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CustomiseCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"PangKuangWei"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"PangKuangWei"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"PangKuangWei"},"content":"        case CustomiseHideCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"PangKuangWei"},"content":"            return new CustomiseHideCommandParser().parse(arguments);","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"PangKuangWei"},"content":"        case CustomiseShowCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"PangKuangWei"},"content":"            return new CustomiseShowCommandParser().parse(arguments);","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"PangKuangWei"},"content":"        case CustomiseOrderCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"PangKuangWei"},"content":"            return new CustomiseOrderCommandParser().parse(arguments);","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"PangKuangWei"},"content":"        default:","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"PangKuangWei"},"content":"            throw new ParseException(String.format(MESSAGE_UNKNOWN_CUSTOMISE_COMMAND, CustomiseCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"PangKuangWei"},"content":"     * Converts a given List of PrefixArgument objects into a List of Attributes.","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"PangKuangWei"},"content":"     * @param argList The List of PrefixArgument objects.","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"PangKuangWei"},"content":"     * @return A List of Attributes.","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"PangKuangWei"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"PangKuangWei"},"content":"    protected static List\u003cAttribute\u003e convertToAttributeList(List\u003cPrefixArgument\u003e argList) throws ParseException {","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"PangKuangWei"},"content":"        List\u003cAttribute\u003e attributeList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"PangKuangWei"},"content":"        for (PrefixArgument prefixArgument : argList) {","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"PangKuangWei"},"content":"            attributeList.add(convertToAttribute(prefixArgument.getPrefix()));","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"PangKuangWei"},"content":"        return attributeList;","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"PangKuangWei"},"content":"     * Converts a given Prefix into an Attribute.","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"PangKuangWei"},"content":"     * @param prefix The input prefix.","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"PangKuangWei"},"content":"     * @return The Attribute.","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"PangKuangWei"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"PangKuangWei"},"content":"    protected static Attribute convertToAttribute(Prefix prefix) throws ParseException {","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"PangKuangWei"},"content":"        switch (prefix.toString()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"PangKuangWei"},"content":"        case INDICATOR_ADDRESS:","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"PangKuangWei"},"content":"            return ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"PangKuangWei"},"content":"        case INDICATOR_EMAIL:","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"PangKuangWei"},"content":"            return EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"PangKuangWei"},"content":"        case INDICATOR_PHONE:","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"PangKuangWei"},"content":"            return PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"PangKuangWei"},"content":"        case INDICATOR_TAG:","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"PangKuangWei"},"content":"            return TAGS;","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"PangKuangWei"},"content":"        case \"\":","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"PangKuangWei"},"content":"        default:","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"PangKuangWei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"PangKuangWei"},"content":"                    CustomiseOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"PangKuangWei"},"content":"     * Returns true if there is a non-empty argument. Returns false otherwise.","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"PangKuangWei"},"content":"     * @param argList The List of PrefixArgument objects.","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"PangKuangWei"},"content":"     * @return True if there is a non-empty argument. False otherwise.","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"PangKuangWei"},"content":"    protected static boolean hasNonEmptyArgument(List\u003cPrefixArgument\u003e argList) {","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"PangKuangWei"},"content":"        for (PrefixArgument prefixArgument : argList) {","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"PangKuangWei"},"content":"            if (!prefixArgument.getArgument().equals(\"\")) {","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"PangKuangWei"},"content":"                return true;","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"PangKuangWei"},"content":"            }","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"PangKuangWei"},"content":"        return false;","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":123,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":124,"author":{"gitId":"PangKuangWei"},"content":"     * Returns true if there are duplicate attributes. Returns false otherwise.","lastModifiedDate":"2022-10-15"},{"lineNumber":125,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":126,"author":{"gitId":"PangKuangWei"},"content":"     * @param argList The List of PrefixArgument objects.","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"PangKuangWei"},"content":"     * @return True if there is a non-empty argument. False otherwise.","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"PangKuangWei"},"content":"    protected static boolean hasDuplicateAttributes(List\u003cAttribute\u003e argList) {","lastModifiedDate":"2022-10-15"},{"lineNumber":130,"author":{"gitId":"PangKuangWei"},"content":"        List\u003cAttribute\u003e uniqueList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":132,"author":{"gitId":"PangKuangWei"},"content":"        for (Attribute attribute : argList) {","lastModifiedDate":"2022-10-15"},{"lineNumber":133,"author":{"gitId":"PangKuangWei"},"content":"            if (uniqueList.contains(attribute)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":134,"author":{"gitId":"PangKuangWei"},"content":"                return true;","lastModifiedDate":"2022-10-15"},{"lineNumber":135,"author":{"gitId":"PangKuangWei"},"content":"            }","lastModifiedDate":"2022-10-15"},{"lineNumber":136,"author":{"gitId":"PangKuangWei"},"content":"            uniqueList.add(attribute);","lastModifiedDate":"2022-10-15"},{"lineNumber":137,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":138,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":139,"author":{"gitId":"PangKuangWei"},"content":"        return false;","lastModifiedDate":"2022-10-15"},{"lineNumber":140,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"PangKuangWei":141}},{"path":"src/main/java/soconnect/logic/parser/customise/CustomiseHideCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package soconnect.logic.parser.customise;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.MESSAGE_DUPLICATE_ATTRIBUTE;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.ArgumentTokenizer.PrefixArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.ArgumentTokenizer.tokenizeToList;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.customise.CustomiseCommandParser.convertToAttributeList;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.customise.CustomiseCommandParser.hasDuplicateAttributes;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.customise.CustomiseCommandParser.hasNonEmptyArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.commands.customise.CustomiseHideCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.parser.Parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":" * Parses input arguments and creates a new CustomiseHideCommand object.","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"public class CustomiseHideCommandParser implements Parser\u003cCustomiseHideCommand\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"     * Parses the given String of arguments in the context of the CustomiseHideCommand","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"     * and returns a CustomiseHideCommand object for execution.","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"     * @param args Remaining user input string.","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"     * @return The command based on the user input.","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"    public CustomiseHideCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"PangKuangWei"},"content":"        List\u003cPrefixArgument\u003e argList \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"PangKuangWei"},"content":"                tokenizeToList(args, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE, PREFIX_TAG);","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"PangKuangWei"},"content":"        boolean hasArguments \u003d argList.size() !\u003d 1;","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"        if (!hasArguments || hasNonEmptyArgument(argList)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CustomiseHideCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"PangKuangWei"},"content":"        List\u003cAttribute\u003e attributeList \u003d convertToAttributeList(argList.subList(1, argList.size()));","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"PangKuangWei"},"content":"        if (hasDuplicateAttributes(attributeList)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"PangKuangWei"},"content":"            throw new ParseException(MESSAGE_DUPLICATE_ATTRIBUTE);","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"        return new CustomiseHideCommand(attributeList);","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"PangKuangWei":55}},{"path":"src/main/java/soconnect/logic/parser/customise/CustomiseOrderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package soconnect.logic.parser.customise;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.TAGS;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.MESSAGE_DUPLICATE_ATTRIBUTE;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.ArgumentTokenizer.PrefixArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.ArgumentTokenizer.tokenizeToList;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.customise.CustomiseCommandParser.convertToAttributeList;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.customise.CustomiseCommandParser.hasDuplicateAttributes;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.customise.CustomiseCommandParser.hasNonEmptyArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.commands.customise.CustomiseOrderCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.parser.Parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":" * Parses input arguments and creates a new CustomiseOrderCommand object.","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"public class CustomiseOrderCommandParser implements Parser\u003cCustomiseOrderCommand\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"     * Parses the given String of arguments in the context of the CustomiseOrderCommand","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"     * and returns a CustomiseOrderCommand object for execution.","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"     * @param args Remaining user input string.","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"     * @return The command based on the user input.","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"PangKuangWei"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"PangKuangWei"},"content":"    public CustomiseOrderCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"PangKuangWei"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"        List\u003cPrefixArgument\u003e argList \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"                tokenizeToList(args, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE, PREFIX_TAG);","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"PangKuangWei"},"content":"        boolean hasArguments \u003d argList.size() !\u003d 1;","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"PangKuangWei"},"content":"        if (!hasArguments || hasNonEmptyArgument(argList)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"PangKuangWei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"PangKuangWei"},"content":"                    CustomiseOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"PangKuangWei"},"content":"        List\u003cAttribute\u003e attributeList \u003d convertToAttributeList(argList.subList(1, argList.size()));","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"PangKuangWei"},"content":"        if (hasDuplicateAttributes(attributeList)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"PangKuangWei"},"content":"            throw new ParseException(MESSAGE_DUPLICATE_ATTRIBUTE);","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"PangKuangWei"},"content":"        fillMissingAttributes(attributeList);","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"PangKuangWei"},"content":"        return new CustomiseOrderCommand(attributeList);","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"PangKuangWei"},"content":"     * Fills the missing attributes in default order.","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"PangKuangWei"},"content":"     * @param attributeList The List of attributes.","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"PangKuangWei"},"content":"    private void fillMissingAttributes(List\u003cAttribute\u003e attributeList) {","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"PangKuangWei"},"content":"        if (!attributeList.contains(TAGS)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"PangKuangWei"},"content":"            attributeList.add(TAGS);","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"PangKuangWei"},"content":"        if (!attributeList.contains(PHONE)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"PangKuangWei"},"content":"            attributeList.add(PHONE);","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"PangKuangWei"},"content":"        if (!attributeList.contains(EMAIL)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"PangKuangWei"},"content":"            attributeList.add(EMAIL);","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"PangKuangWei"},"content":"        if (!attributeList.contains(ADDRESS)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"PangKuangWei"},"content":"            attributeList.add(ADDRESS);","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"PangKuangWei":85}},{"path":"src/main/java/soconnect/logic/parser/customise/CustomiseShowCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package soconnect.logic.parser.customise;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.MESSAGE_DUPLICATE_ATTRIBUTE;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.ArgumentTokenizer.PrefixArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.ArgumentTokenizer.tokenizeToList;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.customise.CustomiseCommandParser.convertToAttributeList;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.customise.CustomiseCommandParser.hasDuplicateAttributes;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.customise.CustomiseCommandParser.hasNonEmptyArgument;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.commands.customise.CustomiseShowCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.parser.Parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":" * Parses input arguments and creates a new CustomiseShowCommand object.","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"public class CustomiseShowCommandParser implements Parser\u003cCustomiseShowCommand\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"     * Parses the given String of arguments in the context of the CustomiseShowCommand","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"     * and returns a CustomiseShowCommand object for execution.","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"     * @param args Remaining user input string.","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"     * @return The command based on the user input.","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"    public CustomiseShowCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"PangKuangWei"},"content":"        List\u003cPrefixArgument\u003e argList \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"PangKuangWei"},"content":"                tokenizeToList(args, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE, PREFIX_TAG);","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"PangKuangWei"},"content":"        boolean hasArguments \u003d argList.size() !\u003d 1;","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"        if (!hasArguments || hasNonEmptyArgument(argList)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CustomiseShowCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"PangKuangWei"},"content":"        List\u003cAttribute\u003e attributeList \u003d convertToAttributeList(argList.subList(1, argList.size()));","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"PangKuangWei"},"content":"        if (hasDuplicateAttributes(attributeList)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"PangKuangWei"},"content":"            throw new ParseException(MESSAGE_DUPLICATE_ATTRIBUTE);","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"        return new CustomiseShowCommand(attributeList);","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"PangKuangWei":55}},{"path":"src/main/java/soconnect/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser.exceptions;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Ugholaf":2,"-":15}},{"path":"src/main/java/soconnect/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import java.util.TreeSet;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.todo.Todo;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"     * {@code Predicate} that always evaluate to true.","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"     * {@code Predicate} that always evaluate to false.","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_NO_PERSON \u003d unused -\u003e false;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * {@code Predicate} that always evaluate to true.","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    Predicate\u003cTodo\u003e PREDICATE_SHOW_ALL_TODOS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Returns the user prefs.","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"     * Returns the user prefs\u0027 attribute order in GUI settings.","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"PangKuangWei"},"content":"    String getAttributeOrder();","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"PangKuangWei"},"content":"     * Returns the user prefs\u0027 hidden attributes in GUI settings.","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"PangKuangWei"},"content":"    String getHiddenAttributes();","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"Ugholaf"},"content":"     * Returns the user prefs\u0027 SoConnect file path.","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"Ugholaf"},"content":"    Path getSoConnectFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"Ugholaf"},"content":"     * Sets the user prefs\u0027 SoConnect file path.","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"Ugholaf"},"content":"    void setSoConnectFilePath(Path soConnectFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Returns the user prefs\u0027 TodoList file path.","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    Path getTodoListFilePath();","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Sets the user prefs\u0027 TodoList file path.","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void setTodoListFilePath(Path todoListFilePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"Ugholaf"},"content":"     * Returns the SoConnect.","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"Ugholaf"},"content":"    ReadOnlySoConnect getSoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"Ugholaf"},"content":"     * Replaces SoConnect data with the data in {@code soConnect}.","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"Ugholaf"},"content":"    void setSoConnect(ReadOnlySoConnect soConnect);","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"Ugholaf"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"Ugholaf"},"content":"     * The person must exist in the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"Ugholaf"},"content":"     * {@code person} must not already exist in the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":111,"author":{"gitId":"Ugholaf"},"content":"     * {@code target} must exist in the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"Ugholaf"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"Ugholaf"},"content":"     * Sorts the SoConnect by name in alphabetical order.","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"Ugholaf"},"content":"     * @param isReverse Whether the sorting should be in reverse order.","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void sortByName(Boolean isReverse);","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"Ugholaf"},"content":"     * Sorts the SoConnect by phone number in increasing order.","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"Ugholaf"},"content":"     * @param isReverse Whether the sorting should be in reverse order.","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void sortByPhone(Boolean isReverse);","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"Ugholaf"},"content":"     * Sorts the SoConnect by email in alphabetical order.","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"Ugholaf"},"content":"     * @param isReverse Whether the sorting should be in reverse order.","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void sortByEmail(Boolean isReverse);","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"Ugholaf"},"content":"     * Sorts the SoConnect by address in alphabetical order.","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"Ugholaf"},"content":"     * @param isReverse Whether the sorting should be in reverse order.","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":142,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void sortByAddress(Boolean isReverse);","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":144,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":145,"author":{"gitId":"Ugholaf"},"content":"     * Sorts the SoConnect by a tag.","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Contacts with the tag appear before those without the tag.","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"Ugholaf"},"content":"     * @param tag       The tag to sort with.","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"Ugholaf"},"content":"     * @param isReverse Whether the sorting should be in reverse order.","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":151,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void sortByTag(Tag tag, Boolean isReverse);","lastModifiedDate":"2022-10-05"},{"lineNumber":152,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":153,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"Ugholaf"},"content":"     * Returns a set of unique {@code Name} in the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"Ugholaf"},"content":"    TreeSet\u003cString\u003e getUniqueNames();","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Returns the TodoList.","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    ReadOnlyTodoList getTodoList();","lastModifiedDate":"2022-10-16"},{"lineNumber":162,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Replaces TodoList data with the data in {@code todoList}.","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void setTodoList(ReadOnlyTodoList todoList);","lastModifiedDate":"2022-10-16"},{"lineNumber":167,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":168,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Returns true if a Todo identical to {@code todo} exists in the TodoList.","lastModifiedDate":"2022-10-16"},{"lineNumber":170,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    boolean hasTodo(Todo todo);","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Deletes the given Todo.","lastModifiedDate":"2022-10-16"},{"lineNumber":175,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * The Todo must exist in the TodoList.","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":177,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void deleteTodo(Todo target);","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":179,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":180,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Adds the given Todo.","lastModifiedDate":"2022-10-16"},{"lineNumber":181,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * {@code todo} must not already exist in the TodoList.","lastModifiedDate":"2022-10-16"},{"lineNumber":182,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":183,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void addTodo(Todo todo);","lastModifiedDate":"2022-10-16"},{"lineNumber":184,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":185,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":186,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Replaces the given Todo {@code target} with {@code editedTodo}.","lastModifiedDate":"2022-10-16"},{"lineNumber":187,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * {@code target} must exist in the TodoList.","lastModifiedDate":"2022-10-16"},{"lineNumber":188,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * {@code editedTodo} must not be the same as another existing Todo in the TodoList.","lastModifiedDate":"2022-10-16"},{"lineNumber":189,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":190,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void setTodo(Todo target, Todo editedTodo);","lastModifiedDate":"2022-10-16"},{"lineNumber":191,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":192,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":193,"author":{"gitId":"Ugholaf"},"content":"     * Returns an unmodifiable view of the filtered person list.","lastModifiedDate":"2022-10-14"},{"lineNumber":194,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":197,"author":{"gitId":"florentianayuwono"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":198,"author":{"gitId":"florentianayuwono"},"content":"     * Returns true if the filtered person list is empty.","lastModifiedDate":"2022-10-16"},{"lineNumber":199,"author":{"gitId":"florentianayuwono"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":200,"author":{"gitId":"florentianayuwono"},"content":"    Boolean isFilteredPersonListEmpty();","lastModifiedDate":"2022-10-16"},{"lineNumber":201,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":204,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":208,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":209,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":210,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Returns an unmodifiable view of the filtered todo list.","lastModifiedDate":"2022-10-16"},{"lineNumber":211,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":212,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    ObservableList\u003cTodo\u003e getFilteredTodoList();","lastModifiedDate":"2022-10-16"},{"lineNumber":213,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":214,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":215,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Updates the filter of the filtered todo list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-16"},{"lineNumber":216,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":217,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-16"},{"lineNumber":218,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":219,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void updateFilteredTodoList(Predicate\u003cTodo\u003e predicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":220,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":221,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":222,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Returns true if tag exists.","lastModifiedDate":"2022-10-02"},{"lineNumber":223,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":224,"author":{"gitId":"Ugholaf"},"content":"     * @param tag The tag to be checked if it exists.","lastModifiedDate":"2022-10-13"},{"lineNumber":225,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * @return True if tag exists. False if otherwise.","lastModifiedDate":"2022-10-02"},{"lineNumber":226,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":227,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    boolean hasTag(Tag tag);","lastModifiedDate":"2022-10-02"},{"lineNumber":228,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":229,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":230,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Adds a tag.","lastModifiedDate":"2022-10-05"},{"lineNumber":231,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":232,"author":{"gitId":"Ugholaf"},"content":"     * @param tag The tag to be added.","lastModifiedDate":"2022-10-13"},{"lineNumber":233,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":234,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    void addTag(Tag tag);","lastModifiedDate":"2022-10-02"},{"lineNumber":235,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":236,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":237,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Changes the oldTag to the newTag.","lastModifiedDate":"2022-10-05"},{"lineNumber":238,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":239,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * @param oldTag The tag to be changed","lastModifiedDate":"2022-10-07"},{"lineNumber":240,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * @param newTag The tag to be changed into","lastModifiedDate":"2022-10-07"},{"lineNumber":241,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":242,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    void editTag(Tag oldTag, Tag newTag);","lastModifiedDate":"2022-10-03"},{"lineNumber":243,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Ugholaf":40,"Eugene-Ong-W-X":93,"ChongCheeKaiClarence":27,"florentianayuwono":5,"PangKuangWei":15,"-":64}},{"path":"src/main/java/soconnect/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import java.util.TreeSet;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.todo.Todo;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":" * Represents the in-memory model of the SoConnect data.","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"    private final SoConnect soConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private final TodoList todoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private final FilteredList\u003cTodo\u003e filteredTodos;","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    private final ObservableList\u003cTag\u003e tags;","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Initializes a ModelManager with the given soConnect, todoList, and userPrefs.","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public ModelManager(ReadOnlySoConnect soConnect, ReadOnlyTodoList todoList, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        requireAllNonNull(soConnect, todoList, userPrefs);","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        logger.fine(\"Initializing with SoConnect: \" + soConnect + \", TodoList: \" + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"Ugholaf"},"content":"        this.soConnect \u003d new SoConnect(soConnect);","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        this.todoList \u003d new TodoList(todoList);","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"Ugholaf"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.soConnect.getPersonList());","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        filteredTodos \u003d new FilteredList\u003c\u003e(this.todoList.getTodoList());","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"Ugholaf"},"content":"        this.tags \u003d this.soConnect.getTagList();","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        this(new SoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return userPrefs;","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"PangKuangWei"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"PangKuangWei"},"content":"    public String getAttributeOrder() {","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"PangKuangWei"},"content":"        return userPrefs.getAttributeOrder();","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"PangKuangWei"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"PangKuangWei"},"content":"    public String getHiddenAttributes() {","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"PangKuangWei"},"content":"        return userPrefs.getHiddenAttributes();","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"Ugholaf"},"content":"    public Path getSoConnectFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"Ugholaf"},"content":"        return userPrefs.getSoConnectFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"Ugholaf"},"content":"    public void setSoConnectFilePath(Path soConnectFilePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"Ugholaf"},"content":"        requireNonNull(soConnectFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"Ugholaf"},"content":"        userPrefs.setSoConnectFilePath(soConnectFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public Path getTodoListFilePath() {","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return userPrefs.getTodoListFilePath();","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void setTodoListFilePath(Path todoListFilePath) {","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        requireNonNull(todoListFilePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        userPrefs.setTodoListFilePath(todoListFilePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"Ugholaf"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SoConnect \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"Ugholaf"},"content":"    public ReadOnlySoConnect getSoConnect() {","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"Ugholaf"},"content":"        return soConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"Ugholaf"},"content":"    public void setSoConnect(ReadOnlySoConnect soConnect) {","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"Ugholaf"},"content":"        this.soConnect.resetData(soConnect);","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"Ugholaf"},"content":"        return soConnect.hasPerson(person);","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":128,"author":{"gitId":"Ugholaf"},"content":"        soConnect.removePerson(target);","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":133,"author":{"gitId":"Ugholaf"},"content":"        soConnect.addPerson(person);","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":141,"author":{"gitId":"Ugholaf"},"content":"        soConnect.setPerson(target, editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":144,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":145,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public boolean hasTag(Tag tag) {","lastModifiedDate":"2022-10-02"},{"lineNumber":146,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        requireNonNull(tag);","lastModifiedDate":"2022-10-02"},{"lineNumber":147,"author":{"gitId":"Ugholaf"},"content":"        return soConnect.hasTag(tag);","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":149,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":150,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":151,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void addTag(Tag tag) {","lastModifiedDate":"2022-10-02"},{"lineNumber":152,"author":{"gitId":"Ugholaf"},"content":"        soConnect.addTag(tag);","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":154,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":155,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":156,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void editTag(Tag oldTag, Tag newTag) {","lastModifiedDate":"2022-10-03"},{"lineNumber":157,"author":{"gitId":"Ugholaf"},"content":"        soConnect.editTag(oldTag, newTag);","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":159,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":160,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":161,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void sortByName(Boolean isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"Ugholaf"},"content":"        soConnect.sortByName(isReverse);","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":164,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":166,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void sortByPhone(Boolean isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":167,"author":{"gitId":"Ugholaf"},"content":"        soConnect.sortByPhone(isReverse);","lastModifiedDate":"2022-10-13"},{"lineNumber":168,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void sortByEmail(Boolean isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":172,"author":{"gitId":"Ugholaf"},"content":"        soConnect.sortByEmail(isReverse);","lastModifiedDate":"2022-10-13"},{"lineNumber":173,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void sortByAddress(Boolean isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"Ugholaf"},"content":"        soConnect.sortByAddress(isReverse);","lastModifiedDate":"2022-10-13"},{"lineNumber":178,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":180,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":181,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void sortByTag(Tag tag, Boolean isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":182,"author":{"gitId":"Ugholaf"},"content":"        soConnect.sortByTag(tag, isReverse);","lastModifiedDate":"2022-10-13"},{"lineNumber":183,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":184,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":186,"author":{"gitId":"Ugholaf"},"content":"    public TreeSet\u003cString\u003e getUniqueNames() {","lastModifiedDate":"2022-10-05"},{"lineNumber":187,"author":{"gitId":"Ugholaf"},"content":"        return soConnect.getUniqueNames();","lastModifiedDate":"2022-10-13"},{"lineNumber":188,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":189,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":190,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TodoList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":191,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":192,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":193,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public ReadOnlyTodoList getTodoList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":194,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return todoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":195,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":196,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":197,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":198,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void setTodoList(ReadOnlyTodoList todoList) {","lastModifiedDate":"2022-10-16"},{"lineNumber":199,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        this.todoList.resetData(todoList);","lastModifiedDate":"2022-10-16"},{"lineNumber":200,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":201,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":202,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":203,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public boolean hasTodo(Todo todo) {","lastModifiedDate":"2022-10-16"},{"lineNumber":204,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        requireNonNull(todo);","lastModifiedDate":"2022-10-16"},{"lineNumber":205,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return todoList.hasTodo(todo);","lastModifiedDate":"2022-10-16"},{"lineNumber":206,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":207,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":208,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":209,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void deleteTodo(Todo target) {","lastModifiedDate":"2022-10-16"},{"lineNumber":210,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        todoList.removeTodo(target);","lastModifiedDate":"2022-10-16"},{"lineNumber":211,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":212,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":213,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":214,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void addTodo(Todo todo) {","lastModifiedDate":"2022-10-16"},{"lineNumber":215,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        todoList.addTodo(todo);","lastModifiedDate":"2022-10-16"},{"lineNumber":216,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        updateFilteredTodoList(PREDICATE_SHOW_ALL_TODOS);","lastModifiedDate":"2022-10-16"},{"lineNumber":217,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":218,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":219,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":220,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void setTodo(Todo target, Todo editedTodo) {","lastModifiedDate":"2022-10-16"},{"lineNumber":221,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        requireAllNonNull(target, editedTodo);","lastModifiedDate":"2022-10-16"},{"lineNumber":222,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":223,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        todoList.setTodo(target, editedTodo);","lastModifiedDate":"2022-10-16"},{"lineNumber":224,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":225,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":230,"author":{"gitId":"Ugholaf"},"content":"     * {@code versionedSoConnect}.","lastModifiedDate":"2022-10-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":237,"author":{"gitId":"florentianayuwono"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":238,"author":{"gitId":"florentianayuwono"},"content":"    public Boolean isFilteredPersonListEmpty() {","lastModifiedDate":"2022-10-16"},{"lineNumber":239,"author":{"gitId":"florentianayuwono"},"content":"        return filteredPersons.size() \u003d\u003d 0;","lastModifiedDate":"2022-10-16"},{"lineNumber":240,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":241,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":248,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered TodoList Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":249,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":250,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":251,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2022-10-16"},{"lineNumber":252,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * {@code versionedTodoList}.","lastModifiedDate":"2022-10-16"},{"lineNumber":253,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":254,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":255,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public ObservableList\u003cTodo\u003e getFilteredTodoList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":256,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return filteredTodos;","lastModifiedDate":"2022-10-16"},{"lineNumber":257,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":258,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":259,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":260,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void updateFilteredTodoList(Predicate\u003cTodo\u003e predicate) {","lastModifiedDate":"2022-10-16"},{"lineNumber":261,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":262,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        filteredTodos.setPredicate(predicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":263,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":264,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":279,"author":{"gitId":"Ugholaf"},"content":"        return soConnect.equals(other.soConnect)","lastModifiedDate":"2022-10-13"},{"lineNumber":280,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                \u0026\u0026 todoList.equals(other.todoList)","lastModifiedDate":"2022-10-16"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":282,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-10-16"},{"lineNumber":283,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                \u0026\u0026 filteredTodos.equals(other.filteredTodos);","lastModifiedDate":"2022-10-16"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ugholaf":41,"Eugene-Ong-W-X":102,"ChongCheeKaiClarence":14,"florentianayuwono":5,"PangKuangWei":10,"-":114}},{"path":"src/main/java/soconnect/model/ReadOnlySoConnect.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":" * Unmodifiable view of an SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"public interface ReadOnlySoConnect {","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Returns an unmodifiable view of the tags list.","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * This list will not contain any duplicate tags.","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    ObservableList\u003cTag\u003e getTagList();","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ugholaf":5,"ChongCheeKaiClarence":6,"-":13}},{"path":"src/main/java/soconnect/model/ReadOnlyTodoList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugene-Ong-W-X"},"content":"package soconnect.model;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.todo.Todo;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Eugene-Ong-W-X"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Eugene-Ong-W-X"},"content":" * Unmodifiable view of a todo list.","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Eugene-Ong-W-X"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Eugene-Ong-W-X"},"content":"public interface ReadOnlyTodoList {","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Returns an unmodifiable view of the todo list.","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * This list will not contain any duplicate todos.","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    ObservableList\u003cTodo\u003e getTodoList();","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Eugene-Ong-W-X"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Eugene-Ong-W-X":16}},{"path":"src/main/java/soconnect/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"    Path getSoConnectFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    Path getTodoListFilePath();","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Ugholaf":3,"Eugene-Ong-W-X":1,"-":14}},{"path":"src/main/java/soconnect/model/SoConnect.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import java.util.TreeSet;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.UniquePersonList;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.UniqueTagList;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":" * Wraps all data at the SoConnect level.","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":" * Duplicate person is not allowed (by .isSamePerson comparison).","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"public class SoConnect implements ReadOnlySoConnect {","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    private final UniqueTagList tags;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        tags \u003d new UniqueTagList();","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"    public SoConnect() {}","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"     * Creates an SoConnect using the Persons in the {@code toBeCopied}.","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"Ugholaf"},"content":"    public SoConnect(ReadOnlySoConnect toBeCopied) {","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Replaces the contents of the tag list with {@code tags}.","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * {@code tags} must not contain duplicate tags.","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void setTags(List\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        this.tags.setTags(tags);","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"Ugholaf"},"content":"     * Resets the existing data of this {@code SoConnect} with {@code newData}.","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"Ugholaf"},"content":"    public void resetData(ReadOnlySoConnect newData) {","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":69,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        setTags(newData.getTagList());","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /// sorting operations","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"Ugholaf"},"content":"     * Sorts the SoConnect by name in alphabetical order.","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"Ugholaf"},"content":"     * @param isReverse Whether the sorting should be in reverse order.","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void sortByName(Boolean isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        persons.sortByName(isReverse);","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"Ugholaf"},"content":"     * Sorts the SoConnect by phone number in increasing order.","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"Ugholaf"},"content":"     * @param isReverse Whether the sorting should be in reverse order.","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void sortByPhone(Boolean isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        persons.sortByPhone(isReverse);","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"Ugholaf"},"content":"     * Sorts the SoConnect by email in alphabetical order.","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"Ugholaf"},"content":"     * @param isReverse Whether the sorting should be in reverse order.","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void sortByEmail(Boolean isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        persons.sortByEmail(isReverse);","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"Ugholaf"},"content":"     * Sorts the SoConnect by address in alphabetical order.","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"Ugholaf"},"content":"     * @param isReverse Whether the sorting should be in reverse order.","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void sortByAddress(Boolean isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        persons.sortByAddress(isReverse);","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"Ugholaf"},"content":"     * Sorts the SoConnect by a tag.","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Contacts with the tag appear before those without the tag.","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"Ugholaf"},"content":"     * @param tag       The tag to sort with.","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"Ugholaf"},"content":"     * @param isReverse Whether the sorting should be in reverse order.","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void sortByTag(Tag tag, Boolean isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        persons.sortByTag(tag, isReverse);","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"Ugholaf"},"content":"    public TreeSet\u003cString\u003e getUniqueNames() {","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"Ugholaf"},"content":"        return persons.getUniqueNames();","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"Ugholaf"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"Ugholaf"},"content":"     * Adds a person to the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"Ugholaf"},"content":"     * The person must not already exist in the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"Ugholaf"},"content":"     * {@code target} must exist in the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"Ugholaf"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"Ugholaf"},"content":"     * Removes {@code key} from this {@code SoConnect}.","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"Ugholaf"},"content":"     * {@code key} must exist in the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    //// tag-level operations","lastModifiedDate":"2022-10-02"},{"lineNumber":163,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":164,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":165,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Returns true if tag already does exists.","lastModifiedDate":"2022-10-02"},{"lineNumber":166,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":167,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * @param tag The tag added.","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * @return True if tag exists. False if otherwise.","lastModifiedDate":"2022-10-02"},{"lineNumber":169,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":170,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public boolean hasTag(Tag tag) {","lastModifiedDate":"2022-10-02"},{"lineNumber":171,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        requireNonNull(tag);","lastModifiedDate":"2022-10-02"},{"lineNumber":172,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        return tags.hasTag(tag);","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":174,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":175,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Adds the tag to the tagList.","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":178,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * @param tag The tag to be added","lastModifiedDate":"2022-10-07"},{"lineNumber":179,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":180,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void addTag(Tag tag) {","lastModifiedDate":"2022-10-02"},{"lineNumber":181,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        tags.addTagToList(tag);","lastModifiedDate":"2022-10-03"},{"lineNumber":182,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":183,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":184,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":185,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Changes the original tag to the new tag.","lastModifiedDate":"2022-10-05"},{"lineNumber":186,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":187,"author":{"gitId":"Ugholaf"},"content":"     * @param oldTag The original tag.","lastModifiedDate":"2022-10-13"},{"lineNumber":188,"author":{"gitId":"Ugholaf"},"content":"     * @param newTag The new tag to replace the original tag.","lastModifiedDate":"2022-10-13"},{"lineNumber":189,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":190,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void editTag(Tag oldTag, Tag newTag) {","lastModifiedDate":"2022-10-03"},{"lineNumber":191,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        tags.editTag(oldTag, newTag);","lastModifiedDate":"2022-10-03"},{"lineNumber":192,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        persons.changeRelevantPersonTag(oldTag, newTag);","lastModifiedDate":"2022-10-05"},{"lineNumber":193,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":207,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":208,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public ObservableList\u003cTag\u003e getTagList() {","lastModifiedDate":"2022-10-03"},{"lineNumber":209,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        return tags.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-03"},{"lineNumber":210,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":211,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":215,"author":{"gitId":"Ugholaf"},"content":"                || (other instanceof SoConnect // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":216,"author":{"gitId":"Ugholaf"},"content":"                \u0026\u0026 persons.equals(((SoConnect) other).persons));","lastModifiedDate":"2022-10-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ugholaf":41,"Eugene-Ong-W-X":38,"ChongCheeKaiClarence":47,"-":97}},{"path":"src/main/java/soconnect/model/TodoList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugene-Ong-W-X"},"content":"package soconnect.model;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import static soconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.todo.Todo;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.todo.UniqueTodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Eugene-Ong-W-X"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Eugene-Ong-W-X"},"content":" * Wraps all data at the TodoList level.","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Eugene-Ong-W-X"},"content":" * Duplicate todo is not allowed (using .equals comparison).","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Eugene-Ong-W-X"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Eugene-Ong-W-X"},"content":"public class TodoList implements ReadOnlyTodoList {","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private final UniqueTodoList todos;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /*","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *   among constructors.","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    {","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        todos \u003d new UniqueTodoList();","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public TodoList() {}","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Creates an TodoList using the Todos in the {@code toBeCopied}.","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public TodoList(ReadOnlyTodoList toBeCopied) {","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        this();","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Replaces the contents of the todo list with {@code todos}.","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * {@code todos} must not contain duplicate todos.","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void setTodos(List\u003cTodo\u003e todos) {","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        this.todos.setTodos(todos);","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Resets the existing data of this {@code SoConnect} with {@code newData}.","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void resetData(ReadOnlyTodoList newData) {","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        setTodos(newData.getTodoList());","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    //// todo-level operations","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Returns true if a todo identical to {@code todo} exists in the TodoList.","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public boolean hasTodo(Todo todo) {","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        requireNonNull(todo);","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return todos.contains(todo);","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Adds a todo to the TodoList.","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * The todo must not already exist in the TodoList.","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void addTodo(Todo todo) {","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        todos.add(todo);","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Replaces the given todo {@code target} in the list with {@code editedTodo}.","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * {@code target} must exist in the TodoList.","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * {@code editedTodo} must not already exist in the TodoList.","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void setTodo(Todo target, Todo editedTodo) {","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        requireAllNonNull(target, editedTodo);","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        todos.setTodo(target, editedTodo);","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Removes {@code key} from this {@code TodoList}.","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * {@code key} must exist in the TodoList.","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void removeTodo(Todo key) {","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        todos.remove(key);","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    //// util methods","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public String toString() {","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return todos.asUnmodifiableObservableList().size() + \" todos\";","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public ObservableList\u003cTodo\u003e getTodoList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return todos.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            || (other instanceof TodoList // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            \u0026\u0026 todos.equals(((TodoList) other).todos));","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return todos.hashCode();","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"Eugene-Ong-W-X"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Eugene-Ong-W-X":120}},{"path":"src/main/java/soconnect/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"    private Path soConnectFilePath \u003d Paths.get(\"data\" , \"soconnect.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private Path todoListFilePath \u003d Paths.get(\"data\" , \"todolist.json\");","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"Ugholaf"},"content":"        setSoConnectFilePath(newUserPrefs.getSoConnectFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        setTodoListFilePath(newUserPrefs.getTodoListFilePath());","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"PangKuangWei"},"content":"    public String getAttributeOrder() {","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"        return guiSettings.getAttributeOrder();","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"PangKuangWei"},"content":"    public String getHiddenAttributes() {","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"PangKuangWei"},"content":"        return guiSettings.getHiddenAttributes();","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"Ugholaf"},"content":"    public Path getSoConnectFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"Ugholaf"},"content":"        return soConnectFilePath;","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"Ugholaf"},"content":"    public void setSoConnectFilePath(Path soConnectFilePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"Ugholaf"},"content":"        requireNonNull(soConnectFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"Ugholaf"},"content":"        this.soConnectFilePath \u003d soConnectFilePath;","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public Path getTodoListFilePath() {","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return todoListFilePath;","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void setTodoListFilePath(Path todoListFilePath) {","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        requireNonNull(todoListFilePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        this.todoListFilePath \u003d todoListFilePath;","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"Ugholaf"},"content":"                \u0026\u0026 soConnectFilePath.equals(o.soConnectFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"Ugholaf"},"content":"        return Objects.hash(guiSettings, soConnectFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"Ugholaf"},"content":"        sb.append(\"\\nLocal data file location : \" + soConnectFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ugholaf":12,"Eugene-Ong-W-X":9,"PangKuangWei":6,"-":79}},{"path":"src/main/java/soconnect/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model.person;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":" * Represents a Person\u0027s address in the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}.","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Compares this Address to another Address.","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @param other The other Address object","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @return      -1 if this object is lesser, 0 if they are equal, 1 otherwise","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public int compareTo(Address other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return value.compareToIgnoreCase(other.value);","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ugholaf":5,"Eugene-Ong-W-X":10,"-":53}},{"path":"src/main/java/soconnect/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model.person;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":" * Represents a Person\u0027s email in the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}.","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Compares this Email to another Email.","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"Ugholaf"},"content":"     * @param other The other Email object.","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"Ugholaf"},"content":"     * @return      -1 if this object is lesser, 0 if they are equal, 1 otherwise.","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public int compareTo(Email other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return value.compareToIgnoreCase(other.value);","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ugholaf":6,"Eugene-Ong-W-X":8,"-":67}},{"path":"src/main/java/soconnect/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model.person;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":" * Represents a Person\u0027s name in the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}.","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Compares this Name to another Name.","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @param other The other Name object","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @return      -1 if this object is lesser, 0 if they are equal, 1 otherwise","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public int compareTo(Name other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return fullName.compareToIgnoreCase(other.fullName);","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ugholaf":4,"Eugene-Ong-W-X":10,"-":55}},{"path":"src/main/java/soconnect/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model.person;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.util.StringUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Ugholaf":2,"-":29}},{"path":"src/main/java/soconnect/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model.person;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":" * Represents a Person in the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ugholaf":4,"-":119}},{"path":"src/main/java/soconnect/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model.person;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":" * Represents a Person\u0027s phone number in the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}.","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Compares this Phone to another Phone.","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Ugholaf"},"content":"     * @param other The other Phone object.","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"Ugholaf"},"content":"     * @return      Negative integer if this object is lesser, 0 if they are equal, positive integer otherwise.","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public int compareTo(Phone other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return Integer.parseInt(value) - Integer.parseInt(other.value);","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ugholaf":6,"Eugene-Ong-W-X":8,"-":49}},{"path":"src/main/java/soconnect/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model.person;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import java.util.TreeSet;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"Eugene-Ong-W-X"},"content":" * persons uses Person#isSamePerson(Person) for equality to ensure that the person being added or updated is","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"Eugene-Ong-W-X"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) to","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"Eugene-Ong-W-X"},"content":" * ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-07"},{"lineNumber":94,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":95,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"Ugholaf"},"content":"        CollectionUtil.requireAllNonNull(persons);","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Updates the tag in every contact.","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":112,"author":{"gitId":"Ugholaf"},"content":"     * @param oldTag The old tag to be changed.","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"Ugholaf"},"content":"     * @param newTag The new tag that is changed into.","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void changeRelevantPersonTag(Tag oldTag, Tag newTag) {","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            Person oldPerson \u003d internalList.get(i);","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e(oldPerson.getTags());","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            if (!personTags.contains(oldTag)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":120,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            } else {","lastModifiedDate":"2022-10-07"},{"lineNumber":121,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                int index \u003d personTags.indexOf(oldTag);","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                personTags.set(index, newTag);","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                Person newPerson \u003d new Person(oldPerson.getName(),","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                        oldPerson.getPhone(),","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                        oldPerson.getEmail(),","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                        oldPerson.getAddress(),","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                        newTags);","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                internalList.set(i, newPerson);","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Sorts the list by name, alphabetically.","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"Ugholaf"},"content":"     * Sorts the SoConnect by name in alphabetical order.","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"Ugholaf"},"content":"     * @param isReverse Whether the sorting should be in reverse order.","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void sortByName(Boolean isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        SortedList\u003cPerson\u003e sorted;","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        if (!isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            sorted \u003d internalList.sorted((curr, next) -\u003e curr.getName().compareTo(next.getName()));","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        } else {","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            sorted \u003d internalList.sorted((curr, next) -\u003e -1 * (curr.getName().compareTo(next.getName())));","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        internalList.setAll(sorted);","lastModifiedDate":"2022-10-03"},{"lineNumber":148,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":149,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":150,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":151,"author":{"gitId":"Ugholaf"},"content":"     * Sorts the SoConnect by phone number in increasing order.","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"Ugholaf"},"content":"     * @param isReverse Whether the sorting should be in reverse order.","lastModifiedDate":"2022-10-14"},{"lineNumber":154,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void sortByPhone(Boolean isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        SortedList\u003cPerson\u003e sorted;","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        if (!isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            sorted \u003d internalList.sorted((curr, next) -\u003e curr.getPhone().compareTo(next.getPhone()));","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        } else {","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            sorted \u003d internalList.sorted((curr, next) -\u003e -1 * (curr.getPhone().compareTo(next.getPhone())));","lastModifiedDate":"2022-10-05"},{"lineNumber":161,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        internalList.setAll(sorted);","lastModifiedDate":"2022-10-03"},{"lineNumber":163,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":164,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":166,"author":{"gitId":"Ugholaf"},"content":"     * Sorts the SoConnect by email in alphabetical order.","lastModifiedDate":"2022-10-13"},{"lineNumber":167,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"Ugholaf"},"content":"     * @param isReverse Whether the sorting should be in reverse order.","lastModifiedDate":"2022-10-14"},{"lineNumber":169,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void sortByEmail(Boolean isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        SortedList\u003cPerson\u003e sorted;","lastModifiedDate":"2022-10-05"},{"lineNumber":172,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        if (!isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            sorted \u003d internalList.sorted((curr, next) -\u003e curr.getEmail().compareTo(next.getEmail()));","lastModifiedDate":"2022-10-05"},{"lineNumber":174,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        } else {","lastModifiedDate":"2022-10-05"},{"lineNumber":175,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            sorted \u003d internalList.sorted((curr, next) -\u003e -1 * (curr.getEmail().compareTo(next.getEmail())));","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        internalList.setAll(sorted);","lastModifiedDate":"2022-10-03"},{"lineNumber":178,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":180,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":181,"author":{"gitId":"Ugholaf"},"content":"     * Sorts the SoConnect by address in alphabetical order.","lastModifiedDate":"2022-10-13"},{"lineNumber":182,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":183,"author":{"gitId":"Ugholaf"},"content":"     * @param isReverse Whether the sorting should be in reverse order.","lastModifiedDate":"2022-10-14"},{"lineNumber":184,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void sortByAddress(Boolean isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":186,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        SortedList\u003cPerson\u003e sorted;","lastModifiedDate":"2022-10-05"},{"lineNumber":187,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        if (!isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":188,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            sorted \u003d internalList.sorted((curr, next) -\u003e curr.getAddress().compareTo(next.getAddress()));","lastModifiedDate":"2022-10-05"},{"lineNumber":189,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        } else {","lastModifiedDate":"2022-10-05"},{"lineNumber":190,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            sorted \u003d internalList.sorted((curr, next) -\u003e -1 * (curr.getAddress().compareTo(next.getAddress())));","lastModifiedDate":"2022-10-05"},{"lineNumber":191,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":192,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        internalList.setAll(sorted);","lastModifiedDate":"2022-10-03"},{"lineNumber":193,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":195,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":196,"author":{"gitId":"Ugholaf"},"content":"     * Sorts the SoConnect by a tag.","lastModifiedDate":"2022-10-13"},{"lineNumber":197,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Contacts with the tag appear before those without the tag.","lastModifiedDate":"2022-10-05"},{"lineNumber":198,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":199,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @param tag       The tag to sort with","lastModifiedDate":"2022-10-05"},{"lineNumber":200,"author":{"gitId":"Ugholaf"},"content":"     * @param isReverse Whether the sorting should be in reverse order.","lastModifiedDate":"2022-10-14"},{"lineNumber":201,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":202,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void sortByTag(Tag tag, Boolean isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":203,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        SortedList\u003cPerson\u003e sorted;","lastModifiedDate":"2022-10-05"},{"lineNumber":204,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        int flipIfReversed \u003d isReverse ? -1 : 1;","lastModifiedDate":"2022-10-05"},{"lineNumber":205,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":206,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sorted \u003d internalList.sorted((curr, next) -\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":207,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            boolean currContains \u003d curr.getTags().contains(tag);","lastModifiedDate":"2022-10-05"},{"lineNumber":208,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            boolean nextContains \u003d next.getTags().contains(tag);","lastModifiedDate":"2022-10-05"},{"lineNumber":209,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            if (currContains \u0026\u0026 !nextContains) {","lastModifiedDate":"2022-10-05"},{"lineNumber":210,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                return -1 * flipIfReversed;","lastModifiedDate":"2022-10-05"},{"lineNumber":211,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            } else if (!currContains \u0026\u0026 nextContains) {","lastModifiedDate":"2022-10-05"},{"lineNumber":212,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                return 1 * flipIfReversed;","lastModifiedDate":"2022-10-05"},{"lineNumber":213,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            } else {","lastModifiedDate":"2022-10-05"},{"lineNumber":214,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                return 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":215,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":216,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        });","lastModifiedDate":"2022-10-05"},{"lineNumber":217,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        internalList.setAll(sorted);","lastModifiedDate":"2022-10-05"},{"lineNumber":218,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":219,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":220,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":221,"author":{"gitId":"Ugholaf"},"content":"     * Returns a set of unique {@code Name} in the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":222,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":223,"author":{"gitId":"Ugholaf"},"content":"     * @return A set of unique {@code Name}.","lastModifiedDate":"2022-10-14"},{"lineNumber":224,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":225,"author":{"gitId":"Ugholaf"},"content":"    public TreeSet\u003cString\u003e getUniqueNames() {","lastModifiedDate":"2022-10-05"},{"lineNumber":226,"author":{"gitId":"Ugholaf"},"content":"        TreeSet\u003cString\u003e uniqueNames \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":227,"author":{"gitId":"Ugholaf"},"content":"        uniqueNames.addAll(internalList.stream().map(person -\u003e person.getName().fullName).collect(Collectors.toList()));","lastModifiedDate":"2022-10-05"},{"lineNumber":228,"author":{"gitId":"Ugholaf"},"content":"        return uniqueNames;","lastModifiedDate":"2022-10-05"},{"lineNumber":229,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":230,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ugholaf":33,"Eugene-Ong-W-X":80,"ChongCheeKaiClarence":31,"-":124}},{"path":"src/main/java/soconnect/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model.person.exceptions;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Ugholaf":1,"-":10}},{"path":"src/main/java/soconnect/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model.person.exceptions;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"Ugholaf":1,"-":5}},{"path":"src/main/java/soconnect/model/person/search/ContactContainsAllKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"florentianayuwono"},"content":"package soconnect.model.person.search;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"florentianayuwono"},"content":"import static soconnect.model.person.search.SearchPrefix.SearchPrefixCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"florentianayuwono"},"content":"import static soconnect.model.person.search.SearchPrefix.convertPrefixToEnumType;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"florentianayuwono"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"florentianayuwono"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.commons.util.StringUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.logic.parser.Prefix;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"florentianayuwono"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"florentianayuwono"},"content":" * Tests that a {@code Person}\u0027s information matches the keyword given.","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"florentianayuwono"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"florentianayuwono"},"content":"public class ContactContainsAllKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"florentianayuwono"},"content":"    private final ArgumentMultimap argMultimap;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"florentianayuwono"},"content":"    private boolean isNameContained \u003d true;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"florentianayuwono"},"content":"    private boolean isAddressContained \u003d true;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"florentianayuwono"},"content":"    private boolean isEmailContained \u003d true;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"florentianayuwono"},"content":"    private boolean isPhoneContained \u003d true;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"florentianayuwono"},"content":"    private boolean isTagContained \u003d true;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"florentianayuwono"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"florentianayuwono"},"content":"     * Constructs the {@code ContactContainsAllKeywordsPredicate} object.","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"florentianayuwono"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"florentianayuwono"},"content":"    public ContactContainsAllKeywordsPredicate(ArgumentMultimap argMultimap) {","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"florentianayuwono"},"content":"        this.argMultimap \u003d argMultimap;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"florentianayuwono"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"florentianayuwono"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"florentianayuwono"},"content":"        for (Prefix prefix : argMultimap.getAllPrefixes()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"florentianayuwono"},"content":"            SearchPrefixCommand prefixCommand \u003d convertPrefixToEnumType(prefix);","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"florentianayuwono"},"content":"            List\u003cString\u003e keywords \u003d argMultimap.getAllValues(prefix);","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"florentianayuwono"},"content":"            switch (prefixCommand) {","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"florentianayuwono"},"content":"            case NAME:","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"florentianayuwono"},"content":"                isNameContained \u003d keywords.stream()","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"florentianayuwono"},"content":"                        .allMatch(keyword -\u003e StringUtil.containsKeywordsIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"florentianayuwono"},"content":"                break;","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"florentianayuwono"},"content":"            case ADDRESS:","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"florentianayuwono"},"content":"                isAddressContained \u003d keywords.stream()","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"florentianayuwono"},"content":"                        .allMatch(keyword -\u003e StringUtil.containsKeywordsIgnoreCase(person.getAddress().value, keyword));","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"florentianayuwono"},"content":"                break;","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"florentianayuwono"},"content":"            case EMAIL:","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"florentianayuwono"},"content":"                isEmailContained \u003d keywords.stream()","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"florentianayuwono"},"content":"                        .allMatch(keyword -\u003e StringUtil.containsKeywordsIgnoreCase(person.getEmail().value, keyword));","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"florentianayuwono"},"content":"                break;","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"florentianayuwono"},"content":"            case PHONE:","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"florentianayuwono"},"content":"                isPhoneContained \u003d keywords.stream()","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"florentianayuwono"},"content":"                        .allMatch(keyword -\u003e StringUtil.containsKeywordsIgnoreCase(person.getPhone().value, keyword));","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"florentianayuwono"},"content":"                break;","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"florentianayuwono"},"content":"            case TAG:","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"florentianayuwono"},"content":"                isTagContained \u003d keywords.stream()","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"florentianayuwono"},"content":"                        .allMatch(keyword -\u003e person.getTags().stream()","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"florentianayuwono"},"content":"                                .anyMatch(tag -\u003e StringUtil.containsKeywordsIgnoreCase(tag.tagName, keyword)));","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"florentianayuwono"},"content":"                break;","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"florentianayuwono"},"content":"            default:","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"florentianayuwono"},"content":"                break;","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"florentianayuwono"},"content":"            }","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"florentianayuwono"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"florentianayuwono"},"content":"        return isNameContained \u0026\u0026 isAddressContained \u0026\u0026 isEmailContained \u0026\u0026 isPhoneContained \u0026\u0026 isTagContained;","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"florentianayuwono"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"florentianayuwono"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"florentianayuwono"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"florentianayuwono"},"content":"                || (other instanceof ContactContainsAllKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"florentianayuwono"},"content":"                // state check","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"florentianayuwono"},"content":"                \u0026\u0026 argMultimap.equals(((ContactContainsAllKeywordsPredicate) other).argMultimap));","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"florentianayuwono"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"florentianayuwono":73}},{"path":"src/main/java/soconnect/model/person/search/ContactContainsAnyKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"florentianayuwono"},"content":"package soconnect.model.person.search;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"florentianayuwono"},"content":"import static soconnect.model.person.search.SearchPrefix.SearchPrefixCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"florentianayuwono"},"content":"import static soconnect.model.person.search.SearchPrefix.convertPrefixToEnumType;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"florentianayuwono"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"florentianayuwono"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.commons.util.StringUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.logic.parser.Prefix;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"florentianayuwono"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"florentianayuwono"},"content":" * Tests that a {@code Person}\u0027s information matches the keyword given.","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"florentianayuwono"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"florentianayuwono"},"content":"public class ContactContainsAnyKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"florentianayuwono"},"content":"    private final ArgumentMultimap argMultimap;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"florentianayuwono"},"content":"    private boolean isNameContained \u003d false;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"florentianayuwono"},"content":"    private boolean isAddressContained \u003d false;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"florentianayuwono"},"content":"    private boolean isEmailContained \u003d false;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"florentianayuwono"},"content":"    private boolean isPhoneContained \u003d false;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"florentianayuwono"},"content":"    private boolean isTagContained \u003d false;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"florentianayuwono"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"florentianayuwono"},"content":"     * Constructs the {@code ContactContainsAnyKeywordsPredicate} object.","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"florentianayuwono"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"florentianayuwono"},"content":"    public ContactContainsAnyKeywordsPredicate(ArgumentMultimap argMultimap) {","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"florentianayuwono"},"content":"        this.argMultimap \u003d argMultimap;","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"florentianayuwono"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"florentianayuwono"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"florentianayuwono"},"content":"        for (Prefix prefix : argMultimap.getAllPrefixes()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"florentianayuwono"},"content":"            SearchPrefixCommand prefixCommand \u003d convertPrefixToEnumType(prefix);","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"florentianayuwono"},"content":"            List\u003cString\u003e keywords \u003d argMultimap.getAllValues(prefix);","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"florentianayuwono"},"content":"            switch (prefixCommand) {","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"florentianayuwono"},"content":"            case NAME:","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"florentianayuwono"},"content":"                isNameContained \u003d keywords.stream()","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"florentianayuwono"},"content":"                        .anyMatch(keyword -\u003e StringUtil.containsKeywordsIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"florentianayuwono"},"content":"                break;","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"florentianayuwono"},"content":"            case ADDRESS:","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"florentianayuwono"},"content":"                isAddressContained \u003d keywords.stream()","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"florentianayuwono"},"content":"                        .anyMatch(keyword -\u003e StringUtil.containsKeywordsIgnoreCase(person.getAddress().value, keyword));","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"florentianayuwono"},"content":"                break;","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"florentianayuwono"},"content":"            case EMAIL:","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"florentianayuwono"},"content":"                isEmailContained \u003d keywords.stream()","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"florentianayuwono"},"content":"                        .anyMatch(keyword -\u003e StringUtil.containsKeywordsIgnoreCase(person.getEmail().value, keyword));","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"florentianayuwono"},"content":"                break;","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"florentianayuwono"},"content":"            case PHONE:","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"florentianayuwono"},"content":"                isPhoneContained \u003d keywords.stream()","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"florentianayuwono"},"content":"                        .anyMatch(keyword -\u003e StringUtil.containsKeywordsIgnoreCase(person.getPhone().value, keyword));","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"florentianayuwono"},"content":"                break;","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"florentianayuwono"},"content":"            case TAG:","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"florentianayuwono"},"content":"                isTagContained \u003d keywords.stream()","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"florentianayuwono"},"content":"                        .anyMatch(keyword -\u003e person.getTags().stream()","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"florentianayuwono"},"content":"                                .anyMatch(tag -\u003e StringUtil.containsKeywordsIgnoreCase(tag.tagName, keyword)));","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"florentianayuwono"},"content":"                break;","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"florentianayuwono"},"content":"            default:","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"florentianayuwono"},"content":"                break;","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"florentianayuwono"},"content":"            }","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"florentianayuwono"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"florentianayuwono"},"content":"        return isNameContained || isAddressContained || isEmailContained || isPhoneContained || isTagContained;","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"florentianayuwono"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"florentianayuwono"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"florentianayuwono"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"florentianayuwono"},"content":"                || (other instanceof ContactContainsAnyKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"florentianayuwono"},"content":"                // state check","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"florentianayuwono"},"content":"                \u0026\u0026 argMultimap.equals(((ContactContainsAnyKeywordsPredicate) other).argMultimap));","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"florentianayuwono"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"florentianayuwono":74}},{"path":"src/main/java/soconnect/model/person/search/ContactMightBeRelevantPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"florentianayuwono"},"content":"package soconnect.model.person.search;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"florentianayuwono"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"florentianayuwono"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.commons.util.StringUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"florentianayuwono"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"florentianayuwono"},"content":" * Tests that a {@code Person}\u0027s information matches the keyword given.","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"florentianayuwono"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"florentianayuwono"},"content":"public class ContactMightBeRelevantPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"florentianayuwono"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"florentianayuwono"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"florentianayuwono"},"content":"     * Constructs the {@code ContactMightBeRelevantPredicate} object.","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"florentianayuwono"},"content":"     * Tests the person by matching the keywords to all the information field, ignoring prefix groupings.","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"florentianayuwono"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"florentianayuwono"},"content":"    public ContactMightBeRelevantPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"florentianayuwono"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"florentianayuwono"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"florentianayuwono"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"florentianayuwono"},"content":"        boolean isNameContained \u003d keywords.stream()","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"florentianayuwono"},"content":"                .allMatch(keyword -\u003e StringUtil.containsSomeKeywordsIgnoreCase(","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"florentianayuwono"},"content":"                        person.getName().fullName, keyword","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"florentianayuwono"},"content":"                ));","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"florentianayuwono"},"content":"        boolean isAddressContained \u003d keywords.stream()","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"florentianayuwono"},"content":"                .allMatch(keyword -\u003e StringUtil.containsSomeKeywordsIgnoreCase(","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"florentianayuwono"},"content":"                        person.getAddress().value, keyword));","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"florentianayuwono"},"content":"        boolean isEmailContained \u003d keywords.stream()","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"florentianayuwono"},"content":"                .allMatch(keyword -\u003e StringUtil.containsSomeKeywordsIgnoreCase(","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"florentianayuwono"},"content":"                        person.getEmail().value, keyword));","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"florentianayuwono"},"content":"        boolean isPhoneContained \u003d keywords.stream()","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"florentianayuwono"},"content":"                .allMatch(keyword -\u003e StringUtil.containsSomeKeywordsIgnoreCase(","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"florentianayuwono"},"content":"                        person.getPhone().value, keyword));","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"florentianayuwono"},"content":"        boolean isTagContained \u003d keywords.stream()","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"florentianayuwono"},"content":"                .allMatch(keyword -\u003e person.getTags().stream()","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"florentianayuwono"},"content":"                        .anyMatch(tag -\u003e StringUtil.containsSomeKeywordsIgnoreCase(tag.tagName, keyword)));","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"florentianayuwono"},"content":"        return isNameContained || isAddressContained || isEmailContained || isPhoneContained || isTagContained;","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"florentianayuwono"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"florentianayuwono"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"florentianayuwono"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"florentianayuwono"},"content":"                || (other instanceof ContactMightBeRelevantPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"florentianayuwono"},"content":"                // state check","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"florentianayuwono"},"content":"                \u0026\u0026 keywords.equals(((ContactMightBeRelevantPredicate) other).keywords));","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"florentianayuwono"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"florentianayuwono":52}},{"path":"src/main/java/soconnect/model/person/search/SearchPrefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"florentianayuwono"},"content":"package soconnect.model.person.search;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"florentianayuwono"},"content":"import static soconnect.logic.parser.CliSyntax.INDICATOR_ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"florentianayuwono"},"content":"import static soconnect.logic.parser.CliSyntax.INDICATOR_EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"florentianayuwono"},"content":"import static soconnect.logic.parser.CliSyntax.INDICATOR_NAME;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"florentianayuwono"},"content":"import static soconnect.logic.parser.CliSyntax.INDICATOR_PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"florentianayuwono"},"content":"import static soconnect.logic.parser.CliSyntax.INDICATOR_TAG;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.logic.parser.Prefix;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"florentianayuwono"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"florentianayuwono"},"content":" * Translates a {@code Prefix} into the equivalent enum type.","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"florentianayuwono"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"florentianayuwono"},"content":"public class SearchPrefix {","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"florentianayuwono"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"florentianayuwono"},"content":"     * Contains the currently acceptable {@code SearchPrefixCommand}.","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"florentianayuwono"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"florentianayuwono"},"content":"    public enum SearchPrefixCommand {","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"florentianayuwono"},"content":"        NAME,","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"florentianayuwono"},"content":"        ADDRESS,","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"florentianayuwono"},"content":"        EMAIL,","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"florentianayuwono"},"content":"        PHONE,","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"florentianayuwono"},"content":"        TAG,","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"florentianayuwono"},"content":"        NOTPREFIX","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"florentianayuwono"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"florentianayuwono"},"content":"     * Determines the enum type of {@code SearchPrefixCommand} based on the specified {@code Prefix} command.","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"florentianayuwono"},"content":"     * If there is no matching prefix, a default prefix tag is assumed to show relevant search result.","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"florentianayuwono"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"florentianayuwono"},"content":"    public static SearchPrefixCommand convertPrefixToEnumType(Prefix prefix) {","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"florentianayuwono"},"content":"        String prefixInString \u003d prefix.getPrefix();","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"florentianayuwono"},"content":"        switch (prefixInString) {","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"florentianayuwono"},"content":"        case INDICATOR_NAME:","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"florentianayuwono"},"content":"            return SearchPrefixCommand.NAME;","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"florentianayuwono"},"content":"        case INDICATOR_ADDRESS:","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"florentianayuwono"},"content":"            return SearchPrefixCommand.ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"florentianayuwono"},"content":"        case INDICATOR_EMAIL:","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"florentianayuwono"},"content":"            return SearchPrefixCommand.EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"florentianayuwono"},"content":"        case INDICATOR_PHONE:","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"florentianayuwono"},"content":"            return SearchPrefixCommand.PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"florentianayuwono"},"content":"        case INDICATOR_TAG:","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"florentianayuwono"},"content":"            return SearchPrefixCommand.TAG;","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"florentianayuwono"},"content":"        default:","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"florentianayuwono"},"content":"            return SearchPrefixCommand.NOTPREFIX;","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"florentianayuwono"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"florentianayuwono"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"florentianayuwono":49}},{"path":"src/main/java/soconnect/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model.tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":" * Represents a Tag in the SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}.","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ugholaf":4,"-":50}},{"path":"src/main/java/soconnect/model/tag/UniqueTagList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model.tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"ChongCheeKaiClarence"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"ChongCheeKaiClarence"},"content":" * A list of tags.","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"ChongCheeKaiClarence"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"ChongCheeKaiClarence"},"content":"public class UniqueTagList implements Iterable\u003cTag\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    private final ObservableList\u003cTag\u003e tagArrayList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    private final ObservableList\u003cTag\u003e tagUnmodifiableList \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            FXCollections.unmodifiableObservableList(tagArrayList);","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public int size() {","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        return tagArrayList.size();","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void addTagToList(Tag tag) {","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        tagArrayList.add(tag);","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Edits the tag.","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"     * @param oldTag The tag to be changed.","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"     * @param newTag The tag to be changed into.","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void editTag(Tag oldTag, Tag newTag) {","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        requireAllNonNull(oldTag, newTag);","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        int index \u003d tagArrayList.indexOf(oldTag);","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        tagArrayList.set(index, newTag);","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Checks if the tag exists.","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"Ugholaf"},"content":"     * @param tag The tag to be checked.","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"Ugholaf"},"content":"     * @return True if the tag exists. False if otherwise.","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public boolean hasTag(Tag tag) {","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        requireNonNull(tag);","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        for (Tag value : tagArrayList) {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            if (value.equals(tag)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Changes the old tags to a new list of tags.","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"Ugholaf"},"content":"     * @param tags The new list of tags.","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void setTags(List\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        requireAllNonNull(tags);","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        if (!tagsAreUnique(tags)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        tagArrayList.setAll(tags);","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Returns an unmodifiable list of tags.","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * @return The list of unmodifiable tags.","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public ObservableList\u003cTag\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        return tagUnmodifiableList;","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public Iterator\u003cTag\u003e iterator() {","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        return tagArrayList.iterator();","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                || (other instanceof UniqueTagList // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                \u0026\u0026 tagArrayList.equals(((UniqueTagList) other).tagArrayList));","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        return tagArrayList.hashCode();","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     * Returns true if {@code tags} contains only unique tags.","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"ChongCheeKaiClarence"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    private boolean tagsAreUnique(List\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        for (int i \u003d 0; i \u003c tags.size() - 1; i++) {","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            for (int j \u003d i + 1; j \u003c tags.size(); j++) {","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                if (tags.get(i).equals(tags.get(j))) {","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                    return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"ChongCheeKaiClarence"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"Ugholaf":8,"Eugene-Ong-W-X":2,"ChongCheeKaiClarence":101}},{"path":"src/main/java/soconnect/model/todo/Todo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model.todo;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import static soconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"Eugene-Ong-W-X"},"content":" * Represents a Todo in the SoConnect.","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Eugene-Ong-W-X"},"content":" * Guarantees: description is not null and not an empty string.","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"public class Todo {","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private final String description;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Constructs a Todo.","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @param description Must not be null.","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        requireAllNonNull(description);","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"    public String getDescription() {","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return this.description;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"    public String getDatetime() {","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"        return \"Datetime\";","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"    public String getPriority() {","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"        return \"Priority\";","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Returns true if both todos have the same description.","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        if (!(other instanceof Todo)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Todo otherTodo \u003d (Todo) other;","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return otherTodo.getDescription().equals(description);","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return Objects.hash(description);","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public String toString() {","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return description;","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Ugholaf":18,"Eugene-Ong-W-X":45}},{"path":"src/main/java/soconnect/model/todo/UniqueTodoList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugene-Ong-W-X"},"content":"package soconnect.model.todo;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import static soconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.todo.exceptions.DuplicateTodoException;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.todo.exceptions.TodoNotFoundException;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Eugene-Ong-W-X"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Eugene-Ong-W-X"},"content":" * A list of todos that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Eugene-Ong-W-X"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Eugene-Ong-W-X"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Eugene-Ong-W-X"},"content":"public class UniqueTodoList implements Iterable\u003cTodo\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private final ObservableList\u003cTodo\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private final ObservableList\u003cTodo\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Returns true if the list contains an equivalent todo as the given argument.","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public boolean contains(Todo toCheck) {","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Adds a todo to the list.","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * The todo must not already exist in the list.","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void add(Todo toAdd) {","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new DuplicateTodoException();","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Replaces the todo {@code target} in the list with {@code editedTodo}.","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * The new todo must not be the same as an existing todo in the list.","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void setTodo(Todo target, Todo editedTodo) {","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        requireAllNonNull(target, editedTodo);","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new TodoNotFoundException();","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        if (!target.equals(editedTodo) \u0026\u0026 contains(editedTodo)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new DuplicateTodoException();","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        internalList.set(index, editedTodo);","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Removes the equivalent todo from the list.","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * The todo must exist in the list.","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void remove(Todo toRemove) {","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new TodoNotFoundException();","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void setTodos(UniqueTodoList replacement) {","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Replaces the contents of this list with {@code todos}.","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * {@code todos} must not contain duplicate todos.","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void setTodos(List\u003cTodo\u003e todos) {","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        requireAllNonNull(todos);","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        if (!todosAreUnique(todos)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new DuplicateTodoException();","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        internalList.setAll(todos);","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public ObservableList\u003cTodo\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public Iterator\u003cTodo\u003e iterator() {","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            || (other instanceof UniqueTodoList // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            \u0026\u0026 internalList.equals(((UniqueTodoList) other).internalList));","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Returns true if {@code todos} contains only unique todos.","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private boolean todosAreUnique(List\u003cTodo\u003e todos) {","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        for (int i \u003d 0; i \u003c todos.size() - 1; i++) {","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            for (int j \u003d i + 1; j \u003c todos.size(); j++) {","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                if (todos.get(i).equals(todos.get(j))) {","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                    return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                }","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"Eugene-Ong-W-X"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Eugene-Ong-W-X":130}},{"path":"src/main/java/soconnect/model/todo/exceptions/DuplicateTodoException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugene-Ong-W-X"},"content":"package soconnect.model.todo.exceptions;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Eugene-Ong-W-X"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Eugene-Ong-W-X"},"content":" * Signals that the operation will result in duplicate Todos (Todos are considered duplicates if they have the same","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Eugene-Ong-W-X"},"content":" * description).","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Eugene-Ong-W-X"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Eugene-Ong-W-X"},"content":"public class DuplicateTodoException extends RuntimeException {","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public DuplicateTodoException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        super(\"Operation would result in duplicate todos\");","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Eugene-Ong-W-X"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Eugene-Ong-W-X":11}},{"path":"src/main/java/soconnect/model/todo/exceptions/TodoNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugene-Ong-W-X"},"content":"package soconnect.model.todo.exceptions;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Eugene-Ong-W-X"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Eugene-Ong-W-X"},"content":" * Signals that the operation is unable to find the specified todo.","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Eugene-Ong-W-X"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Eugene-Ong-W-X"},"content":"public class TodoNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Eugene-Ong-W-X":6}},{"path":"src/main/java/soconnect/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ReadOnlySoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.ReadOnlyTodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.SoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.TodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":" * Contains utility methods for populating {@code SoConnect} with sample data.","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"Ugholaf"},"content":"    public static ReadOnlySoConnect getSampleSoConnect() {","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"Ugholaf"},"content":"        SoConnect sampleSC \u003d new SoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"Ugholaf"},"content":"            sampleSC.addPerson(samplePerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"Ugholaf"},"content":"        return sampleSC;","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public static ReadOnlyTodoList getSampleTodoList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        TodoList sampleTodoList \u003d new TodoList();","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        /*","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            sampleSC.addPerson(samplePerson);","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"Eugene-Ong-W-X"},"content":"         */","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return sampleTodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Ugholaf":14,"Eugene-Ong-W-X":10,"-":48}},{"path":"src/main/java/soconnect/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"Ugholaf"},"content":"     * @throws IllegalValueException If there were any data constraints violated in the adapted person.","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Ugholaf":9,"-":100}},{"path":"src/main/java/soconnect/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"Ugholaf"},"content":"     * @throws IllegalValueException If there were any data constraints violated in the adapted tag.","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Ugholaf":4,"-":44}},{"path":"src/main/java/soconnect/storage/JsonAdaptedTodo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugene-Ong-W-X"},"content":"package soconnect.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.todo.Todo;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Eugene-Ong-W-X"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Eugene-Ong-W-X"},"content":" * Jackson-friendly version of {@link Todo}.","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Eugene-Ong-W-X"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Eugene-Ong-W-X"},"content":"class JsonAdaptedTodo {","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Todo\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private final String description;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Constructs a {@code JsonAdaptedTodo} with the given details.","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public JsonAdaptedTodo(@JsonProperty(\"description\") String description) {","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Converts a given {@code Todo} into this class for Jackson use.","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public JsonAdaptedTodo(Todo source) {","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        description \u003d source.getDescription();","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Converts this Jackson-friendly adapted todo object into the model\u0027s {@code Todo} object.","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted todo.","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public Todo toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new IllegalValueException(MISSING_FIELD_MESSAGE_FORMAT);","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return new Todo(description);","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"Eugene-Ong-W-X"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Eugene-Ong-W-X":45}},{"path":"src/main/java/soconnect/storage/JsonSerializableSoConnect.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ReadOnlySoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.SoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":" * An Immutable SoConnect that is serializable to JSON format.","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"@JsonRootName(value \u003d \"soconnect\")","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"class JsonSerializableSoConnect {","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static final String MESSAGE_DUPLICATE_TAG \u003d \"Tags list contains duplicate tag(s).\";","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"     * Constructs a {@code JsonSerializableSoConnect} with the given persons.","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"    public JsonSerializableSoConnect(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                                       @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Ugholaf"},"content":"     * Converts a given {@code ReadOnlySoConnect} into this class for Jackson use.","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"Ugholaf"},"content":"     * @param source Future changes to this will not affect the created {@code JsonSerializableSoConnect}.","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"Ugholaf"},"content":"    public JsonSerializableSoConnect(ReadOnlySoConnect source) {","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        tags.addAll(source.getTagList().stream().map(JsonAdaptedTag::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"Ugholaf"},"content":"     * Converts this SoConnect into the model\u0027s {@code SoConnect} object.","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"Ugholaf"},"content":"     * @throws IllegalValueException If there were any data constraints violated.","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Ugholaf"},"content":"    public SoConnect toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"Ugholaf"},"content":"        SoConnect soConnect \u003d new SoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"Ugholaf"},"content":"            if (soConnect.hasPerson(person)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"Ugholaf"},"content":"            soConnect.addPerson(person);","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        for (JsonAdaptedTag jsonAdaptedTag : tags) {","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            Tag tag \u003d jsonAdaptedTag.toModelType();","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"Ugholaf"},"content":"            if (soConnect.hasTag(tag)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TAG);","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"Ugholaf"},"content":"            soConnect.addTag(tag);","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"Ugholaf"},"content":"        return soConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Ugholaf":23,"ChongCheeKaiClarence":10,"-":40}},{"path":"src/main/java/soconnect/storage/JsonSerializableTodoList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugene-Ong-W-X"},"content":"package soconnect.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.ReadOnlyTodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.TodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.todo.Todo;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Eugene-Ong-W-X"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Eugene-Ong-W-X"},"content":" * An Immutable TodoList that is serializable to JSON format.","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Eugene-Ong-W-X"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Eugene-Ong-W-X"},"content":"@JsonRootName(value \u003d \"todolist\")","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"Eugene-Ong-W-X"},"content":"class JsonSerializableTodoList {","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public static final String MESSAGE_DUPLICATE_TODO \u003d \"Todo List contains an identical todo.\";","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private final List\u003cJsonAdaptedTodo\u003e todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Constructs a {@code JsonSerializableTodoList} with the given todos.","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public JsonSerializableTodoList(@JsonProperty(\"todos\") List\u003cJsonAdaptedTodo\u003e todos) {","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        this.todos.addAll(todos);","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Converts a given {@code ReadOnlyTodoList} into this class for Jackson use.","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @param source Future changes to this will not affect the created {@code JsonSerializableTodoList}.","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public JsonSerializableTodoList(ReadOnlyTodoList source) {","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        todos.addAll(source.getTodoList().stream().map(JsonAdaptedTodo::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Converts this todo list into the model\u0027s {@code TodoList} object.","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @throws IllegalValueException If there were any data constraints violated.","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public TodoList toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        TodoList todoList \u003d new TodoList();","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        for (JsonAdaptedTodo jsonAdaptedTodo : todos) {","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            Todo todo \u003d jsonAdaptedTodo.toModelType();","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            if (todoList.hasTodo(todo)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TODO);","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            todoList.addTodo(todo);","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return todoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"Eugene-Ong-W-X"},"content":"}","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Eugene-Ong-W-X":61}},{"path":"src/main/java/soconnect/storage/JsonSoConnectStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.util.FileUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.util.JsonUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ReadOnlySoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":" * A class to access SoConnect data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"public class JsonSoConnectStorage implements SoConnectStorage {","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonSoConnectStorage.class);","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"    private Path filePath;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"    public JsonSoConnectStorage(Path filePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"    public Path getSoConnectFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"        return filePath;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"    public Optional\u003cReadOnlySoConnect\u003e readSoConnect() throws DataConversionException {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"        return readSoConnect(filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"Ugholaf"},"content":"     * Similar to {@link #readSoConnect()}.","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"Ugholaf"},"content":"     * @param filePath Location of the data. Cannot be null.","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"Ugholaf"},"content":"     * @throws DataConversionException If the file is not in the correct format.","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"Ugholaf"},"content":"    public Optional\u003cReadOnlySoConnect\u003e readSoConnect(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"Ugholaf"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"Ugholaf"},"content":"        Optional\u003cJsonSerializableSoConnect\u003e jsonSoConnect \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"Ugholaf"},"content":"                filePath, JsonSerializableSoConnect.class);","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"Ugholaf"},"content":"        if (!jsonSoConnect.isPresent()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"Ugholaf"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"Ugholaf"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"Ugholaf"},"content":"            return Optional.of(jsonSoConnect.get().toModelType());","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"Ugholaf"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"Ugholaf"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"Ugholaf"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"Ugholaf"},"content":"    public void saveSoConnect(ReadOnlySoConnect soConnect) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"Ugholaf"},"content":"        saveSoConnect(soConnect, filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"Ugholaf"},"content":"     * Similar to {@link #saveSoConnect(ReadOnlySoConnect)}.","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"Ugholaf"},"content":"     * @param filePath Location of the data. Cannot be null.","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"Ugholaf"},"content":"    public void saveSoConnect(ReadOnlySoConnect soConnect, Path filePath) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"Ugholaf"},"content":"        requireNonNull(soConnect);","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"Ugholaf"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"Ugholaf"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"Ugholaf"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableSoConnect(soConnect), filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Ugholaf":80}},{"path":"src/main/java/soconnect/storage/JsonTodoListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugene-Ong-W-X"},"content":"package soconnect.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import static soconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.commons.util.FileUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.commons.util.JsonUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.ReadOnlyTodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Eugene-Ong-W-X"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Eugene-Ong-W-X"},"content":" * A class to access TodoList data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"Eugene-Ong-W-X"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Eugene-Ong-W-X"},"content":"public class JsonTodoListStorage implements TodoListStorage {","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTodoListStorage.class);","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private final Path filePath;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public JsonTodoListStorage(Path filePath) {","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public Path getTodoListFilePath() {","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return filePath;","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public Optional\u003cReadOnlyTodoList\u003e readTodoList() throws DataConversionException {","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return readTodoList(filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Similar to {@link #readTodoList()}.","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @param filePath Location of the data. Cannot be null.","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @throws DataConversionException If the file is not in the correct format.","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public Optional\u003cReadOnlyTodoList\u003e readTodoList(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Optional\u003cJsonSerializableTodoList\u003e jsonTodoList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            filePath, JsonSerializableTodoList.class);","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        if (!jsonTodoList.isPresent()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            return Optional.of(jsonTodoList.get().toModelType());","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void saveTodoList(ReadOnlyTodoList todoList) throws IOException {","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        saveTodoList(todoList, filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Similar to {@link #saveTodoList(ReadOnlyTodoList)}.","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @param filePath Location of the data. Cannot be null.","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void saveTodoList(ReadOnlyTodoList todoList, Path filePath) throws IOException {","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        requireAllNonNull(todoList, filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTodoList(todoList), filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"Eugene-Ong-W-X"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Eugene-Ong-W-X":82}},{"path":"src/main/java/soconnect/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.util.JsonUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":" * A class to access UserPrefs stored in the hard disk as a json file.","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"     * Similar to {@link #readUserPrefs()}.","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"     * @param prefsFilePath Location of the data. Cannot be null.","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"     * @throws DataConversionException If the file format is not as expected.","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Ugholaf":10,"-":38}},{"path":"src/main/java/soconnect/storage/SoConnectStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ReadOnlySoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.SoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":" * Represents a storage for {@link SoConnect}.","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"public interface SoConnectStorage {","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"    Path getSoConnectFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"     * Returns SoConnect data as a {@link ReadOnlySoConnect}.","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"     * @throws DataConversionException If the data in storage is not in the expected format.","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"     * @throws IOException If there was any problem when reading from the storage.","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"    Optional\u003cReadOnlySoConnect\u003e readSoConnect() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"     * @see #getSoConnectFilePath()","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"    Optional\u003cReadOnlySoConnect\u003e readSoConnect(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"     * Saves the given {@link ReadOnlySoConnect} to the storage.","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"     * @param soConnect Cannot be null.","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"Ugholaf"},"content":"     * @throws IOException If there was any problem writing to the file.","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"Ugholaf"},"content":"    void saveSoConnect(ReadOnlySoConnect soConnect) throws IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"Ugholaf"},"content":"     * @see #saveSoConnect(ReadOnlySoConnect)","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"Ugholaf"},"content":"    void saveSoConnect(ReadOnlySoConnect soConnect, Path filePath) throws IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Ugholaf":48}},{"path":"src/main/java/soconnect/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ReadOnlySoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.ReadOnlyTodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":" * API of the Storage component.","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Eugene-Ong-W-X"},"content":"public interface Storage extends SoConnectStorage, TodoListStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"    Path getSoConnectFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"    Optional\u003cReadOnlySoConnect\u003e readSoConnect() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"    void saveSoConnect(ReadOnlySoConnect soConnect) throws IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    Path getTodoListFilePath();","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    Optional\u003cReadOnlyTodoList\u003e readTodoList() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void saveTodoList(ReadOnlyTodoList todoList) throws IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Ugholaf":31,"Eugene-Ong-W-X":11}},{"path":"src/main/java/soconnect/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ReadOnlySoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.ReadOnlyTodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Eugene-Ong-W-X"},"content":" * Manages storage of SoConnect contact data in local storage, including data of the todo list.","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private final SoConnectStorage soConnectStorage;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private final TodoListStorage todoListStorage;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Creates a {@code StorageManager} with the given {@code SoConnectStorage}, {@code TodoListStorage},","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * and {@code UserPrefStorage}.","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public StorageManager(SoConnectStorage soConnectStorage, TodoListStorage todoListStorage,","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Eugene-Ong-W-X"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"        this.soConnectStorage \u003d soConnectStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        this.todoListStorage \u003d todoListStorage;","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"Ugholaf"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"Ugholaf"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"Ugholaf"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"Ugholaf"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"Ugholaf"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"Ugholaf"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"Ugholaf"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SoConnect methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"Ugholaf"},"content":"    public Path getSoConnectFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"Ugholaf"},"content":"        return soConnectStorage.getSoConnectFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"Ugholaf"},"content":"    public Optional\u003cReadOnlySoConnect\u003e readSoConnect() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"Ugholaf"},"content":"        return readSoConnect(soConnectStorage.getSoConnectFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"Ugholaf"},"content":"    public Optional\u003cReadOnlySoConnect\u003e readSoConnect(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"Ugholaf"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"Ugholaf"},"content":"        return soConnectStorage.readSoConnect(filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"Ugholaf"},"content":"    public void saveSoConnect(ReadOnlySoConnect soConnect) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"Ugholaf"},"content":"        saveSoConnect(soConnect, soConnectStorage.getSoConnectFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"Ugholaf"},"content":"    public void saveSoConnect(ReadOnlySoConnect soConnect, Path filePath) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"Ugholaf"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"Ugholaf"},"content":"        soConnectStorage.saveSoConnect(soConnect, filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TodoList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public Path getTodoListFilePath() {","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return todoListStorage.getTodoListFilePath();","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public Optional\u003cReadOnlyTodoList\u003e readTodoList() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return readTodoList(todoListStorage.getTodoListFilePath());","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public Optional\u003cReadOnlyTodoList\u003e readTodoList(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        return todoListStorage.readTodoList(filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void saveTodoList(ReadOnlyTodoList todoList) throws IOException {","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        saveTodoList(todoList, todoListStorage.getTodoListFilePath());","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void saveTodoList(ReadOnlyTodoList todoList, Path filePath) throws IOException {","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        todoListStorage.saveTodoList(todoList, filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Ugholaf":72,"Eugene-Ong-W-X":39}},{"path":"src/main/java/soconnect/storage/TodoListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eugene-Ong-W-X"},"content":"package soconnect.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.ReadOnlyTodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Eugene-Ong-W-X"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Eugene-Ong-W-X"},"content":" * Represents a storage for {@link soconnect.model.TodoList}.","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Eugene-Ong-W-X"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Eugene-Ong-W-X"},"content":"public interface TodoListStorage {","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    Path getTodoListFilePath();","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Returns TodoList data as a {@link ReadOnlyTodoList}.","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @throws DataConversionException If the data in storage is not in the expected format.","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @throws IOException If there was any problem when reading from the storage.","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    Optional\u003cReadOnlyTodoList\u003e readTodoList() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @see #readTodoList()","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    Optional\u003cReadOnlyTodoList\u003e readTodoList(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Saves the given {@link ReadOnlyTodoList} to the storage.","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @param todoList Cannot be null.","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @throws IOException If there was any problem writing to the file.","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void saveTodoList(ReadOnlyTodoList todoList) throws IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * @see #saveTodoList(ReadOnlyTodoList)","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void saveTodoList(ReadOnlyTodoList todoList, Path filePath) throws IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"Eugene-Ong-W-X"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Eugene-Ong-W-X":47}},{"path":"src/main/java/soconnect/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"     * @throws DataConversionException If the data in storage is not in the expected format.","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"     * @throws IOException If there was any problem when reading from the storage.","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"     * @param userPrefs Cannot be null.","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"     * @throws IOException If there was any problem writing to the file.","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Ugholaf":38}},{"path":"src/main/java/soconnect/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import java.util.LinkedList;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import javafx.geometry.Side;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import javafx.scene.control.ContextMenu;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import javafx.scene.control.CustomMenuItem;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.Logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.autocomplete.Autocomplete;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.CommandResult;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"    private final Autocomplete autocomplete;","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"Ugholaf"},"content":"    @FXML","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"Ugholaf"},"content":"    private ContextMenu autocompletePopup;","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"Ugholaf"},"content":"    public CommandBox(CommandExecutor commandExecutor, Autocomplete autocompleteManager) {","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"Ugholaf"},"content":"        this.autocomplete \u003d autocompleteManager;","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":51,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"Ugholaf"},"content":"        // set up a listener for autocomplete feature.","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"Ugholaf"},"content":"        setAutocompleteListener();","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":74,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"Ugholaf"},"content":"     * Displays a list of autocomplete entries.","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"Ugholaf"},"content":"     * Solution below adapted from https://stackoverflow.com/questions/36861056/javafx-textfield-auto-suggestions.","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"Ugholaf"},"content":"    private void setAutocompleteListener() {","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"Ugholaf"},"content":"        commandTextField.textProperty().addListener(new ChangeListener\u003cString\u003e() {","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"Ugholaf"},"content":"            @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"Ugholaf"},"content":"            public void changed(ObservableValue\u003c? extends String\u003e observable, String oldValue, String newValue) {","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"Ugholaf"},"content":"                String searchValue \u003d commandTextField.getText();","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"Ugholaf"},"content":"                // Only show autocomplete field for find command.","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"Ugholaf"},"content":"                if (!searchValue.startsWith(autocomplete.AUTOCOMPLETE_COMMAND_WORD)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"Ugholaf"},"content":"                    autocompletePopup.hide();","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"Ugholaf"},"content":"                } else {","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"Ugholaf"},"content":"                    String namePrefix \u003d searchValue.substring(autocomplete.AUTOCOMPLETE_COMMAND_WORD.length());","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"Ugholaf"},"content":"                    // Get the list of names that matches the namePrefix.","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"Ugholaf"},"content":"                    List\u003cString\u003e searchResult \u003d autocomplete.getAutocompleteEntries(namePrefix);","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"Ugholaf"},"content":"                    if (searchResult.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"Ugholaf"},"content":"                        autocompletePopup.hide();","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"Ugholaf"},"content":"                    }","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"Ugholaf"},"content":"                    // Build the autocomplete dropdown menu","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"Ugholaf"},"content":"                    populatePopup(searchResult);","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"Ugholaf"},"content":"                    if (!autocompletePopup.isShowing()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"Ugholaf"},"content":"                        autocompletePopup.show(commandTextField, Side.BOTTOM, 0, 0);","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"Ugholaf"},"content":"                    }","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"Ugholaf"},"content":"                }","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"Ugholaf"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"Ugholaf"},"content":"        });","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"Ugholaf"},"content":"     * Generates a list of autocomplete entries with the given search result.","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"Ugholaf"},"content":"     * Solution below adapted from https://stackoverflow.com/questions/36861056/javafx-textfield-auto-suggestions.","lastModifiedDate":"2022-10-07"},{"lineNumber":108,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"Ugholaf"},"content":"     * @param searchResult The list of matching strings.","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"Ugholaf"},"content":"    private void populatePopup(List\u003cString\u003e searchResult) {","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"Ugholaf"},"content":"        List\u003cCustomMenuItem\u003e menuItems \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"Ugholaf"},"content":"        for (int i \u003d 0; i \u003c searchResult.size(); i++) {","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"Ugholaf"},"content":"            final String result \u003d autocomplete.AUTOCOMPLETE_COMMAND_WORD + searchResult.get(i);","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"Ugholaf"},"content":"            Label entryLabel \u003d new Label(result);","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"Ugholaf"},"content":"            CustomMenuItem item \u003d new CustomMenuItem(entryLabel, true);","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"Ugholaf"},"content":"            // Whenever an item is selected, set text field to the selected text, execute the command and close pop up.","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"Ugholaf"},"content":"            item.setOnAction(new EventHandler\u003cActionEvent\u003e() {","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"Ugholaf"},"content":"                @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"Ugholaf"},"content":"                public void handle(ActionEvent event) {","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"Ugholaf"},"content":"                    commandTextField.setText(result);","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"Ugholaf"},"content":"                    handleCommandEntered();","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"Ugholaf"},"content":"                    autocompletePopup.hide();","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"Ugholaf"},"content":"                }","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"Ugholaf"},"content":"            });","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"Ugholaf"},"content":"            menuItems.add(item);","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"Ugholaf"},"content":"        // Update the autocomplete pop up.","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"Ugholaf"},"content":"        autocompletePopup.getItems().clear();","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"Ugholaf"},"content":"        autocompletePopup.getItems().addAll(menuItems);","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"Ugholaf"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"Ugholaf":88,"-":79}},{"path":"src/main/java/soconnect/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":" * Controller for a help page.","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-w15-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Ugholaf":4,"Eugene-Ong-W-X":1,"-":98}},{"path":"src/main/java/soconnect/ui/MainDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":" * The Ui for displaying both the list of persons and todos.","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"public class MainDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"    private static final String FXML \u003d \"MainDisplay.fxml\";","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MainDisplay.class);","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"    @FXML","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"    private HBox mainDisplay;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"     * Constructs a {@code MainDisplay} with the given {@code PersonListPanel} and {@code TodoListPanel}.","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"    public MainDisplay(PersonListPanel personListPanel, TodoListPanel todoListPanel) {","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"        super(FXML);","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"        HBox.setHgrow(personListPanel.getRoot(), Priority.ALWAYS);","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"        HBox.setHgrow(todoListPanel.getRoot(), Priority.ALWAYS);","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"        mainDisplay.getChildren().addAll(personListPanel.getRoot(), todoListPanel.getRoot());","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"    };","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"            return true;","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"Ugholaf"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"Ugholaf"},"content":"        if (!(other instanceof MainDisplay)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"Ugholaf"},"content":"            return false;","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"Ugholaf"},"content":"        // state check","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"Ugholaf"},"content":"        MainDisplay display \u003d (MainDisplay) other;","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"Ugholaf"},"content":"        return mainDisplay.equals(display.mainDisplay);","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Ugholaf":49}},{"path":"src/main/java/soconnect/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.Logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.CommandResult;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"    private MainDisplay mainDisplay;","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"    private TodoListPanel todoListPanel;","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"Ugholaf"},"content":"    private StackPane mainDisplayPlaceholder;","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"Ugholaf"},"content":"     * @param keyCombination The KeyCombination value of the accelerator.","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"PangKuangWei"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), logic);","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"Ugholaf"},"content":"        todoListPanel \u003d new TodoListPanel(logic.getTodoHeader(), logic.getFilteredTodoList());","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"Ugholaf"},"content":"        mainDisplay \u003d new MainDisplay(personListPanel, todoListPanel);","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"Ugholaf"},"content":"        mainDisplayPlaceholder.getChildren().add(mainDisplay.getRoot());","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"Ugholaf"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getSoConnectFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"Ugholaf"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand, logic.getAutocompleteManager());","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"PangKuangWei"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY(), logic.getAttributeOrder(),","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"PangKuangWei"},"content":"                logic.getHiddenAttributes());","lastModifiedDate":"2022-10-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"Ugholaf"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2022-10-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Ugholaf":18,"PangKuangWei":3,"-":181}},{"path":"src/main/java/soconnect/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.commons.core.GuiSettings.DEFAULT_ORDER;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.NONE;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.NUMBER_OF_CUSTOMISABLE_ATTRIBUTES;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.Logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on SoConnect level 4\u003c/a\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"    private Logic logic;","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"    private FlowPane attributeA;","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"PangKuangWei"},"content":"    private FlowPane attributeB;","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"PangKuangWei"},"content":"    private FlowPane attributeC;","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"PangKuangWei"},"content":"    private FlowPane attributeD;","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"     * Creates a {@code PersonCard} with the given {@code Person} and index to display.","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"PangKuangWei"},"content":"    public PersonCard(Person person, int displayedIndex, Logic logic) {","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"PangKuangWei"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"PangKuangWei"},"content":"        setAttributes();","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"PangKuangWei"},"content":"     * Sets the attributes in the order required.","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"PangKuangWei"},"content":"    private void setAttributes() {","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"PangKuangWei"},"content":"        int[] order \u003d filterAttributes(orderAttributes());","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"PangKuangWei"},"content":"        FlowPane[] flowpanes \u003d new FlowPane[NUMBER_OF_CUSTOMISABLE_ATTRIBUTES + 1];","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"PangKuangWei"},"content":"        flowpanes[order[0]] \u003d attributeA;","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"PangKuangWei"},"content":"        flowpanes[order[1]] \u003d attributeB;","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"PangKuangWei"},"content":"        flowpanes[order[2]] \u003d attributeC;","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"PangKuangWei"},"content":"        flowpanes[order[3]] \u003d attributeD;","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"PangKuangWei"},"content":"        if (flowpanes[0] !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"PangKuangWei"},"content":"            flowpanes[0].getChildren().add(new Label(person.getAddress().value));","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"PangKuangWei"},"content":"            flowpanes[0].getChildren().forEach(label -\u003e label.setStyle(","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"PangKuangWei"},"content":"                    \"-fx-font-size: 12;-fx-font-family: \\\"Segoe UI Semibold\\\";\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"PangKuangWei"},"content":"        if (flowpanes[1] !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"PangKuangWei"},"content":"            flowpanes[1].getChildren().add(new Label(person.getEmail().value));","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"PangKuangWei"},"content":"            flowpanes[1].getChildren().forEach(label -\u003e label.setStyle(","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"PangKuangWei"},"content":"                    \"-fx-font-size: 12;-fx-font-family: \\\"Segoe UI Semibold\\\";\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"PangKuangWei"},"content":"        if (flowpanes[2] !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"PangKuangWei"},"content":"            flowpanes[2].getChildren().add(new Label(person.getPhone().value));","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"PangKuangWei"},"content":"            flowpanes[2].getChildren().forEach(label -\u003e label.setStyle(","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"PangKuangWei"},"content":"                    \"-fx-font-size: 12;-fx-font-family: \\\"Segoe UI Semibold\\\";\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"PangKuangWei"},"content":"        if (flowpanes[3] !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"PangKuangWei"},"content":"            person.getTags().stream()","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"PangKuangWei"},"content":"                    .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"PangKuangWei"},"content":"                    .forEach(tag -\u003e flowpanes[3].getChildren().add((new Label(tag.tagName))));","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"PangKuangWei"},"content":"            flowpanes[3].getChildren().forEach(label -\u003e label.setStyle(\"-fx-background-color: #3e7b91;\"","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"PangKuangWei"},"content":"                    + \"-fx-font-size: 11;-fx-background-radius: 2;\"","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"PangKuangWei"},"content":"                    + \"-fx-border-radius: 2;-fx-padding: 1 3 1 3;\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"PangKuangWei"},"content":"     * Generates the order of the attributes based on the order set by the user.","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"PangKuangWei"},"content":"     * @return The required order.","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"PangKuangWei"},"content":"    private int[] orderAttributes() {","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"PangKuangWei"},"content":"        int[] order \u003d new int[NUMBER_OF_CUSTOMISABLE_ATTRIBUTES];","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"PangKuangWei"},"content":"        String orderStr \u003d logic.getAttributeOrder();","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"PangKuangWei"},"content":"        String[] orderArr \u003d orderStr.trim().split(\"\u003e\");","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"PangKuangWei"},"content":"        if (orderArr.length !\u003d NUMBER_OF_CUSTOMISABLE_ATTRIBUTES) {","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"PangKuangWei"},"content":"            //Returns default order when the orderStr is not in correct format.","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"PangKuangWei"},"content":"            orderStr \u003d DEFAULT_ORDER;","lastModifiedDate":"2022-10-17"},{"lineNumber":113,"author":{"gitId":"PangKuangWei"},"content":"            orderArr \u003d orderStr.trim().split(\"\u003e\");","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"PangKuangWei"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"PangKuangWei"},"content":"            for (int i \u003d 0; i \u003c NUMBER_OF_CUSTOMISABLE_ATTRIBUTES; i++) {","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"PangKuangWei"},"content":"                order[i] \u003d convertToIndex(orderArr[i]);","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"PangKuangWei"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"PangKuangWei"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"PangKuangWei"},"content":"            //Returns default order when the orderStr is not in correct format.","lastModifiedDate":"2022-10-17"},{"lineNumber":122,"author":{"gitId":"PangKuangWei"},"content":"            orderStr \u003d DEFAULT_ORDER;","lastModifiedDate":"2022-10-17"},{"lineNumber":123,"author":{"gitId":"PangKuangWei"},"content":"            orderArr \u003d orderStr.trim().split(\"\u003e\");","lastModifiedDate":"2022-10-17"},{"lineNumber":124,"author":{"gitId":"PangKuangWei"},"content":"            for (int i \u003d 0; i \u003c NUMBER_OF_CUSTOMISABLE_ATTRIBUTES; i++) {","lastModifiedDate":"2022-10-17"},{"lineNumber":125,"author":{"gitId":"PangKuangWei"},"content":"                order[i] \u003d convertToIndex(orderArr[i]);","lastModifiedDate":"2022-10-17"},{"lineNumber":126,"author":{"gitId":"PangKuangWei"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":127,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"PangKuangWei"},"content":"        return order;","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"PangKuangWei"},"content":"     * Filters the attributes based on what attributes were chosen to be hidden by setting the hidden attributes\u0027","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"PangKuangWei"},"content":"     * associated index to the index of the empty last FlowPane element.","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"Ugholaf"},"content":"     * @param order The order that is unfiltered.","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"PangKuangWei"},"content":"     * @return The order with attributes filtered.","lastModifiedDate":"2022-10-16"},{"lineNumber":138,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"PangKuangWei"},"content":"    private int[] filterAttributes(int[] order) {","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"PangKuangWei"},"content":"        boolean[] isHidden \u003d new boolean[NUMBER_OF_CUSTOMISABLE_ATTRIBUTES];","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"PangKuangWei"},"content":"        String currHiddenAttributes \u003d logic.getHiddenAttributes();","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"PangKuangWei"},"content":"        if (!currHiddenAttributes.equals(NONE)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":144,"author":{"gitId":"PangKuangWei"},"content":"            String[] strArr \u003d currHiddenAttributes.trim().split(\",\");","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"PangKuangWei"},"content":"            try {","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"PangKuangWei"},"content":"                readHidden(strArr, isHidden);","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"PangKuangWei"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"PangKuangWei"},"content":"                isHidden \u003d new boolean[NUMBER_OF_CUSTOMISABLE_ATTRIBUTES];","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"PangKuangWei"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":152,"author":{"gitId":"PangKuangWei"},"content":"        for (int i \u003d 0; i \u003c NUMBER_OF_CUSTOMISABLE_ATTRIBUTES; i++) {","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"PangKuangWei"},"content":"            //Sets the element in the array to the index of the empty last FlowPane element.","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"PangKuangWei"},"content":"            order[i] \u003d isHidden[order[i]] ? NUMBER_OF_CUSTOMISABLE_ATTRIBUTES : order[i];","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"PangKuangWei"},"content":"        return order;","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":161,"author":{"gitId":"PangKuangWei"},"content":"     * Reads the string array and sets the array elements to true if attributes are hidden.","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":163,"author":{"gitId":"Ugholaf"},"content":"     * @param strArr An array of string representations of the attributes.","lastModifiedDate":"2022-10-13"},{"lineNumber":164,"author":{"gitId":"Ugholaf"},"content":"     * @param isHidden A boolean array where index 0 represents address, index 1 represents email","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"Ugholaf"},"content":"     *                 index 2 represents phone and index 3 represents tags.","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":167,"author":{"gitId":"PangKuangWei"},"content":"    private void readHidden(String[] strArr, boolean[] isHidden) {","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"PangKuangWei"},"content":"        for (String s : strArr) {","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"PangKuangWei"},"content":"            isHidden[convertToIndex(s)] \u003d true;","lastModifiedDate":"2022-10-05"},{"lineNumber":170,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":172,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"PangKuangWei"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"PangKuangWei"},"content":"     * Converts the given attribute into the index corresponding to the attribute.","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"PangKuangWei"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"Ugholaf"},"content":"     * @param attribute The string representation of the attribute.","lastModifiedDate":"2022-10-13"},{"lineNumber":177,"author":{"gitId":"Ugholaf"},"content":"     * @return An index that corresponds to the attribute.","lastModifiedDate":"2022-10-13"},{"lineNumber":178,"author":{"gitId":"PangKuangWei"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"PangKuangWei"},"content":"    private int convertToIndex(String attribute) {","lastModifiedDate":"2022-10-03"},{"lineNumber":180,"author":{"gitId":"PangKuangWei"},"content":"        switch(attribute) {","lastModifiedDate":"2022-10-03"},{"lineNumber":181,"author":{"gitId":"PangKuangWei"},"content":"        case \"ADDRESS\":","lastModifiedDate":"2022-10-03"},{"lineNumber":182,"author":{"gitId":"PangKuangWei"},"content":"            return 0;","lastModifiedDate":"2022-10-03"},{"lineNumber":183,"author":{"gitId":"PangKuangWei"},"content":"        case \"EMAIL\":","lastModifiedDate":"2022-10-03"},{"lineNumber":184,"author":{"gitId":"PangKuangWei"},"content":"            return 1;","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"PangKuangWei"},"content":"        case \"PHONE\":","lastModifiedDate":"2022-10-03"},{"lineNumber":186,"author":{"gitId":"PangKuangWei"},"content":"            return 2;","lastModifiedDate":"2022-10-03"},{"lineNumber":187,"author":{"gitId":"PangKuangWei"},"content":"        case \"TAGS\":","lastModifiedDate":"2022-10-03"},{"lineNumber":188,"author":{"gitId":"PangKuangWei"},"content":"            return 3;","lastModifiedDate":"2022-10-03"},{"lineNumber":189,"author":{"gitId":"PangKuangWei"},"content":"        default:","lastModifiedDate":"2022-10-03"},{"lineNumber":190,"author":{"gitId":"PangKuangWei"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2022-10-03"},{"lineNumber":191,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":192,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":193,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":194,"author":{"gitId":"PangKuangWei"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":195,"author":{"gitId":"PangKuangWei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":196,"author":{"gitId":"PangKuangWei"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":197,"author":{"gitId":"PangKuangWei"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-16"},{"lineNumber":198,"author":{"gitId":"PangKuangWei"},"content":"            return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":199,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":200,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":201,"author":{"gitId":"PangKuangWei"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":202,"author":{"gitId":"PangKuangWei"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":203,"author":{"gitId":"PangKuangWei"},"content":"            return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":204,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":205,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":206,"author":{"gitId":"PangKuangWei"},"content":"        // state check","lastModifiedDate":"2022-10-16"},{"lineNumber":207,"author":{"gitId":"PangKuangWei"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2022-10-16"},{"lineNumber":208,"author":{"gitId":"PangKuangWei"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-16"},{"lineNumber":209,"author":{"gitId":"PangKuangWei"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2022-10-16"},{"lineNumber":210,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Ugholaf":10,"PangKuangWei":156,"-":45}},{"path":"src/main/java/soconnect/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.Logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"    private Logic logic;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, Logic logic) {","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"PangKuangWei"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1, logic).getRoot());","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Ugholaf":4,"PangKuangWei":4,"-":44}},{"path":"src/main/java/soconnect/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":" * An ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Ugholaf":2,"-":26}},{"path":"src/main/java/soconnect/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":" * An ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ugholaf":2,"-":26}},{"path":"src/main/java/soconnect/ui/TodoCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.todo.Todo;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":" * An UI component that displays information of a {@code Todo}.","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"public class TodoCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"    private static final String FXML \u003d \"TodoListCard.fxml\";","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"    public final Todo todo;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"    @FXML","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"    private HBox todoCardPane;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"    @FXML","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"    private Label id;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"    @FXML","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"    private Label description;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"    @FXML","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"    private Label datetime;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"    @FXML","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"    private FlowPane priority;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"     * Creates a {@code TodoCard} with the given {@code Todo} and index to display.","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"    public TodoCard(Todo todo, int displayedIndex) {","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"        super(FXML);","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"        this.todo \u003d todo;","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"        description.setText(todo.getDescription());","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"        datetime.setText(todo.getDatetime());","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"        priority.getChildren().add(new Label(todo.getPriority()));","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"Ugholaf"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"Ugholaf"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"Ugholaf"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"Ugholaf"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"Ugholaf"},"content":"            return true;","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"Ugholaf"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"Ugholaf"},"content":"        if (!(other instanceof TodoCard)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"Ugholaf"},"content":"            return false;","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"Ugholaf"},"content":"        // state check","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"Ugholaf"},"content":"        TodoCard card \u003d (TodoCard) other;","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"Ugholaf"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"Ugholaf"},"content":"                \u0026\u0026 todo.equals(card.todo);","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Ugholaf":58}},{"path":"src/main/java/soconnect/ui/TodoListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.ui;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.todo.Todo;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":" * Panel containing the list of todos.","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"public class TodoListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"    private static final String FXML \u003d \"TodoListPanel.fxml\";","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TodoListPanel.class);","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"    @FXML","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"    private Label header;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"    @FXML","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"    private ListView\u003cTodo\u003e todoListView;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"     * Creates a {@code TodoListPanel} with the given todoHeader and {@code ObservableList}.","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"    public TodoListPanel(String todoHeader, ObservableList\u003cTodo\u003e todoList) {","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"        super(FXML);","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"        header.setText(todoHeader);","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"        todoListView.setItems(todoList);","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"        todoListView.setCellFactory(listView -\u003e new TodoListViewCell());","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Todo} using {@code TodoCard}.","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"Ugholaf"},"content":"    class TodoListViewCell extends ListCell\u003cTodo\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"Ugholaf"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"Ugholaf"},"content":"        protected void updateItem(Todo todo, boolean empty) {","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"Ugholaf"},"content":"            super.updateItem(todo, empty);","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"Ugholaf"},"content":"            if (empty || todo \u003d\u003d null) {","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"Ugholaf"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"Ugholaf"},"content":"                setText(null);","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"Ugholaf"},"content":"            } else {","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"Ugholaf"},"content":"                setGraphic(new TodoCard(todo, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"Ugholaf"},"content":"            }","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Ugholaf":52}},{"path":"src/main/java/soconnect/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":" * API of UI component.","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"     * Starts the UI (and the App).","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Ugholaf":5,"-":10}},{"path":"src/main/java/soconnect/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.MainApp;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.util.StringUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.Logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/SoConnect_32.png\";","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Ugholaf":6,"-":82}},{"path":"src/main/java/soconnect/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.MainApp;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"     * Resource folder where FXML files are stored.","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"Ugholaf"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Ugholaf":6,"-":85}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"\u003c?import javafx.scene.control.ContextMenu?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"      \u003ccontextMenu\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"         \u003cContextMenu fx:id\u003d\"autocompletePopup\"\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"           \u003citems\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"             \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Unspecified Action\" /\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"           \u003c/items\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"         \u003c/ContextMenu\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"      \u003c/contextMenu\u003e\u003c/TextField\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"Ugholaf":10,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":".label-todo-header {","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"    -fx-font-size: 22pt;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"    -fx-alignment: center;","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"PangKuangWei"},"content":"#attributeA {","lastModifiedDate":"2022-10-03"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"PangKuangWei"},"content":"#attributeB {","lastModifiedDate":"2022-10-03"},{"lineNumber":354,"author":{"gitId":"PangKuangWei"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-10-03"},{"lineNumber":355,"author":{"gitId":"PangKuangWei"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-10-03"},{"lineNumber":356,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-10-03"},{"lineNumber":357,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":358,"author":{"gitId":"PangKuangWei"},"content":"#attributeC {","lastModifiedDate":"2022-10-03"},{"lineNumber":359,"author":{"gitId":"PangKuangWei"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-10-03"},{"lineNumber":360,"author":{"gitId":"PangKuangWei"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-10-03"},{"lineNumber":361,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-10-03"},{"lineNumber":362,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":363,"author":{"gitId":"PangKuangWei"},"content":"#attributeD {","lastModifiedDate":"2022-10-03"},{"lineNumber":364,"author":{"gitId":"PangKuangWei"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-10-03"},{"lineNumber":365,"author":{"gitId":"PangKuangWei"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-10-03"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"Ugholaf":8,"PangKuangWei":14,"-":344}},{"path":"src/main/resources/view/MainDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"\u003cHBox fx:id\u003d\"mainDisplay\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Ugholaf":6}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"         title\u003d\"SoConnect\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"    \u003cImage url\u003d\"@/images/SoConnect_32.png\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"Ugholaf"},"content":"          \u003cStackPane fx:id\u003d\"mainDisplayPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Ugholaf":3,"-":56}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"      \u003cFlowPane fx:id\u003d\"attributeA\" /\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"      \u003cFlowPane fx:id\u003d\"attributeB\" /\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"      \u003cFlowPane fx:id\u003d\"attributeC\" /\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"      \u003cFlowPane fx:id\u003d\"attributeD\" /\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"PangKuangWei":4,"-":32}},{"path":"src/main/resources/view/TodoListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"\u003cHBox id\u003d\"todoCardPane\" fx:id\u003d\"todoCardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"70\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"                \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"                \u003cLabel fx:id\u003d\"datetime\" prefHeight\u003d\"17.0\" prefWidth\u003d\"75.0\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$second\" /\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"                \u003cFlowPane fx:id\u003d\"priority\" prefHeight\u003d\"17.0\" prefWidth\u003d\"75.0\" /\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"Ugholaf"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"Ugholaf"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Ugholaf":40}},{"path":"src/main/resources/view/TodoListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"    \u003cLabel fx:id\u003d\"header\" styleClass\u003d\"label-todo-header\"/\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"    \u003cListView fx:id\u003d\"todoListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Ugholaf":10}},{"path":"src/test/java/soconnect/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Ugholaf":1,"-":57}},{"path":"src/test/java/soconnect/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Ugholaf":1,"-":26}},{"path":"src/test/java/soconnect/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ugholaf":2,"-":133}},{"path":"src/test/java/soconnect/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.core.index;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Ugholaf":2,"-":58}},{"path":"src/test/java/soconnect/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"        assertNotNull(AppUtil.getImage(\"/images/SoConnect_32.png\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Ugholaf":3,"-":33}},{"path":"src/test/java/soconnect/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"Ugholaf":3,"-":105}},{"path":"src/test/java/soconnect/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.Config;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Ugholaf":4,"-":112}},{"path":"src/test/java/soconnect/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ugholaf":2,"-":21}},{"path":"src/test/java/soconnect/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.TestUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ugholaf":3,"-":42}},{"path":"src/test/java/soconnect/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"florentianayuwono"},"content":"    /*","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"florentianayuwono"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"florentianayuwono"},"content":"     *   - any word","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"florentianayuwono"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"florentianayuwono"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"florentianayuwono"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"florentianayuwono"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"florentianayuwono"},"content":"     *   - empty string","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"florentianayuwono"},"content":"     *   - one word","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"florentianayuwono"},"content":"     *   - multiple words","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"florentianayuwono"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"florentianayuwono"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"florentianayuwono"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"florentianayuwono"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"florentianayuwono"},"content":"     *   - last word in sentence","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"florentianayuwono"},"content":"     *   - middle word in sentence","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"florentianayuwono"},"content":"     *   - matches multiple words","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"florentianayuwono"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"florentianayuwono"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"florentianayuwono"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"florentianayuwono"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"florentianayuwono"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"florentianayuwono"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"florentianayuwono"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"florentianayuwono"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"florentianayuwono"},"content":"        // Empty sentence","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"florentianayuwono"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"florentianayuwono"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"florentianayuwono"},"content":"        // Matches a partial word only","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"florentianayuwono"},"content":"        // Sentence word bigger than query word","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"florentianayuwono"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"florentianayuwono"},"content":"        // Query word bigger than sentence word","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"florentianayuwono"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"florentianayuwono"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"florentianayuwono"},"content":"        // First word (boundary case)","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"florentianayuwono"},"content":"        // Last word (boundary case)","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"florentianayuwono"},"content":"        // Sentence has extra spaces","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"florentianayuwono"},"content":"        // Only one word in sentence (boundary case)","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"florentianayuwono"},"content":"        // Leading/trailing spaces","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \"));","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"florentianayuwono"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"florentianayuwono"},"content":"    //---------------- Tests for containsKeywordsIgnoreCase --------------------------------------","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"florentianayuwono"},"content":"    /*","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"florentianayuwono"},"content":"     * Invalid equivalence partitions for word: null, empty","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"florentianayuwono"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"florentianayuwono"},"content":"     * The three test cases below test one invalid input at a time.","lastModifiedDate":"2022-10-16"},{"lineNumber":140,"author":{"gitId":"florentianayuwono"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"florentianayuwono"},"content":"    public void containsKeywordsIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"florentianayuwono"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"florentianayuwono"},"content":"                StringUtil.containsKeywordsIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"florentianayuwono"},"content":"    public void containsKeywordsIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"florentianayuwono"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", () -\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"florentianayuwono"},"content":"                StringUtil.containsKeywordsIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"florentianayuwono"},"content":"    public void containsKeywordsIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"florentianayuwono"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"florentianayuwono"},"content":"                StringUtil.containsKeywordsIgnoreCase(null, \"abc\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"florentianayuwono"},"content":"    /*","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"florentianayuwono"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2022-10-16"},{"lineNumber":162,"author":{"gitId":"florentianayuwono"},"content":"     *   - one word","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"florentianayuwono"},"content":"     *   - multiple words","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"florentianayuwono"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"florentianayuwono"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"florentianayuwono"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":167,"author":{"gitId":"florentianayuwono"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2022-10-16"},{"lineNumber":168,"author":{"gitId":"florentianayuwono"},"content":"     *   - empty string","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"florentianayuwono"},"content":"     *   - one word","lastModifiedDate":"2022-10-16"},{"lineNumber":170,"author":{"gitId":"florentianayuwono"},"content":"     *   - multiple words","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"florentianayuwono"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"florentianayuwono"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"florentianayuwono"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"florentianayuwono"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2022-10-16"},{"lineNumber":175,"author":{"gitId":"florentianayuwono"},"content":"     *   - last word in sentence","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"florentianayuwono"},"content":"     *   - middle word in sentence","lastModifiedDate":"2022-10-16"},{"lineNumber":177,"author":{"gitId":"florentianayuwono"},"content":"     *   - matches multiple words","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"florentianayuwono"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":179,"author":{"gitId":"florentianayuwono"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2022-10-16"},{"lineNumber":180,"author":{"gitId":"florentianayuwono"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2022-10-16"},{"lineNumber":181,"author":{"gitId":"florentianayuwono"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2022-10-16"},{"lineNumber":182,"author":{"gitId":"florentianayuwono"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":183,"author":{"gitId":"florentianayuwono"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2022-10-16"},{"lineNumber":184,"author":{"gitId":"florentianayuwono"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":185,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":186,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":187,"author":{"gitId":"florentianayuwono"},"content":"    public void containsKeywordsIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2022-10-16"},{"lineNumber":188,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":189,"author":{"gitId":"florentianayuwono"},"content":"        // Empty sentence","lastModifiedDate":"2022-10-16"},{"lineNumber":190,"author":{"gitId":"florentianayuwono"},"content":"        assertFalse(StringUtil.containsKeywordsIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2022-10-16"},{"lineNumber":191,"author":{"gitId":"florentianayuwono"},"content":"        assertFalse(StringUtil.containsKeywordsIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":192,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":193,"author":{"gitId":"florentianayuwono"},"content":"        // Matches a partial word only","lastModifiedDate":"2022-10-16"},{"lineNumber":194,"author":{"gitId":"florentianayuwono"},"content":"        // Sentence word bigger than query word","lastModifiedDate":"2022-10-16"},{"lineNumber":195,"author":{"gitId":"florentianayuwono"},"content":"        assertFalse(StringUtil.containsKeywordsIgnoreCase(\"aaa bbb ccc\", \"bb\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":196,"author":{"gitId":"florentianayuwono"},"content":"        // Query word bigger than sentence word","lastModifiedDate":"2022-10-16"},{"lineNumber":197,"author":{"gitId":"florentianayuwono"},"content":"        assertFalse(StringUtil.containsKeywordsIgnoreCase(\"aaa bbb ccc\", \"bbbb\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":198,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":199,"author":{"gitId":"florentianayuwono"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2022-10-16"},{"lineNumber":200,"author":{"gitId":"florentianayuwono"},"content":"        // First word (boundary case)","lastModifiedDate":"2022-10-16"},{"lineNumber":201,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsKeywordsIgnoreCase(\"aaa bBb ccc\", \"Bbb\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":202,"author":{"gitId":"florentianayuwono"},"content":"        // Last word (boundary case)","lastModifiedDate":"2022-10-16"},{"lineNumber":203,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsKeywordsIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":204,"author":{"gitId":"florentianayuwono"},"content":"        // Sentence has extra spaces","lastModifiedDate":"2022-10-16"},{"lineNumber":205,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsKeywordsIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":206,"author":{"gitId":"florentianayuwono"},"content":"        // Only one word in sentence (boundary case)","lastModifiedDate":"2022-10-16"},{"lineNumber":207,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsKeywordsIgnoreCase(\"Aaa\", \"aaa\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":208,"author":{"gitId":"florentianayuwono"},"content":"        // Leading/trailing spaces","lastModifiedDate":"2022-10-16"},{"lineNumber":209,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsKeywordsIgnoreCase(\"aaa bbb ccc\", \"  ccc  \"));","lastModifiedDate":"2022-10-16"},{"lineNumber":210,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":211,"author":{"gitId":"florentianayuwono"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2022-10-16"},{"lineNumber":212,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsKeywordsIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":213,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":214,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":215,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":216,"author":{"gitId":"florentianayuwono"},"content":"    public void containsKeywordsIgnoreCase_singleWord_match() {","lastModifiedDate":"2022-10-11"},{"lineNumber":217,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsKeywordsIgnoreCase(\"John Doe Damian\", \"John\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":218,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":219,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":220,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":221,"author":{"gitId":"florentianayuwono"},"content":"    public void containsKeywordsIgnoreCase_singleWord_doNotMatch() {","lastModifiedDate":"2022-10-11"},{"lineNumber":222,"author":{"gitId":"florentianayuwono"},"content":"        assertFalse(StringUtil.containsKeywordsIgnoreCase(\"John Doe Damian\", \"Rachel\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":223,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":224,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":225,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":226,"author":{"gitId":"florentianayuwono"},"content":"    public void containsKeywordsIgnoreCase_singleWordDifferentOrder_doNotMatch() {","lastModifiedDate":"2022-10-16"},{"lineNumber":227,"author":{"gitId":"florentianayuwono"},"content":"        assertFalse(StringUtil.containsKeywordsIgnoreCase(\"John Doe Damian\", \"Jhon\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":228,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":229,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":230,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":231,"author":{"gitId":"florentianayuwono"},"content":"    public void containsKeywordsIgnoreCase_multipleWordsDifferentCase_match() {","lastModifiedDate":"2022-10-11"},{"lineNumber":232,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsKeywordsIgnoreCase(\"John Doe Damian\", \"john doe\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":233,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":234,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":235,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":236,"author":{"gitId":"florentianayuwono"},"content":"    public void containsKeywordsIgnoreCase_multipleWords_doNotMatch() {","lastModifiedDate":"2022-10-11"},{"lineNumber":237,"author":{"gitId":"florentianayuwono"},"content":"        assertFalse(StringUtil.containsKeywordsIgnoreCase(\"John Doe Damian\", \"John DD\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":238,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":239,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":240,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":241,"author":{"gitId":"florentianayuwono"},"content":"    public void containsKeywordsIgnoreCase_multipleWordsDifferentOrder_match() {","lastModifiedDate":"2022-10-16"},{"lineNumber":242,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsKeywordsIgnoreCase(\"John Doe Damian\", \"Damian doe\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":243,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":244,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":245,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":246,"author":{"gitId":"florentianayuwono"},"content":"    //---------------- Tests for containsSomeKeywordsIgnoreCase --------------------------------------","lastModifiedDate":"2022-10-16"},{"lineNumber":247,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":248,"author":{"gitId":"florentianayuwono"},"content":"    /*","lastModifiedDate":"2022-10-16"},{"lineNumber":249,"author":{"gitId":"florentianayuwono"},"content":"     * Invalid equivalence partitions for word: null, empty","lastModifiedDate":"2022-10-16"},{"lineNumber":250,"author":{"gitId":"florentianayuwono"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2022-10-16"},{"lineNumber":251,"author":{"gitId":"florentianayuwono"},"content":"     * The three test cases below test one invalid input at a time.","lastModifiedDate":"2022-10-16"},{"lineNumber":252,"author":{"gitId":"florentianayuwono"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":253,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":254,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":255,"author":{"gitId":"florentianayuwono"},"content":"    public void containsSomeKeywordsIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":256,"author":{"gitId":"florentianayuwono"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":257,"author":{"gitId":"florentianayuwono"},"content":"                StringUtil.containsSomeKeywordsIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2022-10-16"},{"lineNumber":258,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":259,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":260,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":261,"author":{"gitId":"florentianayuwono"},"content":"    public void containsSomeKeywordsIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":262,"author":{"gitId":"florentianayuwono"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":263,"author":{"gitId":"florentianayuwono"},"content":"                StringUtil.containsSomeKeywordsIgnoreCase(null, \"abc\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":264,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":265,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":268,"author":{"gitId":"florentianayuwono"},"content":"     *   - one word","lastModifiedDate":"2022-10-16"},{"lineNumber":269,"author":{"gitId":"florentianayuwono"},"content":"     *   - multiple words","lastModifiedDate":"2022-10-16"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":271,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":273,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":274,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":275,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":276,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":277,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":278,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":279,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":280,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":282,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":283,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":284,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":285,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":286,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":287,"author":{"gitId":"florentianayuwono"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2022-10-16"},{"lineNumber":288,"author":{"gitId":"florentianayuwono"},"content":"     *   - less than 3/4 of query words matches part of a sentence word","lastModifiedDate":"2022-10-16"},{"lineNumber":289,"author":{"gitId":"florentianayuwono"},"content":"     *   - sentence word matches none of the query word","lastModifiedDate":"2022-10-16"},{"lineNumber":290,"author":{"gitId":"florentianayuwono"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":291,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":292,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":295,"author":{"gitId":"florentianayuwono"},"content":"    public void containsSomeKeywordsIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2022-10-16"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":298,"author":{"gitId":"florentianayuwono"},"content":"        assertFalse(StringUtil.containsSomeKeywordsIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2022-10-16"},{"lineNumber":299,"author":{"gitId":"florentianayuwono"},"content":"        assertFalse(StringUtil.containsSomeKeywordsIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":302,"author":{"gitId":"florentianayuwono"},"content":"        // Sentence word bigger than query word","lastModifiedDate":"2022-10-16"},{"lineNumber":303,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsSomeKeywordsIgnoreCase(\"aaa bbb ccc\", \"bb\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":304,"author":{"gitId":"florentianayuwono"},"content":"        // Query word bigger than sentence word","lastModifiedDate":"2022-10-16"},{"lineNumber":305,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsSomeKeywordsIgnoreCase(\"aaa bbb ccc\", \"bbbb\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":308,"author":{"gitId":"florentianayuwono"},"content":"        // First word (boundary case)","lastModifiedDate":"2022-10-16"},{"lineNumber":309,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsSomeKeywordsIgnoreCase(\"aaa bBb ccc\", \"Bbb\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":310,"author":{"gitId":"florentianayuwono"},"content":"        // Last word (boundary case)","lastModifiedDate":"2022-10-16"},{"lineNumber":311,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsSomeKeywordsIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":312,"author":{"gitId":"florentianayuwono"},"content":"        // Sentence has extra spaces","lastModifiedDate":"2022-10-16"},{"lineNumber":313,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsSomeKeywordsIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":314,"author":{"gitId":"florentianayuwono"},"content":"        // Only one word in sentence (boundary case)","lastModifiedDate":"2022-10-16"},{"lineNumber":315,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsSomeKeywordsIgnoreCase(\"Aaa\", \"aaa\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":316,"author":{"gitId":"florentianayuwono"},"content":"        // Leading/trailing spaces","lastModifiedDate":"2022-10-16"},{"lineNumber":317,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsSomeKeywordsIgnoreCase(\"aaa bbb ccc\", \"  ccc  \"));","lastModifiedDate":"2022-10-16"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":320,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsSomeKeywordsIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":321,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":322,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":323,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":324,"author":{"gitId":"florentianayuwono"},"content":"    public void containsSomeKeywordsIgnoreCase_singleWord_match() {","lastModifiedDate":"2022-10-16"},{"lineNumber":325,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsSomeKeywordsIgnoreCase(\"John Doe Damian\", \"John\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":328,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":329,"author":{"gitId":"florentianayuwono"},"content":"    public void containsSomeKeywordsIgnoreCase_singleWord_doNotMatch() {","lastModifiedDate":"2022-10-16"},{"lineNumber":330,"author":{"gitId":"florentianayuwono"},"content":"        assertFalse(StringUtil.containsSomeKeywordsIgnoreCase(\"John Doe Damian\", \"Rachel\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":331,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":332,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":333,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":334,"author":{"gitId":"florentianayuwono"},"content":"    public void containsSomeKeywordsIgnoreCase_singleWordDifferentOrder_match() {","lastModifiedDate":"2022-10-16"},{"lineNumber":335,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsSomeKeywordsIgnoreCase(\"John Doe Damian\", \"Jhon\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":336,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":337,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":338,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":339,"author":{"gitId":"florentianayuwono"},"content":"    public void containsSomeKeywordsIgnoreCase_multipleWordsDifferentCase_match() {","lastModifiedDate":"2022-10-16"},{"lineNumber":340,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsSomeKeywordsIgnoreCase(\"John Doe Damian\", \"john doe\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":341,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":342,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":343,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":344,"author":{"gitId":"florentianayuwono"},"content":"    public void containsSomeKeywordsIgnoreCase_multipleWordsPartiallySame_match() {","lastModifiedDate":"2022-10-16"},{"lineNumber":345,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsSomeKeywordsIgnoreCase(\"John Doe Damian\", \"John DD\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":346,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsSomeKeywordsIgnoreCase(\"John Doe Damian\", \"Johm Damyan\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":347,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":348,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":349,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":350,"author":{"gitId":"florentianayuwono"},"content":"    public void containsSomeKeywordsIgnoreCase_multipleWordsDifferentOrder_match() {","lastModifiedDate":"2022-10-16"},{"lineNumber":351,"author":{"gitId":"florentianayuwono"},"content":"        assertTrue(StringUtil.containsSomeKeywordsIgnoreCase(\"John Doe Damian\", \"Damian doe\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":352,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":353,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":354,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":364,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":372,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Ugholaf":2,"florentianayuwono":243,"-":127}},{"path":"src/test/java/soconnect/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import org.junit.jupiter.api.Disabled;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.AddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.CommandResult;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.ListCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ReadOnlySoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.ReadOnlyTodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.TodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"import soconnect.storage.JsonSoConnectStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.storage.JsonTodoListStorage;","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"import soconnect.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"import soconnect.storage.StorageManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"Ugholaf"},"content":"        JsonSoConnectStorage soConnectStorage \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"Ugholaf"},"content":"                new JsonSoConnectStorage(temporaryFolder.resolve(\"soConnect.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        JsonTodoListStorage todoListStorage \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            new JsonTodoListStorage(temporaryFolder.resolve(\"todoList.json\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":56,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        StorageManager storage \u003d new StorageManager(soConnectStorage, todoListStorage, userPrefsStorage);","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Disabled","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"Ugholaf"},"content":"        // Setup LogicManager with JsonSoConnectIoExceptionThrowingStub","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"Ugholaf"},"content":"        JsonSoConnectStorage soConnectStorage \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"Ugholaf"},"content":"                new JsonSoConnectIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionSoConnect.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        JsonTodoListStorage todoListStorage \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            new JsonToDoListStorageIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionTodoList.json\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":88,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        StorageManager storage \u003d new StorageManager(soConnectStorage, todoListStorage, userPrefsStorage);","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2022-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        expectedModel.addTag(new Tag(\"friend\"));","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Model expectedModel \u003d new ModelManager(model.getSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2022-10-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"Ugholaf"},"content":"    private static class JsonSoConnectIoExceptionThrowingStub extends JsonSoConnectStorage {","lastModifiedDate":"2022-10-13"},{"lineNumber":164,"author":{"gitId":"Ugholaf"},"content":"        private JsonSoConnectIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"Ugholaf"},"content":"        public void saveSoConnect(ReadOnlySoConnect soConnect, Path filePath) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":175,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":177,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private static class JsonToDoListStorageIoExceptionThrowingStub extends JsonTodoListStorage {","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        private JsonToDoListStorageIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-16"},{"lineNumber":179,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            super(filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":180,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":181,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":182,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":183,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void saveTodoList(ReadOnlyTodoList todoList, Path filePath) throws IOException {","lastModifiedDate":"2022-10-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-10-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Ugholaf":32,"Eugene-Ong-W-X":22,"ChongCheeKaiClarence":4,"-":129}},{"path":"src/test/java/soconnect/logic/autocomplete/AutocompleteManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.autocomplete;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import java.util.TreeSet;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.UniquePersonList;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"public class AutocompleteManagerTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"    private UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"    private AutocompleteManager autocompleteManager \u003d new AutocompleteManager(uniquePersonList.getUniqueNames());","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"    public void updateUniqueNames_addedNewPerson_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"        autocompleteManager.updateUniqueNames(uniquePersonList.getUniqueNames());","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"        AutocompleteManager expectedAutocompleteManager \u003d new AutocompleteManager(uniquePersonList.getUniqueNames());","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"        assertEquals(expectedAutocompleteManager, autocompleteManager);","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"    public void getAutocompleteEntries_withMatchingSearchValue_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"        String searchValue \u003d \"A\";","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"        TreeSet\u003cString\u003e uniqueNames \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"        uniqueNames.addAll(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"        autocompleteManager.updateUniqueNames(uniqueNames);","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"        List\u003cString\u003e searchResult \u003d autocompleteManager.getAutocompleteEntries(searchValue);","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Ugholaf"},"content":"        List\u003cString\u003e expectedSearchResult \u003d Arrays.asList(\"Alice\");","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"Ugholaf"},"content":"        assertEquals(expectedSearchResult, searchResult);","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Ugholaf"},"content":"    public void getAutocompleteEntries_withMultipleMatchingSearchValueInSortedOrder_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Ugholaf"},"content":"        String searchValue \u003d \"A\";","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Ugholaf"},"content":"        TreeSet\u003cString\u003e uniqueNames \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Ugholaf"},"content":"        uniqueNames.addAll(Arrays.asList(\"Alice\", \"Alvin\", \"Alex\", \"Bob\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Ugholaf"},"content":"        autocompleteManager.updateUniqueNames(uniqueNames);","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Ugholaf"},"content":"        List\u003cString\u003e searchResult \u003d autocompleteManager.getAutocompleteEntries(searchValue);","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Ugholaf"},"content":"        List\u003cString\u003e expectedSearchResult \u003d Arrays.asList(\"Alex\", \"Alice\", \"Alvin\");","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Ugholaf"},"content":"        assertEquals(expectedSearchResult, searchResult);","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"Ugholaf"},"content":"    public void getAutocompleteEntries_withCaseInsensitiveMatchingSearchValue_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"Ugholaf"},"content":"        String searchValue \u003d \"AL\";","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"Ugholaf"},"content":"        TreeSet\u003cString\u003e uniqueNames \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"Ugholaf"},"content":"        uniqueNames.addAll(Arrays.asList(\"Alice\", \"aLvin\", \"alex\", \"Bob\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"Ugholaf"},"content":"        autocompleteManager.updateUniqueNames(uniqueNames);","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"Ugholaf"},"content":"        List\u003cString\u003e searchResult \u003d autocompleteManager.getAutocompleteEntries(searchValue);","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"Ugholaf"},"content":"        List\u003cString\u003e expectedSearchResult \u003d Arrays.asList(\"Alice\", \"aLvin\", \"alex\");","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"Ugholaf"},"content":"        assertEquals(expectedSearchResult, searchResult);","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"Ugholaf"},"content":"    public void getAutocompleteEntries_withNoMatchingSearchValue_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"Ugholaf"},"content":"        String searchValue \u003d \"A\";","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"Ugholaf"},"content":"        TreeSet\u003cString\u003e uniqueNames \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"Ugholaf"},"content":"        uniqueNames.addAll(Arrays.asList(\"Bob\", \"Carl\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"Ugholaf"},"content":"        autocompleteManager.updateUniqueNames(uniqueNames);","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"Ugholaf"},"content":"        List\u003cString\u003e searchResult \u003d autocompleteManager.getAutocompleteEntries(searchValue);","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"Ugholaf"},"content":"        List\u003cString\u003e expectedSearchResult \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"Ugholaf"},"content":"        assertEquals(expectedSearchResult, searchResult);","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"Ugholaf"},"content":"    public void getAutocompleteEntries_withEmptySearchValue_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"Ugholaf"},"content":"        String searchValue \u003d \"\";","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"Ugholaf"},"content":"        TreeSet\u003cString\u003e uniqueNames \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"Ugholaf"},"content":"        uniqueNames.addAll(Arrays.asList(\"Bob\", \"Carl\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"Ugholaf"},"content":"        autocompleteManager.updateUniqueNames(uniqueNames);","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"Ugholaf"},"content":"        List\u003cString\u003e searchResult \u003d autocompleteManager.getAutocompleteEntries(searchValue);","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"Ugholaf"},"content":"        List\u003cString\u003e expectedSearchResult \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"Ugholaf"},"content":"        assertEquals(expectedSearchResult, searchResult);","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"Ugholaf"},"content":"    public void equals() {","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"Ugholaf"},"content":"        UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"Ugholaf"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"Ugholaf"},"content":"        TreeSet\u003cString\u003e uniqueNames \u003d uniquePersonList.getUniqueNames();","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"Ugholaf"},"content":"        // same uniqueNames -\u003e returns true","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"Ugholaf"},"content":"        autocompleteManager \u003d new AutocompleteManager(uniqueNames);","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"Ugholaf"},"content":"        AutocompleteManager autocompleteManagerCopy \u003d new AutocompleteManager(uniqueNames);","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"Ugholaf"},"content":"        assertTrue(autocompleteManager.equals(autocompleteManagerCopy));","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"Ugholaf"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"Ugholaf"},"content":"        assertTrue(autocompleteManager.equals(autocompleteManager));","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"Ugholaf"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"Ugholaf"},"content":"        assertFalse(autocompleteManager.equals(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"Ugholaf"},"content":"        // different uniqueNames -\u003e false","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"Ugholaf"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"Ugholaf"},"content":"        TreeSet\u003cString\u003e differentUniqueNames \u003d uniquePersonList.getUniqueNames();","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"Ugholaf"},"content":"        assertFalse(autocompleteManager.equals(new AutocompleteManager(differentUniqueNames)));","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"Ugholaf":109}},{"path":"src/test/java/soconnect/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.getTypicalSoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.TodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"    private Model model;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Model expectedModel \u003d new ModelManager(model.getSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"Ugholaf"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"Ugholaf"},"content":"        Person personInList \u003d model.getSoConnect().getPersonList().get(0);","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"Ugholaf"},"content":"        CommandTestUtil.assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Ugholaf":42,"Eugene-Ong-W-X":3}},{"path":"src/test/java/soconnect/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"florentianayuwono"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import java.util.TreeSet;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ReadOnlySoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.ReadOnlyTodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.SoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.todo.Todo;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"florentianayuwono"},"content":"        assertEquals(addAliceCommand, addAliceCommand);","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"florentianayuwono"},"content":"        assertEquals(addAliceCommand, addAliceCommandCopy);","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"florentianayuwono"},"content":"        assertNotEquals(1, addAliceCommand);","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"florentianayuwono"},"content":"        assertNotEquals(null, addAliceCommand);","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"florentianayuwono"},"content":"        assertNotEquals(addAliceCommand, addBobCommand);","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"PangKuangWei"},"content":"        public String getAttributeOrder() {","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"PangKuangWei"},"content":"        public String getHiddenAttributes() {","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"PangKuangWei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"Ugholaf"},"content":"        public Path getSoConnectFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"Ugholaf"},"content":"        public void setSoConnectFilePath(Path soConnectFilePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public Path getTodoListFilePath() {","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void setTodoListFilePath(Path soConnectFilePath) {","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"Ugholaf"},"content":"        public void setSoConnect(ReadOnlySoConnect newData) {","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"Ugholaf"},"content":"        public ReadOnlySoConnect getSoConnect() {","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        public boolean hasTag(Tag tag) {","lastModifiedDate":"2022-10-07"},{"lineNumber":166,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":167,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        public void addTag(Tag tag) {","lastModifiedDate":"2022-10-07"},{"lineNumber":171,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":172,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        public void editTag(Tag oldTag, Tag newTag) {","lastModifiedDate":"2022-10-07"},{"lineNumber":176,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":177,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":178,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":180,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        public void sortByName(Boolean isReverse) {","lastModifiedDate":"2022-10-07"},{"lineNumber":181,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":182,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":183,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":184,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        public void sortByPhone(Boolean isReverse) {","lastModifiedDate":"2022-10-07"},{"lineNumber":186,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":187,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":188,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        public void sortByEmail(Boolean isReverse) {","lastModifiedDate":"2022-10-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        public void sortByAddress(Boolean isReverse) {","lastModifiedDate":"2022-10-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":199,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":200,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        public void sortByTag(Tag tag, Boolean isReverse) {","lastModifiedDate":"2022-10-07"},{"lineNumber":201,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":202,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":203,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":204,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":205,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        public TreeSet\u003cString\u003e getUniqueNames() {","lastModifiedDate":"2022-10-07"},{"lineNumber":206,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":207,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":208,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":209,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":210,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void addTodo(Todo todo) {","lastModifiedDate":"2022-10-16"},{"lineNumber":211,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":212,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":213,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":214,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":215,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void setTodoList(ReadOnlyTodoList newData) {","lastModifiedDate":"2022-10-16"},{"lineNumber":216,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":217,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":218,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":219,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":220,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public ReadOnlyTodoList getTodoList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":221,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":222,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":223,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":224,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":225,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public boolean hasTodo(Todo todo) {","lastModifiedDate":"2022-10-16"},{"lineNumber":226,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":227,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":228,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":229,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":230,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void deleteTodo(Todo target) {","lastModifiedDate":"2022-10-16"},{"lineNumber":231,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":232,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":233,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":234,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":235,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void setTodo(Todo target, Todo editedPerson) {","lastModifiedDate":"2022-10-16"},{"lineNumber":236,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":237,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":238,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-10-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":244,"author":{"gitId":"florentianayuwono"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":245,"author":{"gitId":"florentianayuwono"},"content":"        public Boolean isFilteredPersonListEmpty() {","lastModifiedDate":"2022-10-16"},{"lineNumber":246,"author":{"gitId":"florentianayuwono"},"content":"            return getFilteredPersonList().size() \u003d\u003d 0;","lastModifiedDate":"2022-10-16"},{"lineNumber":247,"author":{"gitId":"florentianayuwono"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":248,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-10-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":253,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":254,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":255,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public ObservableList\u003cTodo\u003e getFilteredTodoList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":256,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":257,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":258,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":259,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":260,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void updateFilteredTodoList(Predicate\u003cTodo\u003e predicate) {","lastModifiedDate":"2022-10-16"},{"lineNumber":261,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":262,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":263,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":303,"author":{"gitId":"Ugholaf"},"content":"        public ReadOnlySoConnect getSoConnect() {","lastModifiedDate":"2022-10-13"},{"lineNumber":304,"author":{"gitId":"Ugholaf"},"content":"            return new SoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Ugholaf":18,"Eugene-Ong-W-X":70,"ChongCheeKaiClarence":19,"florentianayuwono":11,"PangKuangWei":5,"-":185}},{"path":"src/test/java/soconnect/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.getTypicalSoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.SoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.TodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"public class ClearCommandTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"    public void execute_emptySoConnect_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"    public void execute_nonEmptySoConnect_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Model model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"        expectedModel.setSoConnect(new SoConnect());","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Ugholaf":30,"Eugene-Ong-W-X":3}},{"path":"src/test/java/soconnect/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"Ugholaf":1,"-":53}},{"path":"src/test/java/soconnect/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.SoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            throw new AssertionError(\"Execution of command should not fail.\");","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"Ugholaf"},"content":"     * - the SoConnect, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"Ugholaf"},"content":"        SoConnect expectedSoConnect \u003d new SoConnect(actualModel.getSoConnect());","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":112,"author":{"gitId":"Ugholaf"},"content":"        assertEquals(expectedSoConnect, actualModel.getSoConnect());","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"Ugholaf"},"content":"     * {@code model}\u0027s SoConnect.","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Ugholaf":19,"ChongCheeKaiClarence":4,"-":106}},{"path":"src/test/java/soconnect/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.getTypicalSoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.TodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private Model model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Model expectedModel \u003d new ModelManager(model.getSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"Ugholaf"},"content":"        // ensures that outOfBoundIndex is still in bounds of SoConnect list","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"Ugholaf"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSoConnect().getPersonList().size());","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Ugholaf":15,"Eugene-Ong-W-X":4,"-":91}},{"path":"src/test/java/soconnect/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.getTypicalSoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.SoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.TodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private Model model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Person editedPerson \u003d new PersonBuilder().withTags(\"friends\").build();","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Model expectedModel \u003d new ModelManager(new SoConnect(model.getSoConnect()), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Model expectedModel \u003d new ModelManager(new SoConnect(model.getSoConnect()), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Model expectedModel \u003d new ModelManager(new SoConnect(model.getSoConnect()), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Model expectedModel \u003d new ModelManager(new SoConnect(model.getSoConnect()), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"Ugholaf"},"content":"        // edit person in filtered list into a duplicate in SoConnect","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"Ugholaf"},"content":"        Person personInList \u003d model.getSoConnect().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"Ugholaf"},"content":"     * but smaller than size of SoConnect","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"Ugholaf"},"content":"        // ensures that outOfBoundIndex is still in bounds of SoConnect list","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"Ugholaf"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSoConnect().getPersonList().size());","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Ugholaf":26,"Eugene-Ong-W-X":6,"ChongCheeKaiClarence":3,"-":137}},{"path":"src/test/java/soconnect/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Ugholaf":9,"-":45}},{"path":"src/test/java/soconnect/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Ugholaf":5,"-":15}},{"path":"src/test/java/soconnect/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.getTypicalSoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.TodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private Model model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Ugholaf":11,"Eugene-Ong-W-X":3,"-":70}},{"path":"src/test/java/soconnect/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Ugholaf":5,"-":15}},{"path":"src/test/java/soconnect/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.getTypicalSoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.TodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        expectedModel \u003d new ModelManager(model.getSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Ugholaf":8,"Eugene-Ong-W-X":3,"-":29}},{"path":"src/test/java/soconnect/logic/commands/SearchCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"florentianayuwono"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"florentianayuwono"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"florentianayuwono"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"florentianayuwono"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"florentianayuwono"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"florentianayuwono"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"florentianayuwono"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.getTypicalSoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"florentianayuwono"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"florentianayuwono"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.TodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.model.person.search.ContactContainsAllKeywordsPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.model.person.search.ContactContainsAnyKeywordsPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.model.person.search.ContactMightBeRelevantPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"florentianayuwono"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"florentianayuwono"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"florentianayuwono"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"florentianayuwono"},"content":"public class SearchCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"florentianayuwono"},"content":"    private final Model model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"florentianayuwono"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"florentianayuwono"},"content":"    private final ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"florentianayuwono"},"content":"            ArgumentTokenizer.tokenize(\"n/name p/phone e/email\",","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"florentianayuwono"},"content":"                    PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"florentianayuwono"},"content":"    public void constructor_nullSearch_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"florentianayuwono"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SearchCommand(null, null));","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"florentianayuwono"},"content":"    public void equals() {","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"florentianayuwono"},"content":"        ContactContainsAnyKeywordsPredicate firstPredicate \u003d new ContactContainsAnyKeywordsPredicate(argMultimap);","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"florentianayuwono"},"content":"        ContactContainsAllKeywordsPredicate secondPredicate \u003d new ContactContainsAllKeywordsPredicate(argMultimap);","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"florentianayuwono"},"content":"        ContactMightBeRelevantPredicate thirdPredicate \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"florentianayuwono"},"content":"                new ContactMightBeRelevantPredicate(argMultimap.getAllValues());","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"florentianayuwono"},"content":"        SearchCommand searchFirstCommand \u003d new SearchCommand(firstPredicate, thirdPredicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"florentianayuwono"},"content":"        SearchCommand searchSecondCommand \u003d new SearchCommand(secondPredicate, thirdPredicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"florentianayuwono"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"florentianayuwono"},"content":"        assertEquals(searchFirstCommand, searchFirstCommand);","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"florentianayuwono"},"content":"        assertEquals(searchSecondCommand, searchSecondCommand);","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"florentianayuwono"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"florentianayuwono"},"content":"        SearchCommand searchFirstCommandCopy \u003d new SearchCommand(firstPredicate, thirdPredicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"florentianayuwono"},"content":"        assertEquals(searchFirstCommand, searchFirstCommandCopy);","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"florentianayuwono"},"content":"        SearchCommand searchSecondCommandCopy \u003d new SearchCommand(secondPredicate, thirdPredicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"florentianayuwono"},"content":"        assertEquals(searchSecondCommand, searchSecondCommandCopy);","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"florentianayuwono"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"florentianayuwono"},"content":"        assertNotEquals(1, searchFirstCommand);","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"florentianayuwono"},"content":"        assertNotEquals(\"third\", searchSecondCommand);","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"florentianayuwono"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"florentianayuwono"},"content":"        assertNotEquals(null, searchFirstCommand);","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"florentianayuwono"},"content":"        assertNotEquals(null, searchSecondCommand);","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"florentianayuwono"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"florentianayuwono"},"content":"        assertNotEquals(searchFirstCommand, searchSecondCommand);","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"florentianayuwono"},"content":"    public void execute_zeroPrefixIrrelevantKeywords_noPersonFound() {","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"florentianayuwono"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"florentianayuwono"},"content":"        ArgumentMultimap zeroPrefixAndKeywords \u003d ArgumentTokenizer.tokenize(\"!!!\");","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"florentianayuwono"},"content":"        ContactContainsAnyKeywordsPredicate predicate \u003d new ContactContainsAnyKeywordsPredicate(zeroPrefixAndKeywords);","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"florentianayuwono"},"content":"        ContactMightBeRelevantPredicate alternativePredicate \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"florentianayuwono"},"content":"                new ContactMightBeRelevantPredicate(zeroPrefixAndKeywords.getAllValues());","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"florentianayuwono"},"content":"        SearchCommand command \u003d new SearchCommand(predicate, alternativePredicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"florentianayuwono"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"florentianayuwono"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"florentianayuwono"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"florentianayuwono"},"content":"    public void execute_zeroPrefixRelevantKeywords_noPersonFound() {","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"florentianayuwono"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"florentianayuwono"},"content":"        ArgumentMultimap zeroPrefixAndKeywords \u003d ArgumentTokenizer.tokenize(\"abcdefg\");","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"florentianayuwono"},"content":"        ContactContainsAnyKeywordsPredicate predicate \u003d new ContactContainsAnyKeywordsPredicate(zeroPrefixAndKeywords);","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"florentianayuwono"},"content":"        ContactMightBeRelevantPredicate alternativePredicate \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"florentianayuwono"},"content":"                new ContactMightBeRelevantPredicate(zeroPrefixAndKeywords.getAllValues());","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"florentianayuwono"},"content":"        SearchCommand command \u003d new SearchCommand(predicate, alternativePredicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"florentianayuwono"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"florentianayuwono"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"florentianayuwono"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"florentianayuwono"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"Ugholaf":8,"Eugene-Ong-W-X":1,"florentianayuwono":94}},{"path":"src/test/java/soconnect/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import java.util.TreeSet;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.SortCommand.SortArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.Prefix;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ReadOnlySoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.ReadOnlyTodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.todo.Todo;","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"Eugene-Ong-W-X"},"content":"class SortCommandTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SortCommand(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void execute_wrongPrefix_throwsCommandException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        SortCommand sortCommand \u003d new SortCommand(List.of(new SortArgument(new Prefix(\"x/\"), false, null)));","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Model modelStub \u003d new ModelStub();","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertThrows(CommandException.class, SortCommand.MESSAGE_WRONG_PREFIX, () -\u003e sortCommand.execute(modelStub));","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void execute_success() throws CommandException {","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        SortCommand sortCommand \u003d new SortCommand(List.of(new SortArgument(PREFIX_NAME, false, null)));","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Model modelStub \u003d new ModelStubThatSorts();","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(SortCommand.MESSAGE_SUCCESS, sortCommand.execute(modelStub).getFeedbackToUser());","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void testEquals() {","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        SortCommand sampleA \u003d new SortCommand(List.of(new SortArgument(PREFIX_NAME, false, null)));","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        SortCommand sampleB \u003d new SortCommand(List.of(new SortArgument(PREFIX_ADDRESS, false, null)));","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        SortCommand sampleC \u003d new SortCommand(List.of(","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            new SortArgument(PREFIX_NAME, false, null),","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            new SortArgument(PREFIX_ADDRESS, false, null)));","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        SortCommand sampleD \u003d new SortCommand(List.of(new SortArgument(PREFIX_NAME, false, null)));","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(sampleA, sampleA); // same object","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertNotEquals(1, sampleA); // not SortCommand","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertNotEquals(sampleA, sampleC); // argList of different lengths","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertNotEquals(sampleA, sampleB); // different value","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(sampleA, sampleD); // same value","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"PangKuangWei"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"PangKuangWei"},"content":"        public String getAttributeOrder() {","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"PangKuangWei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"PangKuangWei"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"PangKuangWei"},"content":"        public String getHiddenAttributes() {","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"PangKuangWei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"PangKuangWei"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"Ugholaf"},"content":"        public Path getSoConnectFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"Ugholaf"},"content":"        public void setSoConnectFilePath(Path soConnectFilePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public Path getTodoListFilePath() {","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void setTodoListFilePath(Path soConnectFilePath) {","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"Ugholaf"},"content":"        public void setSoConnect(ReadOnlySoConnect newData) {","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"Ugholaf"},"content":"        public ReadOnlySoConnect getSoConnect() {","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":152,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public boolean hasTag(Tag tag) {","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void addTag(Tag tag) {","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":162,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void editTag(Tag oldTag, Tag newTag) {","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":167,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void sortByName(Boolean isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":170,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":172,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void sortByPhone(Boolean isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":174,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":175,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":178,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void sortByEmail(Boolean isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":179,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":180,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":181,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":182,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":183,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void sortByAddress(Boolean isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":184,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":185,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":186,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":187,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":188,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void sortByTag(Tag tag, Boolean isReverse) {","lastModifiedDate":"2022-10-05"},{"lineNumber":189,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":190,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":191,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":192,"author":{"gitId":"Ugholaf"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":193,"author":{"gitId":"Ugholaf"},"content":"        public TreeSet\u003cString\u003e getUniqueNames() {","lastModifiedDate":"2022-10-07"},{"lineNumber":194,"author":{"gitId":"Ugholaf"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":195,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":196,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":197,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":198,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void addTodo(Todo todo) {","lastModifiedDate":"2022-10-16"},{"lineNumber":199,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":200,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":201,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":202,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":203,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void setTodoList(ReadOnlyTodoList newData) {","lastModifiedDate":"2022-10-16"},{"lineNumber":204,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":205,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":206,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":207,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":208,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public ReadOnlyTodoList getTodoList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":209,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":210,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":211,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":212,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":213,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public boolean hasTodo(Todo todo) {","lastModifiedDate":"2022-10-16"},{"lineNumber":214,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":215,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":216,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":217,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":218,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void deleteTodo(Todo target) {","lastModifiedDate":"2022-10-16"},{"lineNumber":219,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":220,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":221,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":222,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":223,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void setTodo(Todo target, Todo editedPerson) {","lastModifiedDate":"2022-10-16"},{"lineNumber":224,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":225,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":226,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":227,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":228,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":229,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":230,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":231,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":232,"author":{"gitId":"florentianayuwono"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":233,"author":{"gitId":"florentianayuwono"},"content":"        public Boolean isFilteredPersonListEmpty() {","lastModifiedDate":"2022-10-16"},{"lineNumber":234,"author":{"gitId":"florentianayuwono"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":235,"author":{"gitId":"florentianayuwono"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":236,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":237,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":238,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-10-16"},{"lineNumber":239,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":240,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":241,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":242,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":243,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public ObservableList\u003cTodo\u003e getFilteredTodoList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":244,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":245,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":246,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":247,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":248,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void updateFilteredTodoList(Predicate\u003cTodo\u003e predicate) {","lastModifiedDate":"2022-10-16"},{"lineNumber":249,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-05"},{"lineNumber":250,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":251,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":252,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":253,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":254,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":255,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * A Model stub that allows sorting.","lastModifiedDate":"2022-10-05"},{"lineNumber":256,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":257,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private class ModelStubThatSorts extends ModelStub {","lastModifiedDate":"2022-10-05"},{"lineNumber":258,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":259,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void sortByName(Boolean isReverse) {}","lastModifiedDate":"2022-10-05"},{"lineNumber":260,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":261,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":262,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void sortByPhone(Boolean isReverse) {}","lastModifiedDate":"2022-10-05"},{"lineNumber":263,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":264,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":265,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void sortByEmail(Boolean isReverse) {}","lastModifiedDate":"2022-10-05"},{"lineNumber":266,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":267,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":268,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void sortByAddress(Boolean isReverse) {}","lastModifiedDate":"2022-10-05"},{"lineNumber":269,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":270,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":271,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        public void sortByTag(Tag tag, Boolean isReverse) {}","lastModifiedDate":"2022-10-05"},{"lineNumber":272,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":273,"author":{"gitId":"Eugene-Ong-W-X"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"Ugholaf":23,"Eugene-Ong-W-X":235,"florentianayuwono":5,"PangKuangWei":10}},{"path":"src/test/java/soconnect/logic/commands/TagAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.FRIENDS;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.OWESMONEY;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.getTypicalSoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.SoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.TodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"ChongCheeKaiClarence"},"content":"public class TagAddCommandTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private Model model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void addNullTag_throwsNullPointerException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TagAddCommand(null, null));","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TagAddCommand(INDEX_FIRST_PERSON, null));","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void add_tag_successful() {","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        TagAddCommand tagAddCommand \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                new TagAddCommand(INDEX_THIRD_PERSON, OWESMONEY);","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        String expectedMessage \u003d String.format(TagAddCommand.MESSAGE_ADD_TAG_SUCCESS, OWESMONEY);","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Model expectedModel \u003d new ModelManager(new SoConnect(model.getSoConnect()), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Person newPerson \u003d new PersonBuilder(editedPerson).withTags(\"owesMoney\").build();","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        expectedModel.setPerson(editedPerson, newPerson);","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        expectedModel.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertCommandSuccess(tagAddCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void execute_tagDoesNotExist_throwsCommandException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        TagAddCommand tagAddCommand \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                new TagAddCommand(INDEX_THIRD_PERSON, new Tag(\"Test\"));","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertCommandFailure(tagAddCommand, model, TagAddCommand.MESSAGE_NO_SUCH_TAG);","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void execute_tagAlreadyExists_throwsCommandException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        TagAddCommand tagAddCommand \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                new TagAddCommand(INDEX_FIRST_PERSON, FRIENDS);","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertCommandFailure(tagAddCommand, model, TagAddCommand.MESSAGE_TAG_ALREADY_ADDED);","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"ChongCheeKaiClarence"},"content":"}","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"Ugholaf":18,"Eugene-Ong-W-X":3,"ChongCheeKaiClarence":41}},{"path":"src/test/java/soconnect/logic/commands/TagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"ChongCheeKaiClarence"},"content":"public class TagCommandTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void execute_parse_exception() {","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertThrows(ParseException.class, () -\u003e new TagCommand().execute(new ModelManager()));","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"ChongCheeKaiClarence"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"Ugholaf":4,"ChongCheeKaiClarence":14}},{"path":"src/test/java/soconnect/logic/commands/TagCreateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.FRIENDS;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.getTypicalSoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.SoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.TodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"ChongCheeKaiClarence"},"content":"public class TagCreateCommandTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private Model model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void tag_create_success() {","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        TagCreateCommand tagCreateCommand \u003d new TagCreateCommand(new Tag(\"sibling\"));","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        String expectedMessage \u003d String.format(TagCreateCommand.MESSAGE_SUCCESS, new Tag(\"sibling\"));","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Model expectedModel \u003d new ModelManager(new SoConnect(model.getSoConnect()), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        expectedModel.addTag(new Tag(\"sibling\"));","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertCommandSuccess(tagCreateCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void execute_tagAlreadyExists_throwsCommandException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        TagCreateCommand tagCreateCommand \u003d new TagCreateCommand(FRIENDS);","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertCommandFailure(tagCreateCommand, model, TagCreateCommand.MESSAGE_DUPLICATE_TAG);","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"ChongCheeKaiClarence"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"Ugholaf":10,"Eugene-Ong-W-X":3,"ChongCheeKaiClarence":25}},{"path":"src/test/java/soconnect/logic/commands/TagEditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.FRIENDS;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.OWESMONEY;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.getTypicalSoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.SoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.TodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"ChongCheeKaiClarence"},"content":"public class TagEditCommandTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private Model model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void edit_tag_successful() {","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        TagEditCommand tagEditCommand \u003d new TagEditCommand(FRIENDS, new Tag(\"bestFriend\"));","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        String expectedMessage \u003d String.format(TagEditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                FRIENDS, new Tag(\"bestFriend\"));","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Model expectedModel \u003d new ModelManager(new SoConnect(model.getSoConnect()), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        expectedModel.editTag(FRIENDS, new Tag(\"bestFriend\"));","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertCommandSuccess(tagEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void execute_newTagAlreadyExists_throwsCommandException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        TagEditCommand tagEditCommand \u003d new TagEditCommand(FRIENDS, OWESMONEY);","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertCommandFailure(tagEditCommand, model, TagEditCommand.MESSAGE_DUPLICATE_TAG);","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void execute_oldTagDoesNotExist_throwCommandException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        TagEditCommand tagEditCommand \u003d new TagEditCommand(new Tag(\"fake\"), new Tag(\"Fake\"));","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertCommandFailure(tagEditCommand, model, TagEditCommand.MESSAGE_TAG_NOT_FOUND);","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"ChongCheeKaiClarence"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"Ugholaf":11,"Eugene-Ong-W-X":3,"ChongCheeKaiClarence":33}},{"path":"src/test/java/soconnect/logic/commands/customise/CustomiseHideCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package soconnect.logic.commands.customise;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.TAGS;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseHideCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.testutil.TypicalPersons.getTypicalSoConnect;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.TodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"class CustomiseHideCommandTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"    private Model model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"    public void execute_hideOneAttribute_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"        ArrayList\u003cCustomiseCommand.Attribute\u003e attributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(ADDRESS);","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"        model.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"NONE\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"        CustomiseHideCommand customiseHideCommand \u003d new CustomiseHideCommand(attributes);","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"        expectedModel.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"ADDRESS\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"        assertCommandSuccess(customiseHideCommand, model, MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"PangKuangWei"},"content":"    public void execute_hideFourAttributes_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"PangKuangWei"},"content":"        ArrayList\u003cCustomiseCommand.Attribute\u003e attributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(ADDRESS);","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(TAGS);","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(PHONE);","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(EMAIL);","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"PangKuangWei"},"content":"        model.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"NONE\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"PangKuangWei"},"content":"        CustomiseHideCommand customiseHideCommand \u003d new CustomiseHideCommand(attributes);","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"PangKuangWei"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"PangKuangWei"},"content":"        expectedModel.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"ADDRESS,EMAIL,PHONE,TAGS\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"PangKuangWei"},"content":"        assertCommandSuccess(customiseHideCommand, model, MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"PangKuangWei"},"content":"    public void execute_hideRepeatAttributes_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"PangKuangWei"},"content":"        ArrayList\u003cCustomiseCommand.Attribute\u003e attributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(PHONE);","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(PHONE);","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(TAGS);","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"PangKuangWei"},"content":"        model.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"NONE\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"PangKuangWei"},"content":"        CustomiseHideCommand customiseHideCommand \u003d new CustomiseHideCommand(attributes);","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"PangKuangWei"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"PangKuangWei"},"content":"        expectedModel.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"PHONE,TAGS\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"PangKuangWei"},"content":"        assertCommandSuccess(customiseHideCommand, model, MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"PangKuangWei":74}},{"path":"src/test/java/soconnect/logic/commands/customise/CustomiseOrderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package soconnect.logic.commands.customise;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.TAGS;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseOrderCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.testutil.TypicalPersons.getTypicalSoConnect;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.TodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"class CustomiseOrderCommandTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"    private Model model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"    public void execute_order_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"        ArrayList\u003cAttribute\u003e attributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(ADDRESS);","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(TAGS);","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(PHONE);","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(EMAIL);","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"        model.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"NONE\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"        CustomiseOrderCommand customiseOrderCommand \u003d new CustomiseOrderCommand(attributes);","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"PangKuangWei"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"PangKuangWei"},"content":"        expectedModel.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"NONE\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"        assertCommandSuccess(customiseOrderCommand, model, MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"PangKuangWei"},"content":"    public void execute_orderWithOneInput_throwsCommandException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"PangKuangWei"},"content":"        ArrayList\u003cAttribute\u003e attributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(EMAIL);","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"PangKuangWei"},"content":"        model.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"NONE\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"PangKuangWei"},"content":"        CustomiseOrderCommand customiseOrderCommand \u003d new CustomiseOrderCommand(attributes);","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"PangKuangWei"},"content":"        assertCommandFailure(customiseOrderCommand, model, MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"PangKuangWei":57}},{"path":"src/test/java/soconnect/logic/commands/customise/CustomiseShowCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package soconnect.logic.commands.customise;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.TAGS;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseShowCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.testutil.TypicalPersons.getTypicalSoConnect;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.TodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"class CustomiseShowCommandTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"    private Model model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"    public void execute_showOneAttribute_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"        ArrayList\u003cCustomiseCommand.Attribute\u003e attributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(EMAIL);","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"        model.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"ADDRESS,EMAIL,PHONE,TAGS\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"        CustomiseShowCommand customiseShowCommand \u003d new CustomiseShowCommand(attributes);","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"        expectedModel.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"ADDRESS,PHONE,TAGS\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"        assertCommandSuccess(customiseShowCommand, model, MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"PangKuangWei"},"content":"    public void execute_showFourAttributes_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"PangKuangWei"},"content":"        ArrayList\u003cCustomiseCommand.Attribute\u003e attributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(ADDRESS);","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(TAGS);","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(PHONE);","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(EMAIL);","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"PangKuangWei"},"content":"        model.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"ADDRESS,EMAIL,PHONE,TAGS\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"PangKuangWei"},"content":"        CustomiseShowCommand customiseShowCommand \u003d new CustomiseShowCommand(attributes);","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"PangKuangWei"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"PangKuangWei"},"content":"        expectedModel.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"NONE\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"PangKuangWei"},"content":"        assertCommandSuccess(customiseShowCommand, model, MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"PangKuangWei"},"content":"    public void execute_showRepeatAttributes_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"PangKuangWei"},"content":"        ArrayList\u003cCustomiseCommand.Attribute\u003e attributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(ADDRESS);","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(ADDRESS);","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(PHONE);","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(PHONE);","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"PangKuangWei"},"content":"        model.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"ADDRESS,EMAIL,PHONE,TAGS\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"PangKuangWei"},"content":"        CustomiseShowCommand customiseShowCommand \u003d new CustomiseShowCommand(attributes);","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"PangKuangWei"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"PangKuangWei"},"content":"        expectedModel.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"EMAIL,TAGS\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"PangKuangWei"},"content":"        assertCommandSuccess(customiseShowCommand, model, MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"PangKuangWei":75}},{"path":"src/test/java/soconnect/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.AddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.TypicalPersons;","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags().build();","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":46,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                + ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                + ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                + ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                + ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                + ADDRESS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"Ugholaf"},"content":"        Person expectedPerson \u003d new PersonBuilder(TypicalPersons.AMY).withTags().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-10-07"},{"lineNumber":103,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-10-07"},{"lineNumber":107,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-10-07"},{"lineNumber":111,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2022-10-07"},{"lineNumber":115,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-10-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Ugholaf":32,"ChongCheeKaiClarence":15,"-":79}},{"path":"src/test/java/soconnect/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.ArgumentTokenizer.PrefixArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void tokenizeToList_emptyArgsString_noValues() {","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        List\u003cPrefixArgument\u003e list \u003d ArgumentTokenizer.tokenizeToList(argsString, pSlash);","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertPreambleEmpty(list);","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertArgumentAbsent(list, pSlash);","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private void assertPreamblePresent(List\u003cPrefixArgument\u003e list, String expectedPreamble) {","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(expectedPreamble, list.get(0).getArgument());","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private void assertPreambleEmpty(List\u003cPrefixArgument\u003e list) {","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertTrue(list.get(0).getArgument().isEmpty());","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":73,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     * Asserts all the arguments in {@code List} with {@code prefix} match the {@code expectedValues}.","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"Eugene-Ong-W-X"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private void assertArgumentPresent(List\u003cPrefixArgument\u003e list, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        List\u003cPrefixArgument\u003e filtered \u003d list.stream().filter((pa) -\u003e pa.getPrefix().equals(prefix))","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(expectedValues.length, filtered.size());","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            assertEquals(expectedValues[i], filtered.get(i).getArgument());","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private void assertArgumentAbsent(List\u003cPrefixArgument\u003e list, Prefix prefix) {","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertFalse(list.stream().anyMatch((pa) -\u003e pa.getPrefix().equals(prefix)));","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":107,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void tokenizeToList_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        List\u003cPrefixArgument\u003e list \u003d ArgumentTokenizer.tokenizeToList(argsString);","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertPreamblePresent(list, argsString.trim());","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void tokenizeToList_oneArgument() {","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        // Preamble present","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        List\u003cPrefixArgument\u003e list \u003d ArgumentTokenizer.tokenizeToList(argsString, pSlash);","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertPreamblePresent(list, \"Some preamble string\");","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertArgumentPresent(list, pSlash, \"Argument value\");","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        // No preamble","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        list \u003d ArgumentTokenizer.tokenizeToList(argsString, pSlash);","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertPreambleEmpty(list);","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertArgumentPresent(list, pSlash, \"Argument value\");","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":185,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":186,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void tokenizeToList_multipleArguments() {","lastModifiedDate":"2022-10-05"},{"lineNumber":187,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        // Only two arguments are present","lastModifiedDate":"2022-10-05"},{"lineNumber":188,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2022-10-05"},{"lineNumber":189,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        List\u003cPrefixArgument\u003e list \u003d ArgumentTokenizer.tokenizeToList(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-05"},{"lineNumber":190,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertPreamblePresent(list, \"SomePreambleString\");","lastModifiedDate":"2022-10-05"},{"lineNumber":191,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertArgumentPresent(list, pSlash, \"pSlash value\");","lastModifiedDate":"2022-10-05"},{"lineNumber":192,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertArgumentPresent(list, dashT, \"dashT-Value\");","lastModifiedDate":"2022-10-05"},{"lineNumber":193,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertArgumentAbsent(list, hatQ);","lastModifiedDate":"2022-10-05"},{"lineNumber":194,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":195,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        // All three arguments are present","lastModifiedDate":"2022-10-05"},{"lineNumber":196,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2022-10-05"},{"lineNumber":197,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        list \u003d ArgumentTokenizer.tokenizeToList(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-05"},{"lineNumber":198,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertPreamblePresent(list, \"Different Preamble String\");","lastModifiedDate":"2022-10-05"},{"lineNumber":199,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertArgumentPresent(list, pSlash, \"pSlash value\");","lastModifiedDate":"2022-10-05"},{"lineNumber":200,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertArgumentPresent(list, dashT, \"dashT-Value\");","lastModifiedDate":"2022-10-05"},{"lineNumber":201,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertArgumentPresent(list, hatQ, \"111\");","lastModifiedDate":"2022-10-05"},{"lineNumber":202,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":203,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2022-10-05"},{"lineNumber":204,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":205,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2022-10-05"},{"lineNumber":206,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2022-10-05"},{"lineNumber":207,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2022-10-05"},{"lineNumber":208,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        list \u003d ArgumentTokenizer.tokenizeToList(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-05"},{"lineNumber":209,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertPreambleEmpty(list);","lastModifiedDate":"2022-10-05"},{"lineNumber":210,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertArgumentAbsent(list, pSlash);","lastModifiedDate":"2022-10-05"},{"lineNumber":211,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":212,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2022-10-05"},{"lineNumber":213,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":214,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2022-10-05"},{"lineNumber":215,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2022-10-05"},{"lineNumber":216,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        list \u003d ArgumentTokenizer.tokenizeToList(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-05"},{"lineNumber":217,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertArgumentAbsent(list, unknownPrefix);","lastModifiedDate":"2022-10-05"},{"lineNumber":218,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertPreamblePresent(list, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2022-10-05"},{"lineNumber":219,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":220,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":232,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":233,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void tokenizeToList_multipleArgumentsWithRepeats() {","lastModifiedDate":"2022-10-05"},{"lineNumber":234,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2022-10-05"},{"lineNumber":235,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2022-10-05"},{"lineNumber":236,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        List\u003cPrefixArgument\u003e list \u003d ArgumentTokenizer.tokenizeToList(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-05"},{"lineNumber":237,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertPreamblePresent(list, \"SomePreambleString\");","lastModifiedDate":"2022-10-05"},{"lineNumber":238,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertArgumentPresent(list, pSlash, \"pSlash value\");","lastModifiedDate":"2022-10-05"},{"lineNumber":239,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertArgumentPresent(list, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2022-10-05"},{"lineNumber":240,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertArgumentPresent(list, hatQ, \"\", \"\");","lastModifiedDate":"2022-10-05"},{"lineNumber":241,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":242,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":253,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":254,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void tokenizeToList_multipleArgumentsJoined() {","lastModifiedDate":"2022-10-05"},{"lineNumber":255,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2022-10-05"},{"lineNumber":256,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        List\u003cPrefixArgument\u003e list \u003d ArgumentTokenizer.tokenizeToList(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-05"},{"lineNumber":257,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertPreamblePresent(list, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2022-10-05"},{"lineNumber":258,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertArgumentAbsent(list, pSlash);","lastModifiedDate":"2022-10-05"},{"lineNumber":259,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertArgumentPresent(list, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2022-10-05"},{"lineNumber":260,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertArgumentAbsent(list, hatQ);","lastModifiedDate":"2022-10-05"},{"lineNumber":261,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":262,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Ugholaf":2,"Eugene-Ong-W-X":123,"-":149}},{"path":"src/test/java/soconnect/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.Command;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Ugholaf":3,"-":36}},{"path":"src/test/java/soconnect/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Ugholaf":6,"-":26}},{"path":"src/test/java/soconnect/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.EditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":98,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":153,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-07"},{"lineNumber":154,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Ugholaf":35,"ChongCheeKaiClarence":6,"-":140}},{"path":"src/test/java/soconnect/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.FindCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Ugholaf":6,"-":28}},{"path":"src/test/java/soconnect/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Ugholaf":10,"-":186}},{"path":"src/test/java/soconnect/logic/parser/SearchCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"florentianayuwono"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"florentianayuwono"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"florentianayuwono"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"florentianayuwono"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"florentianayuwono"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"florentianayuwono"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"florentianayuwono"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.SearchCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.model.person.search.ContactContainsAllKeywordsPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.model.person.search.ContactContainsAnyKeywordsPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"florentianayuwono"},"content":"import soconnect.model.person.search.ContactMightBeRelevantPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"florentianayuwono"},"content":"public class SearchCommandParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"florentianayuwono"},"content":"    private final String failureMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, SearchCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"florentianayuwono"},"content":"    private final SearchCommandParser parser \u003d new SearchCommandParser();","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"florentianayuwono"},"content":"    void parse_noValidArguments_failure() {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"florentianayuwono"},"content":"        assertParseFailure(parser, \"\", failureMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"florentianayuwono"},"content":"        assertParseFailure(parser, \"     \", failureMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"florentianayuwono"},"content":"        assertParseFailure(parser, \"abcd\", failureMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"florentianayuwono"},"content":"        assertParseFailure(parser, \"an/namep/phone\", failureMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"florentianayuwono"},"content":"    public void parse_jointSearchValidArgs_success() {","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"florentianayuwono"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(\"and n/name a/address p/phone\",","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"florentianayuwono"},"content":"                PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"florentianayuwono"},"content":"        ContactContainsAllKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"florentianayuwono"},"content":"                new ContactContainsAllKeywordsPredicate(argMultimap);","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"florentianayuwono"},"content":"        ContactMightBeRelevantPredicate alternativePredicate \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"florentianayuwono"},"content":"                new ContactMightBeRelevantPredicate(argMultimap.getAllValues());","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"florentianayuwono"},"content":"        assertParseSuccess(parser, \"and n/name a/address p/phone\",","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"florentianayuwono"},"content":"                new SearchCommand(firstPredicate, alternativePredicate));","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"florentianayuwono"},"content":"    public void parse_disjointSearchValidArgs_success() {","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"florentianayuwono"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(\"or n/name a/address p/phone\",","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"florentianayuwono"},"content":"                PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"florentianayuwono"},"content":"        ContactContainsAnyKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"florentianayuwono"},"content":"                new ContactContainsAnyKeywordsPredicate(argMultimap);","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"florentianayuwono"},"content":"        ContactMightBeRelevantPredicate alternativePredicate \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"florentianayuwono"},"content":"                new ContactMightBeRelevantPredicate(argMultimap.getAllValues());","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"florentianayuwono"},"content":"        assertParseSuccess(parser, \"or n/name a/address p/phone\",","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"florentianayuwono"},"content":"                new SearchCommand(secondPredicate, alternativePredicate));","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"florentianayuwono"},"content":"    public void parse_emptyPreambleSearchValidArgs_success() {","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"florentianayuwono"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(\" n/name a/address p/phone\",","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"florentianayuwono"},"content":"                PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"florentianayuwono"},"content":"        ContactContainsAllKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"florentianayuwono"},"content":"                new ContactContainsAllKeywordsPredicate(argMultimap);","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"florentianayuwono"},"content":"        ContactMightBeRelevantPredicate alternativePredicate \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"florentianayuwono"},"content":"                new ContactMightBeRelevantPredicate(argMultimap.getAllValues());","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"florentianayuwono"},"content":"        assertParseSuccess(parser, \" n/name a/address p/phone\",","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"florentianayuwono"},"content":"                new SearchCommand(firstPredicate, alternativePredicate));","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"florentianayuwono"},"content":"    public void parse_invalidPreambleSearchValidArgs_throwsParseException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"florentianayuwono"},"content":"        assertParseFailure(parser, \"either n/name a/address p/phone\",","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"florentianayuwono"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SearchCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"florentianayuwono"},"content":"        assertParseFailure(parser, \"all n/name a/address p/phone\",","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"florentianayuwono"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SearchCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"florentianayuwono"},"content":"        assertParseFailure(parser, \"!1s n/name a/address p/phone\",","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"florentianayuwono"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SearchCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"florentianayuwono"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"florentianayuwono"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"florentianayuwono"},"content":"    public void parse_invalidSearchArgs_throwsParseException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"florentianayuwono"},"content":"        assertParseFailure(parser, \"name address phone\",","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"florentianayuwono"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SearchCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"florentianayuwono"},"content":"        assertParseFailure(parser, \"h/name address p/phone\",","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"florentianayuwono"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SearchCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"florentianayuwono"},"content":"        assertParseFailure(parser, \"name/n\",","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"florentianayuwono"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SearchCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"florentianayuwono"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"florentianayuwono"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"Ugholaf":4,"florentianayuwono":85}},{"path":"src/test/java/soconnect/logic/parser/SoConnectParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.AddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.EditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.FindCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.ListCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.SortCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.SortCommand.SortArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.PersonUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"public class SoConnectParserTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"    private final SoConnectParser parser \u003d new SoConnectParser();","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    public void parseCommand_sort() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        SortCommand command \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            (SortCommand) parser.parseCommand(SortCommand.COMMAND_WORD + \" \" + PREFIX_NAME.getPrefix());","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(new SortCommand(List.of(new SortArgument(PREFIX_NAME, false, null))), command);","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Ugholaf":25,"Eugene-Ong-W-X":7,"-":79}},{"path":"src/test/java/soconnect/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.SortCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.SortCommand.SortArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"Eugene-Ong-W-X"},"content":"class SortCommandParserTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private final String failureMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    private final SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void parse_noValidArguments_failure() {","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertParseFailure(parser, \"\", failureMessage);","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertParseFailure(parser, \"   \", failureMessage);","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertParseFailure(parser, \"abcd\", failureMessage);","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertParseFailure(parser, \"an/namep/phone\", failureMessage);","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void parse_oneArgument_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        // test that the individual 1-level sorts function correctly","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertParseSuccess(parser, \" n/\",","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            new SortCommand(List.of(new SortArgument(PREFIX_NAME, false, null))));","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertParseSuccess(parser, \" n/!\",","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            new SortCommand(List.of(new SortArgument(PREFIX_NAME, true, null))));","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertParseSuccess(parser, \" p/\",","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            new SortCommand(List.of(new SortArgument(PREFIX_PHONE, false, null))));","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertParseSuccess(parser, \" p/!\",","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            new SortCommand(List.of(new SortArgument(PREFIX_PHONE, true, null))));","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertParseSuccess(parser, \" e/\",","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            new SortCommand(List.of(new SortArgument(PREFIX_EMAIL, false, null))));","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertParseSuccess(parser, \" e/!\",","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            new SortCommand(List.of(new SortArgument(PREFIX_EMAIL, true, null))));","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertParseSuccess(parser, \" a/\",","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            new SortCommand(List.of(new SortArgument(PREFIX_ADDRESS, false, null))));","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertParseSuccess(parser, \" a/!\",","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            new SortCommand(List.of(new SortArgument(PREFIX_ADDRESS, true, null))));","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertParseSuccess(parser, \" t/friend\",","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            new SortCommand(List.of(new SortArgument(PREFIX_TAG, false, new Tag(\"friend\")))));","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertParseSuccess(parser, \" t/!friend\",","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            new SortCommand(List.of(new SortArgument(PREFIX_TAG, true, new Tag(\"friend\")))));","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void parse_multipleArgument_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        // test that 1-level sorts can be chained together in the correct order to form multi-level sort","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertParseSuccess(parser, \" n/ a/!\", new SortCommand(List.of(","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            new SortArgument(PREFIX_NAME, false, null),","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"Eugene-Ong-W-X"},"content":"            new SortArgument(PREFIX_ADDRESS, true, null))));","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"Eugene-Ong-W-X"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"Ugholaf":12,"Eugene-Ong-W-X":54}},{"path":"src/test/java/soconnect/logic/parser/TagAddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import org.junit.jupiter.api.Disabled;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.TagAddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"ChongCheeKaiClarence"},"content":"class TagAddCommandParserTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagAddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    private TagAddCommandParser parser \u003d new TagAddCommandParser();","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        // no index specified","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertParseFailure(parser, TAG_DESC_FRIEND , MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        // no field specified","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"        assertParseFailure(parser, \"1\", TagAddCommand.MESSAGE_NO_TAG);","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        // no index and no field specified","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        // negative index","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertParseFailure(parser, \"-5\" + VALID_TAG_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        //zero index","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertParseFailure(parser, \"0\" + VALID_TAG_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        // missing tag","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"Ugholaf"},"content":"        assertParseFailure(parser, \"1\", TagAddCommand.MESSAGE_NO_TAG);","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Disabled","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void parse_success() {","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        TagAddCommand expectedCommand \u003d new TagAddCommand(targetIndex, new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"Ugholaf"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"ChongCheeKaiClarence"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"Ugholaf":12,"ChongCheeKaiClarence":52}},{"path":"src/test/java/soconnect/logic/parser/TagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import org.junit.jupiter.api.Disabled;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.TagAddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.TagCreateCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.TagEditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.SoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import soconnect.model.TodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"ChongCheeKaiClarence"},"content":"class TagCommandParserTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    private TagCommandParser parser \u003d new TagCommandParser();","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void parseCommand_create() throws Exception {","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Tag tag \u003d new Tag(\"nothing\");","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        TagCreateCommand command \u003d (TagCreateCommand) parser.parse(\"create t/nothing\");","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertEquals(new TagCreateCommand(tag), command);","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Disabled","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Model model \u003d new ModelManager(new SoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Tag tag \u003d new Tag(\"nothing\");","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        model.addTag(new Tag(\"nothing\"));","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        model.addPerson(person);","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        TagAddCommand command \u003d (TagAddCommand) parser.parse(\"add \"","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                + \" t/nothing\");","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertEquals(new TagAddCommand(INDEX_FIRST_PERSON, tag), command);","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Disabled","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Tag oldTag \u003d new Tag(\"nothing\");","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Tag newTag \u003d new Tag(\"something\");","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        TagEditCommand command \u003d (TagEditCommand) parser.parse(\"edit t/nothing t/something\");","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertEquals(new TagEditCommand(oldTag, newTag), command);","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"ChongCheeKaiClarence"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"Ugholaf":12,"Eugene-Ong-W-X":2,"ChongCheeKaiClarence":42}},{"path":"src/test/java/soconnect/logic/parser/TagCreateCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.TagCreateCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"ChongCheeKaiClarence"},"content":"class TagCreateCommandParserTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    private TagCreateCommandParser parser \u003d new TagCreateCommandParser();","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertParseFailure(parser, INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void parse_success() {","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        String userInput \u003d TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        TagCreateCommand expectedCommand \u003d new TagCreateCommand(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"ChongCheeKaiClarence"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"Ugholaf":8,"ChongCheeKaiClarence":24}},{"path":"src/test/java/soconnect/logic/parser/TagEditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import org.junit.jupiter.api.Disabled;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.TagEditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"ChongCheeKaiClarence"},"content":"class TagEditCommandParserTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    private TagEditCommandParser parser \u003d new TagEditCommandParser();","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        // Invalid old Tag.","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertParseFailure(parser, INVALID_TAG_DESC + TAG_DESC_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        // Invalid new Tag.","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertParseFailure(parser, TAG_DESC_FRIEND + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        // Invalid Tags","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertParseFailure(parser, INVALID_TAG_DESC + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    @Disabled","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public void parse_success() {","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        String userInput \u003d TAG_DESC_FRIEND + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        TagEditCommand expectedCommand \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                new TagEditCommand(new Tag(VALID_TAG_FRIEND), new Tag(VALID_TAG_HUSBAND));","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"ChongCheeKaiClarence"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"Ugholaf":10,"ChongCheeKaiClarence":33}},{"path":"src/test/java/soconnect/logic/parser/customise/CustomiseCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package soconnect.logic.parser.customise;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.MESSAGE_UNKNOWN_CUSTOMISE_COMMAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.commands.customise.CustomiseCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"class CustomiseCommandParserTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"    private CustomiseCommandParser parser \u003d new CustomiseCommandParser();","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_UNKNOWN_CUSTOMISE_COMMAND,","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"                CustomiseCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"PangKuangWei":19}},{"path":"src/test/java/soconnect/logic/parser/customise/CustomiseHideCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package soconnect.logic.parser.customise;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.TAGS;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.MESSAGE_DUPLICATE_ATTRIBUTE;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.testutil.TypicalPersons.getTypicalSoConnect;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.commands.customise.CustomiseCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.commands.customise.CustomiseHideCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.TodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"class CustomiseHideCommandParserTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"    private CustomiseHideCommandParser parser \u003d new CustomiseHideCommandParser();","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"    public void parse_hideOneAttribute_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"        ArrayList\u003cCustomiseCommand.Attribute\u003e attributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(ADDRESS);","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"        ModelManager model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"        model.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"NONE\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"        assertParseSuccess(parser, \" a/\", new CustomiseHideCommand(attributes));","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"PangKuangWei"},"content":"    public void parse_hideFourAttributes_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"PangKuangWei"},"content":"        ArrayList\u003cCustomiseCommand.Attribute\u003e attributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(ADDRESS);","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(TAGS);","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(PHONE);","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(EMAIL);","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"PangKuangWei"},"content":"        ModelManager model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"PangKuangWei"},"content":"        model.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"NONE\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"PangKuangWei"},"content":"        assertParseSuccess(parser, \" a/ t/ p/ e/\", new CustomiseHideCommand(attributes));","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"PangKuangWei"},"content":"    public void parse_hideInvalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"PangKuangWei"},"content":"        ModelManager model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"PangKuangWei"},"content":"        model.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"ADDRESS,TAGS,PHONE,EMAIL\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"PangKuangWei"},"content":"        assertParseFailure(parser, \" invalidText\",","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"PangKuangWei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CustomiseHideCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"PangKuangWei"},"content":"    public void parse_hideRepeatArgs_throwsParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"PangKuangWei"},"content":"        ModelManager model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"PangKuangWei"},"content":"        model.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"ADDRESS,TAGS,PHONE,EMAIL\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"PangKuangWei"},"content":"        assertParseFailure(parser, \" p/ p/\", MESSAGE_DUPLICATE_ATTRIBUTE);","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"PangKuangWei"},"content":"    public void parse_hideWithoutArgs_throwsParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"PangKuangWei"},"content":"        assertParseFailure(parser, \"hide\",","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"PangKuangWei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CustomiseHideCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"PangKuangWei":77}},{"path":"src/test/java/soconnect/logic/parser/customise/CustomiseOrderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package soconnect.logic.parser.customise;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.TAGS;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.testutil.TypicalPersons.getTypicalSoConnect;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.commands.customise.CustomiseCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.commands.customise.CustomiseOrderCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.TodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"class CustomiseOrderCommandParserTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"    private CustomiseOrderCommandParser parser \u003d new CustomiseOrderCommandParser();","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"    public void parse_orderValidArgs_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"        ArrayList\u003cCustomiseCommand.Attribute\u003e attributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(ADDRESS);","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(TAGS);","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(PHONE);","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(EMAIL);","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"        ModelManager model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"        model.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"NONE\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"PangKuangWei"},"content":"        assertParseSuccess(parser, \" a/ t/ p/ e/\", new CustomiseOrderCommand(attributes));","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"PangKuangWei"},"content":"    public void parse_orderIncompleteArgs_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"        ArrayList\u003cCustomiseCommand.Attribute\u003e attributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(ADDRESS);","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(TAGS);","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(PHONE);","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(EMAIL);","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"PangKuangWei"},"content":"        ModelManager model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"PangKuangWei"},"content":"        model.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"NONE\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"PangKuangWei"},"content":"        assertParseSuccess(parser, \" a/ t/ p/\", new CustomiseOrderCommand(attributes));","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"PangKuangWei"},"content":"    public void parse_orderWithoutArgs_throwsParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"PangKuangWei"},"content":"        assertParseFailure(parser, \"order\",","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"PangKuangWei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CustomiseOrderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"PangKuangWei":60}},{"path":"src/test/java/soconnect/logic/parser/customise/CustomiseShowCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PangKuangWei"},"content":"package soconnect.logic.parser.customise;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.ADDRESS;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.EMAIL;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.PHONE;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.Attribute.TAGS;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.commands.customise.CustomiseCommand.MESSAGE_DUPLICATE_ATTRIBUTE;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"PangKuangWei"},"content":"import static soconnect.testutil.TypicalPersons.getTypicalSoConnect;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"PangKuangWei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"PangKuangWei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.commands.customise.CustomiseCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.logic.commands.customise.CustomiseShowCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.TodoList;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"PangKuangWei"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"PangKuangWei"},"content":"class CustomiseShowCommandParserTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"PangKuangWei"},"content":"    private CustomiseShowCommandParser parser \u003d new CustomiseShowCommandParser();","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"PangKuangWei"},"content":"    public void parse_showOneAttribute_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"PangKuangWei"},"content":"        ArrayList\u003cCustomiseCommand.Attribute\u003e attributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(TAGS);","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"PangKuangWei"},"content":"        ModelManager model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"PangKuangWei"},"content":"        model.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"ADDRESS,TAGS,PHONE,EMAIL\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"PangKuangWei"},"content":"        assertParseSuccess(parser, \" t/\", new CustomiseShowCommand(attributes));","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"PangKuangWei"},"content":"    public void parse_showFourAttributes_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"PangKuangWei"},"content":"        ArrayList\u003cCustomiseCommand.Attribute\u003e attributes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(ADDRESS);","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(TAGS);","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(PHONE);","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"PangKuangWei"},"content":"        attributes.add(EMAIL);","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"PangKuangWei"},"content":"        ModelManager model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"PangKuangWei"},"content":"        model.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"ADDRESS,TAGS,PHONE,EMAIL\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"PangKuangWei"},"content":"        assertParseSuccess(parser, \" a/ t/ p/ e/\", new CustomiseShowCommand(attributes));","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"PangKuangWei"},"content":"    public void parse_showInvalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"PangKuangWei"},"content":"        ModelManager model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"PangKuangWei"},"content":"        model.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"ADDRESS,TAGS,PHONE,EMAIL\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"PangKuangWei"},"content":"        assertParseFailure(parser, \" invalidText\",","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"PangKuangWei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CustomiseShowCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"PangKuangWei"},"content":"    public void parse_showRepeatArgs_throwsParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"PangKuangWei"},"content":"        ModelManager model \u003d new ModelManager(getTypicalSoConnect(), new TodoList(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"PangKuangWei"},"content":"        model.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"ADDRESS,TAGS,PHONE,EMAIL\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"PangKuangWei"},"content":"        assertParseFailure(parser, \" a/ a/\", MESSAGE_DUPLICATE_ATTRIBUTE);","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"PangKuangWei"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"PangKuangWei"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"PangKuangWei"},"content":"    public void parse_showWithoutArgs_throwsParseException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"PangKuangWei"},"content":"        assertParseFailure(parser, \"show\",","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"PangKuangWei"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CustomiseShowCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"PangKuangWei"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"PangKuangWei"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"PangKuangWei":77}},{"path":"src/test/java/soconnect/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.SoConnectBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"        assertEquals(new SoConnect(), new SoConnect(modelManager.getSoConnect()));","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"Ugholaf"},"content":"        userPrefs.setSoConnectFilePath(Paths.get(\"soconnect/file/path\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"PangKuangWei"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4,","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"NONE\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"Ugholaf"},"content":"        userPrefs.setSoConnectFilePath(Paths.get(\"new/soconnect/file/path\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"PangKuangWei"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4,","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"NONE\");","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"Ugholaf"},"content":"    public void setSoConnectFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"Ugholaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setSoConnectFilePath(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"Ugholaf"},"content":"    public void setSoConnectFilePath_validPath_setsSoConnectFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"Ugholaf"},"content":"        Path path \u003d Paths.get(\"soconnect/file/path\");","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"Ugholaf"},"content":"        modelManager.setSoConnectFilePath(path);","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"Ugholaf"},"content":"        assertEquals(path, modelManager.getSoConnectFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"Ugholaf"},"content":"    public void hasPerson_personNotInSoConnect_returnsFalse() {","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"Ugholaf"},"content":"    public void hasPerson_personInSoConnect_returnsTrue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"Ugholaf"},"content":"        SoConnect soConnect \u003d new SoConnectBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"Ugholaf"},"content":"        SoConnect differentSoConnect \u003d new SoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        TodoList todoList \u003d new TodoList();","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        modelManager \u003d new ModelManager(soConnect, todoList, userPrefs);","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(soConnect, todoList, userPrefs);","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"Ugholaf"},"content":"        // different soConnect -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentSoConnect, todoList, userPrefs)));","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":127,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertFalse(modelManager.equals(new ModelManager(soConnect, todoList, userPrefs)));","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"Ugholaf"},"content":"        differentUserPrefs.setSoConnectFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertFalse(modelManager.equals(new ModelManager(soConnect, todoList, differentUserPrefs)));","lastModifiedDate":"2022-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void sortByName() {","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        ModelManager sampleA \u003d new ModelManager();","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        ModelManager sampleB \u003d new ModelManager();","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.addPerson(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.addPerson(BENSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.addPerson(BENSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.addPerson(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByName(true);","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByName(false);","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertNotEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":152,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void sortByPhone() {","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        ModelManager sampleA \u003d new ModelManager();","lastModifiedDate":"2022-10-05"},{"lineNumber":155,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        ModelManager sampleB \u003d new ModelManager();","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.addPerson(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.addPerson(BENSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.addPerson(BENSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.addPerson(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByPhone(true);","lastModifiedDate":"2022-10-05"},{"lineNumber":161,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByPhone(false);","lastModifiedDate":"2022-10-05"},{"lineNumber":163,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertNotEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":164,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":165,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":166,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":167,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void sortByEmail() {","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        ModelManager sampleA \u003d new ModelManager();","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        ModelManager sampleB \u003d new ModelManager();","lastModifiedDate":"2022-10-05"},{"lineNumber":170,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.addPerson(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.addPerson(BENSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":172,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.addPerson(BENSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.addPerson(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":174,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByEmail(true);","lastModifiedDate":"2022-10-05"},{"lineNumber":175,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByEmail(false);","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertNotEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":178,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":179,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":180,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":181,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void sortByAddress() {","lastModifiedDate":"2022-10-05"},{"lineNumber":182,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        ModelManager sampleA \u003d new ModelManager();","lastModifiedDate":"2022-10-05"},{"lineNumber":183,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        ModelManager sampleB \u003d new ModelManager();","lastModifiedDate":"2022-10-05"},{"lineNumber":184,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.addPerson(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":185,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.addPerson(BENSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":186,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.addPerson(BENSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":187,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.addPerson(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":188,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByAddress(true);","lastModifiedDate":"2022-10-05"},{"lineNumber":189,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":190,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByAddress(false);","lastModifiedDate":"2022-10-05"},{"lineNumber":191,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertNotEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":192,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":193,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":194,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":195,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void sortByTag() {","lastModifiedDate":"2022-10-05"},{"lineNumber":196,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        ModelManager sampleA \u003d new ModelManager();","lastModifiedDate":"2022-10-05"},{"lineNumber":197,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        ModelManager sampleB \u003d new ModelManager();","lastModifiedDate":"2022-10-05"},{"lineNumber":198,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.addPerson(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":199,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.addPerson(BENSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":200,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.addPerson(BENSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":201,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.addPerson(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":202,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByTag(new Tag(\"owesMoney\"), false);","lastModifiedDate":"2022-10-05"},{"lineNumber":203,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-10"},{"lineNumber":204,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByTag(new Tag(\"owesMoney\"), true);","lastModifiedDate":"2022-10-10"},{"lineNumber":205,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertNotEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":206,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Ugholaf":24,"Eugene-Ong-W-X":77,"PangKuangWei":4,"-":102}},{"path":"src/test/java/soconnect/model/SoConnectTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.getTypicalSoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"ChongCheeKaiClarence"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.TypicalPersons;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"public class SoConnectTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"    private final SoConnect soConnect \u003d new SoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"        assertEquals(Collections.emptyList(), soConnect.getPersonList());","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"Ugholaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e soConnect.resetData(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"Ugholaf"},"content":"    public void resetData_withValidReadOnlySoConnect_replacesData() {","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"Ugholaf"},"content":"        SoConnect newData \u003d getTypicalSoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"Ugholaf"},"content":"        soConnect.resetData(newData);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"Ugholaf"},"content":"        assertEquals(newData, soConnect);","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        List\u003cTag\u003e newTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"Ugholaf"},"content":"        SoConnectStub newData \u003d new SoConnectStub(newPersons, newTags);","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"Ugholaf"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e soConnect.resetData(newData));","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"Ugholaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e soConnect.hasPerson(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"Ugholaf"},"content":"    public void hasPerson_personNotInSoConnect_returnsFalse() {","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"Ugholaf"},"content":"        assertFalse(soConnect.hasPerson(ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"Ugholaf"},"content":"    public void hasPerson_personInSoConnect_returnsTrue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"Ugholaf"},"content":"        soConnect.addPerson(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"Ugholaf"},"content":"        assertTrue(soConnect.hasPerson(ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"Ugholaf"},"content":"    public void hasPerson_personWithSameIdentityFieldsInSoConnect_returnsTrue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"Ugholaf"},"content":"        soConnect.addPerson(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"Ugholaf"},"content":"        assertTrue(soConnect.hasPerson(editedAlice));","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"Ugholaf"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e soConnect.getPersonList().remove(0));","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void sortByName() {","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"Ugholaf"},"content":"        SoConnect sampleA \u003d new SoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"Ugholaf"},"content":"        SoConnect sampleB \u003d new SoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.addPerson(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"Ugholaf"},"content":"        sampleA.addPerson(TypicalPersons.BENSON);","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"Ugholaf"},"content":"        sampleB.addPerson(TypicalPersons.BENSON);","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.addPerson(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByName(true);","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByName(false);","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertNotEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void sortByPhone() {","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"Ugholaf"},"content":"        SoConnect sampleA \u003d new SoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"Ugholaf"},"content":"        SoConnect sampleB \u003d new SoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.addPerson(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"Ugholaf"},"content":"        sampleA.addPerson(TypicalPersons.BENSON);","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"Ugholaf"},"content":"        sampleB.addPerson(TypicalPersons.BENSON);","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.addPerson(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByPhone(true);","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByPhone(false);","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertNotEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void sortByEmail() {","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"Ugholaf"},"content":"        SoConnect sampleA \u003d new SoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"Ugholaf"},"content":"        SoConnect sampleB \u003d new SoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.addPerson(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"Ugholaf"},"content":"        sampleA.addPerson(TypicalPersons.BENSON);","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"Ugholaf"},"content":"        sampleB.addPerson(TypicalPersons.BENSON);","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.addPerson(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByEmail(true);","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByEmail(false);","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertNotEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void sortByAddress() {","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"Ugholaf"},"content":"        SoConnect sampleA \u003d new SoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"Ugholaf"},"content":"        SoConnect sampleB \u003d new SoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.addPerson(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"Ugholaf"},"content":"        sampleA.addPerson(TypicalPersons.BENSON);","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"Ugholaf"},"content":"        sampleB.addPerson(TypicalPersons.BENSON);","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.addPerson(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByAddress(true);","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByAddress(false);","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertNotEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void sortByTag() {","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"Ugholaf"},"content":"        SoConnect sampleA \u003d new SoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"Ugholaf"},"content":"        SoConnect sampleB \u003d new SoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.addPerson(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"Ugholaf"},"content":"        sampleA.addPerson(TypicalPersons.BENSON);","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"Ugholaf"},"content":"        sampleB.addPerson(TypicalPersons.BENSON);","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.addPerson(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":152,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByTag(new Tag(\"owesMoney\"), false);","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByTag(new Tag(\"owesMoney\"), true);","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertNotEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":159,"author":{"gitId":"Ugholaf"},"content":"     * A stub ReadOnlySoConnect whose persons list can violate interface constraints.","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":161,"author":{"gitId":"Ugholaf"},"content":"    private static class SoConnectStub implements ReadOnlySoConnect {","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        private final ObservableList\u003cTag\u003e tags \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":165,"author":{"gitId":"Ugholaf"},"content":"        SoConnectStub(Collection\u003cPerson\u003e persons, Collection\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":167,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            this.tags.setAll(tags);","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":174,"author":{"gitId":"ChongCheeKaiClarence"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        public ObservableList\u003cTag\u003e getTagList() {","lastModifiedDate":"2022-10-03"},{"lineNumber":177,"author":{"gitId":"ChongCheeKaiClarence"},"content":"            return tags;","lastModifiedDate":"2022-10-03"},{"lineNumber":178,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Ugholaf":53,"Eugene-Ong-W-X":51,"ChongCheeKaiClarence":11,"-":66}},{"path":"src/test/java/soconnect/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"    public void setSoConnectFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setSoConnectFilePath(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Ugholaf":4,"-":17}},{"path":"src/test/java/soconnect/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model.person;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void compareTo() {","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Address a \u003d new Address(\"alpha\");","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Address b \u003d new Address(\"bravo\");","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Address c \u003d new Address(\"charlie\");","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Address bb \u003d new Address(\"BRAVO\");","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(1, b.compareTo(a));","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(-1, b.compareTo(c));","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(0, b.compareTo(bb)); // check that case is ignored in compareTo","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Ugholaf":2,"Eugene-Ong-W-X":13,"-":34}},{"path":"src/test/java/soconnect/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model.person;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void compareTo() {","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Email a \u003d new Email(\"alpha@xyz.com\");","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Email b \u003d new Email(\"bravo@xyz.com\");","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Email c \u003d new Email(\"charlie@xyz.com\");","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Email bb \u003d new Email(\"BRAVO@xyz.com\");","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(1, b.compareTo(a));","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(-1, b.compareTo(c));","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(0, b.compareTo(bb)); // check that case is ignored in compareTo","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Ugholaf":2,"Eugene-Ong-W-X":13,"-":66}},{"path":"src/test/java/soconnect/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model.person;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Ugholaf":2,"-":73}},{"path":"src/test/java/soconnect/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model.person;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void compareTo() {","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Name a \u003d new Name(\"A\");","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Name b \u003d new Name(\"B\");","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Name c \u003d new Name(\"C\");","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Name bb \u003d new Name(\"b\");","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(1, b.compareTo(a));","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(-1, b.compareTo(c));","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(0, b.compareTo(bb)); // check that case is ignored in compareTo","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Ugholaf":2,"Eugene-Ong-W-X":13,"-":38}},{"path":"src/test/java/soconnect/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model.person;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"ChongCheeKaiClarence"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Ugholaf":9,"ChongCheeKaiClarence":1,"-":77}},{"path":"src/test/java/soconnect/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model.person;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    void compareTo() {","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Phone a \u003d new Phone(\"10001234\");","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Phone b \u003d new Phone(\"20001234\");","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        Phone c \u003d new Phone(\"30001234\");","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(10000000, b.compareTo(a));","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(-10000000, b.compareTo(c));","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(0, b.compareTo(b)); // check that case is ignored in compareTo","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Ugholaf":2,"Eugene-Ong-W-X":12,"-":38}},{"path":"src/test/java/soconnect/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model.person;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Eugene-Ong-W-X"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import java.util.TreeSet;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.PersonBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":172,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":174,"author":{"gitId":"Ugholaf"},"content":"    public void getUniqueNames_listWithUniqueNames_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":175,"author":{"gitId":"Ugholaf"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"Ugholaf"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"Ugholaf"},"content":"        TreeSet\u003cString\u003e listWithUniqueNames \u003d uniquePersonList.getUniqueNames();","lastModifiedDate":"2022-10-05"},{"lineNumber":178,"author":{"gitId":"Ugholaf"},"content":"        TreeSet\u003cString\u003e expectedListWithUniqueNames \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":179,"author":{"gitId":"Ugholaf"},"content":"        expectedListWithUniqueNames.addAll(Arrays.asList(ALICE.getName().fullName, BOB.getName().fullName));","lastModifiedDate":"2022-10-05"},{"lineNumber":180,"author":{"gitId":"Ugholaf"},"content":"        assertEquals(expectedListWithUniqueNames, listWithUniqueNames);","lastModifiedDate":"2022-10-05"},{"lineNumber":181,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":182,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":183,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":184,"author":{"gitId":"Ugholaf"},"content":"    public void getUniqueNames_emptyList_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":185,"author":{"gitId":"Ugholaf"},"content":"        TreeSet\u003cString\u003e expectedEmptyList \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":186,"author":{"gitId":"Ugholaf"},"content":"        assertEquals(expectedEmptyList, uniquePersonList.getUniqueNames());","lastModifiedDate":"2022-10-05"},{"lineNumber":187,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":188,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":189,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":190,"author":{"gitId":"Ugholaf"},"content":"    public void sortByName_success() {","lastModifiedDate":"2022-10-07"},{"lineNumber":191,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        UniquePersonList sampleA \u003d new UniquePersonList();","lastModifiedDate":"2022-10-05"},{"lineNumber":192,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        UniquePersonList sampleB \u003d new UniquePersonList();","lastModifiedDate":"2022-10-05"},{"lineNumber":193,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":194,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.add(BENSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":195,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.add(BENSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":196,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":197,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByName(true);","lastModifiedDate":"2022-10-05"},{"lineNumber":198,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":199,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByName(false);","lastModifiedDate":"2022-10-05"},{"lineNumber":200,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertNotEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":201,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":202,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":203,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":204,"author":{"gitId":"Ugholaf"},"content":"    public void sortByPhone_success() {","lastModifiedDate":"2022-10-07"},{"lineNumber":205,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        UniquePersonList sampleA \u003d new UniquePersonList();","lastModifiedDate":"2022-10-05"},{"lineNumber":206,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        UniquePersonList sampleB \u003d new UniquePersonList();","lastModifiedDate":"2022-10-05"},{"lineNumber":207,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":208,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.add(BENSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":209,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.add(BENSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":210,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":211,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByPhone(true);","lastModifiedDate":"2022-10-05"},{"lineNumber":212,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":213,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByPhone(false);","lastModifiedDate":"2022-10-05"},{"lineNumber":214,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertNotEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":215,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":216,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":217,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":218,"author":{"gitId":"Ugholaf"},"content":"    public void sortByEmail_success() {","lastModifiedDate":"2022-10-07"},{"lineNumber":219,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        UniquePersonList sampleA \u003d new UniquePersonList();","lastModifiedDate":"2022-10-05"},{"lineNumber":220,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        UniquePersonList sampleB \u003d new UniquePersonList();","lastModifiedDate":"2022-10-05"},{"lineNumber":221,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":222,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.add(BENSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":223,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.add(BENSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":224,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":225,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByEmail(true);","lastModifiedDate":"2022-10-05"},{"lineNumber":226,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":227,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByEmail(false);","lastModifiedDate":"2022-10-05"},{"lineNumber":228,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertNotEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":229,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":230,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":231,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":232,"author":{"gitId":"Ugholaf"},"content":"    public void sortByAddress_success() {","lastModifiedDate":"2022-10-07"},{"lineNumber":233,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        UniquePersonList sampleA \u003d new UniquePersonList();","lastModifiedDate":"2022-10-05"},{"lineNumber":234,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        UniquePersonList sampleB \u003d new UniquePersonList();","lastModifiedDate":"2022-10-05"},{"lineNumber":235,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":236,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.add(BENSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":237,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.add(BENSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":238,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":239,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByAddress(true);","lastModifiedDate":"2022-10-05"},{"lineNumber":240,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":241,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByAddress(false);","lastModifiedDate":"2022-10-05"},{"lineNumber":242,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertNotEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":243,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":244,"author":{"gitId":"Eugene-Ong-W-X"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":245,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":246,"author":{"gitId":"Ugholaf"},"content":"    public void sortByTag_success() {","lastModifiedDate":"2022-10-07"},{"lineNumber":247,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        UniquePersonList sampleA \u003d new UniquePersonList();","lastModifiedDate":"2022-10-05"},{"lineNumber":248,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        UniquePersonList sampleB \u003d new UniquePersonList();","lastModifiedDate":"2022-10-05"},{"lineNumber":249,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":250,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.add(BENSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":251,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.add(BENSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":252,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleB.add(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":253,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByTag(new Tag(\"owesMoney\"), false);","lastModifiedDate":"2022-10-05"},{"lineNumber":254,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-10"},{"lineNumber":255,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        sampleA.sortByTag(new Tag(\"owesMoney\"), true);","lastModifiedDate":"2022-10-10"},{"lineNumber":256,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        assertNotEquals(sampleA, sampleB);","lastModifiedDate":"2022-10-05"},{"lineNumber":257,"author":{"gitId":"Eugene-Ong-W-X"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Ugholaf":32,"Eugene-Ong-W-X":66,"ChongCheeKaiClarence":2,"-":158}},{"path":"src/test/java/soconnect/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.model.tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"Ugholaf":2,"-":24}},{"path":"src/test/java/soconnect/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Ugholaf":9,"-":101}},{"path":"src/test/java/soconnect/storage/JsonSerializableSoConnectTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.util.JsonUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.SoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.testutil.TypicalPersons;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"public class JsonSerializableSoConnectTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableSoConnectTest\");","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsSoConnect.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonSoConnect.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonSoConnect.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"        JsonSerializableSoConnect dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"                JsonSerializableSoConnect.class).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"        SoConnect soConnectFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"        SoConnect typicalPersonsSoConnect \u003d TypicalPersons.getTypicalSoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"        assertEquals(soConnectFromFile, typicalPersonsSoConnect);","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"        JsonSerializableSoConnect dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"                JsonSerializableSoConnect.class).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"Ugholaf"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"Ugholaf"},"content":"        JsonSerializableSoConnect dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"Ugholaf"},"content":"                JsonSerializableSoConnect.class).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"Ugholaf"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableSoConnect.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"Ugholaf"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Ugholaf":47}},{"path":"src/test/java/soconnect/storage/JsonSoConnectStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.HOON;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.IDA;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.getTypicalSoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ReadOnlySoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.SoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"public class JsonSoConnectStorageTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSoConnectStorageTest\");","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"    @TempDir","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"    public void readSoConnect_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e readSoConnect(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"    private java.util.Optional\u003cReadOnlySoConnect\u003e readSoConnect(String filePath) throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"        return new JsonSoConnectStorage(Paths.get(filePath)).readSoConnect(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"Ugholaf"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Ugholaf"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"Ugholaf"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"Ugholaf"},"content":"                : null;","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"Ugholaf"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"Ugholaf"},"content":"        assertFalse(readSoConnect(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"Ugholaf"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"Ugholaf"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSoConnect(\"notJsonFormatSoConnect.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"Ugholaf"},"content":"    public void readSoConnect_invalidPersonSoConnect_throwDataConversionException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"Ugholaf"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSoConnect(\"invalidPersonSoConnect.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"Ugholaf"},"content":"    public void readSoConnect_invalidAndValidPersonSoConnect_throwDataConversionException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"Ugholaf"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSoConnect(\"invalidAndValidPersonSoConnect.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"Ugholaf"},"content":"    public void readAndsaveSoConnect_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"Ugholaf"},"content":"        Path filePath \u003d testFolder.resolve(\"TempSoConnect.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"Ugholaf"},"content":"        SoConnect original \u003d getTypicalSoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"Ugholaf"},"content":"        JsonSoConnectStorage jsonSoConnectStorage \u003d new JsonSoConnectStorage(filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"Ugholaf"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"Ugholaf"},"content":"        jsonSoConnectStorage.saveSoConnect(original, filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"Ugholaf"},"content":"        ReadOnlySoConnect readBack \u003d jsonSoConnectStorage.readSoConnect(filePath).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"Ugholaf"},"content":"        assertEquals(original, new SoConnect(readBack));","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"Ugholaf"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"Ugholaf"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"Ugholaf"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"Ugholaf"},"content":"        jsonSoConnectStorage.saveSoConnect(original, filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"Ugholaf"},"content":"        readBack \u003d jsonSoConnectStorage.readSoConnect(filePath).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"Ugholaf"},"content":"        assertEquals(original, new SoConnect(readBack));","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"Ugholaf"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"Ugholaf"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"Ugholaf"},"content":"        jsonSoConnectStorage.saveSoConnect(original); // file path not specified","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"Ugholaf"},"content":"        readBack \u003d jsonSoConnectStorage.readSoConnect().get(); // file path not specified","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"Ugholaf"},"content":"        assertEquals(original, new SoConnect(readBack));","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"Ugholaf"},"content":"    public void saveSoConnect_nullSoConnect_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"Ugholaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveSoConnect(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"Ugholaf"},"content":"     * Saves {@code soConnect} at the specified {@code filePath}.","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"Ugholaf"},"content":"    private void saveSoConnect(ReadOnlySoConnect soConnect, String filePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"Ugholaf"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"Ugholaf"},"content":"            new JsonSoConnectStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"Ugholaf"},"content":"                    .saveSoConnect(soConnect, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"Ugholaf"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"Ugholaf"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"Ugholaf"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"Ugholaf"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"Ugholaf"},"content":"    public void saveSoConnect_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"Ugholaf"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveSoConnect(new SoConnect(), null));","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Ugholaf":110}},{"path":"src/test/java/soconnect/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"PangKuangWei"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100,","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"NONE\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"Ugholaf"},"content":"        userPrefs.setSoConnectFilePath(Paths.get(\"soconnect.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"PangKuangWei"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2,","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"NONE\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"PangKuangWei"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5,","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"NONE\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Ugholaf":6,"PangKuangWei":6,"-":114}},{"path":"src/test/java/soconnect/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.TypicalPersons.getTypicalSoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.ReadOnlySoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.SoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"        JsonSoConnectStorage soConnectStorage \u003d new JsonSoConnectStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        JsonTodoListStorage todoListStorage \u003d new JsonTodoListStorage(getTempFilePath(\"todolist\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"Eugene-Ong-W-X"},"content":"        storageManager \u003d new StorageManager(soConnectStorage, todoListStorage, userPrefsStorage);","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"PangKuangWei"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6,","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"PangKuangWei"},"content":"                \"ADDRESS\u003eTAGS\u003ePHONE\u003eEMAIL\", \"NONE\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"Ugholaf"},"content":"    public void soConnectReadSave() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"Ugholaf"},"content":"         * {@link JsonSoConnectStorage} class.","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"Ugholaf"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonSoConnectStorageTest} class.","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"Ugholaf"},"content":"        SoConnect original \u003d getTypicalSoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"Ugholaf"},"content":"        storageManager.saveSoConnect(original);","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"Ugholaf"},"content":"        ReadOnlySoConnect retrieved \u003d storageManager.readSoConnect().get();","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"Ugholaf"},"content":"        assertEquals(original, new SoConnect(retrieved));","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"Ugholaf"},"content":"    public void getSoConnectFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"Ugholaf"},"content":"        assertNotNull(storageManager.getSoConnectFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ugholaf":16,"Eugene-Ong-W-X":2,"PangKuangWei":2,"-":50}},{"path":"src/test/java/soconnect/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"Ugholaf":1,"-":33}},{"path":"src/test/java/soconnect/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        // descriptor.setTags(person.getTags());","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Ugholaf":7,"ChongCheeKaiClarence":1,"-":64}},{"path":"src/test/java/soconnect/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Address;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Ugholaf":8,"-":88}},{"path":"src/test/java/soconnect/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.AddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import soconnect.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Ugholaf":10,"-":52}},{"path":"src/test/java/soconnect/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ugholaf":1,"-":71}},{"path":"src/test/java/soconnect/testutil/SoConnectBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.SoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":" *     {@code SoConnect ab \u003d new SoConnectBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"public class SoConnectBuilder {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Ugholaf"},"content":"    private SoConnect soConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Ugholaf"},"content":"    public SoConnectBuilder() {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Ugholaf"},"content":"        soConnect \u003d new SoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"    public SoConnectBuilder(SoConnect soConnect) {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"        this.soConnect \u003d soConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Ugholaf"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Ugholaf"},"content":"     * Adds a new {@code Person} to the {@code SoConnect} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Ugholaf"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Ugholaf"},"content":"    public SoConnectBuilder withPerson(Person person) {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Ugholaf"},"content":"        soConnect.addPerson(person);","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Ugholaf"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Ugholaf"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Ugholaf"},"content":"    public SoConnect build() {","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Ugholaf"},"content":"        return soConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Ugholaf"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Ugholaf"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Ugholaf":34}},{"path":"src/test/java/soconnect/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ugholaf":4,"-":51}},{"path":"src/test/java/soconnect/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import soconnect.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"Ugholaf":2,"-":10}},{"path":"src/test/java/soconnect/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.SoConnect;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Ugholaf"},"content":"import soconnect.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static final Tag OWESMONEY \u003d new Tag(\"owesMoney\");","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"ChongCheeKaiClarence"},"content":"    public static final Tag FRIENDS \u003d new Tag(\"friends\");","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"Ugholaf"},"content":"     * Returns an {@code SoConnect} with all the typical persons.","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"Ugholaf"},"content":"    public static SoConnect getTypicalSoConnect() {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"Ugholaf"},"content":"        SoConnect ab \u003d new SoConnect();","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":73,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        ab.addTag(OWESMONEY);","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"ChongCheeKaiClarence"},"content":"        ab.addTag(FRIENDS);","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Ugholaf":17,"ChongCheeKaiClarence":4,"-":60}},{"path":"src/test/java/soconnect/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Ugholaf":1,"-":34}},{"path":"src/test/java/soconnect/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Ugholaf"},"content":"package soconnect.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Ugholaf"},"content":"import static soconnect.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"Ugholaf"},"content":"import soconnect.MainApp;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Ugholaf":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"\u003c?import soconnect.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Ugholaf":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"Ugholaf"},"content":"\u003cfx:root type\u003d\"soconnect.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Ugholaf":1,"-":5}}]
