[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"# GREWZ","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W12-4/tp/actions)","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"## Aim","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"Evande1"},"content":"- GREWZ is an integrated platform for teacher assistants in university, with the aim of helping teacher assistants to manage their students efficiently.","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"Evande1"},"content":"Wanting to help fellow teacher assistants, we are working together to develop a comprehensive address book that answers their needs.","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"Evande1"},"content":"- GREWZ is optimised for teacher assistants who prefer to work with a Command Line interface(CLI).","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"Evande1"},"content":"## Site map","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"Evande1"},"content":"- [About Us](docs/AboutUs.md)","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"Evande1"},"content":"- [Developer Guide](docs/DeveloperGuide.md)","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"Evande1"},"content":"- [User Guide](UserGuide.md)","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"## Acknowledgements","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"Evande1"},"content":"- This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"Evande1"},"content":"- Libraries: [JavaFX](https://openjfx.io/), [JUnit5](https://junit.org/junit5/)","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"Evande1":15,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"run {","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"thamruicong":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"Evande1"},"content":"# About Us","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"Evande1"},"content":"GREWZ is an integrated platform for teacher assistants in university, with the aim of helping teacher assistants to manage their students efficiently.","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"Wanting to help fellow teacher assistants, we are working together to develop a comprehensive address book that answers their needs.","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"gowribhat"},"content":"### Gowri Lakshmikanth Bhat","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"gowribhat"},"content":"\u003cimg src\u003d\"images/gowribhat.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"gowribhat"},"content":"[[github](https://github.com/gowribhat)]","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"gowribhat"},"content":"[[portfolio](team/gowribhat.md)]","lastModifiedDate":"2022-09-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"### Rui Cong","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Evande1"},"content":"\u003cimg src\u003d\"images/thamruicong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"zzthian"},"content":"[github](http://github.com/thamruicong) [portfolio](team/thamruicong.md)","lastModifiedDate":"2022-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"* Role: Developer","lastModifiedDate":"2022-09-20"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"* Responsibilities: Coding, Approving Pull Requests","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Evande1"},"content":"### Evan Loo","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Evande1"},"content":"\u003cimg src\u003d\"images/evande1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Evande1"},"content":"[[github](http://github.com/evande1)] [[portfolio](team/evande1.md)]","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Evande1"},"content":"* Role: Code quality","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"Evande1"},"content":"* Responsibilities: Ensures adherence to code quality and practices.","lastModifiedDate":"2022-09-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Whysochong"},"content":"### Lee Wai Chong","lastModifiedDate":"2022-09-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Evande1"},"content":"\u003cimg src\u003d\"images/whysochong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Whysochong"},"content":"[[github](https://github.com/Whysochong)]","lastModifiedDate":"2022-09-20"},{"lineNumber":47,"author":{"gitId":"Whysochong"},"content":"[[portfolio](team/whysochong.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Whysochong"},"content":"* Responsibilities: Project Advisor, Code Testing","lastModifiedDate":"2022-09-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"zzthian"},"content":"### Thian Zhang Zhi","lastModifiedDate":"2022-09-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Evande1"},"content":"\u003cimg src\u003d\"images/zzthian.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":57,"author":{"gitId":"zzthian"},"content":"[[portfolio](team/zzthian.md)]","lastModifiedDate":"2022-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"gowribhat":4,"thamruicong":3,"Whysochong":4,"zzthian":3,"Evande1":14,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"zzthian"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `StudentListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"zzthian"},"content":"* depends on some classes in the `Model` component, as it displays `Student` object residing in the `Model`.","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"zzthian"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a student).","lastModifiedDate":"2022-10-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"zzthian"},"content":"* stores the address book data i.e., all `Student` objects (which are contained in a `UniqueStudentList` object).","lastModifiedDate":"2022-10-04"},{"lineNumber":125,"author":{"gitId":"zzthian"},"content":"* stores the currently \u0027selected\u0027 `Student` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cStudent\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"zzthian"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Student` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Student` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"Evande1"},"content":"### Student Attendance feature ###","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"Evande1"},"content":"The student attendance feature keeps track of student\u0027s attendance. The feature comprises of commands namely,","lastModifiedDate":"2022-10-15"},{"lineNumber":159,"author":{"gitId":"Evande1"},"content":"- ```AttendanceAddCommand``` - Adds an attendance list to the student in the class list.","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"Evande1"},"content":"- ```AttendanceDeleteCommand``` - Removes the attendance list to the student in the class list.","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"Evande1"},"content":"- ```AttendanceMarkCommand``` - Marks or unmarks student\u0027s attendance in his attendance list.","lastModifiedDate":"2022-10-16"},{"lineNumber":162,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"Evande1"},"content":"The attendance commands all follow similar paths of execution which defers slightly from Logic sequence diagram. Tis is illustrated in the sequence diagram below, which shows the diagram for Student\u003cINSERT\u003eCommand.","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"Evande1"},"content":"The attendance commands when executed will use methods exposed by the ```Model``` interface and perform the related operations.","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":167,"author":{"gitId":"Evande1"},"content":"**Common steps among the Attendance Commands**","lastModifiedDate":"2022-10-16"},{"lineNumber":168,"author":{"gitId":"Evande1"},"content":" ","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"Evande1"},"content":"1. The ```AddressBookParser``` will select ```AttendanceCommandParser``` and parse the user input.","lastModifiedDate":"2022-10-16"},{"lineNumber":170,"author":{"gitId":"Evande1"},"content":"2. The ```AttendanceCommandParser#parse``` will select another AttendanceParser to parse in the arguments.","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"Evande1"},"content":"3. The arguments are tokenized and the respective refined inputs of each argument is created.","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"Evande1"},"content":"**Add Attendance command**","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"Evande1"},"content":"Implementation:","lastModifiedDate":"2022-10-16"},{"lineNumber":175,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"Evande1"},"content":"The following is a more detailed explanation on how ```AttendanceAddCommand``` works.","lastModifiedDate":"2022-10-16"},{"lineNumber":177,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"Evande1"},"content":"1. After the successful parsing of user input into ```AttendanceCommandParser```, the input gets parsed into ```AttendanceAddCommandParser``` to further separate user input.","lastModifiedDate":"2022-10-16"},{"lineNumber":179,"author":{"gitId":"Evande1"},"content":"2. Following which, ```AttendanceAddCommand#execute(Model model)``` method is called which validates the attendance list.","lastModifiedDate":"2022-10-16"},{"lineNumber":180,"author":{"gitId":"Evande1"},"content":"3. If the student index or size specified is invalid, a `ParserExeception` will be thrown and attendance will not be added to the student.","lastModifiedDate":"2022-10-16"},{"lineNumber":181,"author":{"gitId":"Evande1"},"content":" ","lastModifiedDate":"2022-10-16"},{"lineNumber":182,"author":{"gitId":"Evande1"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the format of adding attendance contains error(s), GREWZ will display either an unknown command or wrong formatting error message.","lastModifiedDate":"2022-10-16"},{"lineNumber":183,"author":{"gitId":"Evande1"},"content":" ","lastModifiedDate":"2022-10-16"},{"lineNumber":184,"author":{"gitId":"Evande1"},"content":"4. The method `Model#setStudent(studentToEdit, editedStudent)` and `Model#updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS)` gets called and a new `CommandResult` will be returned with the success message.","lastModifiedDate":"2022-10-16"},{"lineNumber":185,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":186,"author":{"gitId":"Evande1"},"content":"**Mark Attendance command**","lastModifiedDate":"2022-10-16"},{"lineNumber":187,"author":{"gitId":"Evande1"},"content":"Implementation:","lastModifiedDate":"2022-10-16"},{"lineNumber":188,"author":{"gitId":"Evande1"},"content":" ","lastModifiedDate":"2022-10-16"},{"lineNumber":189,"author":{"gitId":"Evande1"},"content":"The following is a more detailed explanation on how `AttendanceMarkCommand` works.","lastModifiedDate":"2022-10-16"},{"lineNumber":190,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":191,"author":{"gitId":"Evande1"},"content":"1. After the successful parsing of user input into ```AttendanceCommandParser```, the input gets parsed into ```AttendanceMarkCommandParser``` to further separate user input.","lastModifiedDate":"2022-10-16"},{"lineNumber":192,"author":{"gitId":"Evande1"},"content":"2. Following which, ```AttendanceMarkCommand#execute(Model model)``` method is called which validates the attendance list.","lastModifiedDate":"2022-10-16"},{"lineNumber":193,"author":{"gitId":"Evande1"},"content":"3. If the student index, lesson number or attendance value specified is invalid, a ```ParserExeception``` will be thrown and attendance will not be marked.","lastModifiedDate":"2022-10-16"},{"lineNumber":194,"author":{"gitId":"Evande1"},"content":"4. The method ```Model#setStudent(studentToEdit, editedStudent)``` gets called and a new `CommandResult` will be returned with the success message. ","lastModifiedDate":"2022-10-16"},{"lineNumber":195,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":196,"author":{"gitId":"Evande1"},"content":"**Delete Attendance command**","lastModifiedDate":"2022-10-16"},{"lineNumber":197,"author":{"gitId":"Evande1"},"content":"Implementation:","lastModifiedDate":"2022-10-16"},{"lineNumber":198,"author":{"gitId":"Evande1"},"content":" ","lastModifiedDate":"2022-10-16"},{"lineNumber":199,"author":{"gitId":"Evande1"},"content":"The following is a more detailed explanation on how `AttendanceDeleteCommand` works.","lastModifiedDate":"2022-10-16"},{"lineNumber":200,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":201,"author":{"gitId":"Evande1"},"content":"1. After the successful parsing of user input into ```AttendanceCommandParser```, the input gets parsed into ```AttendanceDeleteCommandParser``` to further separate user input.","lastModifiedDate":"2022-10-16"},{"lineNumber":202,"author":{"gitId":"Evande1"},"content":"2. Following which, ```AttendanceDeleteCommand#execute(Model model)``` method is called which validates the attendance list.","lastModifiedDate":"2022-10-16"},{"lineNumber":203,"author":{"gitId":"Evande1"},"content":"3. If the student index specified is invalid, a ```ParserExeception``` will be thrown and attendance list will not be delete.","lastModifiedDate":"2022-10-16"},{"lineNumber":204,"author":{"gitId":"Evande1"},"content":"4. The method ```Model#setStudent(studentToEdit, editedStudent)``` and `Model#updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS)` gets called and a new `CommandResult` will be returned with the success message.","lastModifiedDate":"2022-10-16"},{"lineNumber":205,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":206,"author":{"gitId":"Evande1"},"content":"![attendance delete activity](image/AttendanceDeleteActivityDiagram.png)","lastModifiedDate":"2022-10-16"},{"lineNumber":207,"author":{"gitId":"Evande1"},"content":"Figure No. Activity diagram for AttendanceDeleteCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":208,"author":{"gitId":"Evande1"},"content":"![attendance delete sequence](image/AttendanceDeleteSequenceDiagram.png)","lastModifiedDate":"2022-10-16"},{"lineNumber":209,"author":{"gitId":"Evande1"},"content":"Figure No. Sequence diagram for AttendanceDeleteCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":210,"author":{"gitId":"Evande1"},"content":"#### Design considerations:","lastModifiedDate":"2022-10-16"},{"lineNumber":211,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":212,"author":{"gitId":"Evande1"},"content":"**Aspect: Command Syntax**","lastModifiedDate":"2022-10-16"},{"lineNumber":213,"author":{"gitId":"Evande1"},"content":"- Current implementation: Using 2 command word syntax \\n E.g. ```attendance add``","lastModifiedDate":"2022-10-16"},{"lineNumber":214,"author":{"gitId":"Evande1"},"content":" - Pros: Increases clarity and flexibility of future commands","lastModifiedDate":"2022-10-16"},{"lineNumber":215,"author":{"gitId":"Evande1"},"content":" - Cons: Users have to type more ","lastModifiedDate":"2022-10-16"},{"lineNumber":216,"author":{"gitId":"Evande1"},"content":"- Alternatives considered: We considered using only ```attendance```, while using the forward slash ```/``` with specific prefixes for attendance commands, e.g. ```attendance 1 a/10 s/12```, which adds an attendance list of size 12 to the first student.","lastModifiedDate":"2022-10-16"},{"lineNumber":217,"author":{"gitId":"Evande1"},"content":" - Pros: Users type less","lastModifiedDate":"2022-10-16"},{"lineNumber":218,"author":{"gitId":"Evande1"},"content":" - Cons: Users might accidentally delete/alter attendance lists and takes a longer time to learn command prefixes.","lastModifiedDate":"2022-10-16"},{"lineNumber":219,"author":{"gitId":"Evande1"},"content":" ","lastModifiedDate":"2022-10-16"},{"lineNumber":220,"author":{"gitId":"Evande1"},"content":"**Aspect: Size of attendance lists**","lastModifiedDate":"2022-10-16"},{"lineNumber":221,"author":{"gitId":"Evande1"},"content":"- Current Implementation: Max size of 12","lastModifiedDate":"2022-10-16"},{"lineNumber":222,"author":{"gitId":"Evande1"},"content":" - Pros: No need to resize attendance list display, users typically do not have more than 12 tutorials.","lastModifiedDate":"2022-10-16"},{"lineNumber":223,"author":{"gitId":"Evande1"},"content":" - Cons: Less flexibility in size of attendance list.","lastModifiedDate":"2022-10-16"},{"lineNumber":224,"author":{"gitId":"Evande1"},"content":" ","lastModifiedDate":"2022-10-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"zzthian"},"content":"Step 2. The user executes `delete 5` command to delete the 5th student in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2022-10-02"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"zzthian"},"content":"Step 3. The user executes `add n/David …​` to add a new student. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2022-10-02"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"zzthian"},"content":"Step 4. The user now decides that adding the student was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2022-10-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"zzthian"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the student being deleted).","lastModifiedDate":"2022-10-02"},{"lineNumber":301,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":315,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":316,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":317,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":318,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"Evande1"},"content":"* Tech savvy university teacher assistants","lastModifiedDate":"2022-09-28"},{"lineNumber":329,"author":{"gitId":"Evande1"},"content":"* has a need to manage student contacts","lastModifiedDate":"2022-09-28"},{"lineNumber":330,"author":{"gitId":"Evande1"},"content":"* Prefer desktop apps over other types","lastModifiedDate":"2022-09-28"},{"lineNumber":331,"author":{"gitId":"Evande1"},"content":"* Can type fast","lastModifiedDate":"2022-09-28"},{"lineNumber":332,"author":{"gitId":"Evande1"},"content":"* Prefers typing to mouse interactions","lastModifiedDate":"2022-09-28"},{"lineNumber":333,"author":{"gitId":"Evande1"},"content":"* Is reasonably comfortable using CLI apps","lastModifiedDate":"2022-09-28"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"Evande1"},"content":"**Value proposition**:","lastModifiedDate":"2022-09-28"},{"lineNumber":336,"author":{"gitId":"Evande1"},"content":"* Teacher assistant have a lot of students information to manage and our product will make it easier for teacher assistants to remember student information, such as names, faces, attendance, etc","lastModifiedDate":"2022-09-28"},{"lineNumber":337,"author":{"gitId":"Evande1"},"content":"* Teacher assistants also want to ensure their students are doing well and our product will ensure that they can keep track of student\u0027s performance","lastModifiedDate":"2022-09-28"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"| Priority | As a …​                     | I want to …​                                              | So that I can…​                                       |","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"thamruicong"},"content":"|----------|-----------------------------|-----------------------------------------------------------|-------------------------------------------------------|","lastModifiedDate":"2022-10-02"},{"lineNumber":345,"author":{"gitId":"thamruicong"},"content":"| `* * *`  | teacher assistant           | be able to add comments                                   | monitor my students\u0027 progress.                        |","lastModifiedDate":"2022-10-02"},{"lineNumber":346,"author":{"gitId":"thamruicong"},"content":"| `* * *`  | teacher assistant           | be able to retrieve my student\u0027s contact details          | look them up easily.                                  |","lastModifiedDate":"2022-10-02"},{"lineNumber":347,"author":{"gitId":"zzthian"},"content":"| `* * *`  | teacher assistant           | be able to recognise my students from different tutorials | identify them.                                        |","lastModifiedDate":"2022-10-03"},{"lineNumber":348,"author":{"gitId":"thamruicong"},"content":"| `* * *`  | teacher assistant           | track the date and time while using my app                | so that I can be on time for my classes.              |","lastModifiedDate":"2022-10-02"},{"lineNumber":349,"author":{"gitId":"thamruicong"},"content":"| `* * *`  | forgetful teacher assistant | record attendance                                         | keep track of my students.                            |","lastModifiedDate":"2022-10-02"},{"lineNumber":350,"author":{"gitId":"thamruicong"},"content":"| `* * *`  | teacher assistant           | add student\u0027s profiles flexibly                           | create profiles based on limited student information. |","lastModifiedDate":"2022-10-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"Evande1"},"content":"(For all use cases below, the **System** is the `GREWZ` and the **Actor** is the `teacher assistant`, unless specified otherwise)","lastModifiedDate":"2022-09-28"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"Evande1"},"content":"**Use case: UC01 - Add a Student**","lastModifiedDate":"2022-09-28"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"Evande1"},"content":"**Guarantees:**  A student contact is added to GREWZ.","lastModifiedDate":"2022-09-28"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"Evande1"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"Evande1"},"content":"1. Tutor adds the student by entering the command with student details.","lastModifiedDate":"2022-10-15"},{"lineNumber":365,"author":{"gitId":"Evande1"},"content":"2. GREWZ adds student. ","lastModifiedDate":"2022-09-28"},{"lineNumber":366,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"Evande1"},"content":"* 1a. GREWZ detects an error in entered data.","lastModifiedDate":"2022-09-28"},{"lineNumber":371,"author":{"gitId":"Evande1"},"content":"    * 1a1. GREWZ responds with an error message","lastModifiedDate":"2022-09-28"},{"lineNumber":372,"author":{"gitId":"Evande1"},"content":"    * 1a2. User enters command with student details","lastModifiedDate":"2022-09-28"},{"lineNumber":373,"author":{"gitId":"Evande1"},"content":"    * Repeat steps until data is correct","lastModifiedDate":"2022-09-28"},{"lineNumber":374,"author":{"gitId":"Evande1"},"content":"    Use case resumes in step 2","lastModifiedDate":"2022-09-28"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"Evande1"},"content":"**Use case: UC02 - Delete a Student**","lastModifiedDate":"2022-10-15"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":378,"author":{"gitId":"Evande1"},"content":"**Use case: UC03 - Edit a Student**","lastModifiedDate":"2022-10-15"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":380,"author":{"gitId":"Evande1"},"content":"**Use case: UC04 - Add attendance to Student**","lastModifiedDate":"2022-10-15"},{"lineNumber":381,"author":{"gitId":"Evande1"},"content":"**Guarantees:**  An attendance is added to the Student.","lastModifiedDate":"2022-10-15"},{"lineNumber":382,"author":{"gitId":"Evande1"},"content":"**MSS**","lastModifiedDate":"2022-10-15"},{"lineNumber":383,"author":{"gitId":"Evande1"},"content":"1. Tutor adds attendance to student by entering command with module and number of lessons.","lastModifiedDate":"2022-10-15"},{"lineNumber":384,"author":{"gitId":"Evande1"},"content":"2. GREWZ adds attendance to student.","lastModifiedDate":"2022-10-15"},{"lineNumber":385,"author":{"gitId":"Evande1"},"content":"Use case ends.","lastModifiedDate":"2022-10-15"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":387,"author":{"gitId":"Evande1"},"content":"**Extensions**","lastModifiedDate":"2022-10-15"},{"lineNumber":388,"author":{"gitId":"Evande1"},"content":"* 1a. GREWZ detects an error in entered data.","lastModifiedDate":"2022-10-15"},{"lineNumber":389,"author":{"gitId":"Evande1"},"content":"    * 1a1. GREWZ responds with an error message","lastModifiedDate":"2022-10-15"},{"lineNumber":390,"author":{"gitId":"Evande1"},"content":"    * 1a2. User enters command with student details","lastModifiedDate":"2022-10-15"},{"lineNumber":391,"author":{"gitId":"Evande1"},"content":"    * Repeat steps until data is correct","lastModifiedDate":"2022-10-15"},{"lineNumber":392,"author":{"gitId":"Evande1"},"content":"    Use case resumes in step 2","lastModifiedDate":"2022-10-15"},{"lineNumber":393,"author":{"gitId":"Evande1"},"content":"    ","lastModifiedDate":"2022-10-15"},{"lineNumber":394,"author":{"gitId":"Evande1"},"content":"**Use case: UC05 - Delete attendance of a Student**","lastModifiedDate":"2022-10-15"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"Evande1"},"content":"**Use case: UC06 - Mark attendance of Student**","lastModifiedDate":"2022-10-15"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"zzthian"},"content":"2.  Should be able to hold up to 1000 students without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-10-02"},{"lineNumber":404,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"Evande1"},"content":"4.  User has to have a basic grasp of English as other languages are not supported.","lastModifiedDate":"2022-09-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"Evande1"},"content":"* **Command**","lastModifiedDate":"2022-09-28"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"zzthian"},"content":"### Deleting a student","lastModifiedDate":"2022-10-02"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"zzthian"},"content":"1. Deleting a student while all students are being shown","lastModifiedDate":"2022-10-02"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"zzthian"},"content":"   1. Prerequisites: List all students using the `list` command. Multiple students in the list.","lastModifiedDate":"2022-10-02"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"zzthian"},"content":"      Expected: No student is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-10-02"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"thamruicong":6,"zzthian":16,"Evande1":107,"-":337}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"GREWZ is a **desktop app for managing student details, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, GREWZ can get your student management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"Evande1"},"content":"2. Download the latest `GREWZ.jar` from [here](https://github.com/AY2223S1-CS2103T-W12-4/tp/releases).","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Evande1"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your GREWZ.","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Evande1"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Evande1"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"zzthian"},"content":"   * **`list`** : Lists all students.","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Whysochong"},"content":"   * **`add`**`n/student p/98765432 i/e077xxxx [e/student@example.com] [p/91251211]` : Adds a student named `John Doe` to the student list.","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"zzthian"},"content":"   * **`delete`**`3` : Deletes the 3rd student shown in the current list.","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"zzthian"},"content":"   * **`clear`** : Deletes all students.","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"zzthian"},"content":"### Adding a student: `add`","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"zzthian"},"content":"Adds a student to the class list.","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"gowribhat"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL c/CLASS a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"zzthian"},"content":"A student can have any number of tags (including 0)","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"gowribhat"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com c/CS2030S a/John street, block 123, #01-01`","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"zzthian"},"content":"### Listing all students : `list`","lastModifiedDate":"2022-09-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"zzthian"},"content":"Shows a list of all students in the student list.","lastModifiedDate":"2022-09-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"zzthian"},"content":"### Uploading/ Changing student profile picture: `upload`","lastModifiedDate":"2022-09-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"zzthian"},"content":"Format: `upload INDEX pic/FILE_PATH`","lastModifiedDate":"2022-09-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":100,"author":{"gitId":"zzthian"},"content":"* Uploads a picture for the student at the specified `INDEX`. The index refers to the index number shown in the displayed student list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"zzthian"},"content":"* `FILE_PATH` **MUST** be a .jpg file.","lastModifiedDate":"2022-09-29"},{"lineNumber":102,"author":{"gitId":"zzthian"},"content":"* Existing picture will be updated to the input file picture.","lastModifiedDate":"2022-09-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":104,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":105,"author":{"gitId":"zzthian"},"content":"### Editing student information : `edit`","lastModifiedDate":"2022-09-29"},{"lineNumber":106,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":107,"author":{"gitId":"zzthian"},"content":"Edits an existing student in the student list.","lastModifiedDate":"2022-09-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"gowribhat"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [c/CLASS] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"zzthian"},"content":"* Edits the student at the specified `INDEX`. The index refers to the index number shown in the displayed student list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"zzthian"},"content":"* When editing tags, the existing tags of the student will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"zzthian"},"content":"* You can remove all the student’s tags by typing `t/` without","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"zzthian"},"content":"* This command does not offer editing a student\u0027s profile picture. To do this, refer to [upload](#upload)","lastModifiedDate":"2022-09-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"zzthian"},"content":"*  `edit 1 p/91234567 e/studentEmail@example.com` Edits the phone number and email of the 1st student in the list to be `91234567` and `studentEmail@example.com` respectively.","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"zzthian"},"content":"*  `edit 2 n/Jackie Chan t/` Edits the name of the 2nd student to be `Jackie Chan` and clears all existing tags.","lastModifiedDate":"2022-09-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"zzthian"},"content":"### Locating students by name: `find`","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"zzthian"},"content":"Finds students whose names contain any of the given keywords.","lastModifiedDate":"2022-09-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"gowribhat"},"content":"* All fields are searched.","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"gowribhat"},"content":"* Partial words will also be matched e.g. `Han` will match `Hans`","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"zzthian"},"content":"* Students matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"zzthian"},"content":"* `find Jack` returns `jack tan` and `Jack Lee`","lastModifiedDate":"2022-09-29"},{"lineNumber":138,"author":{"gitId":"gowribhat"},"content":"* `find alex dav` returns `Wong Alex`, `David Lim`\u003cbr\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":140,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"zzthian"},"content":"### Deleting a student : `delete`","lastModifiedDate":"2022-10-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"zzthian"},"content":"Deletes the specified student from the student list.","lastModifiedDate":"2022-10-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"zzthian"},"content":"* Deletes the student at the specified `INDEX`.","lastModifiedDate":"2022-10-04"},{"lineNumber":149,"author":{"gitId":"zzthian"},"content":"* The index refers to the index number shown in the displayed student list.","lastModifiedDate":"2022-09-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"zzthian"},"content":"* `list` followed by `delete 2` deletes the 2nd student in the student list.","lastModifiedDate":"2022-10-04"},{"lineNumber":154,"author":{"gitId":"zzthian"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st student in the results of the `find` command.","lastModifiedDate":"2022-10-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"zzthian"},"content":"Clears all entries from the student list.","lastModifiedDate":"2022-09-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"Evande1"},"content":"GREWZ data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-28"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":174,"author":{"gitId":"Evande1"},"content":"GREWZ data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-09-28"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":177,"author":{"gitId":"Evande1"},"content":"If your changes to the data file makes its format invalid, GREWZ will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-09-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"Evande1"},"content":"Coming soon!","lastModifiedDate":"2022-09-28"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"zzthian"},"content":"| Action     | Format, Examples                                                                                                                                                      |","lastModifiedDate":"2022-09-29"},{"lineNumber":195,"author":{"gitId":"zzthian"},"content":"|------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-29"},{"lineNumber":196,"author":{"gitId":"zzthian"},"content":"| **Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague` |","lastModifiedDate":"2022-09-29"},{"lineNumber":197,"author":{"gitId":"zzthian"},"content":"| **Clear**  | `clear`                                                                                                                                                               |","lastModifiedDate":"2022-09-29"},{"lineNumber":198,"author":{"gitId":"zzthian"},"content":"| **Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                   |","lastModifiedDate":"2022-09-29"},{"lineNumber":199,"author":{"gitId":"zzthian"},"content":"| **Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                           |","lastModifiedDate":"2022-09-29"},{"lineNumber":200,"author":{"gitId":"zzthian"},"content":"| **Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                            |","lastModifiedDate":"2022-09-29"},{"lineNumber":201,"author":{"gitId":"zzthian"},"content":"| **List**   | `list`                                                                                                                                                                |","lastModifiedDate":"2022-09-29"},{"lineNumber":202,"author":{"gitId":"zzthian"},"content":"| **Help**   | `help`                                                                                                                                                                |","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"gowribhat":6,"Whysochong":1,"zzthian":45,"Evande1":9,"-":141}},{"path":"docs/diagrams/AttendanceDeleteActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"@startuml","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"start","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Evande1"},"content":":User executes attendance delete command;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Evande1"},"content":":Parses the command;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Evande1"},"content":"if() then ([command is valid])","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Evande1"},"content":"    :Executes attendance","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Evande1"},"content":"    delete command;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Evande1"},"content":"    if() then ([student index is valid])","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Evande1"},"content":"        :Creates new empty","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Evande1"},"content":"        attendance list;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Evande1"},"content":"    else([student index is valid])","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Evande1"},"content":"        :Show invalid student","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Evande1"},"content":"        index error;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"    endif","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Evande1"},"content":"else([Command is missing arguments])","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Evande1"},"content":"    :Show parse error message;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Evande1"},"content":"endif","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"Evande1"},"content":"stop","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Evande1"},"content":"@enduml","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Evande1":21}},{"path":"docs/diagrams/AttendanceDeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"@startuml","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"!include style.puml","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Evande1"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Evande1"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Evande1"},"content":"participant \":AttendanceCommandParser\" as AttendanceCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Evande1"},"content":"participant \":AttendanceDeleteCommandParser\" as AttendanceDeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Evande1"},"content":"participant \"d:AttendanceDeleteCommand\" as AttendanceDeleteCommand LOGIC_COLOR","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Evande1"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Evande1"},"content":"end box","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Evande1"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Evande1"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Evande1"},"content":"end box","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Evande1"},"content":"[-\u003e LogicManager : execute(\"attendance delete 1\")","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Evande1"},"content":"activate LogicManager","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"Evande1"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"attendance delete 1\")","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Evande1"},"content":"activate AddressBookParser","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"Evande1"},"content":"create AttendanceCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Evande1"},"content":"AddressBookParser -\u003e AttendanceCommandParser : parse(\"attendance delete 1\")","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"Evande1"},"content":"activate AttendanceCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"Evande1"},"content":"AttendanceCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"Evande1"},"content":"deactivate AttendanceCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"Evande1"},"content":"AddressBookParser -\u003e AttendanceCommandParser : parse(\"delete 1\")","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"Evande1"},"content":"activate AttendanceCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Evande1"},"content":"create AttendanceDeleteCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"Evande1"},"content":"AttendanceCommandParser -\u003e AttendanceDeleteCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"Evande1"},"content":"activate AttendanceDeleteCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"Evande1"},"content":"AttendanceDeleteCommandParser --\u003e AttendanceCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"Evande1"},"content":"deactivate AttendanceDeleteCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Evande1"},"content":"AttendanceCommandParser -\u003e AttendanceDeleteCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"Evande1"},"content":"activate AttendanceDeleteCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Evande1"},"content":"create AttendanceDeleteCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"Evande1"},"content":"AttendanceDeleteCommandParser -\u003e AttendanceDeleteCommand: parse(args)","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"Evande1"},"content":"activate AttendanceDeleteCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"Evande1"},"content":"AttendanceDeleteCommand --\u003e AttendanceDeleteCommandParser : d","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"Evande1"},"content":"deactivate AttendanceDeleteCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"Evande1"},"content":"AttendanceDeleteCommandParser --\u003e AttendanceCommandParser : d","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"Evande1"},"content":"deactivate AttendanceDeleteCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"Evande1"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"Evande1"},"content":"AttendanceDeleteCommandParser -[hidden]-\u003e AttendanceCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"Evande1"},"content":"destroy AttendanceDeleteCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"Evande1"},"content":"AttendanceCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"Evande1"},"content":"deactivate AttendanceCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"Evande1"},"content":"AttendanceCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"Evande1"},"content":"destroy AttendanceCommandParser","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"Evande1"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"Evande1"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"Evande1"},"content":"LogicManager -\u003e AttendanceDeleteCommand : execute()","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"Evande1"},"content":"activate AttendanceDeleteCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"Evande1"},"content":"AttendanceDeleteCommand -\u003e Model : setStudent(studentToEdit, editedStudent)","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"Evande1"},"content":"activate Model","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"Evande1"},"content":"Model --\u003e AttendanceDeleteCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"Evande1"},"content":"deactivate Model","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"Evande1"},"content":"AttendanceDeleteCommand -\u003e Model : updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS)","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"Evande1"},"content":"activate Model","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"Evande1"},"content":"Model --\u003e AttendanceDeleteCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"Evande1"},"content":"deactivate Model","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"Evande1"},"content":"AttendanceDeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"Evande1"},"content":"deactivate AttendanceDeleteCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"Evande1"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"Evande1"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"Evande1"},"content":"@enduml","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"Evande1":83}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"zzthian"},"content":"ecp -\u003e ec ++: index, editStudentDescriptor","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"zzthian":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"title: GREWZ","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W12-4/tp/actions)","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W12-4/tp/branch/master/graph/badge.svg?token\u003dUFZ3FQBSRS)](https://codecov.io/gh/AY2223S1-CS2103T-W12-4/tp)","lastModifiedDate":"2022-09-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"**GREWZ is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"* If you are interested in using GREWZ, head over to the [_Quick Start_ section of the **User Guide**](https://ay2223s1-cs2103t-w12-4.github.io/tp/UserGuide.html#quick-start).","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"* If you are interested about developing GREWZ, the [**Developer Guide**](https://ay2223s1-cs2103t-w12-4.github.io/tp/DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"thamruicong":5,"-":15}},{"path":"docs/team/evande1.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"---","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"layout: page","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"Evande1"},"content":"title: Evan Loo\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"Evande1"},"content":"---","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"### Project: GREWZ","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"Evande1"},"content":"GREWZ is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a Command line Interface (CLI), and it has a Graphic User Interface (GUI) created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"Evande1"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"Evande1"},"content":"* **New Feature**: Implemented the *attendance feature* of GREWZ","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"Evande1"},"content":"    * What it does: Assist the user in keeping track of attendance of students. The user can mark and umark attendance of students.","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"Evande1"},"content":"    * Justification: This feature improves the product significantly because teacher assistants can easily monitor students\u0027 attendance in one application and do not need to rely on third party applications to keep track of students. Having the details stored locally ensures that student data is not leaked to other vendors. Teacher assistants also can see if students are struggling to attend class and provide checks on them. \u003cADD MORE\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"Evande1"},"content":"    * Highlights: This enhancement keeps track of students total attendance.","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"Evande1"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"Evande1"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003devande1\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dEvande1\u0026tabRepo\u003dAY2223S1-CS2103T-W12-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"Evande1"},"content":"* **Project management**:","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"Evande1"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"Evande1"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"Evande1"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"Evande1"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"Evande1"},"content":"* **Documentation**: \u003cAdd later\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"Evande1"},"content":"    * User Guide:","lastModifiedDate":"2022-09-20"},{"lineNumber":31,"author":{"gitId":"Evande1"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"Evande1"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"Evande1"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"Evande1"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"Evande1"},"content":"* **Community**:","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"Evande1"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"Evande1"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-09-20"},{"lineNumber":39,"author":{"gitId":"Evande1"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"Evande1"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-09-20"},{"lineNumber":41,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":42,"author":{"gitId":"Evande1"},"content":"* **Tools**:","lastModifiedDate":"2022-09-20"},{"lineNumber":43,"author":{"gitId":"Evande1"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-09-20"},{"lineNumber":44,"author":{"gitId":"Evande1"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-09-20"},{"lineNumber":45,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"Evande1"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"Evande1":46}},{"path":"docs/team/gowribhat.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gowribhat"},"content":"---","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"gowribhat"},"content":"layout: page","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"gowribhat"},"content":"title: Gowri Bhat\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"gowribhat"},"content":"---","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"gowribhat"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"gowribhat"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"gowribhat"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"gowribhat"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"gowribhat"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"gowribhat"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"gowribhat"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"gowribhat"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"gowribhat"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"gowribhat"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-20"},{"lineNumber":21,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"gowribhat"},"content":"* **Project management**:","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"gowribhat"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"gowribhat"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"gowribhat"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"gowribhat"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"gowribhat"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"gowribhat"},"content":"    * User Guide:","lastModifiedDate":"2022-09-20"},{"lineNumber":31,"author":{"gitId":"gowribhat"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"gowribhat"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"gowribhat"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"gowribhat"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"gowribhat"},"content":"* **Community**:","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"gowribhat"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"gowribhat"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-09-20"},{"lineNumber":39,"author":{"gitId":"gowribhat"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"gowribhat"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-09-20"},{"lineNumber":41,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":42,"author":{"gitId":"gowribhat"},"content":"* **Tools**:","lastModifiedDate":"2022-09-20"},{"lineNumber":43,"author":{"gitId":"gowribhat"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-09-20"},{"lineNumber":44,"author":{"gitId":"gowribhat"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-09-20"},{"lineNumber":45,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"gowribhat"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"gowribhat":46}},{"path":"docs/team/thamruicong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"---","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"layout: page","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"title: Rui Cong\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"---","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-20"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"* **Project management**:","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"    * User Guide:","lastModifiedDate":"2022-09-20"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"* **Community**:","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-09-20"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-09-20"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"* **Tools**:","lastModifiedDate":"2022-09-20"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-09-20"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-09-20"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"thamruicong"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"thamruicong":46}},{"path":"docs/team/whysochong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Whysochong"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"Whysochong"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"Whysochong"},"content":"title: Wai Chong\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"Whysochong"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"Whysochong"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"Whysochong"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"Whysochong"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"Whysochong"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"Whysochong"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"Whysochong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"Whysochong"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"Whysochong"},"content":"* **New Feature**: Create profiles based on limited student information.","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"Whysochong"},"content":"  * What it does: This makes certain information fields optional to fill in, so that teacher assistants can create a profile for the students without needing to know/fill in all information.","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"Whysochong"},"content":"  * Justification: This feature helps teacher assistants to add student\u0027s profile flexibly based on the limited student information that they have on the students.","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"Whysochong"},"content":"  * Highlights: This helps teacher assistants to create student profiles more flexibly.","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"Whysochong"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"Whysochong"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"Whysochong"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"Whysochong"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"Whysochong"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"Whysochong"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"Whysochong"},"content":"* **Project management**:","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"Whysochong"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"Whysochong"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"Whysochong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"Whysochong"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"Whysochong"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"Whysochong"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"Whysochong"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"Whysochong"},"content":"  * User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"Whysochong"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"Whysochong"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"Whysochong"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"Whysochong"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"Whysochong"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"Whysochong"},"content":"* **Community**:","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"Whysochong"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"Whysochong"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"Whysochong"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-27"},{"lineNumber":40,"author":{"gitId":"Whysochong"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-09-27"},{"lineNumber":41,"author":{"gitId":"Whysochong"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":42,"author":{"gitId":"Whysochong"},"content":"* **Tools**:","lastModifiedDate":"2022-09-27"},{"lineNumber":43,"author":{"gitId":"Whysochong"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-09-27"},{"lineNumber":44,"author":{"gitId":"Whysochong"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-09-27"},{"lineNumber":45,"author":{"gitId":"Whysochong"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":46,"author":{"gitId":"Whysochong"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"Whysochong":46}},{"path":"docs/team/zzthian.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"zzthian"},"content":"title: Thian Zhang Zhi\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2022-09-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-09-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-09-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2022-09-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-09-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-09-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"zzthian":1,"-":45}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"zzthian"},"content":" * Changes the remark of an existing student in the address book.","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"zzthian"},"content":"            + \": Edits the remark of the student identified \"","lastModifiedDate":"2022-10-02"},{"lineNumber":69,"author":{"gitId":"zzthian"},"content":"            + \"by the index number used in the last student listing. \"","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"zzthian"},"content":"     * @param index of the student in the filtered student list to edit the remark","lastModifiedDate":"2022-10-02"},{"lineNumber":105,"author":{"gitId":"zzthian"},"content":"     * @param remark of the student to be updated to","lastModifiedDate":"2022-10-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"zzthian"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of student data. We achieve that by working with the `Student` model. Each field in a Student is implemented as a separate class (e.g. a `Name` object represents the student’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a student.","lastModifiedDate":"2022-10-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"zzthian"},"content":"Create a new `Remark` in `seedu.address.model.student`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-10-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"zzthian"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each student.","lastModifiedDate":"2022-10-02"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"zzthian"},"content":"Simply add the following to [`seedu.address.ui.StudentCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-10-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"zzthian"},"content":"**`StudentCard.java`:**","lastModifiedDate":"2022-10-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"zzthian"},"content":"Then insert the following into [`main/resources/view/StudentListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-10-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"zzthian"},"content":"**`StudentListCard.fxml`:**","lastModifiedDate":"2022-10-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"zzthian"},"content":"## Modify `Student` to support a `Remark` field","lastModifiedDate":"2022-10-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"zzthian"},"content":"Since `StudentCard` displays data from a `Student`, we need to update `Student` to get our `Remark` displayed!","lastModifiedDate":"2022-10-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"zzthian"},"content":"### Modify `Student`","lastModifiedDate":"2022-10-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"zzthian"},"content":"We change the constructor of `Student` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2022-10-04"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"zzthian"},"content":"### Update other usages of `Student`","lastModifiedDate":"2022-10-04"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"zzthian"},"content":"Unfortunately, a change to `Student` will cause other commands to break, you will have to modify these commands to use the updated `Student`!","lastModifiedDate":"2022-10-04"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"zzthian"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Student` class to find these commands.","lastModifiedDate":"2022-10-04"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"zzthian"},"content":"AddressBook stores data by serializing `JsonAdaptedStudent` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedStudent` to work with our new `Student`!","lastModifiedDate":"2022-10-04"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"zzthian"},"content":"Now that we have finalized the `Student` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2022-10-04"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"zzthian"},"content":"**`StudentCard.java`:**","lastModifiedDate":"2022-10-04"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"zzthian"},"content":"public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2022-10-04"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"zzthian"},"content":"    remark.setText(student.getRemark().value);","lastModifiedDate":"2022-10-02"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"zzthian"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Student`. Since all fields in a `Student` are immutable, we create a new instance of a `Student` with the values that we want and","lastModifiedDate":"2022-10-04"},{"lineNumber":329,"author":{"gitId":"zzthian"},"content":"save it with `Model#setStudent()`.","lastModifiedDate":"2022-10-04"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"zzthian"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Student: %1$s\";","lastModifiedDate":"2022-10-04"},{"lineNumber":336,"author":{"gitId":"zzthian"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Student: %1$s\";","lastModifiedDate":"2022-10-04"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"zzthian"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-04"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"zzthian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_Student_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"zzthian"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-04"},{"lineNumber":347,"author":{"gitId":"zzthian"},"content":"        Student editedStudent \u003d new Student(","lastModifiedDate":"2022-10-04"},{"lineNumber":348,"author":{"gitId":"zzthian"},"content":"                studentToEdit.getName(), studentToEdit.getPhone(), studentToEdit.getEmail(),","lastModifiedDate":"2022-10-02"},{"lineNumber":349,"author":{"gitId":"zzthian"},"content":"                studentToEdit.getAddress(), remark, studentToEdit.getTags());","lastModifiedDate":"2022-10-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"zzthian"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-04"},{"lineNumber":352,"author":{"gitId":"zzthian"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"zzthian"},"content":"        return new CommandResult(generateSuccessMessage(editedStudent));","lastModifiedDate":"2022-10-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"zzthian"},"content":"     * {@code studentToEdit}.","lastModifiedDate":"2022-10-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"zzthian"},"content":"    private String generateSuccessMessage(Student studentToEdit) {","lastModifiedDate":"2022-10-04"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"zzthian"},"content":"        return String.format(message, studentToEdit);","lastModifiedDate":"2022-10-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"zzthian":40,"-":361}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"zzthian"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `studentId` field from `Student` class.","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"zzthian"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `studentId` field can be done similarly.","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"zzthian"},"content":"The `studentId` field in `Student` is actually an instance of the `seedu.address.model.student.StudentIdss` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"zzthian"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditStudentDescriptor` may require more careful inspection.","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"zzthian"},"content":"Let’s try removing references to `Address` in `EditStudentDescriptor`.","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"zzthian"},"content":"1. Safe delete the field `studentId` in `EditStudentDescriptor`.","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"zzthian"},"content":"1. Remove the usages of `studentId` and select `Do refactor` when you are done.","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"zzthian"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `studentId` field from the `Student` class will require you to modify its constructor.","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"zzthian"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `studentId` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"zzthian"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$studentId` in each `StudentCard` that has not been removed nor identified.","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"zzthian"},"content":"![$studentId](../images/remove/$studentId.png)","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"zzthian"},"content":"A quick look at the `StudentCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"zzthian"},"content":"**`StudentCard.java`**","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"zzthian"},"content":"private Label studentId;","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"zzthian"},"content":"**`StudentCard.fxml`**","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"zzthian"},"content":"\u003cLabel fx:id\u003d\"studentId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$studentId\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"zzthian"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `StudentId` in test data and documentation.","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"zzthian"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `studentId` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2022-10-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"zzthian"},"content":"**`invalidStudentAddressBook.json`:**","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"zzthian"},"content":"  \"students\": [ {","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"zzthian"},"content":"    \"name\": \"Student with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"zzthian"},"content":"    \"studentId\": \"e0842531\"","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"zzthian"},"content":"You can go through each individual `json` file and manually remove the `studentId` field.","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"zzthian":23,"-":90}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"zzthian"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditStudentDescriptor`. Recall that we can verify the contents of `editStudentDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"zzthian"},"content":"       Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-04"},{"lineNumber":193,"author":{"gitId":"zzthian"},"content":"       Student editedStudent \u003d createEditedStudent(studentToEdit, editStudentDescriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":194,"author":{"gitId":"zzthian"},"content":"       if (!studentToEdit.isSameStudent(editedStudent) \u0026\u0026 model.hasStudent(editedStudent)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":195,"author":{"gitId":"zzthian"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"zzthian"},"content":"       model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-04"},{"lineNumber":198,"author":{"gitId":"zzthian"},"content":"       model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":199,"author":{"gitId":"zzthian"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent));","lastModifiedDate":"2022-10-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"zzthian"},"content":"   * it uses the `setStudent()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the student data.","lastModifiedDate":"2022-10-04"},{"lineNumber":205,"author":{"gitId":"zzthian"},"content":"   * it uses the `updateFilteredStudentList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ students.\u003cbr\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":206,"author":{"gitId":"zzthian"},"content":"     FYI, The \u0027filtered list\u0027 is the list of students resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the students so that the user can see the edited student along with all other students. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":207,"author":{"gitId":"zzthian"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of students is being tracked.","lastModifiedDate":"2022-10-02"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"zzthian"},"content":"        students.addAll(","lastModifiedDate":"2022-10-02"},{"lineNumber":235,"author":{"gitId":"zzthian"},"content":"            source.getStudentList()","lastModifiedDate":"2022-10-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"zzthian"},"content":"                  .map(JsonAdaptedStudent::new)","lastModifiedDate":"2022-10-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"zzthian"},"content":"1. It appears that a `JsonAdaptedStudent` is created for each `Student` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2022-10-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"zzthian"},"content":"    5.  Add a new field to `Student`","lastModifiedDate":"2022-10-04"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"zzthian":17,"-":284}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"zzthian"},"content":"import java.io.File;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"zzthian"},"content":"import seedu.address.storage.ImageStorage;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"import seedu.address.storage.JsonTaskBookStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"import seedu.address.storage.TaskBookStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"zzthian"},"content":"        File images \u003d new File(\"images\");","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"zzthian"},"content":"        if (!images.exists()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"zzthian"},"content":"            logger.info(\"Images folder does not exist, creating one now.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"zzthian"},"content":"            images.mkdir();","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"zzthian"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"thamruicong"},"content":"        TaskBookStorage taskBookStorage \u003d new JsonTaskBookStorage(userPrefs.getTaskBookFilePath());","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"thamruicong"},"content":"        storage \u003d new StorageManager(addressBookStorage, taskBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"thamruicong"},"content":"        Optional\u003cReadOnlyTaskBook\u003e taskBookOptional;","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"thamruicong"},"content":"        ReadOnlyTaskBook taskBookInitialData;","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"thamruicong"},"content":"            taskBookOptional \u003d storage.readTaskBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"thamruicong"},"content":"            if (!taskBookOptional.isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"thamruicong"},"content":"                logger.info(\"Data file not found. Will be starting with a sample TaskBook\");","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"thamruicong"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":103,"author":{"gitId":"thamruicong"},"content":"            taskBookInitialData \u003d taskBookOptional.orElseGet(SampleDataUtil::getSampleTaskBook);","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"thamruicong"},"content":"            taskBookInitialData \u003d new TaskBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"thamruicong"},"content":"            taskBookInitialData \u003d new TaskBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"thamruicong"},"content":"        return new ModelManager(initialData, taskBookInitialData, userPrefs);","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":193,"author":{"gitId":"zzthian"},"content":"        ImageStorage.setStage(primaryStage);","lastModifiedDate":"2022-10-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"thamruicong":16,"zzthian":8,"-":181}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Evande1"},"content":"    public static final String MESSAGE_INVALID_ATTENDANCE_COMMAND_FORMAT \u003d \"Invalid attendance command format! \\n%1$s\";","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Evande1"},"content":"    public static final String MESSAGE_INVALID_ATTENDANCELIST_INDEX \u003d \"The attendance list index provided is invalid\";","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"zzthian"},"content":"    public static final String MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX \u003d \"The student index provided is invalid\";","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"zzthian"},"content":"    public static final String MESSAGE_STUDENTS_LISTED_OVERVIEW \u003d \"%1$d students listed!\";","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"    public static final String MESSAGE_INVALID_TASK_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"Evande1"},"content":"    public static final String MESSAGE_INVALID_ATTENDANCE_LIST_INDEX \u003d \"The attendance list index/size provided is \"","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"            + \"invalid\";","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"thamruicong":1,"zzthian":2,"Evande1":4,"-":12}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"zzthian"},"content":"    /** Returns an unmodifiable view of the filtered list of students */","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"zzthian"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"thamruicong":2,"zzthian":3,"-":48}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"thamruicong"},"content":"            storage.saveTaskBook(model.getTaskBook());","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"zzthian"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"zzthian"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":70,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"thamruicong"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"thamruicong"},"content":"        return model.getTaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"thamruicong":5,"zzthian":4,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_GROUP;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"zzthian"},"content":" * Adds a student to the address book.","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"zzthian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to the address book. \"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"zzthian"},"content":"            + PREFIX_ID + \"STUDENT ID \"","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"Whysochong"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"Whysochong"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"Whysochong"},"content":"            + \"[\" + PREFIX_CLASS_GROUP + \"CLASS] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"Whysochong"},"content":"            + PREFIX_ID + \"e0825403\"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"gowribhat"},"content":"            + PREFIX_CLASS_GROUP + \"CS2030S Lab 22 \"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"zzthian"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: %1$s\";","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"zzthian"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the address book\";","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"zzthian"},"content":"    public static final String MESSAGE_DUPLICATE_ID \u003d \"The following student ID already exists: %s.\\n \"","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"zzthian"},"content":"            + \"Please recreate the student with a different ID.\";","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"zzthian"},"content":"    private final Student toAdd;","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"zzthian"},"content":"     * Creates an AddCommand to add the specified {@code Student}","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"zzthian"},"content":"    public AddCommand(Student student) {","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"zzthian"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"zzthian"},"content":"        toAdd \u003d student;","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"zzthian"},"content":"        if (model.hasStudent(toAdd)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"zzthian"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"zzthian"},"content":"        } else if (model.hasStudentWithMatchingId(toAdd)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"zzthian"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_ID, toAdd.getStudentId().value));","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"zzthian"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"gowribhat":2,"Whysochong":4,"zzthian":19,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/AttendanceAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"Evande1"},"content":"import static seedu.address.logic.parser.AttendanceCommandParser.ATTENDANCE_COMMAND_WORD;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"Evande1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_GROUP;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"Evande1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SIZE;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Evande1"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"Evande1"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"Evande1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"Evande1"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.attendance.AttendanceList;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"Evande1"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"Evande1"},"content":" * Adds attendance to student in address book.","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"Evande1"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"Evande1"},"content":"public class AttendanceAddCommand extends Command {","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"Evande1"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"Evande1"},"content":"    public static final String MESSAGE_ADD_ATTENDANCE_SUCCESS \u003d \"Added attendance to Student: %1$s\";","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"Evande1"},"content":"    public static final String MESSAGE_USAGE \u003d ATTENDANCE_COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"Evande1"},"content":"            + COMMAND_WORD","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"Evande1"},"content":"            + \": Adds attendance to the student identified \"","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"Evande1"},"content":"            + \"by the index number used in the last student listing and size(between 1-12), \"","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"Evande1"},"content":"            + \"if size is 0, attendance list will be empty.\"","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"Evande1"},"content":"            + \"Existing attendance will be overwritten by the input.\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"Evande1"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"Evande1"},"content":"            + PREFIX_CLASS_GROUP + \"[CLASS] \"","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"Evande1"},"content":"            + PREFIX_SIZE + \"[LIST SIZE]\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"Evande1"},"content":"            + \"Example: \" + ATTENDANCE_COMMAND_WORD","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"Evande1"},"content":"            + \" \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"Evande1"},"content":"            + PREFIX_CLASS_GROUP + \"CS2103T \" + PREFIX_SIZE + \"10\";","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"Evande1"},"content":"    private final Index index;","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"Evande1"},"content":"    private final String mod;","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"Evande1"},"content":"    private final String size;","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"Evande1"},"content":"     * Creates an AttendanceAddCommand to add to the specified {@code Student}","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"Evande1"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"Evande1"},"content":"     * @param mod belonging to the attendance list","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"Evande1"},"content":"     * @param size of the attendance list","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"Evande1"},"content":"    public AttendanceAddCommand(Index index, String mod, String size) {","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"Evande1"},"content":"        requireAllNonNull(index, mod, size);","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"Evande1"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"Evande1"},"content":"        this.mod \u003d mod;","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"Evande1"},"content":"        this.size \u003d size;","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"Evande1"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"Evande1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"Evande1"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"Evande1"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"Evande1"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"Evande1"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"Evande1"},"content":"        if (!AttendanceList.isValidSize(size)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"Evande1"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ATTENDANCE_LIST_INDEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"Evande1"},"content":"        AttendanceList attendanceList \u003d new AttendanceList(mod, size);","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"Evande1"},"content":"        Student editedStudent \u003d new Student(","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"Evande1"},"content":"                studentToEdit.getName(), studentToEdit.getPhone(), studentToEdit.getEmail(),","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"Evande1"},"content":"                studentToEdit.getClassGroup(), studentToEdit.getStudentId(), studentToEdit.getTags(),","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"Evande1"},"content":"                attendanceList);","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"Evande1"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"Evande1"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"Evande1"},"content":"        return new CommandResult(generateSuccessMessage(editedStudent));","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"Evande1"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"Evande1"},"content":"     * the attendance is added to or removed from","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"Evande1"},"content":"     * {@code studentToEdit}.","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"Evande1"},"content":"    private String generateSuccessMessage(Student studentToEdit) {","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"Evande1"},"content":"        String message \u003d MESSAGE_ADD_ATTENDANCE_SUCCESS;","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"Evande1"},"content":"        return String.format(message, studentToEdit);","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"Evande1"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"Evande1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"Evande1"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"Evande1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"Evande1"},"content":"            return true;","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"Evande1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"Evande1"},"content":"        if (!(other instanceof AttendanceAddCommand)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"Evande1"},"content":"            return false;","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"Evande1"},"content":"        // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"Evande1"},"content":"        AttendanceAddCommand e \u003d (AttendanceAddCommand) other;","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"Evande1"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"Evande1"},"content":"                \u0026\u0026 mod.equals(e.mod)","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"Evande1"},"content":"                \u0026\u0026 size.equals(e.size);","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"Evande1"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Evande1":106}},{"path":"src/main/java/seedu/address/logic/commands/AttendanceDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"Evande1"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"Evande1"},"content":"import static seedu.address.logic.parser.AttendanceCommandParser.ATTENDANCE_COMMAND_WORD;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"Evande1"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Evande1"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Evande1"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"Evande1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"Evande1"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.attendance.AttendanceList;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"Evande1"},"content":" * Deletes attendance from student in address book.","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"Evande1"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"Evande1"},"content":"public class AttendanceDeleteCommand extends Command {","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"Evande1"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"Evande1"},"content":"    public static final String MESSAGE_DELETE_ATTENDANCE_SUCCESS \u003d \"Removed attendance from Student: %1$s\";","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"Evande1"},"content":"    public static final String MESSAGE_USAGE \u003d ATTENDANCE_COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"Evande1"},"content":"            + COMMAND_WORD","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"Evande1"},"content":"            + \": Deletes the attendance of the student identified \"","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"Evande1"},"content":"            + \"by the index number used in the last student listing. \"","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"Evande1"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"Evande1"},"content":"            + \"Example: \" + ATTENDANCE_COMMAND_WORD","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"Evande1"},"content":"            + \" \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"Evande1"},"content":"    private final Index index;","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"Evande1"},"content":"     * Creates an AttendanceDeleteCommand to delete the attendance of the specified {@code Student}","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"Evande1"},"content":"     * @param index of the student to delete the attendance list from","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"Evande1"},"content":"    public AttendanceDeleteCommand(Index index) {","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"Evande1"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"Evande1"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"Evande1"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"Evande1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"Evande1"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"Evande1"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"Evande1"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"Evande1"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"Evande1"},"content":"        Student editedStudent \u003d new Student(","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"Evande1"},"content":"                studentToEdit.getName(), studentToEdit.getPhone(), studentToEdit.getEmail(),","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"Evande1"},"content":"                studentToEdit.getClassGroup(), studentToEdit.getStudentId(), studentToEdit.getTags(),","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"Evande1"},"content":"                new AttendanceList());","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"Evande1"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"Evande1"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"Evande1"},"content":"        return new CommandResult(generateSuccessMessage(editedStudent));","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"Evande1"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"Evande1"},"content":"     * the attendance is added to or removed from","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"Evande1"},"content":"     * {@code studentToEdit}.","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"Evande1"},"content":"    private String generateSuccessMessage(Student studentToEdit) {","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"Evande1"},"content":"        String message \u003d MESSAGE_DELETE_ATTENDANCE_SUCCESS;","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"Evande1"},"content":"        return String.format(message, studentToEdit);","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"Evande1"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"Evande1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"Evande1"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"Evande1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"Evande1"},"content":"            return true;","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"Evande1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"Evande1"},"content":"        if (!(other instanceof AttendanceDeleteCommand)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"Evande1"},"content":"            return false;","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"Evande1"},"content":"        // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"Evande1"},"content":"        AttendanceDeleteCommand e \u003d (AttendanceDeleteCommand) other;","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"Evande1"},"content":"        return index.equals(e.index);","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"Evande1"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Evande1":88}},{"path":"src/main/java/seedu/address/logic/commands/AttendanceMarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"Evande1"},"content":"import static seedu.address.logic.parser.AttendanceCommandParser.ATTENDANCE_COMMAND_WORD;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"Evande1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LESSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"Evande1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MARK;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Evande1"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Evande1"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"Evande1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"Evande1"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.attendance.AttendanceList;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"Evande1"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"Evande1"},"content":" * Marks attendance of student in address book.","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"Evande1"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"Evande1"},"content":"public class AttendanceMarkCommand extends Command {","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"Evande1"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"Evande1"},"content":"    public static final String MESSAGE_ADD_ATTENDANCE_SUCCESS \u003d \"Marked attendance of Student: %1$s\";","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Evande1"},"content":"    public static final String MESSAGE_DELETE_ATTENDANCE_SUCCESS \u003d \"Unmarked attendance of Student: %1$s\";","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"Evande1"},"content":"    public static final String MESSAGE_USAGE \u003d ATTENDANCE_COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"Evande1"},"content":"            + COMMAND_WORD","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"Evande1"},"content":"            + \": marks the lesson index of the student identified \"","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"Evande1"},"content":"            + \"by the index number used in the last student listing.\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"Evande1"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"Evande1"},"content":"            + PREFIX_LESSON + \"[LESSON_NUMBER] \"","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"Evande1"},"content":"            + PREFIX_MARK + \"[ATTENDANCE]\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"Evande1"},"content":"            + \"Example: \" + ATTENDANCE_COMMAND_WORD","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"Evande1"},"content":"            + \" \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"Evande1"},"content":"            + PREFIX_LESSON + \"3 \" + PREFIX_MARK + \"1\";","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"Evande1"},"content":"    private final Index studentIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"Evande1"},"content":"    private final String lessonIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"Evande1"},"content":"    private final Attendance attendance;","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"Evande1"},"content":"     * Creates an AttendanceMarkCommand to mark attendance of the specified {@code Student}","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"Evande1"},"content":"     * @param studentIndex","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"Evande1"},"content":"     * @param lessonIndex","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"Evande1"},"content":"     * @param attendance","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"Evande1"},"content":"    public AttendanceMarkCommand(Index studentIndex, String lessonIndex, Attendance attendance) {","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"Evande1"},"content":"        this.studentIndex \u003d studentIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"Evande1"},"content":"        this.lessonIndex \u003d lessonIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"Evande1"},"content":"        this.attendance \u003d attendance;","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"Evande1"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"Evande1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"Evande1"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"Evande1"},"content":"        if (studentIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"Evande1"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"Evande1"},"content":"        Student studentToEdit \u003d lastShownList.get(studentIndex.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"Evande1"},"content":"        if (studentToEdit.getAttendanceList().isEmpty()","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"Evande1"},"content":"                || studentToEdit.getAttendanceList().getSize() \u003c Integer.parseInt(lessonIndex)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"Evande1"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ATTENDANCE_LIST_INDEX);","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"Evande1"},"content":"        if (Integer.parseInt(lessonIndex) \u003c 1) {","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"Evande1"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ATTENDANCE_LIST_INDEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"Evande1"},"content":"        AttendanceList attendanceList \u003d studentToEdit.getAttendanceList();","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"Evande1"},"content":"        attendanceList.mark(lessonIndex, attendance);","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"Evande1"},"content":"        Student editedStudent \u003d new Student(","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"Evande1"},"content":"                studentToEdit.getName(), studentToEdit.getPhone(), studentToEdit.getEmail(),","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"Evande1"},"content":"                studentToEdit.getClassGroup(), studentToEdit.getStudentId(), studentToEdit.getTags(),","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"Evande1"},"content":"                attendanceList);","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"Evande1"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"Evande1"},"content":"        return new CommandResult(generateSuccessMessage(editedStudent));","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"Evande1"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"Evande1"},"content":"     * the attendance is added to or removed from","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"Evande1"},"content":"     * {@code studentToEdit}.","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"Evande1"},"content":"    private String generateSuccessMessage(Student studentToEdit) {","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"Evande1"},"content":"        String message \u003d attendance.value.equals(\"1\")","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"Evande1"},"content":"                ? MESSAGE_ADD_ATTENDANCE_SUCCESS","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"Evande1"},"content":"                : MESSAGE_DELETE_ATTENDANCE_SUCCESS;","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"Evande1"},"content":"        return String.format(message, studentToEdit);","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"Evande1"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"Evande1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"Evande1"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"Evande1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"Evande1"},"content":"            return true;","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"Evande1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"Evande1"},"content":"        if (!(other instanceof AttendanceMarkCommand)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"Evande1"},"content":"            return false;","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"Evande1"},"content":"        // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"Evande1"},"content":"        AttendanceMarkCommand e \u003d (AttendanceMarkCommand) other;","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"Evande1"},"content":"        return studentIndex.equals(e.studentIndex)","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"Evande1"},"content":"                \u0026\u0026 attendance.equals(e.attendance)","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"Evande1"},"content":"                \u0026\u0026 lessonIndex.equals(lessonIndex);","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"Evande1"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Evande1":104}},{"path":"src/main/java/seedu/address/logic/commands/ClassGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gowribhat"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"gowribhat"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"gowribhat"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"gowribhat"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"gowribhat"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.student.ClassGroup;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"gowribhat"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"gowribhat"},"content":" * Changes the class of an existing student in the address book.","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"gowribhat"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"gowribhat"},"content":"public class ClassGroupCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"gowribhat"},"content":"    public static final String COMMAND_WORD \u003d \"class\";","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"gowribhat"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"gowribhat"},"content":"            + \": Edits the class of the student identified \"","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"gowribhat"},"content":"            + \"by the index number used in the last student listing. \"","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"gowribhat"},"content":"            + \"Existing class will be overwritten by the input.\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"gowribhat"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"gowribhat"},"content":"            + \"c/ [CLASS]\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"gowribhat"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"gowribhat"},"content":"            + \"c/ AY2223S1-CS2103T-W12\";","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"gowribhat"},"content":"    public static final String MESSAGE_ADD_CLASS_GROUP_SUCCESS \u003d \"Added class to Student: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"gowribhat"},"content":"    public static final String MESSAGE_DELETE_CLASS_GROUP_SUCCESS \u003d \"Removed class from Student: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"gowribhat"},"content":"    private final Index index;","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"gowribhat"},"content":"    private final ClassGroup classGroup;","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"gowribhat"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"gowribhat"},"content":"     * @param index of the student in the filtered student list to edit the class","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"gowribhat"},"content":"     * @param classGroup of the student to be updated to","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"gowribhat"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"gowribhat"},"content":"    public ClassGroupCommand(Index index, ClassGroup classGroup) {","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"gowribhat"},"content":"        requireAllNonNull(index, classGroup);","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"gowribhat"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"gowribhat"},"content":"        this.classGroup \u003d classGroup;","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"gowribhat"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"gowribhat"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"gowribhat"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"gowribhat"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"gowribhat"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"gowribhat"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"gowribhat"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"gowribhat"},"content":"        Student editedStudent \u003d new Student(","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"gowribhat"},"content":"                studentToEdit.getName(), studentToEdit.getPhone(), studentToEdit.getEmail(), classGroup,","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"Evande1"},"content":"                studentToEdit.getStudentId(), studentToEdit.getTags(), studentToEdit.getAttendanceList());","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"gowribhat"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"gowribhat"},"content":"        model.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"gowribhat"},"content":"        return new CommandResult(generateSuccessMessage(editedStudent));","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"gowribhat"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"gowribhat"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"gowribhat"},"content":"     * the class group is added to or removed from","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"gowribhat"},"content":"     * {@code studentToEdit}.","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"gowribhat"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"gowribhat"},"content":"    private String generateSuccessMessage(Student studentToEdit) {","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"gowribhat"},"content":"        String message \u003d !classGroup.value.isEmpty()","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"gowribhat"},"content":"                ? MESSAGE_ADD_CLASS_GROUP_SUCCESS","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"gowribhat"},"content":"                : MESSAGE_DELETE_CLASS_GROUP_SUCCESS;","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"gowribhat"},"content":"        return String.format(message, studentToEdit);","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"gowribhat"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"gowribhat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"gowribhat"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"gowribhat"},"content":"            return true;","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"gowribhat"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"gowribhat"},"content":"        if (!(other instanceof ClassGroupCommand)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"gowribhat"},"content":"            return false;","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"gowribhat"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"gowribhat"},"content":"        ClassGroupCommand e \u003d (ClassGroupCommand) other;","lastModifiedDate":"2022-10-08"},{"lineNumber":89,"author":{"gitId":"gowribhat"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-08"},{"lineNumber":90,"author":{"gitId":"gowribhat"},"content":"                \u0026\u0026 classGroup.equals(e.classGroup);","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":92,"author":{"gitId":"gowribhat"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"gowribhat":91,"Evande1":1}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"zzthian"},"content":" * Deletes a student identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"zzthian"},"content":"            + \": Deletes the student identified by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"zzthian"},"content":"    public static final String MESSAGE_DELETE_STUDENT_SUCCESS \u003d \"Deleted Student: %1$s\";","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"zzthian"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"zzthian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"zzthian"},"content":"        Student studentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"zzthian"},"content":"        model.deleteStudent(studentToDelete);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"zzthian"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete));","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zzthian":13,"-":44}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_GROUP;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"zzthian"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.attendance.AttendanceList;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.student.ClassGroup;","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.StudentId;","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"zzthian"},"content":" * Edits the details of an existing student in the address book.","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"zzthian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the student identified \"","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"zzthian"},"content":"            + \"by the index number used in the displayed student list. \"","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"gowribhat"},"content":"            + \"[\" + PREFIX_CLASS_GROUP + \"CLASS] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"zzthian"},"content":"            + \"[\" + PREFIX_ID + \"STUDENT ID] \"","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"zzthian"},"content":"    public static final String MESSAGE_EDIT_STUDENT_SUCCESS \u003d \"Edited Student: %1$s\";","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"zzthian"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the address book.\";","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"zzthian"},"content":"    public static final String MESSAGE_DUPLICATE_ID \u003d \"A student with the same Student ID already exists, please \"","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"zzthian"},"content":"            + \"re-edit the student with a different Student ID.\";","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"zzthian"},"content":"    private final EditStudentDescriptor editStudentDescriptor;","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"zzthian"},"content":"     * @param index of the student in the filtered student list to edit","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"zzthian"},"content":"     * @param editStudentDescriptor details to edit the student with","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"zzthian"},"content":"    public EditCommand(Index index, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"zzthian"},"content":"        requireNonNull(editStudentDescriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"zzthian"},"content":"        this.editStudentDescriptor \u003d new EditStudentDescriptor(editStudentDescriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"zzthian"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"zzthian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"zzthian"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-02"},{"lineNumber":85,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"zzthian"},"content":"        Student editedStudent \u003d createEditedStudent(studentToEdit, editStudentDescriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"zzthian"},"content":"        if (!studentToEdit.isSameStudent(editedStudent) \u0026\u0026 model.hasStudent(editedStudent)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"zzthian"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"zzthian"},"content":"        } else if (!studentToEdit.hasSameId(editedStudent) \u0026\u0026 model.hasStudentWithMatchingId(editedStudent)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"zzthian"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ID);","lastModifiedDate":"2022-10-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"zzthian"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"zzthian"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"zzthian"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent));","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"zzthian"},"content":"     * Creates and returns a {@code Student} with the details of {@code studentToEdit}","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"zzthian"},"content":"     * edited with {@code editStudentDescriptor}.","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"zzthian"},"content":"    private static Student createEditedStudent(Student studentToEdit, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"zzthian"},"content":"        assert studentToEdit !\u003d null;","lastModifiedDate":"2022-10-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"zzthian"},"content":"        Name updatedName \u003d editStudentDescriptor.getName().orElse(studentToEdit.getName());","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"zzthian"},"content":"        Phone updatedPhone \u003d editStudentDescriptor.getPhone().orElse(studentToEdit.getPhone());","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"zzthian"},"content":"        Email updatedEmail \u003d editStudentDescriptor.getEmail().orElse(studentToEdit.getEmail());","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"gowribhat"},"content":"        ClassGroup updatedClassGroup \u003d editStudentDescriptor.getClassGroup().orElse(studentToEdit.getClassGroup());","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"zzthian"},"content":"        StudentId updatedStudentId \u003d editStudentDescriptor.getStudentId().orElse(studentToEdit.getStudentId());","lastModifiedDate":"2022-10-08"},{"lineNumber":112,"author":{"gitId":"zzthian"},"content":"        Set\u003cTag\u003e updatedTags \u003d editStudentDescriptor.getTags().orElse(studentToEdit.getTags());","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"Evande1"},"content":"        AttendanceList updatedAttendance \u003d studentToEdit.getAttendanceList();","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"Evande1"},"content":"        return new Student(updatedName, updatedPhone, updatedEmail,","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"Evande1"},"content":"                updatedClassGroup, updatedStudentId, updatedTags, updatedAttendance);","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"zzthian"},"content":"                \u0026\u0026 editStudentDescriptor.equals(e.editStudentDescriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"zzthian"},"content":"     * Stores the details to edit the student with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"zzthian"},"content":"     * corresponding field value of the student.","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"zzthian"},"content":"    public static class EditStudentDescriptor {","lastModifiedDate":"2022-10-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"gowribhat"},"content":"        private ClassGroup classGroup;","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"zzthian"},"content":"        private StudentId studentId;","lastModifiedDate":"2022-10-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"zzthian"},"content":"        public EditStudentDescriptor() {}","lastModifiedDate":"2022-10-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"zzthian"},"content":"        public EditStudentDescriptor(EditStudentDescriptor toCopy) {","lastModifiedDate":"2022-10-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"gowribhat"},"content":"            setClassGroup(toCopy.classGroup);","lastModifiedDate":"2022-10-09"},{"lineNumber":160,"author":{"gitId":"zzthian"},"content":"            setStudentId(toCopy.studentId);","lastModifiedDate":"2022-10-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"gowribhat"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, classGroup, studentId, tags);","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"gowribhat"},"content":"        public void setClassGroup(ClassGroup classGroup) {","lastModifiedDate":"2022-10-09"},{"lineNumber":196,"author":{"gitId":"gowribhat"},"content":"            this.classGroup \u003d classGroup;","lastModifiedDate":"2022-10-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":199,"author":{"gitId":"gowribhat"},"content":"        public Optional\u003cClassGroup\u003e getClassGroup() {","lastModifiedDate":"2022-10-09"},{"lineNumber":200,"author":{"gitId":"gowribhat"},"content":"            return Optional.ofNullable(classGroup);","lastModifiedDate":"2022-10-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"zzthian"},"content":"        public void setStudentId(StudentId studentId) {","lastModifiedDate":"2022-10-08"},{"lineNumber":204,"author":{"gitId":"zzthian"},"content":"            this.studentId \u003d studentId;","lastModifiedDate":"2022-10-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"zzthian"},"content":"        public Optional\u003cStudentId\u003e getStudentId() {","lastModifiedDate":"2022-10-08"},{"lineNumber":208,"author":{"gitId":"zzthian"},"content":"            return Optional.ofNullable(studentId);","lastModifiedDate":"2022-10-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"zzthian"},"content":"            if (!(other instanceof EditStudentDescriptor)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"Evande1"},"content":"            // might get errors here","lastModifiedDate":"2022-10-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"zzthian"},"content":"            EditStudentDescriptor e \u003d (EditStudentDescriptor) other;","lastModifiedDate":"2022-10-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":246,"author":{"gitId":"gowribhat"},"content":"                    \u0026\u0026 getClassGroup().equals(e.getClassGroup())","lastModifiedDate":"2022-10-09"},{"lineNumber":247,"author":{"gitId":"zzthian"},"content":"                    \u0026\u0026 getStudentId().equals(e.getStudentId())","lastModifiedDate":"2022-10-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"gowribhat":12,"zzthian":59,"Evande1":5,"-":175}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.student.StudentContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"zzthian"},"content":" * Finds and lists all students in address book whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"zzthian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all students whose names contain any of \"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"gowribhat"},"content":"    private final StudentContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"gowribhat"},"content":"    public FindCommand(StudentContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"zzthian"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"zzthian"},"content":"                String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"gowribhat":3,"zzthian":4,"-":35}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"zzthian"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"zzthian"},"content":" * Lists all students in the address book to the user.","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"zzthian"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all students\";","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"zzthian"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zzthian":4,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/RemoveTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":" * Removes a task identified using it\u0027s displayed index from the task book.","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"public class RemoveTaskCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"    public static final String COMMAND_WORD \u003d \"remove-task\";","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"     * Creates a RemoveTaskCommand with the specified {@code Index}","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"    public RemoveTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"        ObservableList\u003cTask\u003e taskList \u003d model.getTaskBook().getTaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d taskList.size()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"        Task taskToDelete \u003d taskList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"thamruicong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"thamruicong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"thamruicong"},"content":"                || (other instanceof RemoveTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"thamruicong"},"content":"                \u0026\u0026 targetIndex.equals(((RemoveTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":54}},{"path":"src/main/java/seedu/address/logic/commands/TaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_TITLE;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":" * Adds a task to the task book.","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"public class TaskCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"    public static final String COMMAND_WORD \u003d \"task\";","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task. \"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"            + PREFIX_TASK_TITLE + \"TITLE \"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"            + PREFIX_TASK_DESCRIPTION + \"DESCRIPTION... \\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"            + PREFIX_TASK_TITLE + \"Test Title \"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"            + PREFIX_TASK_DESCRIPTION + \"Very descriptive description \";","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"    private final Task toAdd;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"     * Creates a TaskCommand to add the specified {@code Task}","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"    public TaskCommand(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"        toAdd \u003d task;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"thamruicong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"thamruicong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"thamruicong"},"content":"                || (other instanceof TaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"thamruicong"},"content":"                \u0026\u0026 toAdd.equals(((TaskCommand) other).toAdd));","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":51}},{"path":"src/main/java/seedu/address/logic/commands/UploadPictureCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzthian"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"zzthian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"zzthian"},"content":"import java.io.File;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"zzthian"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"zzthian"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"zzthian"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"zzthian"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Picture;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"zzthian"},"content":"import seedu.address.storage.ImageStorage;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"zzthian"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"zzthian"},"content":" * Adds a profile picture for a student.","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"zzthian"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"zzthian"},"content":"public class UploadPictureCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"zzthian"},"content":"    public static final String COMMAND_WORD \u003d \"upload-pic\";","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"zzthian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Uploads a profile picture to the student indentified.\"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"zzthian"},"content":"            + \"Parameters: index of student you would like to edit.\";","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"zzthian"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Student\u0027s profile picture has been updated!\";","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"zzthian"},"content":"    private final Index index;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"zzthian"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"zzthian"},"content":"     * Creates a new UploadPictureCommand Object.","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"zzthian"},"content":"     * @param index","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"zzthian"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"zzthian"},"content":"    public UploadPictureCommand(Index index) {","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"zzthian"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"zzthian"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"zzthian"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"zzthian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"zzthian"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"zzthian"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"zzthian"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"zzthian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"zzthian"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"zzthian"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"zzthian"},"content":"        File studentPicture \u003d ImageStorage.chooseImage();","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"zzthian"},"content":"        if (studentPicture \u003d\u003d null) {","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"zzthian"},"content":"            throw new CommandException(\"No image selected!\");","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"zzthian"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"zzthian"},"content":"        if (!Picture.isJpgFile(studentPicture)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"zzthian"},"content":"            throw new CommandException(Picture.PICTURE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"zzthian"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"zzthian"},"content":"        ImageStorage.uploadImage(studentToEdit, studentPicture);","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"zzthian"},"content":"        model.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"zzthian"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"zzthian"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"zzthian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"zzthian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"zzthian"},"content":"            return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"zzthian"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"zzthian"},"content":"        if (!(other instanceof UploadPictureCommand)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"zzthian"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"zzthian"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"zzthian"},"content":"        UploadPictureCommand u \u003d (UploadPictureCommand) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"zzthian"},"content":"        return this.index.equals(u.index);","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"zzthian"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"zzthian":74}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"Whysochong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_GROUP;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Whysochong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.attendance.AttendanceList;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.student.ClassGroup;","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.StudentId;","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"gowribhat"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"gowribhat"},"content":"                        PREFIX_EMAIL, PREFIX_CLASS_GROUP, PREFIX_ID, PREFIX_TAG);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"Whysochong"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ID)","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"Whysochong"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE));","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"Whysochong"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL));","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"Whysochong"},"content":"        ClassGroup classGroup \u003d ParserUtil.parseClassGroup(argMultimap.getValue(PREFIX_CLASS_GROUP));","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"zzthian"},"content":"        StudentId studentId \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"Evande1"},"content":"        AttendanceList attendanceList \u003d new AttendanceList(); //empty attendance","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"Evande1"},"content":"        Student student \u003d new Student(name, phone, email, classGroup, studentId, tagList, attendanceList);","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"zzthian"},"content":"        return new AddCommand(student);","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"gowribhat":3,"Whysochong":6,"zzthian":7,"Evande1":3,"-":47}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"gowribhat"},"content":"import seedu.address.logic.commands.ClassGroupCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"import seedu.address.logic.commands.RemoveTaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"zzthian"},"content":"import seedu.address.logic.commands.UploadPictureCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"gowribhat"},"content":"        case ClassGroupCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"gowribhat"},"content":"            return new ClassGroupCommandParser().parse(arguments);","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":79,"author":{"gitId":"thamruicong"},"content":"        case TaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"thamruicong"},"content":"            return new TaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"thamruicong"},"content":"        case RemoveTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"thamruicong"},"content":"            return new RemoveTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"Evande1"},"content":"        case AttendanceCommandParser.ATTENDANCE_COMMAND_WORD:","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"Evande1"},"content":"            return new AttendanceCommandParser().parse(arguments);","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"zzthian"},"content":"        case UploadPictureCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"zzthian"},"content":"            return new UploadPictureCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"gowribhat":4,"thamruicong":8,"zzthian":4,"Evande1":4,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/AttendanceAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"Evande1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"Evande1"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"Evande1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_GROUP;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SIZE;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Evande1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Evande1"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"Evande1"},"content":"import seedu.address.logic.commands.AttendanceAddCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"Evande1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"Evande1"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"Evande1"},"content":" * Parses input arguments and creates a new AttendanceAddCommand object","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"Evande1"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"public class AttendanceAddCommandParser implements Parser\u003cAttendanceAddCommand\u003e {","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"Evande1"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"Evande1"},"content":"    public AttendanceAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"Evande1"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"Evande1"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_CLASS_GROUP, PREFIX_SIZE);","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"Evande1"},"content":"        Index index;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"Evande1"},"content":"        String mod;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"Evande1"},"content":"        String size;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"Evande1"},"content":"        try {","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"Evande1"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"Evande1"},"content":"            mod \u003d argMultimap.getValue(PREFIX_CLASS_GROUP)","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"Evande1"},"content":"                    .orElseThrow(() -\u003e new ParseException(\"Missing prefix\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"Evande1"},"content":"            // add a parser method for this later ^","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"Evande1"},"content":"            size \u003d ParserUtil.parseSize(argMultimap.getValue(PREFIX_SIZE)","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"Evande1"},"content":"                    .orElseThrow(() -\u003e new ParseException(\"Missing prefix\")));","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"Evande1"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"Evande1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AttendanceAddCommand.MESSAGE_USAGE),","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"Evande1"},"content":"                    ive);","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"Evande1"},"content":"        return new AttendanceAddCommand(index, mod, size);","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"Evande1"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Evande1":39}},{"path":"src/main/java/seedu/address/logic/parser/AttendanceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Evande1"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_ATTENDANCE_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Evande1"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Evande1"},"content":"import seedu.address.logic.commands.AttendanceAddCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Evande1"},"content":"import seedu.address.logic.commands.AttendanceDeleteCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"Evande1"},"content":"import seedu.address.logic.commands.AttendanceMarkCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"Evande1"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"Evande1"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"Evande1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Evande1"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Evande1"},"content":" * Parses input arguments and creates new AttendanceParsers object","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"Evande1"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Evande1"},"content":"public class AttendanceCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"Evande1"},"content":"    public static final String ATTENDANCE_COMMAND_WORD \u003d \"attendance\";","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Evande1"},"content":"    public static final String ATTENDANCE_ERROR \u003d String.format(MESSAGE_INVALID_ATTENDANCE_COMMAND_FORMAT,","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"Evande1"},"content":"            HelpCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"Evande1"},"content":"     * Used for initial separation of next attendance command word and args.","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"Evande1"},"content":"    private static final Pattern ATTENDANCE_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Evande1"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code AttendanceCommand}","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Evande1"},"content":"     * and returns a {@code AttendanceCommand} object for execution.","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Evande1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Evande1"},"content":"    public Command parse(String args) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"Evande1"},"content":"        final Matcher matcher \u003d ATTENDANCE_COMMAND_FORMAT.matcher(args.trim());","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"Evande1"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"Evande1"},"content":"            throw new ParseException(ATTENDANCE_ERROR);","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"Evande1"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"Evande1"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"Evande1"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"Evande1"},"content":"        case AttendanceAddCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"Evande1"},"content":"            return new AttendanceAddCommandParser().parse(arguments);","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"Evande1"},"content":"        case AttendanceDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"Evande1"},"content":"            return new AttendanceDeleteCommandParser().parse(arguments);","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"Evande1"},"content":"        case AttendanceMarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"Evande1"},"content":"            return new AttendanceMarkCommandParser().parse(arguments);","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"Evande1"},"content":"        default:","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"Evande1"},"content":"            throw new ParseException(ATTENDANCE_ERROR);","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"Evande1"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Evande1":59}},{"path":"src/main/java/seedu/address/logic/parser/AttendanceDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"Evande1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"Evande1"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Evande1"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Evande1"},"content":"import seedu.address.logic.commands.AttendanceDeleteCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Evande1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"Evande1"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Evande1"},"content":" * Parses input arguments and creates a new AttendanceDeleteCommand object","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"Evande1"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"Evande1"},"content":"public class AttendanceDeleteCommandParser implements Parser\u003cAttendanceDeleteCommand\u003e {","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"Evande1"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"    public AttendanceDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"Evande1"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"Evande1"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"Evande1"},"content":"        Index index;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"Evande1"},"content":"        try {","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"Evande1"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"Evande1"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"Evande1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"Evande1"},"content":"                    AttendanceDeleteCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"Evande1"},"content":"        return new AttendanceDeleteCommand(index);","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"Evande1"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Evande1":28}},{"path":"src/main/java/seedu/address/logic/parser/AttendanceMarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"Evande1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"Evande1"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"Evande1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LESSON;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MARK;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Evande1"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Evande1"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"Evande1"},"content":"import seedu.address.logic.commands.AttendanceMarkCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"Evande1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"Evande1"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"Evande1"},"content":" * Parses input arguments and creates a new AttendanceMarkCommand object","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"Evande1"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"public class AttendanceMarkCommandParser implements Parser\u003cAttendanceMarkCommand\u003e {","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"Evande1"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"Evande1"},"content":"    public AttendanceMarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"Evande1"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"Evande1"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_LESSON, PREFIX_MARK);","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Evande1"},"content":"        Index studentIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"Evande1"},"content":"        String lessonIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"Evande1"},"content":"        Attendance attendance;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"Evande1"},"content":"        try {","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"Evande1"},"content":"            studentIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"Evande1"},"content":"            lessonIndex \u003d ParserUtil.parseSize(argMultimap.getValue(PREFIX_LESSON)","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"Evande1"},"content":"                    .orElseThrow(() -\u003e new ParseException(\"Missing prefix\")));","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"Evande1"},"content":"            attendance \u003d ParserUtil.parseAttendance(argMultimap.getValue(PREFIX_MARK));","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"Evande1"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"Evande1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"Evande1"},"content":"                    AttendanceMarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"Evande1"},"content":"        return new AttendanceMarkCommand(studentIndex, lessonIndex, attendance);","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"Evande1"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Evande1":38}},{"path":"src/main/java/seedu/address/logic/parser/ClassGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gowribhat"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"gowribhat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_GROUP;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"gowribhat"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"gowribhat"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"gowribhat"},"content":"import seedu.address.logic.commands.ClassGroupCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"gowribhat"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.student.ClassGroup;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"gowribhat"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"gowribhat"},"content":" * Parses input arguments and creates a new ClassGroupCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"gowribhat"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"gowribhat"},"content":"public class ClassGroupCommandParser implements Parser\u003cClassGroupCommand\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"gowribhat"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"gowribhat"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"gowribhat"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"gowribhat"},"content":"     * @param args","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"gowribhat"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"gowribhat"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"gowribhat"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"gowribhat"},"content":"    public ClassGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"gowribhat"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"gowribhat"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"gowribhat"},"content":"                PREFIX_CLASS_GROUP);","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"gowribhat"},"content":"        Index index;","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"gowribhat"},"content":"        try {","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"gowribhat"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"gowribhat"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"gowribhat"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"gowribhat"},"content":"                    ClassGroupCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"gowribhat"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"gowribhat"},"content":"        String classGroup \u003d argMultimap.getValue(PREFIX_CLASS_GROUP).orElse(\"\");","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"gowribhat"},"content":"        return new ClassGroupCommand(index, new ClassGroup(classGroup));","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"gowribhat"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"gowribhat":40}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"zzthian"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"    public static final Prefix PREFIX_TASK_TITLE \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"    public static final Prefix PREFIX_TASK_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"    public static final Prefix PREFIX_MARK \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"Evande1"},"content":"    public static final Prefix PREFIX_SIZE \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"gowribhat"},"content":"    public static final Prefix PREFIX_CLASS_GROUP \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"Evande1"},"content":"    public static final Prefix PREFIX_LESSON \u003d new Prefix(\"l/\");","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"gowribhat":1,"thamruicong":2,"zzthian":1,"Evande1":3,"-":13}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_GROUP;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"gowribhat"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"gowribhat"},"content":"                PREFIX_CLASS_GROUP, PREFIX_ID, PREFIX_TAG);","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"zzthian"},"content":"        EditCommand.EditStudentDescriptor editStudentDescriptor \u003d new EditCommand.EditStudentDescriptor();","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"zzthian"},"content":"            editStudentDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"Whysochong"},"content":"            editStudentDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE)));","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"Whysochong"},"content":"            editStudentDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL)));","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"gowribhat"},"content":"        if (argMultimap.getValue(PREFIX_CLASS_GROUP).isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"Whysochong"},"content":"            editStudentDescriptor","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"Whysochong"},"content":"                    .setClassGroup(ParserUtil.parseClassGroup(argMultimap.getValue(PREFIX_CLASS_GROUP)));","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"gowribhat"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"zzthian"},"content":"        if (argMultimap.getValue(PREFIX_ID).isPresent()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"zzthian"},"content":"            editStudentDescriptor.setStudentId(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ID).get()));","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"zzthian"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editStudentDescriptor::setTags);","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"zzthian"},"content":"        if (!editStudentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"zzthian"},"content":"        return new EditCommand(index, editStudentDescriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"gowribhat":7,"Whysochong":4,"zzthian":8,"-":69}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.student.StudentContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"gowribhat"},"content":"        return new FindCommand(new StudentContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"gowribhat":2,"-":31}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"Whysochong"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.attendance.AttendanceList;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.student.ClassGroup;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.StudentId;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.TaskTitle;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"Whysochong"},"content":"    public static final String INFO_NOT_AVAILABLE \u003d \"NA\";","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"Whysochong"},"content":"    public static Phone parsePhone(Optional\u003cString\u003e phone) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"Whysochong"},"content":"        String trimmedPhone \u003d phone.orElse(INFO_NOT_AVAILABLE).trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"Evande1"},"content":"     * Parses {@code String attendance} into an {@code Attendance attendance}","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"Evande1"},"content":"     * @param attendance with the input","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"Evande1"},"content":"     * @return Attendance","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"Evande1"},"content":"     * @throws ParseException","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"Whysochong"},"content":"    public static Attendance parseAttendance(Optional\u003cString\u003e attendance) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"Whysochong"},"content":"        String trimmedAttendance \u003d attendance.orElse(INFO_NOT_AVAILABLE).trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"Evande1"},"content":"        if (!Attendance.isValidMark(trimmedAttendance)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"Evande1"},"content":"            throw new ParseException(Attendance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"Evande1"},"content":"        return new Attendance(trimmedAttendance);","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"Evande1"},"content":"     * Parses {@code String size}","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"Evande1"},"content":"     * @param size with the input","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"Evande1"},"content":"     * @return String","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"Evande1"},"content":"     * @throws ParseException","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"Evande1"},"content":"    public static String parseSize(String size) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"Evande1"},"content":"        requireNonNull(size);","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"Evande1"},"content":"        String trimmedSize \u003d size.trim();","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"Evande1"},"content":"        if (!AttendanceList.isValidSize(trimmedSize)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"Evande1"},"content":"            throw new ParseException(AttendanceList.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"Evande1"},"content":"        return trimmedSize;","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"Evande1"},"content":"     * Parses a {@code String address} into a {@code StudentId}.","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"zzthian"},"content":"    public static StudentId parseAddress(String address) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"zzthian"},"content":"        if (!StudentId.isValidStudentId(trimmedAddress)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":113,"author":{"gitId":"zzthian"},"content":"            throw new ParseException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"zzthian"},"content":"        return new StudentId(trimmedAddress);","lastModifiedDate":"2022-10-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"Whysochong"},"content":"    public static Email parseEmail(Optional\u003cString\u003e email) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"Whysochong"},"content":"        String trimmedEmail \u003d email.orElse(INFO_NOT_AVAILABLE).trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"gowribhat"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"gowribhat"},"content":"     * Parses a {@code String classGroup} into an {@code ClassGroup}.","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"gowribhat"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"gowribhat"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"gowribhat"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"gowribhat"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"Whysochong"},"content":"    public static ClassGroup parseClassGroup(Optional\u003cString\u003e classGroup) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"Whysochong"},"content":"        String trimmedClassGroup \u003d classGroup.orElse(INFO_NOT_AVAILABLE).trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"gowribhat"},"content":"        return new ClassGroup(trimmedClassGroup);","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":169,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":170,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"thamruicong"},"content":"     * Parses a {@code String title} into a {@code TaskTitle}.","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"thamruicong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"thamruicong"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"thamruicong"},"content":"     * @throws ParseException if the given {@code title} is invalid.","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":176,"author":{"gitId":"thamruicong"},"content":"    public static TaskTitle parseTitle(String title) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"thamruicong"},"content":"        requireNonNull(title);","lastModifiedDate":"2022-10-09"},{"lineNumber":178,"author":{"gitId":"thamruicong"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":179,"author":{"gitId":"thamruicong"},"content":"        if (!TaskTitle.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"thamruicong"},"content":"            throw new ParseException(TaskTitle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":182,"author":{"gitId":"thamruicong"},"content":"        return new TaskTitle(trimmedTitle);","lastModifiedDate":"2022-10-11"},{"lineNumber":183,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":184,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":185,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":186,"author":{"gitId":"thamruicong"},"content":"     * Parses a {@code String description} into a {@code TaskDescription}.","lastModifiedDate":"2022-10-12"},{"lineNumber":187,"author":{"gitId":"thamruicong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-12"},{"lineNumber":188,"author":{"gitId":"thamruicong"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":189,"author":{"gitId":"thamruicong"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2022-10-12"},{"lineNumber":190,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":191,"author":{"gitId":"thamruicong"},"content":"    public static TaskDescription parseDescription(String description) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":192,"author":{"gitId":"thamruicong"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-09"},{"lineNumber":193,"author":{"gitId":"thamruicong"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":194,"author":{"gitId":"thamruicong"},"content":"        if (!TaskDescription.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":195,"author":{"gitId":"thamruicong"},"content":"            throw new ParseException(TaskDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":196,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":197,"author":{"gitId":"thamruicong"},"content":"        return new TaskDescription(trimmedDescription);","lastModifiedDate":"2022-10-11"},{"lineNumber":198,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":199,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"gowribhat":10,"thamruicong":32,"Whysochong":10,"zzthian":9,"Evande1":29,"-":110}},{"path":"src/main/java/seedu/address/logic/parser/RemoveTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"import seedu.address.logic.commands.RemoveTaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":" * Parses input arguments and creates a RemoveTaskCommand object.","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"public class RemoveTaskCommandParser implements Parser\u003cRemoveTaskCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"     * Parses the given {@code String} of arguments in the context of the RemoveTaskCommand","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"     * and returns a RemoveTaskCommand object for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"    public RemoveTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"            return new RemoveTaskCommand(index);","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":28}},{"path":"src/main/java/seedu/address/logic/parser/TaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_TITLE;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.TaskTitle;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":" * Parses input arguments and creates a new TaskCommand object.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"public class TaskCommandParser implements Parser\u003cTaskCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"     * Parses the given {@code String} of arguments in the context of the TaskCommand","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"     * and returns a TaskCommand object for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"    public TaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TASK_TITLE, PREFIX_TASK_DESCRIPTION);","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TASK_TITLE, PREFIX_TASK_DESCRIPTION)","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"        TaskTitle title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TASK_TITLE).get());","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"        TaskDescription description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_TASK_DESCRIPTION).get());","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"        Task task \u003d new Task(title, description);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"        return new TaskCommand(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"thamruicong"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"thamruicong"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":49}},{"path":"src/main/java/seedu/address/logic/parser/UploadPictureCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzthian"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"zzthian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"zzthian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"zzthian"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"zzthian"},"content":"import seedu.address.logic.commands.UploadPictureCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"zzthian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"zzthian"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"zzthian"},"content":" * Upload a picture of a student to the images folder of the main directory.","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"zzthian"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"zzthian"},"content":"public class UploadPictureCommandParser implements Parser\u003cUploadPictureCommand\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"zzthian"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"zzthian"},"content":"     * Parses the given {@code String} of arguments in the context of the UploadPictureCommand","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"zzthian"},"content":"     * and returns an UploadPictureCommand object for execution.","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"zzthian"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"zzthian"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"zzthian"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"zzthian"},"content":"    public UploadPictureCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"zzthian"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"zzthian"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"zzthian"},"content":"        Index index;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"zzthian"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"zzthian"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"zzthian"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"zzthian"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"zzthian"},"content":"                    UploadPictureCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"zzthian"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"zzthian"},"content":"        UploadPictureCommand command \u003d new UploadPictureCommand(index);","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"zzthian"},"content":"        return command;","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"zzthian"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"zzthian":35}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.UniqueStudentList;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"zzthian"},"content":" * Duplicates are not allowed (by .isSameStudent comparison)","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"zzthian"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"zzthian"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"zzthian"},"content":"     * Creates an AddressBook using the Students in the {@code toBeCopied}","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"zzthian"},"content":"     * Replaces the contents of the student list with {@code students}.","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"zzthian"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"zzthian"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"zzthian"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"zzthian"},"content":"        setStudents(newData.getStudentList());","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"zzthian"},"content":"    //// student-level operations","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"zzthian"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"zzthian"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"zzthian"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"zzthian"},"content":"        return students.contains(student);","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"zzthian"},"content":"     * Returns true if a student with the same StudentId as {@code student} exists in the address book.","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"zzthian"},"content":"    public boolean hasStudentWithSameIdAs(Student student) {","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"zzthian"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"zzthian"},"content":"        return students.haveSameId(student);","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"zzthian"},"content":"     * Adds a student to the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"zzthian"},"content":"     * The student must not already exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"zzthian"},"content":"    public void addStudent(Student p) {","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"zzthian"},"content":"        students.add(p);","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"zzthian"},"content":"     * Replaces the given student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"zzthian"},"content":"     * The student identity of {@code editedStudent} must not be the same as another","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"zzthian"},"content":"     * existing student in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"zzthian"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"zzthian"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2022-10-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"zzthian"},"content":"        students.setStudent(target, editedStudent);","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"zzthian"},"content":"    public void removeStudent(Student key) {","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"zzthian"},"content":"        students.remove(key);","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"zzthian"},"content":"        return students.asUnmodifiableObservableList().size() + \" students\";","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"zzthian"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"zzthian"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"zzthian"},"content":"                \u0026\u0026 students.equals(((AddressBook) other).students));","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"zzthian"},"content":"        return students.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zzthian":38,"-":91}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"zzthian"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"zzthian"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"zzthian"},"content":"    boolean hasStudent(Student student);","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"zzthian"},"content":"     * Deletes the given student.","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"zzthian"},"content":"     * The student must exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"zzthian"},"content":"    void deleteStudent(Student target);","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"zzthian"},"content":"     * Adds the given student.","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"zzthian"},"content":"     * {@code student} must not already exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"zzthian"},"content":"    void addStudent(Student student);","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"zzthian"},"content":"     * Replaces the given student {@code target} with {@code editedStudent}.","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"zzthian"},"content":"     * The student identity of {@code editedStudent} must not be the same as","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"zzthian"},"content":"     * another existing student in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"zzthian"},"content":"    void setStudent(Student target, Student editedStudent);","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"zzthian"},"content":"    /** Returns an unmodifiable view of the filtered student list */","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"zzthian"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"zzthian"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"zzthian"},"content":"    void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"thamruicong"},"content":"     * Returns the user prefs\u0027 task book file path.","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"thamruicong"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"thamruicong"},"content":"     * Sets the user prefs\u0027 task book file path.","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"thamruicong"},"content":"    void setTaskBookFilePath(Path taskBookFilePath);","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"thamruicong"},"content":"     * Replaces task book data with the data in {@code taskBook}.","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"thamruicong"},"content":"    void setTaskBook(ReadOnlyTaskBook taskBook);","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"thamruicong"},"content":"     * Returns the task book.","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"thamruicong"},"content":"    ReadOnlyTaskBook getTaskBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"thamruicong"},"content":"     * Returns the task list.","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"thamruicong"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"thamruicong"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task book.","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"thamruicong"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"thamruicong"},"content":"     * Adds the given task.","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"thamruicong"},"content":"    void addTask(Task task);","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"thamruicong"},"content":"     * Deletes the given task.","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"thamruicong"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"zzthian"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":131,"author":{"gitId":"zzthian"},"content":"     * Returns whether the StudentId from the given {@code student} belongs to an existing student in","lastModifiedDate":"2022-10-08"},{"lineNumber":132,"author":{"gitId":"zzthian"},"content":"     * the address book.","lastModifiedDate":"2022-10-08"},{"lineNumber":133,"author":{"gitId":"zzthian"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":134,"author":{"gitId":"zzthian"},"content":"    boolean hasStudentWithMatchingId(Student student);","lastModifiedDate":"2022-10-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"thamruicong":42,"zzthian":23,"-":70}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"zzthian"},"content":"import seedu.address.storage.ImageStorage;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"zzthian"},"content":"    private final FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"    private final TaskBook taskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"     * Initializes a ModelManager with the given addressBook, taskBook and userPrefs.","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyTaskBook taskBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"        requireAllNonNull(addressBook, taskBook, userPrefs);","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"                + \"task book: \" + taskBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"zzthian"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(this.addressBook.getStudentList());","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"        this.taskBook \u003d new TaskBook(taskBook);","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"        this(new AddressBook(), new TaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"thamruicong"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"thamruicong"},"content":"        return userPrefs.getTaskBookFilePath();","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"thamruicong"},"content":"    public void setTaskBookFilePath(Path taskBookFilePath) {","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"thamruicong"},"content":"        requireNonNull(taskBookFilePath);","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"thamruicong"},"content":"        userPrefs.setTaskBookFilePath(taskBookFilePath);","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"zzthian"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"zzthian"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-02"},{"lineNumber":109,"author":{"gitId":"zzthian"},"content":"        return addressBook.hasStudent(student);","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":113,"author":{"gitId":"zzthian"},"content":"    public boolean hasStudentWithMatchingId(Student student) {","lastModifiedDate":"2022-10-08"},{"lineNumber":114,"author":{"gitId":"zzthian"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-08"},{"lineNumber":115,"author":{"gitId":"zzthian"},"content":"        return addressBook.hasStudentWithSameIdAs(student);","lastModifiedDate":"2022-10-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":119,"author":{"gitId":"zzthian"},"content":"    public void deleteStudent(Student target) {","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"zzthian"},"content":"        addressBook.removeStudent(target);","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"zzthian"},"content":"        ImageStorage.remove(target);","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":125,"author":{"gitId":"zzthian"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"zzthian"},"content":"        addressBook.addStudent(student);","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"zzthian"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"zzthian"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"zzthian"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2022-10-02"},{"lineNumber":133,"author":{"gitId":"zzthian"},"content":"        if (!target.hasSameId(editedStudent)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"zzthian"},"content":"            ImageStorage.renamePictureFile(target, editedStudent);","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"zzthian"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":137,"author":{"gitId":"zzthian"},"content":"        addressBook.setStudent(target, editedStudent);","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":140,"author":{"gitId":"thamruicong"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"thamruicong"},"content":"    public void setTaskBook(ReadOnlyTaskBook taskBook) {","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"thamruicong"},"content":"        this.taskBook.resetData(taskBook);","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"thamruicong"},"content":"    public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"thamruicong"},"content":"        return taskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"thamruicong"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"thamruicong"},"content":"        return taskBook.getTaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"thamruicong"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"thamruicong"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"thamruicong"},"content":"        return taskBook.hasTask(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"thamruicong"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"thamruicong"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"thamruicong"},"content":"        taskBook.addTask(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"thamruicong"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"thamruicong"},"content":"        requireNonNull(target);","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"thamruicong"},"content":"        taskBook.deleteTask(target);","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"zzthian"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Student List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":178,"author":{"gitId":"zzthian"},"content":"     * Returns an unmodifiable view of the list of {@code Student} backed by the internal list of","lastModifiedDate":"2022-10-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":182,"author":{"gitId":"zzthian"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2022-10-03"},{"lineNumber":183,"author":{"gitId":"zzthian"},"content":"        return filteredStudents;","lastModifiedDate":"2022-10-02"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":187,"author":{"gitId":"zzthian"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-10-03"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":189,"author":{"gitId":"zzthian"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2022-10-02"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":208,"author":{"gitId":"thamruicong"},"content":"                \u0026\u0026 filteredStudents.equals(other.filteredStudents)","lastModifiedDate":"2022-10-11"},{"lineNumber":209,"author":{"gitId":"thamruicong"},"content":"                \u0026\u0026 taskBook.equals(other.taskBook);","lastModifiedDate":"2022-10-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"thamruicong":55,"zzthian":28,"-":129}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"zzthian"},"content":"     * Returns an unmodifiable view of the students list.","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"zzthian"},"content":"     * This list will not contain any duplicate students.","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"zzthian"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zzthian":4,"-":13}},{"path":"src/main/java/seedu/address/model/ReadOnlyTaskBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":" * Unmodifiable view of a task book","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"public interface ReadOnlyTaskBook {","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"     * Returns an unmodifiable view of the task list.","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":15}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"thamruicong":2,"-":16}},{"path":"src/main/java/seedu/address/model/TaskBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.TaskList;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":" * Wraps all data at the task-book level","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"public class TaskBook implements ReadOnlyTaskBook {","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"    /*","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"     *   among constructors.","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"    {","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"    public TaskBook() {}","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"     * Creates a TaskBook using the Tasks in the {@code toBeCopied}","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"    public TaskBook(ReadOnlyTaskBook toBeCopied) {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"        this();","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"thamruicong"},"content":"     * Resets the existing data of this {@code TaskBook} with {@code newData}.","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"thamruicong"},"content":"    public void resetData(ReadOnlyTaskBook newData) {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"thamruicong"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"thamruicong"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"thamruicong"},"content":"    //// task-level operations","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"thamruicong"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"thamruicong"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"thamruicong"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"thamruicong"},"content":"        return tasks.contains(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"thamruicong"},"content":"     * Adds a task to the task book.","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"thamruicong"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"thamruicong"},"content":"        tasks.add(t);","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"thamruicong"},"content":"    public void deleteTask(Task t) {","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"thamruicong"},"content":"        tasks.remove(t);","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"thamruicong"},"content":"    //// util methods","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"thamruicong"},"content":"    public String toString() {","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"thamruicong"},"content":"        return tasks.asUnmodifiableObservableList().size() + \" tasks\";","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"thamruicong"},"content":"        // TODO: refine later","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"thamruicong"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"thamruicong"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"thamruicong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"thamruicong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"thamruicong"},"content":"                || (other instanceof TaskBook // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"thamruicong"},"content":"                \u0026\u0026 tasks.equals(((TaskBook) other).tasks));","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"thamruicong"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"thamruicong"},"content":"        return tasks.hashCode();","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":102}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"    private Path taskBookFilePath \u003d Paths.get(\"data\", \"taskbook.json\");","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"        setTaskBookFilePath(newUserPrefs.getTaskBookFilePath());","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"thamruicong"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"thamruicong"},"content":"        return taskBookFilePath;","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"thamruicong"},"content":"    public void setTaskBookFilePath(Path taskBookFilePath) {","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"thamruicong"},"content":"        requireNonNull(taskBookFilePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"thamruicong"},"content":"        this.taskBookFilePath \u003d taskBookFilePath;","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"thamruicong"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath)","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"thamruicong"},"content":"                \u0026\u0026 taskBookFilePath.equals(o.taskBookFilePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"thamruicong"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, taskBookFilePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":96,"author":{"gitId":"thamruicong"},"content":"        sb.append(\"\\nLocal data file location : \" + taskBookFilePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"thamruicong":15,"-":85}},{"path":"src/main/java/seedu/address/model/attendance/Attendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"package seedu.address.model.attendance;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Evande1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Evande1"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Evande1"},"content":" * * Represents a Person\u0027s attendance in the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Evande1"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"Evande1"},"content":"public class Attendance {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Evande1"},"content":"    public static final String VALIDATION_REGEX \u003d \"[0-1]\";","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Evande1"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"attendance is either a 0(absent) or 1(present)\";","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"Evande1"},"content":"    public final String value;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"Evande1"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"     * @param attendance A valid attendance.","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"Evande1"},"content":"    public Attendance(String attendance) {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Evande1"},"content":"        requireNonNull(attendance);","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Evande1"},"content":"        checkArgument(isValidMark(attendance), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Evande1"},"content":"        value \u003d attendance;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Evande1"},"content":"     * Constructs an empty {@code Attendance}.","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Evande1"},"content":"    public Attendance() {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Evande1"},"content":"        value \u003d \"0\";","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Evande1"},"content":"     * Returns if a given string is a valid attendance","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"Evande1"},"content":"    public static boolean isValidMark(String test) {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Evande1"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"Evande1"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"Evande1"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"Evande1"},"content":"        return value;","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"Evande1"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"Evande1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Evande1"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"Evande1"},"content":"                || (other instanceof Attendance // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"Evande1"},"content":"                \u0026\u0026 value.equals(((Attendance) other).value)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"Evande1"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"Evande1"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"Evande1"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"Evande1"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Evande1":53}},{"path":"src/main/java/seedu/address/model/attendance/AttendanceList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"package seedu.address.model.attendance;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"Evande1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"Evande1"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Evande1"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Evande1"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Evande1"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"Evande1"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"Evande1"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"Evande1"},"content":" * Represents a Student\u0027s attendance list in the address book","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"Evande1"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"Evande1"},"content":"public class AttendanceList {","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"Evande1"},"content":"    //if size is 0, empty list, elif up to 12, else reject.","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"Evande1"},"content":"    public static final String VALIDATION_REGEX \u003d \"[0-9]|1[012]\";","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"Evande1"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Invalid size\";","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"Evande1"},"content":"    private final String mod;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"Evande1"},"content":"    private List\u003cAttendance\u003e attendanceList;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"Evande1"},"content":"    private final boolean isEmpty;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"Evande1"},"content":"     * Constructs an {@code AttendanceList}.","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"Evande1"},"content":"     * @param mod A module of the attendance list.","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"Evande1"},"content":"     * @param size The size of the attendance list","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"Evande1"},"content":"    public AttendanceList(String mod, String size) {","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"Evande1"},"content":"        requireNonNull(mod, size);","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"Evande1"},"content":"        checkArgument(isValidSize(size), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"Evande1"},"content":"        this.isEmpty \u003d Integer.parseInt(size) \u003d\u003d 0;","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"Evande1"},"content":"        this.mod \u003d isEmpty ? \"NA\" : mod;","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"Evande1"},"content":"        this.attendanceList \u003d Stream","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"Evande1"},"content":"                .generate(Attendance::new)","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"Evande1"},"content":"                .limit(Integer.parseInt(size))","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"Evande1"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"Evande1"},"content":"     * Constructs an empty {@code AttendanceList}.","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"Evande1"},"content":"    public AttendanceList() {","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"Evande1"},"content":"        this.isEmpty \u003d true;","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"Evande1"},"content":"        this.mod \u003d \"NA\";","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"Evande1"},"content":"        this.attendanceList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"Evande1"},"content":"     * Constructs an {@code AttendanceList}.","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"Evande1"},"content":"     * @param mod A module of the attendance list","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"Evande1"},"content":"     * @param attendanceList A List of attendance","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"Evande1"},"content":"    public AttendanceList(String mod, List\u003cAttendance\u003e attendanceList) {","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"Evande1"},"content":"        requireNonNull(mod);","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"Evande1"},"content":"        checkArgument(isValidSize(Integer","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"Evande1"},"content":"                .toString(attendanceList.size())), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"Evande1"},"content":"        this.isEmpty \u003d attendanceList.size() \u003d\u003d 0;","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"Evande1"},"content":"        this.mod \u003d isEmpty ? \"NA\" : mod;","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"Evande1"},"content":"        this.attendanceList \u003d new ArrayList\u003cAttendance\u003e(attendanceList);","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"Evande1"},"content":"     * Returns if a given string is a valid list size.","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"Evande1"},"content":"    public static boolean isValidSize(String test) {","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"Evande1"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"Evande1"},"content":"     * Returns if a given attendance list is empty","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"Evande1"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"Evande1"},"content":"        return isEmpty;","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"Evande1"},"content":"     * Returns size of attendance list.","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"Evande1"},"content":"    public int getSize() {","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"Evande1"},"content":"        return attendanceList.size();","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"Evande1"},"content":"     * Returns a copy of the List","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"Evande1"},"content":"    public List\u003cAttendance\u003e getAttendanceList() {","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"Evande1"},"content":"        return new ArrayList\u003cAttendance\u003e(attendanceList);","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"Evande1"},"content":"     * Returns the module of the attendance list.","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"Evande1"},"content":"    public String getMod() {","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"Evande1"},"content":"        return mod;","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"Evande1"},"content":"     * Marks the attendance in the attendance list","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"Evande1"},"content":"     * @param index Index of the attendance list to be marked","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"Evande1"},"content":"     * @param attendance Attendance to be updated to","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"Evande1"},"content":"    public void mark(String index, Attendance attendance) {","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"Evande1"},"content":"        int lessonIndex \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"Evande1"},"content":"        // add error clause here","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"Evande1"},"content":"        checkArgument(lessonIndex \u003c attendanceList.size()","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"Evande1"},"content":"                \u0026\u0026 lessonIndex \u003e\u003d 0);","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"Evande1"},"content":"        attendanceList.set(lessonIndex, attendance);","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"Evande1"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"Evande1"},"content":"    public String toString() {","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"Evande1"},"content":"        if (isEmpty()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"Evande1"},"content":"            return \"NA\";","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"Evande1"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"Evande1"},"content":"        str.append(String.format(\"(%s)\", mod));","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"Evande1"},"content":"        str.append(Arrays.toString(attendanceList.toArray()));","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"Evande1"},"content":"        return str.toString();","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"Evande1"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"Evande1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"Evande1"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"Evande1"},"content":"                || (other instanceof AttendanceList // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"Evande1"},"content":"                \u0026\u0026 mod.equals(((AttendanceList) other).mod)); // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"Evande1"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"Evande1"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"Evande1"},"content":"        return mod.hashCode();","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":132,"author":{"gitId":"Evande1"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Evande1":132}},{"path":"src/main/java/seedu/address/model/student/ClassGroup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gowribhat"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"gowribhat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"gowribhat"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"gowribhat"},"content":" * Represents a Student\u0027s class in the address book.","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"gowribhat"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"gowribhat"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"gowribhat"},"content":"public class ClassGroup {","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"gowribhat"},"content":"    public final String value;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"gowribhat"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"gowribhat"},"content":"     * Constructs an {@code ClassGroup}.","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"gowribhat"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"gowribhat"},"content":"     * @param classGroup A valid class group.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"gowribhat"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"gowribhat"},"content":"    public ClassGroup(String classGroup) {","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"gowribhat"},"content":"        requireNonNull(classGroup);","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"gowribhat"},"content":"        this.value \u003d classGroup;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"gowribhat"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"gowribhat"},"content":"        return value.toLowerCase().contains(keyword);","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"gowribhat"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"gowribhat"},"content":"    public String toString() {","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"gowribhat"},"content":"        return value;","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"gowribhat"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"gowribhat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"gowribhat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"gowribhat"},"content":"                || (other instanceof ClassGroup // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"gowribhat"},"content":"                \u0026\u0026 value.equals(((ClassGroup) other).value)); // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"gowribhat"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"gowribhat"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"gowribhat"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"gowribhat"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"gowribhat":42}},{"path":"src/main/java/seedu/address/model/student/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzthian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"zzthian"},"content":" * Represents a Student\u0027s email in the address book.","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Whysochong"},"content":"    public static final String INFO_NOT_AVAILABLE \u003d \"NA\";","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"Whysochong"},"content":"        if (!email.equals(INFO_NOT_AVAILABLE)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"Whysochong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"Whysochong"},"content":"        return test.equals(INFO_NOT_AVAILABLE) || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"gowribhat"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"gowribhat"},"content":"        return value.toLowerCase().contains(keyword);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"gowribhat":2,"Whysochong":4,"zzthian":2,"-":68}},{"path":"src/main/java/seedu/address/model/student/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzthian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"zzthian"},"content":" * Represents a Student\u0027s name in the address book.","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"gowribhat"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"gowribhat"},"content":"        return fullName.toLowerCase().contains(keyword);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"gowribhat":3,"zzthian":2,"-":57}},{"path":"src/main/java/seedu/address/model/student/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzthian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"zzthian"},"content":" * Represents a Student\u0027s phone number in the address book.","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"Whysochong"},"content":"    public static final String INFO_NOT_AVAILABLE \u003d \"NA\";","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"Whysochong"},"content":"        if (!phone.equals(INFO_NOT_AVAILABLE)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"Whysochong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Whysochong"},"content":"        return test.equals(INFO_NOT_AVAILABLE) || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"gowribhat"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"gowribhat"},"content":"        return value.toLowerCase().contains(keyword);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"gowribhat":2,"Whysochong":4,"zzthian":2,"-":50}},{"path":"src/main/java/seedu/address/model/student/Picture.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzthian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"zzthian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"zzthian"},"content":"import java.io.File;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"zzthian"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"zzthian"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"zzthian"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"zzthian"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"zzthian"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"zzthian"},"content":" * To process a student\u0027s picture.","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"zzthian"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"zzthian"},"content":"public class Picture {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"zzthian"},"content":"    public static final String PICTURE_CONSTRAINTS \u003d \"Picture should be in .jpg format.\";","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"zzthian"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"zzthian"},"content":"     * Returns whether the given file is a .jpg file.","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"zzthian"},"content":"     * @param file","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"zzthian"},"content":"     * @return Whether the {@code file} is a .jpg file.","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"zzthian"},"content":"     * @throws CommandException If file cannot be found or unable to read the file.","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"zzthian"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"zzthian"},"content":"    public static boolean isJpgFile(File file) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"zzthian"},"content":"        int[] jpgByteArray \u003d new int[] {255, 216, 255, 224};","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"zzthian"},"content":"        requireNonNull(file);","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"zzthian"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"zzthian"},"content":"            FileInputStream inputFile \u003d new FileInputStream(file);","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"zzthian"},"content":"            int checkByte;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"zzthian"},"content":"            for (int counter \u003d 0; counter \u003c 4; counter++) {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"zzthian"},"content":"                checkByte \u003d inputFile.read();","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"zzthian"},"content":"                if (jpgByteArray[counter] !\u003d checkByte) {","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"zzthian"},"content":"                    return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"zzthian"},"content":"                }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"zzthian"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"zzthian"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"zzthian"},"content":"            throw new CommandException(\"File not found!\");","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"zzthian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"zzthian"},"content":"            throw new CommandException(\"Unable to read file\");","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"zzthian"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"zzthian"},"content":"        return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"zzthian"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"zzthian":45}},{"path":"src/main/java/seedu/address/model/student/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzthian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.attendance.AttendanceList;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"zzthian"},"content":" * Represents a Student in the studentId book.","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"Evande1"},"content":" * Guarantees: details are present and not null, field values are validated, immutable except for attendance.","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"zzthian"},"content":"public class Student {","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"gowribhat"},"content":"    private final ClassGroup classGroup;","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"zzthian"},"content":"    private final StudentId studentId;","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Evande1"},"content":"    private final AttendanceList attendanceList;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"zzthian"},"content":"     * Profile picture is initially set to the default profile picture.","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Evande1"},"content":"    public Student(Name name, Phone phone, Email email,","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"Evande1"},"content":"                   ClassGroup classGroup, StudentId studentId, Set\u003cTag\u003e tags, AttendanceList attendanceList) {","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"Whysochong"},"content":"        requireAllNonNull(name, studentId);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"gowribhat"},"content":"        this.classGroup \u003d classGroup;","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"zzthian"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"Evande1"},"content":"        this.attendanceList \u003d attendanceList;","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"Evande1"},"content":"    public AttendanceList getAttendanceList() {","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"Evande1"},"content":"        return attendanceList;","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"gowribhat"},"content":"    public ClassGroup getClassGroup() {","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"gowribhat"},"content":"        return classGroup;","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"zzthian"},"content":"    public StudentId getStudentId() {","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"zzthian"},"content":"        return studentId;","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":71,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"gowribhat"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"gowribhat"},"content":"     * Returns true if keyword in present in any field in the student.","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"gowribhat"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"gowribhat"},"content":"     * @param keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"gowribhat"},"content":"     * @return whether keyword is present is any field of the student","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"gowribhat"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"gowribhat"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"gowribhat"},"content":"        return name.contains(keyword) || phone.contains(keyword) || email.contains(keyword)","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"gowribhat"},"content":"                || classGroup.contains(keyword) || studentId.contains(keyword);","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"zzthian"},"content":"     * Returns true if both students have the same name.","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"zzthian"},"content":"     * This defines a weaker notion of equality between two students.","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"zzthian"},"content":"    public boolean isSameStudent(Student otherStudent) {","lastModifiedDate":"2022-10-02"},{"lineNumber":96,"author":{"gitId":"zzthian"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2022-10-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"zzthian"},"content":"        return otherStudent !\u003d null","lastModifiedDate":"2022-10-02"},{"lineNumber":101,"author":{"gitId":"zzthian"},"content":"                \u0026\u0026 otherStudent.getName().equals(getName());","lastModifiedDate":"2022-10-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"zzthian"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":105,"author":{"gitId":"zzthian"},"content":"     * Returns true is both students have the same studentId","lastModifiedDate":"2022-10-08"},{"lineNumber":106,"author":{"gitId":"zzthian"},"content":"     * @param otherStudent","lastModifiedDate":"2022-10-08"},{"lineNumber":107,"author":{"gitId":"zzthian"},"content":"     * @return Whether this and provided student have the same studentId","lastModifiedDate":"2022-10-08"},{"lineNumber":108,"author":{"gitId":"zzthian"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":109,"author":{"gitId":"zzthian"},"content":"    public boolean hasSameId(Student otherStudent) {","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"zzthian"},"content":"        return otherStudent.studentId.equals(studentId);","lastModifiedDate":"2022-10-08"},{"lineNumber":111,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":112,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"zzthian"},"content":"     * Returns true if both students have the same identity and data fields.","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"zzthian"},"content":"     * This defines a stronger notion of equality between two students.","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"zzthian"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"zzthian"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2022-10-02"},{"lineNumber":128,"author":{"gitId":"zzthian"},"content":"        return otherStudent.getName().equals(getName())","lastModifiedDate":"2022-10-02"},{"lineNumber":129,"author":{"gitId":"zzthian"},"content":"                \u0026\u0026 otherStudent.getPhone().equals(getPhone())","lastModifiedDate":"2022-10-02"},{"lineNumber":130,"author":{"gitId":"zzthian"},"content":"                \u0026\u0026 otherStudent.getEmail().equals(getEmail())","lastModifiedDate":"2022-10-02"},{"lineNumber":131,"author":{"gitId":"gowribhat"},"content":"                \u0026\u0026 otherStudent.getClassGroup().equals(getClassGroup())","lastModifiedDate":"2022-10-08"},{"lineNumber":132,"author":{"gitId":"zzthian"},"content":"                \u0026\u0026 otherStudent.getStudentId().equals(getStudentId())","lastModifiedDate":"2022-10-08"},{"lineNumber":133,"author":{"gitId":"zzthian"},"content":"                \u0026\u0026 otherStudent.getTags().equals(getTags());","lastModifiedDate":"2022-10-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"gowribhat"},"content":"        return Objects.hash(name, phone, email, classGroup, studentId, tags);","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"gowribhat"},"content":"                .append(\"; Class Group: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"gowribhat"},"content":"                .append(getClassGroup())","lastModifiedDate":"2022-10-08"},{"lineNumber":152,"author":{"gitId":"zzthian"},"content":"                .append(\"; StudentId: \")","lastModifiedDate":"2022-10-08"},{"lineNumber":153,"author":{"gitId":"Evande1"},"content":"                .append(getStudentId())","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"Evande1"},"content":"                .append(\"; AttendanceList: \")","lastModifiedDate":"2022-10-14"},{"lineNumber":155,"author":{"gitId":"Evande1"},"content":"                .append(getAttendanceList().toString());","lastModifiedDate":"2022-10-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"gowribhat":21,"Whysochong":1,"zzthian":33,"Evande1":15,"-":95}},{"path":"src/main/java/seedu/address/model/student/StudentContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzthian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"zzthian"},"content":" * Tests that a {@code Student}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"gowribhat"},"content":"public class StudentContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"gowribhat"},"content":"    public StudentContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"zzthian"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"gowribhat"},"content":"                .anyMatch(keyword -\u003e student.contains(keyword.toLowerCase()));","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"gowribhat"},"content":"                || (other instanceof StudentContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"gowribhat"},"content":"                \u0026\u0026 keywords.equals(((StudentContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"gowribhat":5,"zzthian":3,"-":21}},{"path":"src/main/java/seedu/address/model/student/StudentId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzthian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"zzthian"},"content":" * Represents a Student\u0027s address in the address book.","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"zzthian"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStudentId(String)}","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"zzthian"},"content":"public class StudentId {","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"zzthian"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Student ID should follow format: e0XXXXXX, where X  is \"","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"zzthian"},"content":"            + \"a digit from 0-9\";","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"zzthian"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[e][0][0-9]{6}$\";","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"zzthian"},"content":"     * Constructs an {@code StudentId}.","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"zzthian"},"content":"     * @param studentId A valid studentId.","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"zzthian"},"content":"    public StudentId(String studentId) {","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"zzthian"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"zzthian"},"content":"        checkArgument(isValidStudentId(studentId), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"zzthian"},"content":"        value \u003d studentId;","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"zzthian"},"content":"    public static boolean isValidStudentId(String test) {","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"gowribhat"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"gowribhat"},"content":"        return value.toLowerCase().contains(keyword);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"zzthian"},"content":"                || (other instanceof StudentId // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"zzthian"},"content":"                \u0026\u0026 value.equals(((StudentId) other).value)); // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"gowribhat":4,"zzthian":16,"-":42}},{"path":"src/main/java/seedu/address/model/student/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzthian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"zzthian"},"content":" * A list of students that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"zzthian"},"content":" * A student is considered unique by comparing using {@code Student#isSameStudent(Student)}.","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"zzthian"},"content":" * As such, adding and updating of students uses Student#isSameStudent(Student) for equality","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"zzthian"},"content":" * so as to ensure that the student being added or updated is","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"zzthian"},"content":" * unique in terms of identity in the UniqueStudentList. However, the removal of a student uses","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"zzthian"},"content":" * Student#equals(Object) so as to ensure that the student with exactly the same fields will be removed.","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"zzthian"},"content":" * @see Student#isSameStudent(Student)","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"zzthian"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"zzthian"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"zzthian"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"zzthian"},"content":"     * Returns true if the list contains an equivalent student as the given argument.","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"zzthian"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"zzthian"},"content":"        return internalList.stream().anyMatch(toCheck::isSameStudent);","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"zzthian"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"zzthian"},"content":"     * Returns true if the list contains a student with StudentId identical as the given argument.","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"zzthian"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"zzthian"},"content":"    public boolean haveSameId(Student toCheck) {","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"zzthian"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"zzthian"},"content":"        return internalList.stream().anyMatch(toCheck::hasSameId);","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"zzthian"},"content":"     * Adds a student to the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"zzthian"},"content":"     * The student must not already exist in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"zzthian"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"zzthian"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"zzthian"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"zzthian"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"zzthian"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"zzthian"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"zzthian"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"zzthian"},"content":"        if (!target.isSameStudent(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"zzthian"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"zzthian"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2022-10-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"zzthian"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"zzthian"},"content":"     * The student must exist in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"zzthian"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2022-10-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":86,"author":{"gitId":"zzthian"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2022-10-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"zzthian"},"content":"    public void setStudents(UniqueStudentList replacement) {","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"zzthian"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"zzthian"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"zzthian"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"zzthian"},"content":"        requireAllNonNull(students);","lastModifiedDate":"2022-10-02"},{"lineNumber":101,"author":{"gitId":"zzthian"},"content":"        if (!studentsAreUnique(students)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"zzthian"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-10-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":105,"author":{"gitId":"zzthian"},"content":"        internalList.setAll(students);","lastModifiedDate":"2022-10-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"zzthian"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"zzthian"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2022-10-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"zzthian"},"content":"                || (other instanceof UniqueStudentList // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":124,"author":{"gitId":"zzthian"},"content":"                        \u0026\u0026 internalList.equals(((UniqueStudentList) other).internalList));","lastModifiedDate":"2022-10-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"zzthian"},"content":"     * Returns true if {@code students} contains only unique students.","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"zzthian"},"content":"    private boolean studentsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"zzthian"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2022-10-02"},{"lineNumber":137,"author":{"gitId":"zzthian"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2022-10-02"},{"lineNumber":138,"author":{"gitId":"zzthian"},"content":"                if (students.get(i).isSameStudent(students.get(j))) {","lastModifiedDate":"2022-10-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zzthian":57,"-":88}},{"path":"src/main/java/seedu/address/model/student/exceptions/DuplicateStudentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzthian"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"zzthian"},"content":" * Signals that the operation will result in duplicate Students (Students","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"zzthian"},"content":" * are considered duplicates if they have the same identity).","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"zzthian"},"content":"public class DuplicateStudentException extends RuntimeException {","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"zzthian"},"content":"    public DuplicateStudentException() {","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"zzthian"},"content":"        super(\"Operation would result in duplicate students\");","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"zzthian":6,"-":5}},{"path":"src/main/java/seedu/address/model/student/exceptions/StudentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzthian"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"zzthian"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"zzthian"},"content":" * Signals that the operation is unable to find the specified student.","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"zzthian"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"zzthian"},"content":"public class StudentNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"zzthian":6}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":" * Represents a Task in the task book.","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"public class Task {","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"    public final TaskTitle title;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"    public final TaskDescription description;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"    public Task(TaskTitle title, TaskDescription description) {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"        requireAllNonNull(title, description);","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"    public TaskTitle getTitle() {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"        return title;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"    public TaskDescription getDescription() {","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"        return description;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"     * Returns true if both comments have the same identity and data fields.","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"     * This defines a stronger notion of equality between two comments.","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"            return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"            return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"thamruicong"},"content":"        Task otherStudent \u003d (Task) other;","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"thamruicong"},"content":"        return otherStudent.getTitle().equals(getTitle())","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"thamruicong"},"content":"                \u0026\u0026 otherStudent.getDescription().equals(getDescription());","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"thamruicong"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"thamruicong"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"thamruicong"},"content":"        return Objects.hash(title, description);","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"thamruicong"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"thamruicong"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"thamruicong"},"content":"        builder.append(getTitle())","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"thamruicong"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"thamruicong"},"content":"                .append(getDescription());","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"thamruicong"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"thamruicong":66}},{"path":"src/main/java/seedu/address/model/task/TaskDescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":" * Represents a Task\u0027s description in the task book.","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"public class TaskDescription {","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"            \"Task descriptions should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"    public final String description;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"     * Constructs a {@code TaskDescription}.","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"     * @param description A valid task description.","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"    public TaskDescription(String description) {","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"        return description;","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"thamruicong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"thamruicong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"thamruicong"},"content":"                || (other instanceof TaskDescription // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"thamruicong"},"content":"                \u0026\u0026 description.equals(((TaskDescription) other).description)); // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"thamruicong"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"thamruicong"},"content":"        return description.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"thamruicong":57}},{"path":"src/main/java/seedu/address/model/task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":" * A list of tasks that does not allow nulls.","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"     * The task can already exist in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"     * The task must exist in the list.","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"        internalList.remove(toRemove);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"thamruicong"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"thamruicong"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"thamruicong"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"thamruicong"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"thamruicong"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"thamruicong"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"thamruicong"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"thamruicong"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"thamruicong"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"thamruicong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"thamruicong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"thamruicong"},"content":"                || (other instanceof TaskList // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"thamruicong"},"content":"                \u0026\u0026 internalList.equals(((TaskList) other).internalList));","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"thamruicong"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"thamruicong"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":80}},{"path":"src/main/java/seedu/address/model/task/TaskTitle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":" * Represents a Task\u0027s title in the task book.","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTitle(String)}","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"public class TaskTitle {","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"            \"Task titles should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"    public final String title;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"     * Constructs a {@code TaskTitle}.","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"     * @param title A valid task title.","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"    public TaskTitle(String title) {","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"        requireNonNull(title);","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"        checkArgument(isValidTitle(title), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"     * Returns true if a given string is a valid title.","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"    public static boolean isValidTitle(String test) {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"        return title;","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"thamruicong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"thamruicong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"thamruicong"},"content":"                || (other instanceof TaskTitle // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"thamruicong"},"content":"                \u0026\u0026 title.equals(((TaskTitle) other).title)); // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"thamruicong"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"thamruicong"},"content":"        return title.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"thamruicong":57}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.attendance.AttendanceList;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.student.ClassGroup;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.StudentId;","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.TaskTitle;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"gowribhat"},"content":"    public static final ClassGroup EMPTY_CLASS_GROUP \u003d new ClassGroup(\"\");","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"Evande1"},"content":"    public static final AttendanceList EMPTY_ATTENDANCE \u003d new AttendanceList();","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"zzthian"},"content":"    public static Student[] getSampleStudents() {","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"zzthian"},"content":"        return new Student[] {","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"zzthian"},"content":"            new Student(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"Evande1"},"content":"                new ClassGroup(\"CS2030S Lab 32\"), new StudentId(\"e0712345\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"Evande1"},"content":"                    getTagSet(\"friends\"), EMPTY_ATTENDANCE),","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"zzthian"},"content":"            new Student(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"Evande1"},"content":"                new ClassGroup(\"CS2030S Lab 32\"), new StudentId(\"e0123456\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"Evande1"},"content":"                    getTagSet(\"colleagues\", \"friends\"), EMPTY_ATTENDANCE),","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"zzthian"},"content":"            new Student(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"Evande1"},"content":"                new ClassGroup(\"CS2040S Tutorial 3\"), new StudentId(\"e0132456\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"Evande1"},"content":"                    getTagSet(\"neighbours\"), EMPTY_ATTENDANCE),","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"zzthian"},"content":"            new Student(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"Evande1"},"content":"                new ClassGroup(\"CS2040S Tutorial 3\"), new StudentId(\"e0987123\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"Evande1"},"content":"                    getTagSet(\"family\"), EMPTY_ATTENDANCE),","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"zzthian"},"content":"            new Student(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"Evande1"},"content":"                new ClassGroup(\"CS2030S Lab 32\"), new StudentId(\"e0984750\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"Evande1"},"content":"                    getTagSet(\"classmates\"), EMPTY_ATTENDANCE),","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"zzthian"},"content":"            new Student(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"gowribhat"},"content":"                new ClassGroup(\"CS2040S Tutorial 3\"), new StudentId(\"e0453933\"),","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"Evande1"},"content":"                getTagSet(\"colleagues\"), EMPTY_ATTENDANCE)","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"thamruicong"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"thamruicong"},"content":"        return new Task[] {","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"thamruicong"},"content":"            new Task(new TaskTitle(\"Grade assignments\"), new TaskDescription(\"Complete by tonight\")),","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"thamruicong"},"content":"            new Task(new TaskTitle(\"Prepare slides for studio\"), new TaskDescription(\"Topic Environment Model\")),","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"thamruicong"},"content":"            new Task(new TaskTitle(\"Review CS1101S topics with Adam\"), new TaskDescription(\"Essence of Recursion\")),","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"thamruicong"},"content":"            new Task(new TaskTitle(\"Collect robot\"), new TaskDescription(\"At MakersLab\")),","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"thamruicong"},"content":"            new Task(new TaskTitle(\"Go through tutorial sheet\"), new TaskDescription(\"By this friday\"))","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":67,"author":{"gitId":"zzthian"},"content":"        for (Student sampleStudent : getSampleStudents()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"zzthian"},"content":"            sampleAb.addStudent(sampleStudent);","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"thamruicong"},"content":"    public static ReadOnlyTaskBook getSampleTaskBook() {","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"thamruicong"},"content":"        TaskBook sampleTb \u003d new TaskBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"thamruicong"},"content":"        for (Task sampleTask : getSampleTasks()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"thamruicong"},"content":"            sampleTb.addTask(sampleTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"thamruicong"},"content":"        return sampleTb;","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"gowribhat":4,"thamruicong":20,"zzthian":15,"Evande1":15,"-":36}},{"path":"src/main/java/seedu/address/storage/ImageStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zzthian"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"zzthian"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"zzthian"},"content":"import java.io.File;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"zzthian"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"zzthian"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"zzthian"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"zzthian"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"zzthian"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"zzthian"},"content":"import java.util.Base64;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"zzthian"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"zzthian"},"content":"import javafx.stage.FileChooser;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"zzthian"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"zzthian"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"zzthian"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"zzthian"},"content":" * Encapsulate the Image Storage of application.","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"zzthian"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"zzthian"},"content":"public class ImageStorage {","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"zzthian"},"content":"    private static byte[] imageBytes \u003d Base64.getDecoder().decode(","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"zzthian"},"content":"            \"/9j/4AAQSkZJRgABAQAAAQABAAD//gAtQ29udmVydGVkIGZyb20\"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"zzthian"},"content":"            + \"gIFdlYlAgdG8gSlBHIHVzaW5nIGV6Z2lmLmNvbf/bAEMABQMEBAQDBQQEBAUFBQYHDAgHBwcHDwsLCQwRDxISEQ8RERMWHBcTFBoVER\"","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"zzthian"},"content":"            + \"EYIRgaHR0fHx8TFyIkIh4kHB4fHv/bAEMBBQUFBwYHDggIDh4UERQeHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e\"","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"zzthian"},"content":"            + \"Hh4eHh4eHh4eHh4eHv/AABEIAVQBVAMBIgACEQEDEQH/xAAcAAEBAAIDAQEAAAAAAAAAAAAABgUHAQIEAwj/xABDEAEAAgECAQcJBw\"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"zzthian"},"content":"            + \"IDBgcAAAAAAQIDBBEFBhYhMUFV0RIiUWFxgZGToRMjMkJSscEzYhRTchUkorLh8DQ1Y3OCg5L/xAAWAQEBAQAAAAAAAAAAAAAAAAAA\"","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"zzthian"},"content":"            + \"AQL/xAAYEQEBAQEBAAAAAAAAAAAAAAAAAREhMf/aAAwDAQACEQMRAD8A/UYDTIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"zzthian"},"content":"            + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"zzthian"},"content":"            + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADA8W5TaXTTbFo6xqssdE232x1n29vu+IM9EejseLVcX4ZpZmubW4YtH5a\"","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"zzthian"},"content":"            + \"z5c/CN0PxDimv18z/idTeaf5dfNpHuj+XiiIiNojaFxNW2TlTwus+ZXVZPZjiP3l845WaDfp02rj3V8UcLiauMPKbhN587Jnxf68U7f\"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"zzthian"},"content":"            + \"GN2S0mt0erj/AHXVYc0+it+n4dbWp2xPbHVPbCYa2iIPh3KDiOj2rbJ/icUfkyzvMey3XH1VfCOM6LiUeTitOPNt04b/AIvd6fcljWs\"","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"zzthian"},"content":"            + \"iAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6Z82LBhvmz5K48dI3ta3VDta1a1m17RWtYmZmZ6Ij0oTlFxe/E9R5GOZrpMc/d1/VP6p/j0\"","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"zzthian"},"content":"            + \"Ehbjvx7jufiE2wYPKw6T9PVbJ67er1MODbAAAAAAARMxaLVmYmJ3iYnaYkAVfJ7lF9rauk4leIvPRTPPRFvVb1+tTTG0tW9fRPUrOSXG\"","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"zzthian"},"content":"            + \"bZPJ4dq773iNsF5npt/bPr9HwZsalUwCKAAAAAAAAAAAAAAAAAAAAAAAAAAA+Ou1NNHo82qydNcVZtt6Z7I987QCd5a8TmNuF4bdcRbP\"","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"zzthian"},"content":"            + \"MfGK/zPuSztmy5M+a+bNbysmS02tPpmXVqM0AVAAAAAAAAArMxMWrM1mJ3iYnpifSANgcnuJRxLh8ZLzH2+OfIzRHp7J9/X8WRQPJjXf\"","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"zzthian"},"content":"            + \"4Hi2Ob22w5vu8no6eqfdP8r7qnaWLG5QAAAAAAAAAAAAAAAAAAAAAAAAABN8u9V5On0+irPTktOS/sr0R9Z+ikQnK7N9tx7NXfeMNa\"","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"zzthian"},"content":"            + \"4490bz9ZlYlYkBpkAAAAAAAAAAABxMbxtLYvAtVOt4RptRad7zTyb/6q9E/tv72u1byDzzbSarTTP8ATyRePZaNp+sJVikAZaAAAAA\"","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"zzthian"},"content":"            + \"AAAAAAAAAAAAAAAAAAAcx0zEemdmteKZPteJ6vLP5s95/4pbKr+OvthrDP/Xy7/5lv+aViV0AaZAAAAAAAAAAAAFByEvtxTPj7L4N/h\"","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"zzthian"},"content":"            + \"aPFPs3yJ/88n/2L/wlWLYBloAAAAAAAAAAAAAAAAAAAAAAABzXotE+iWtOIU+z4hqsf6c14/4pbKQXKvD9jx/U9HRkmMsf/KPGJWJWL\"","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"zzthian"},"content":"            + \"AaZAAAAAAAAAAAAGf5C034tmv2U08/W0QwCr5BYdsOs1Ex+K1cce6Jmf3hKs9UwDLQAAAAAAAAAAAAAAAAAAAAAAAAl+Xml6NNrax\"","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"zzthian"},"content":"            + \"1b4b/vX+VQ8vFtJXX8OzaSdom9fMmey0dMT8SFa4C0Wraa3rNbVmYtE9kx1wNsAAAAAAAAAAAAOJ6I3nqhsHk3pp0nBdPjtG17x9pf\"","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"zzthian"},"content":"            + \"226f22RvAdD/ALQ4ph08xvjifLy/6I6/j0R72w5ZrUAEUAAAAAAAAAAAAAAAAAAAAAAAAABIctOGzh1McRxV+7yztl2/Lf0+/wDf2p\"","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"zzthian"},"content":"            + \"1s7UYcWowXwZqRfHkrNbVnthr/AI1w3LwzWThvvbHbpxZP1R4x2tSs2PCAqAAAAAAAADiZ2jeXKh5JcHnUZK8R1NPuKTvirMf1LR2\"","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"zzthian"},"content":"            + \"+yPrKDMcleGzoNB9pmrtqM+1rxPXWvZX+Z9rMEjLYAAAAAAAAAAAAAAAAAAAAAAAAAAAA+HENHp9dpbabU08qlumJjrrPpieyX3Aa9\"","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"zzthian"},"content":"            + \"4zwrU8LzeTljy8Np2x5Yjot6p9E+p4Gz8uPHlxWxZcdb47Rtato3iYS/FuS07zl4ZeJjr+xyW/5bfxPxWVmxMDvqcObTZZxajDfDk\"","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"zzthian"},"content":"            + \"j8t67T/wBXRpAAAHAOXHrl6+HcO1vELbaXBa9e3JPRSPerOD8nNLo5rm1Mxqc8dMbx5lZ9Uds+uUtWRiOTvJ++qmuq19LU0/XXHPRbJ7\"","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"zzthian"},"content":"            + \"fRX91lERWsVrERERtERG0RBPTIza1IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMxFZtMxFY65noiPexur47wrTTMW1dclo/Liibz9Oj6\"","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"zzthian"},"content":"            + \"gyQmdRyuxRvGm0OS/onLeK/SN3gzcqeKX/p102GP7cflT8ZkxNWWfFhz45xZ8ePLSfy3rEx9WJ1PJjhmad8ePNp5/8ASvvHwndL5eN8X\"","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"zzthian"},"content":"            + \"yfi4hmj1U2r+0PNk1utyf1Nbqbe3NbxXDVHk5Hzv91r7xH9+Dwl0jkdn36ddTb1YLeKanJknry5J9t58XHl3/Xf/wDUr1OKzDyPxRP3\"","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"zzthian"},"content":"            + \"2tz39VMUV/fdkdJwDhWlmLRpYy2jqtmmb/Sej6ISufPT8OfNX2ZLR/L74+J8Sx/g4hqq/wD2zP7plNjY8bbREbREdUR1QILFyh4xjnp\"","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"zzthian"},"content":"            + \"1n2kejJjrb+HuwcrdZXoz6TT5Y9NZmk/zBi6rxgdNyq4fk2jPi1Gnn07RePjHT9GW0ev0Ws/8Lq8OWf01t53wnpTF16An1gAAAAAAA\"","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"zzthian"},"content":"            + \"AAAAAAAAAAAAAAAAAA8nEuI6Th2Ly9Vl8mZjzaR03t7I/nqSfFOUmt1e+PTb6TDPR5s+fPtt2e4kNVXEeK6Dh8banURGT/Lp51/h2\"","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"zzthian"},"content":"            + \"e/ZO6/lXqb710Wnpgr+vJ59vh1R9U72zPbPX6xrGdfbV6vVay3larUZc0/323iPd1PiCoAAAAAAAAAAONunftjqlyAyOh43xPR7Rj1V\"","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"zzthian"},"content":"            + \"slI/Jl8+Pr0x7pZ7h/KrS5Nqa3DbT2/XTz6eMfVICYutnYM2LPijLgy0y456rUtvDu1no9VqNHm+10ua+G/bNZ6/bHVPvU/CeVOO+2L\"","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"zzthian"},"content":"            + \"iVIxW6vtqR5s+2Oz3Ji6pRxS1clK3pat6WjetqzvEx6pcooAAAAAAAAAAAAAAAADi9q0pa97VrSsb2tadoiPTIOU5xzlLTDNtPw2a5M\"","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"zzthian"},"content":"            + \"kdFs09Na/6fTPr6vaxvKLj19d5Wl0c2x6Xqtbqtl8K+rt7WDWRLXbLkyZstsubJbJktO9rWneZdQaZAAAAAAAAAAAAAAAAAAAAe7hPF\"","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"zzthian"},"content":"            + \"dXwzJ9xfysUzvbFb8NvCfXC14RxTS8TxTbBaa5Kx5+K34q+Metrx3wZcuDNXNgyWx5KTvW1Z6YSxZWzhh+T3G8fEqxgzRXHq6xvNY6s\"","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"zzthian"},"content":"            + \"kemv8wzDLQAAAAAAAAAAAAABMxEbzMREdcz2IjlNxqeIZJ02mtMaSk9f+bPpn1eiPe9/LLisxvwvT26431Fo+lP5n4JZZEtAGmQAAA\"","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"zzthian"},"content":"            + \"AAAAAAAAAAAAAAAAAAAAHNLWpet6WtS9Z3ras7TE+mFzyb4xXiWCcWbya6vHHnRHRF4/VH8whX002fLptRj1GC/kZcc71n/vsSxZWzR\"","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"zzthian"},"content":"            + \"5OE67FxHQ01OOPJmei9N/wW7Y/77HrZaAAAAAAAAAAHj41r68O4dk1M7TePNx1ntvPV4+57EXy11k5+J10lZ+700bT67z0z8I2j4kKw\"","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"zzthian"},"content":"            + \"d7Wve172m17TM2tPXMz1y4BtgAAAAAAAAAAAAAAAAAAAAAAAAAAABleS/Ef8BxKK5LbafPtTJv1RPZb3ftK9nff0NWTG8bT2r/kzrZ1\"","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"zzthian"},"content":"            + \"3CMV7zvlxfdZJ9Mx1T742ZrUZMBFAAAAAAAAdc2WuHDfNf8ABjrN7eyI3ayy5L5st82Sd75LTe0+uZ3XfKzLOLgGp2nacnk4/jMb/T\"","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"zzthian"},"content":"            + \"dBLEoA0yAAAAAAAAAAAAAAAAAAAAAAAAAAAAKDkNqZx8RzaWZ83Nj8qI/ur/0mfgn3s4Fm+w41o8u+0RmrWfZPRP7pVjYobbdAy0AAA\"","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"zzthian"},"content":"            + \"AAAAAx/H+H34noa6amauHbJF5tas232iejo9rB80c3eGH5NvFWBpiT5o5u8MPybeJzRzd4Yfk28VYLqYk+aObvDD8m3ic0c3eGH5NvF\"","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"zzthian"},"content":"            + \"WBpiT5o5u8MPybeJzRzd4Yfk28VYGmJPmjm7ww/Jt4nNHN3hh+TbxVgaYk+aObvDD8m3ic0c3eGH5NvFWBpiT5o5u8MPybeJzRzd4Yf\"","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"zzthian"},"content":"            + \"k28VYGmJPmjm7ww/Jt4nNHN3hh+TbxVgaYk+aObvDD8m3ic0c3eGH5NvFWBpiT5o5u8MPybeJzRzd4Yfk28VYGmJPmjm7ww/Jt4nNHN\"","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"zzthian"},"content":"            + \"3hh+TbxVgaYk+aObvDD8m3ic0c3eGH5NvFWBpiT5o5u8MPybeJzRzd4Yfk28VYGmJPmjm7ww/Jt4nNHN3hh+TbxVgaYk+aObvDD8m3i\"","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"zzthian"},"content":"            + \"c0c3eGH5NvFWBpiT5o5u8MPybeJzRzd4Yfk28VYGmJPmjm7ww/Jt4uack89b1vHEMW9bRP9K3ZO/pVYm1cczO9pn0y4AAAAAAAAAAAA\"","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"zzthian"},"content":"            + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH//2Q\u003d\u003d\");","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"zzthian"},"content":"    private static final Image defaultImage \u003d new Image(new ByteArrayInputStream(imageBytes));","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"zzthian"},"content":"    private static Stage primaryStage;","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"zzthian"},"content":"    private static String getImagePath(Student student) {","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"zzthian"},"content":"        return Paths.get(","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"zzthian"},"content":"                System.getProperty(\"user.dir\"),","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"zzthian"},"content":"                \"images\", student.getStudentId().toString() + \".jpg\"","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"zzthian"},"content":"        ).toString();","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"zzthian"},"content":"    private static File getImageFile(Student student) {","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"zzthian"},"content":"        return new File(getImagePath(student));","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"zzthian"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"zzthian"},"content":"     * Returns the Image of a Student if the image file exists, otherwise return default image.","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"zzthian"},"content":"     * @param student","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"zzthian"},"content":"     * @return The Image of the student.","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"zzthian"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"zzthian"},"content":"    public static Image getStudentProfileImage(Student student) {","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"zzthian"},"content":"        File imageFile \u003d getImageFile(student);","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"zzthian"},"content":"        return imageFile.exists() ? new Image(imageFile.toURI().toASCIIString()) : defaultImage;","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"zzthian"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"zzthian"},"content":"     * Open the file chooser to select file to upload.","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"zzthian"},"content":"     * @return The {@code File} selected by user.","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"zzthian"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"zzthian"},"content":"    public static File chooseImage() {","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"zzthian"},"content":"        FileChooser chooser \u003d new FileChooser();","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"zzthian"},"content":"        chooser.setTitle(\"Select your image file\");","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"zzthian"},"content":"        FileChooser.ExtensionFilter filter \u003d new FileChooser.ExtensionFilter(\"JPEG Image\",","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"zzthian"},"content":"                    \"*.jpg\", \"*.jpeg\");","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"zzthian"},"content":"        chooser.getExtensionFilters().addAll(filter);","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"zzthian"},"content":"        chooser.setSelectedExtensionFilter(filter);","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"zzthian"},"content":"        return chooser.showOpenDialog(primaryStage);","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"zzthian"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"zzthian"},"content":"     * Upload the Image given in {@code File} and associate it with the {@code Student} it belongs to.","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"zzthian"},"content":"     * @param student","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"zzthian"},"content":"     * @param file","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"zzthian"},"content":"     * @throws CommandException If the file cannot be read.","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"zzthian"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"zzthian"},"content":"    public static void uploadImage(Student student, File file) throws CommandException {","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"zzthian"},"content":"        FileInputStream inputFile \u003d null;","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"zzthian"},"content":"        FileOutputStream outputFile \u003d null;","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"zzthian"},"content":"        try {","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"zzthian"},"content":"            inputFile \u003d new FileInputStream(file);","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"zzthian"},"content":"            outputFile \u003d new FileOutputStream(getImageFile(student));","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"zzthian"},"content":"            int dataByte;","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"zzthian"},"content":"            while ((dataByte \u003d inputFile.read()) !\u003d -1) {","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"zzthian"},"content":"                outputFile.write(dataByte);","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"zzthian"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"zzthian"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"zzthian"},"content":"            System.out.println(e);","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"zzthian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"zzthian"},"content":"            throw new CommandException(\"File read has an error please use another file.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":132,"author":{"gitId":"zzthian"},"content":"        } finally {","lastModifiedDate":"2022-10-14"},{"lineNumber":133,"author":{"gitId":"zzthian"},"content":"            try {","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"zzthian"},"content":"                if (inputFile !\u003d null) {","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"zzthian"},"content":"                    inputFile.close();","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"zzthian"},"content":"                }","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"zzthian"},"content":"                if (outputFile !\u003d null) {","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"zzthian"},"content":"                    outputFile.close();","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"zzthian"},"content":"                }","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"zzthian"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-10-14"},{"lineNumber":141,"author":{"gitId":"zzthian"},"content":"                System.out.println(e);","lastModifiedDate":"2022-10-14"},{"lineNumber":142,"author":{"gitId":"zzthian"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":143,"author":{"gitId":"zzthian"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":144,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":145,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":146,"author":{"gitId":"zzthian"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":147,"author":{"gitId":"zzthian"},"content":"     * Delete the Image file for given {@code Student}.","lastModifiedDate":"2022-10-14"},{"lineNumber":148,"author":{"gitId":"zzthian"},"content":"     * @param student","lastModifiedDate":"2022-10-14"},{"lineNumber":149,"author":{"gitId":"zzthian"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":150,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":151,"author":{"gitId":"zzthian"},"content":"    public static void remove(Student student) {","lastModifiedDate":"2022-10-14"},{"lineNumber":152,"author":{"gitId":"zzthian"},"content":"        File imageFile \u003d getImageFile(student);","lastModifiedDate":"2022-10-14"},{"lineNumber":153,"author":{"gitId":"zzthian"},"content":"        if (imageFile.exists()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":154,"author":{"gitId":"zzthian"},"content":"            imageFile.delete();","lastModifiedDate":"2022-10-14"},{"lineNumber":155,"author":{"gitId":"zzthian"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":156,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":157,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":158,"author":{"gitId":"zzthian"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":159,"author":{"gitId":"zzthian"},"content":"     * Rename the Image file for given {@code Student}.","lastModifiedDate":"2022-10-14"},{"lineNumber":160,"author":{"gitId":"zzthian"},"content":"     * @param target","lastModifiedDate":"2022-10-14"},{"lineNumber":161,"author":{"gitId":"zzthian"},"content":"     * @param editedStudent","lastModifiedDate":"2022-10-14"},{"lineNumber":162,"author":{"gitId":"zzthian"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":163,"author":{"gitId":"zzthian"},"content":"    public static void renamePictureFile(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-14"},{"lineNumber":164,"author":{"gitId":"zzthian"},"content":"        File imageFile \u003d getImageFile(target);","lastModifiedDate":"2022-10-14"},{"lineNumber":165,"author":{"gitId":"zzthian"},"content":"        if (imageFile.exists()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":166,"author":{"gitId":"zzthian"},"content":"            imageFile.renameTo(getImageFile(editedStudent));","lastModifiedDate":"2022-10-14"},{"lineNumber":167,"author":{"gitId":"zzthian"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":168,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":169,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":170,"author":{"gitId":"zzthian"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":171,"author":{"gitId":"zzthian"},"content":"     * Sets reference to primary stage","lastModifiedDate":"2022-10-14"},{"lineNumber":172,"author":{"gitId":"zzthian"},"content":"     * @param stage","lastModifiedDate":"2022-10-14"},{"lineNumber":173,"author":{"gitId":"zzthian"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":174,"author":{"gitId":"zzthian"},"content":"    public static void setStage(Stage stage) {","lastModifiedDate":"2022-10-14"},{"lineNumber":175,"author":{"gitId":"zzthian"},"content":"        primaryStage \u003d stage;","lastModifiedDate":"2022-10-14"},{"lineNumber":176,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":177,"author":{"gitId":"zzthian"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"zzthian":177}},{"path":"src/main/java/seedu/address/storage/InputHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gowribhat"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"gowribhat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"gowribhat"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"gowribhat"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"gowribhat"},"content":" * Represents a storage for the input history of the user.","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"gowribhat"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"gowribhat"},"content":"public class InputHistory {","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"gowribhat"},"content":"    private static final int MAX_CAPACITY \u003d 50;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"gowribhat"},"content":"    private List\u003cString\u003e inputList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"gowribhat"},"content":"    private int index \u003d 0;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"gowribhat"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"gowribhat"},"content":"     * Creates a new InputHistory to store inputs.","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"gowribhat"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"gowribhat"},"content":"    public InputHistory() {","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"gowribhat"},"content":"        inputList.add(\"\");","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"gowribhat"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"gowribhat"},"content":"     * Add user input to InputHistory.","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"gowribhat"},"content":"     * If max capacity of storage is reached, the oldest input get deleted to store new one.","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"gowribhat"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"gowribhat"},"content":"     * @param input input from the user","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"gowribhat"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"gowribhat"},"content":"    public void add(String input) {","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"gowribhat"},"content":"        if (inputList.size() \u003c MAX_CAPACITY) {","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"gowribhat"},"content":"            index \u003d inputList.size() - 1;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"gowribhat"},"content":"            inputList.add(index, input);","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"gowribhat"},"content":"            index++;","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"gowribhat"},"content":"        } else {","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"gowribhat"},"content":"            inputList.remove(0);","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"gowribhat"},"content":"            inputList.add(input);","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"gowribhat"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"gowribhat"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"gowribhat"},"content":"     * Returns users input from InputHistory at current index","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"gowribhat"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"gowribhat"},"content":"     * @return user input at current index","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"gowribhat"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"gowribhat"},"content":"    public String get() {","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"gowribhat"},"content":"        return inputList.get(index);","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"gowribhat"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"gowribhat"},"content":"     * Decrements index when index is more than zero.","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"gowribhat"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"gowribhat"},"content":"    public void up() {","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"gowribhat"},"content":"        if (index \u003e 0) {","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"gowribhat"},"content":"            index--;","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"gowribhat"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"gowribhat"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"gowribhat"},"content":"     * Increments index when index less than maximum index on the input list.","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"gowribhat"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"gowribhat"},"content":"    public void down() {","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"gowribhat"},"content":"        if (index \u003c inputList.size() - 1) {","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"gowribhat"},"content":"            index++;","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"gowribhat"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"gowribhat"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"gowribhat":64}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAttendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"Evande1"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"Evande1"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Evande1"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"Evande1"},"content":" * Jackson-friendly version of {@link Attendance}.","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"Evande1"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"Evande1"},"content":"public class JsonAdaptedAttendance {","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"Evande1"},"content":"    private final String attendance;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"     * Constructs a {@code JsonAdaptedAttendance} with the given {@code attendance}.","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"Evande1"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"Evande1"},"content":"    public JsonAdaptedAttendance(String attendance) {","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"Evande1"},"content":"        this.attendance \u003d attendance;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"Evande1"},"content":"     * Converts a given {@code Attendance} into this class for Jackson use.","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"Evande1"},"content":"    public JsonAdaptedAttendance(Attendance source) {","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"Evande1"},"content":"        attendance \u003d source.value;","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"Evande1"},"content":"    @JsonValue","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"Evande1"},"content":"    public String getAttendance() {","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"Evande1"},"content":"        return attendance;","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"Evande1"},"content":"     * Converts this Jackson-friendly adapted attendance object into the model\u0027s {@code Attendance} object.","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"Evande1"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"Evande1"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"Evande1"},"content":"    public Attendance toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"Evande1"},"content":"        if (!Attendance.isValidMark(attendance)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"Evande1"},"content":"            throw new IllegalValueException(Attendance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"Evande1"},"content":"        return new Attendance(attendance);","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"Evande1"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Evande1":47}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAttendanceList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"Evande1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"Evande1"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"Evande1"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Evande1"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Evande1"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"Evande1"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.attendance.AttendanceList;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.student.ClassGroup;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"Evande1"},"content":" * Jackson-friendly version of {@link AttendanceList}.","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"Evande1"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"Evande1"},"content":"public class JsonAdaptedAttendanceList {","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"Evande1"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"AttendanceList\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"Evande1"},"content":"    private final String modName;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"Evande1"},"content":"    private final List\u003cJsonAdaptedAttendance\u003e attendanceList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"Evande1"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given student details.","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"Evande1"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"Evande1"},"content":"    public JsonAdaptedAttendanceList(@JsonProperty(\"modName\") String modName,","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"Evande1"},"content":"                              @JsonProperty(\"attendanceList\") List\u003cJsonAdaptedAttendance\u003e attendanceList) {","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"Evande1"},"content":"        this.modName \u003d modName;","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"Evande1"},"content":"        if (attendanceList !\u003d null) {","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"Evande1"},"content":"            this.attendanceList.addAll(attendanceList);","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"Evande1"},"content":"     * Converts a given {@code AttendanceList} into this class for Jackson use.","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"Evande1"},"content":"    public JsonAdaptedAttendanceList(AttendanceList source) {","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"Evande1"},"content":"        this.modName \u003d source.getMod();","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"Evande1"},"content":"        this.attendanceList.addAll(source.getAttendanceList().stream()","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"Evande1"},"content":"                .map(JsonAdaptedAttendance::new)","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"Evande1"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"Evande1"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code AttendanceList} object.","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"Evande1"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"Evande1"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted attendance list.","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"Evande1"},"content":"    public AttendanceList toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"Evande1"},"content":"        if (modName \u003d\u003d null) {","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"Evande1"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"Evande1"},"content":"                    ClassGroup.class.getSimpleName()));","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"Evande1"},"content":"        final String modelModName \u003d modName;","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"Evande1"},"content":"        final List\u003cAttendance\u003e modelStudentAttendanceList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"Evande1"},"content":"        for (JsonAdaptedAttendance attendance : attendanceList) {","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"Evande1"},"content":"            modelStudentAttendanceList.add(attendance.toModelType());","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"Evande1"},"content":"        return new AttendanceList(modelModName, modelStudentAttendanceList);","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"Evande1"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Evande1":68}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.attendance.AttendanceList;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.student.ClassGroup;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.StudentId;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"zzthian"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"zzthian"},"content":"class JsonAdaptedStudent {","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"zzthian"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Student\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"gowribhat"},"content":"    private final String classGroup;","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"zzthian"},"content":"    private final String studentId;","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"Evande1"},"content":"    private final JsonAdaptedAttendanceList attendanceList;","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"zzthian"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given student details.","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"zzthian"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"gowribhat"},"content":"                              @JsonProperty(\"email\") String email, @JsonProperty(\"classGroup\") String classGroup,","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"gowribhat"},"content":"                              @JsonProperty(\"studentId\") String studentId,","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"Evande1"},"content":"                              @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"Evande1"},"content":"                              @JsonProperty(\"attendanceList\") JsonAdaptedAttendanceList attendanceList) {","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"gowribhat"},"content":"        this.classGroup \u003d classGroup;","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"zzthian"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"Evande1"},"content":"        this.attendanceList \u003d attendanceList;","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"zzthian"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"zzthian"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"gowribhat"},"content":"        classGroup \u003d source.getClassGroup().value;","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"zzthian"},"content":"        studentId \u003d source.getStudentId().value;","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"Evande1"},"content":"        attendanceList \u003d new JsonAdaptedAttendanceList(source.getAttendanceList().getMod(),","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"Evande1"},"content":"                source.getAttendanceList()","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"Evande1"},"content":"                .getAttendanceList().stream().map(JsonAdaptedAttendance::new)","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"Evande1"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"zzthian"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Student} object.","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"zzthian"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"zzthian"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-02"},{"lineNumber":83,"author":{"gitId":"zzthian"},"content":"        final List\u003cTag\u003e studentTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"zzthian"},"content":"            studentTags.add(tag.toModelType());","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"gowribhat"},"content":"        if (classGroup \u003d\u003d null) {","lastModifiedDate":"2022-10-08"},{"lineNumber":113,"author":{"gitId":"gowribhat"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"gowribhat"},"content":"                    ClassGroup.class.getSimpleName()));","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"gowribhat"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":116,"author":{"gitId":"gowribhat"},"content":"        final ClassGroup modelClassGroup \u003d new ClassGroup(classGroup);","lastModifiedDate":"2022-10-08"},{"lineNumber":117,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":118,"author":{"gitId":"zzthian"},"content":"        if (studentId \u003d\u003d null) {","lastModifiedDate":"2022-10-08"},{"lineNumber":119,"author":{"gitId":"zzthian"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2022-10-08"},{"lineNumber":120,"author":{"gitId":"zzthian"},"content":"                        MISSING_FIELD_MESSAGE_FORMAT, StudentId.class.getSimpleName()));","lastModifiedDate":"2022-10-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"zzthian"},"content":"        if (!StudentId.isValidStudentId(studentId)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":123,"author":{"gitId":"zzthian"},"content":"            throw new IllegalValueException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"zzthian"},"content":"        final StudentId modelStudentId \u003d new StudentId(studentId);","lastModifiedDate":"2022-10-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"Evande1"},"content":"        if (attendanceList \u003d\u003d null) {","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"Evande1"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"Evande1"},"content":"                    AttendanceList.class.getSimpleName()));","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"Evande1"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"Evande1"},"content":"        //might need more checks here","lastModifiedDate":"2022-10-15"},{"lineNumber":133,"author":{"gitId":"Evande1"},"content":"        final AttendanceList modelAttendanceList \u003d attendanceList.toModelType();","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"zzthian"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(studentTags);","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"Evande1"},"content":"        return new Student(modelName, modelPhone, modelEmail, modelClassGroup,","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"Evande1"},"content":"                modelStudentId, modelTags, modelAttendanceList);","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"gowribhat":13,"zzthian":27,"Evande1":21,"-":80}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.TaskTitle;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"    private final String title;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"    private final String description;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"    public JsonAdaptedTask(@JsonProperty(\"title\") String title, @JsonProperty(\"description\") String description) {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"        title \u003d source.getTitle().title;","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"        description \u003d source.getDescription().description;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, TaskTitle.class.getSimpleName()));","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"thamruicong"},"content":"        if (!TaskTitle.isValidTitle(title)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"thamruicong"},"content":"            throw new IllegalValueException(TaskTitle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"thamruicong"},"content":"        final TaskTitle modelTitle \u003d new TaskTitle(title);","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"thamruicong"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"thamruicong"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"thamruicong"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, TaskDescription.class.getSimpleName()));","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"thamruicong"},"content":"        if (!TaskDescription.isValidDescription(description)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"thamruicong"},"content":"            throw new IllegalValueException(TaskDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"thamruicong"},"content":"        final TaskDescription modelDescription \u003d new TaskDescription(description);","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"thamruicong"},"content":"        return new Task(modelTitle, modelDescription);","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":63}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"zzthian"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"Student list contains duplicate student(s).\";","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"zzthian"},"content":"    private final List\u003cJsonAdaptedStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"zzthian"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given students.","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"zzthian"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e students) {","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"zzthian"},"content":"        this.students.addAll(students);","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"zzthian"},"content":"        students.addAll(source.getStudentList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"zzthian"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : students) {","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"zzthian"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType();","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"zzthian"},"content":"            if (addressBook.hasStudent(student)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"zzthian"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"zzthian"},"content":"            addressBook.addStudent(student);","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zzthian":12,"-":49}},{"path":"src/main/java/seedu/address/storage/JsonSerializableTaskBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":" * An Immutable TaskBook that is serializable to JSON format.","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"@JsonRootName(value \u003d \"taskbook\")","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"class JsonSerializableTaskBook {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"     * Constructs a {@code JsonSerializableTaskBook} with the given students.","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"    public JsonSerializableTaskBook(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"     * Converts a given {@code ReadOnlyTaskBook} into this class for Jackson use.","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableTaskBook}.","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"    public JsonSerializableTaskBook(ReadOnlyTaskBook source) {","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"     * Converts this task book into the model\u0027s {@code TaskBook} object.","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"thamruicong"},"content":"    public TaskBook toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"thamruicong"},"content":"        TaskBook taskBook \u003d new TaskBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"thamruicong"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"thamruicong"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"thamruicong"},"content":"            taskBook.addTask(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"thamruicong"},"content":"        return taskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":55}},{"path":"src/main/java/seedu/address/storage/JsonTaskBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":" * A class to access TaskBook data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"public class JsonTaskBookStorage implements TaskBookStorage {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTaskBookStorage.class);","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"    private Path filePath;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"    public JsonTaskBookStorage(Path filePath) {","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"        return filePath;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTaskBook() throws DataConversionException {","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"        return readTaskBook(filePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"     * Similar to {@link #readTaskBook()}.","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTaskBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"thamruicong"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"thamruicong"},"content":"        Optional\u003cJsonSerializableTaskBook\u003e jsonTaskBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"thamruicong"},"content":"                filePath, JsonSerializableTaskBook.class);","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"thamruicong"},"content":"        if (!jsonTaskBook.isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"thamruicong"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"thamruicong"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"thamruicong"},"content":"            return Optional.of(jsonTaskBook.get().toModelType());","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"thamruicong"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"thamruicong"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"thamruicong"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"thamruicong"},"content":"    public void saveTaskBook(ReadOnlyTaskBook taskBook) throws IOException {","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"thamruicong"},"content":"        saveTaskBook(taskBook, filePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"thamruicong"},"content":"     * Similar to {@link #saveTaskBook(ReadOnlyTaskBook)}.","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"thamruicong"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"thamruicong"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"thamruicong"},"content":"    public void saveTaskBook(ReadOnlyTaskBook taskBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"thamruicong"},"content":"        requireNonNull(taskBook);","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"thamruicong"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"thamruicong"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"thamruicong"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaskBook(taskBook), filePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":80}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"public interface Storage extends AddressBookStorage, TaskBookStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"thamruicong":1,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"    private TaskBookStorage taskBookStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"    public StorageManager(AddressBookStorage addressBookStorage,","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"                          TaskBookStorage taskBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"        this.taskBookStorage \u003d taskBookStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"thamruicong"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"thamruicong"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"thamruicong"},"content":"        return taskBookStorage.getTaskBookFilePath();","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"thamruicong"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTaskBook() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"thamruicong"},"content":"        return readTaskBook(taskBookStorage.getTaskBookFilePath());","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"thamruicong"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTaskBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"thamruicong"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"thamruicong"},"content":"        return taskBookStorage.readTaskBook(filePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"thamruicong"},"content":"    public void saveTaskBook(ReadOnlyTaskBook taskBook) throws IOException {","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"thamruicong"},"content":"        saveTaskBook(taskBook, taskBookStorage.getTaskBookFilePath());","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"thamruicong"},"content":"    public void saveTaskBook(ReadOnlyTaskBook taskBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"thamruicong"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"thamruicong"},"content":"        taskBookStorage.saveTaskBook(taskBook, filePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"thamruicong":34,"-":77}},{"path":"src/main/java/seedu/address/storage/TaskBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":" * Represents a storage for {@link seedu.address.model.TaskBook}","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"public interface TaskBookStorage {","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"     * Returns TaskBook data as a {@link ReadOnlyTaskBook}.","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"    Optional\u003cReadOnlyTaskBook\u003e readTaskBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"     * @see #getTaskBookFilePath()","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"    Optional\u003cReadOnlyTaskBook\u003e readTaskBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"     * Saves the given {@link ReadOnlyTaskBook} to the storage.","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"     * @param taskBook cannot be null.","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"    void saveTaskBook(ReadOnlyTaskBook taskBook) throws IOException;","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"     * @see #saveTaskBook(ReadOnlyTaskBook, Path)","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"    void saveTaskBook(ReadOnlyTaskBook taskBook, Path filePath) throws IOException;","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":44}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"gowribhat"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"gowribhat"},"content":"import seedu.address.storage.InputHistory;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"gowribhat"},"content":"    private InputHistory inputHistory;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":35,"author":{"gitId":"gowribhat"},"content":"        commandTextField.addEventFilter(KeyEvent.KEY_PRESSED, this::handleArrowKeyPressed);","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"gowribhat"},"content":"        inputHistory \u003d new InputHistory();","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":48,"author":{"gitId":"gowribhat"},"content":"        inputHistory.add(commandText);","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"gowribhat"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"gowribhat"},"content":"     * Return is KeyEvent is an arrow key.","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"gowribhat"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"gowribhat"},"content":"     * @param event key event","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"gowribhat"},"content":"     * @return true is key event is an arrow key, false otherwise","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"gowribhat"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"gowribhat"},"content":"    private boolean isArrowKey(KeyEvent event) {","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"gowribhat"},"content":"        return event.getCode().isArrowKey();","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"gowribhat"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"gowribhat"},"content":"     * Handles the Up or Down Button pressed event.","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"gowribhat"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"gowribhat"},"content":"    private void handleArrowKeyPressed(KeyEvent event) {","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"gowribhat"},"content":"        if (isArrowKey(event)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"gowribhat"},"content":"            switch (event.getCode()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"gowribhat"},"content":"            case UP:","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"gowribhat"},"content":"                inputHistory.up();","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"gowribhat"},"content":"                commandTextField.setText(inputHistory.get());","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"gowribhat"},"content":"                break;","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"gowribhat"},"content":"            case DOWN:","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"gowribhat"},"content":"                inputHistory.down();","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"gowribhat"},"content":"                commandTextField.setText(inputHistory.get());","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"gowribhat"},"content":"                break;","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"gowribhat"},"content":"            default:","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"gowribhat"},"content":"                break;","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"gowribhat"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"gowribhat"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"gowribhat":36,"-":84}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"zzthian"},"content":"    private StudentListPanel studentListPanel;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"zzthian"},"content":"    private StackPane studentListPanelPlaceholder;","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"thamruicong"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"thamruicong"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"zzthian"},"content":"        studentListPanel \u003d new StudentListPanel(logic.getFilteredStudentList());","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"zzthian"},"content":"        studentListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"thamruicong"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getTaskList());","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"thamruicong"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"zzthian"},"content":"    public StudentListPanel getStudentListPanel() {","lastModifiedDate":"2022-10-04"},{"lineNumber":174,"author":{"gitId":"zzthian"},"content":"        return studentListPanel;","lastModifiedDate":"2022-10-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"thamruicong":5,"zzthian":6,"-":192}},{"path":"src/main/java/seedu/address/ui/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"zzthian"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"zzthian"},"content":"import seedu.address.storage.ImageStorage;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"zzthian"},"content":" * An UI component that displays information of a {@code Student}.","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"zzthian"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"zzthian"},"content":"    private static final String FXML \u003d \"StudentListCard.fxml\";","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"zzthian"},"content":"    public final Student student;","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"zzthian"},"content":"    private Label studentId;","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"gowribhat"},"content":"    @FXML","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"gowribhat"},"content":"    private Label classGroup;","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"zzthian"},"content":"    @FXML","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"zzthian"},"content":"    private ImageView picture;","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"Evande1"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"Evande1"},"content":"    private Label attendanceList;","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"zzthian"},"content":"     * Creates a {@code StudentCode} with the given {@code Student} and index to display.","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"zzthian"},"content":"    public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"zzthian"},"content":"        this.student \u003d student;","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"zzthian"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"zzthian"},"content":"        phone.setText(student.getPhone().value);","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"zzthian"},"content":"        studentId.setText(student.getStudentId().value);","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"zzthian"},"content":"        email.setText(student.getEmail().value);","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"Evande1"},"content":"        attendanceList.setText(student.getAttendanceList().toString());","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"gowribhat"},"content":"        classGroup.setText(student.getClassGroup().value);","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"zzthian"},"content":"        student.getTags().stream()","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":68,"author":{"gitId":"zzthian"},"content":"        updatePicture();","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"zzthian"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"zzthian"},"content":"     * Update the Picture of the Student.","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"zzthian"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"zzthian"},"content":"    public void updatePicture() {","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"zzthian"},"content":"        picture.setImage(","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"zzthian"},"content":"                ImageStorage.getStudentProfileImage(this.student)","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"zzthian"},"content":"        );","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"zzthian"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"zzthian"},"content":"        StudentCard card \u003d (StudentCard) other;","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"zzthian"},"content":"                \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2022-10-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"gowribhat":3,"zzthian":31,"Evande1":4,"-":59}},{"path":"src/main/java/seedu/address/ui/StudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"zzthian"},"content":" * Panel containing the list of students.","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"zzthian"},"content":"public class StudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"zzthian"},"content":"    private static final String FXML \u003d \"StudentListPanel.fxml\";","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"zzthian"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StudentListPanel.class);","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"zzthian"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"zzthian"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"zzthian"},"content":"    public StudentListPanel(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"zzthian"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"zzthian"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListViewCell());","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"zzthian"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"zzthian"},"content":"    class StudentListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"zzthian"},"content":"        protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"zzthian"},"content":"            super.updateItem(student, empty);","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"zzthian"},"content":"            if (empty || student \u003d\u003d null) {","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"zzthian"},"content":"                setGraphic(new StudentCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"zzthian":16,"-":33}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"    public final Task task;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"    private Label id;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"    private Label title;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"    private Label description;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"     * Creates a {@code TaskCard} with the given {@code Task} and index to display.","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"     * @param task","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"     * @param displayedIndex","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"        super(FXML);","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"        this.task \u003d task;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"        title.setText(task.getTitle().title);","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"        description.setText(task.getDescription().description);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"thamruicong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"thamruicong"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"thamruicong"},"content":"            return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"thamruicong"},"content":"        // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"thamruicong"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"thamruicong"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"thamruicong"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":57}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"    private static final String TASK_HEADER \u003d \"Tasks\";","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"    private Label header;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"     * @param taskList","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"        super(FXML);","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"        header.setText(TASK_HEADER);","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"thamruicong"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"thamruicong"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"thamruicong"},"content":"                setText(null);","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"thamruicong"},"content":"            } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"thamruicong"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"thamruicong"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":54}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"         title\u003d\"GREWX\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"zzthian"},"content":"        \u003cVBox fx:id\u003d\"studentList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"thamruicong"},"content":"          \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"thamruicong"},"content":"            \u003cStackPane fx:id\u003d\"studentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"thamruicong"},"content":"            \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"thamruicong"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"thamruicong":5,"zzthian":1,"Evande1":1,"-":57}},{"path":"src/main/resources/view/StudentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"zzthian"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"zzthian"},"content":"  \u003cImageView fx:id\u003d\"picture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":34,"author":{"gitId":"gowribhat"},"content":"      \u003cLabel fx:id\u003d\"classGroup\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$classGroup\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"zzthian"},"content":"      \u003cLabel fx:id\u003d\"studentId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$studentId\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"Evande1"},"content":"      \u003cLabel fx:id\u003d\"attendanceList\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$attendanceList\"/\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gowribhat":1,"zzthian":4,"Evande1":1,"-":35}},{"path":"src/main/resources/view/StudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"zzthian"},"content":"  \u003cListView fx:id\u003d\"studentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zzthian":1,"-":7}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"        \u003cVBox alignment\u003d\"TOP_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"                \u003cLabel fx:id\u003d\"title\" text\u003d\"\\$title\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"            \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":32}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"    \u003cLabel fx:id\u003d\"header\" text\u003d\"\\$header\" styleClass\u003d\"label-bright\"/\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":10}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"zzthian"},"content":"        final Index fifthStudentIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"zzthian"},"content":"        assertTrue(fifthStudentIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"zzthian"},"content":"        assertTrue(fifthStudentIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"zzthian"},"content":"        assertTrue(fifthStudentIndex.equals(fifthStudentIndex));","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"zzthian"},"content":"        assertFalse(fifthStudentIndex.equals(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"zzthian"},"content":"        assertFalse(fifthStudentIndex.equals(5.0f));","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"zzthian"},"content":"        assertFalse(fifthStudentIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"zzthian":7,"-":53}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"zzthian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CLASS_GROUP_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENTID_DESC_AMY;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"import seedu.address.storage.JsonTaskBookStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"zzthian"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"thamruicong"},"content":"        JsonTaskBookStorage taskBookStorage \u003d new JsonTaskBookStorage(temporaryFolder.resolve(\"taskbook.json\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"thamruicong"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, taskBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"zzthian"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"thamruicong"},"content":"        JsonTaskBookStorage taskBookStorage \u003d new JsonTaskBookStorage(","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"thamruicong"},"content":"                temporaryFolder.resolve(\"ioExceptionTaskBook.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"thamruicong"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, taskBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"gowribhat"},"content":"                + CLASS_GROUP_DESC_AMY + STUDENTID_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"zzthian"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"zzthian"},"content":"        expectedModel.addStudent(expectedStudent);","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"zzthian"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"zzthian"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredStudentList().remove(0));","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"thamruicong"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"gowribhat":2,"thamruicong":7,"zzthian":10,"-":148}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"zzthian"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"zzthian"},"content":"    public void execute_newStudent_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"zzthian"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"zzthian"},"content":"        expectedModel.addStudent(validStudent);","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"zzthian"},"content":"        assertCommandSuccess(new AddCommand(validStudent), model,","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"zzthian"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validStudent), expectedModel);","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"zzthian"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"zzthian"},"content":"        Student studentInList \u003d model.getAddressBook().getStudentList().get(0);","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"zzthian"},"content":"        assertCommandFailure(new AddCommand(studentInList), model, AddCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"thamruicong":3,"zzthian":11,"-":34}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"zzthian"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"zzthian"},"content":"    public void constructor_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"zzthian"},"content":"    public void execute_studentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"zzthian"},"content":"        ModelStubAcceptingStudentAdded modelStub \u003d new ModelStubAcceptingStudentAdded();","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"zzthian"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"zzthian"},"content":"        CommandResult commandResult \u003d new AddCommand(validStudent).execute(modelStub);","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"zzthian"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validStudent), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"zzthian"},"content":"        assertEquals(Arrays.asList(validStudent), modelStub.studentsAdded);","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"zzthian"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"zzthian"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"zzthian"},"content":"        AddCommand addCommand \u003d new AddCommand(validStudent);","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"zzthian"},"content":"        ModelStub modelStub \u003d new ModelStubWithStudent(validStudent);","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"zzthian"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_STUDENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"zzthian"},"content":"    public void execute_duplicateStudentId_throwsCommandException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"zzthian"},"content":"        Student existingStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"zzthian"},"content":"        String existingStudentId \u003d existingStudent.getStudentId().toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"zzthian"},"content":"        ModelStub modelStub \u003d new ModelStubWithStudent(existingStudent);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"zzthian"},"content":"        Student copyIdStudent \u003d new StudentBuilder().withName(\"Other Name\").withStudentId(existingStudentId).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"zzthian"},"content":"        AddCommand addCommand \u003d new AddCommand(copyIdStudent);","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"zzthian"},"content":"        String expectedMessage \u003d String.format(AddCommand.MESSAGE_DUPLICATE_ID, existingStudentId);","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"zzthian"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"zzthian"},"content":"        Student alice \u003d new StudentBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-10-02"},{"lineNumber":71,"author":{"gitId":"zzthian"},"content":"        Student bob \u003d new StudentBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-10-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"zzthian"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"zzthian"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"zzthian"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"zzthian"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2022-10-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"zzthian"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"zzthian"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2022-10-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"zzthian"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-10-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":167,"author":{"gitId":"thamruicong"},"content":"        public Path getTaskBookFilePath() {","lastModifiedDate":"2022-10-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":172,"author":{"gitId":"thamruicong"},"content":"        public void setTaskBookFilePath(Path taskBookFilePath) {","lastModifiedDate":"2022-10-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"thamruicong"},"content":"        public void setTaskBook(ReadOnlyTaskBook taskBook) {","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"thamruicong"},"content":"        public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2022-10-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":187,"author":{"gitId":"thamruicong"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":188,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":190,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":191,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":192,"author":{"gitId":"thamruicong"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":193,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":194,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":195,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":196,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":197,"author":{"gitId":"thamruicong"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2022-10-11"},{"lineNumber":198,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":199,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":200,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":201,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":202,"author":{"gitId":"thamruicong"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":203,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":204,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":205,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":206,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":207,"author":{"gitId":"zzthian"},"content":"        public boolean hasStudentWithMatchingId(Student student) {","lastModifiedDate":"2022-10-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"zzthian"},"content":"     * A Model stub that contains a single student.","lastModifiedDate":"2022-10-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":216,"author":{"gitId":"zzthian"},"content":"    private class ModelStubWithStudent extends ModelStub {","lastModifiedDate":"2022-10-04"},{"lineNumber":217,"author":{"gitId":"zzthian"},"content":"        private final Student student;","lastModifiedDate":"2022-10-02"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"zzthian"},"content":"        ModelStubWithStudent(Student student) {","lastModifiedDate":"2022-10-04"},{"lineNumber":220,"author":{"gitId":"zzthian"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-02"},{"lineNumber":221,"author":{"gitId":"zzthian"},"content":"            this.student \u003d student;","lastModifiedDate":"2022-10-02"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"zzthian"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-03"},{"lineNumber":226,"author":{"gitId":"zzthian"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-02"},{"lineNumber":227,"author":{"gitId":"zzthian"},"content":"            return this.student.isSameStudent(student);","lastModifiedDate":"2022-10-02"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":231,"author":{"gitId":"zzthian"},"content":"        public boolean hasStudentWithMatchingId(Student student) {","lastModifiedDate":"2022-10-09"},{"lineNumber":232,"author":{"gitId":"zzthian"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-09"},{"lineNumber":233,"author":{"gitId":"zzthian"},"content":"            return this.student.hasSameId(student);","lastModifiedDate":"2022-10-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":235,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"zzthian"},"content":"     * A Model stub that always accept the student being added.","lastModifiedDate":"2022-10-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":242,"author":{"gitId":"zzthian"},"content":"    private class ModelStubAcceptingStudentAdded extends ModelStub {","lastModifiedDate":"2022-10-04"},{"lineNumber":243,"author":{"gitId":"zzthian"},"content":"        final ArrayList\u003cStudent\u003e studentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":246,"author":{"gitId":"zzthian"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-03"},{"lineNumber":247,"author":{"gitId":"zzthian"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-02"},{"lineNumber":248,"author":{"gitId":"zzthian"},"content":"            return studentsAdded.stream().anyMatch(student::isSameStudent);","lastModifiedDate":"2022-10-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"zzthian"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2022-10-03"},{"lineNumber":253,"author":{"gitId":"zzthian"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-02"},{"lineNumber":254,"author":{"gitId":"zzthian"},"content":"            studentsAdded.add(student);","lastModifiedDate":"2022-10-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":258,"author":{"gitId":"zzthian"},"content":"        public boolean hasStudentWithMatchingId(Student student) {","lastModifiedDate":"2022-10-09"},{"lineNumber":259,"author":{"gitId":"zzthian"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-09"},{"lineNumber":260,"author":{"gitId":"zzthian"},"content":"            return studentsAdded.stream().anyMatch(student::hasSameId);","lastModifiedDate":"2022-10-09"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"thamruicong":28,"zzthian":60,"-":181}},{"path":"src/test/java/seedu/address/logic/commands/AttendanceAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"Evande1"},"content":"class AttendanceAddCommandTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"Evande1"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Evande1":5}},{"path":"src/test/java/seedu/address/logic/commands/AttendanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"Evande1"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"Evande1"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"Evande1"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ATTENDANCE_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ATTENDANCE_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Evande1"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Evande1"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Evande1"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"Evande1"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"Evande1"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"Evande1"},"content":"//import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"Evande1"},"content":"//import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"Evande1"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"Evande1"},"content":"//import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"Evande1"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"Evande1"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"Evande1"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"Evande1"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"Evande1"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"Evande1"},"content":"//import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"Evande1"},"content":"//import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"Evande1"},"content":"//import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"Evande1"},"content":"//public class AttendanceCommandTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"Evande1"},"content":"//    private static final String ATTENDANCE_STUB \u003d \"1\";","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"Evande1"},"content":"//    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"Evande1"},"content":"//    //@Test","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"Evande1"},"content":"//    //public void execute_addAttendanceUnfilteredList_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"Evande1"},"content":"//    //    Student firstStudent \u003d model.getFilteredStudentList()","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"Evande1"},"content":"//    //    .get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"Evande1"},"content":"//    //    Student editedStudent \u003d new StudentBuilder(firstStudent)","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"Evande1"},"content":"//    //            .withAttendance(ATTENDANCE_STUB).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"Evande1"},"content":"//    //    AttendanceCommand remarkCommand \u003d new AttendanceCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"Evande1"},"content":"//    //    new Attendance(editedStudent.getAttendance().value));","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"Evande1"},"content":"//    //    String expectedMessage \u003d String.format(AttendanceCommand.MESSAGE_ADD_ATTENDANCE_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"Evande1"},"content":"//    //    Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"Evande1"},"content":"//    //    expectedModel.setStudent(firstStudent, editedStudent);","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"Evande1"},"content":"//    //    assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"Evande1"},"content":"//    //    }","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"Evande1"},"content":"//    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"Evande1"},"content":"//    public void execute_deleteAttendanceUnfilteredList_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"Evande1"},"content":"//        Student firstStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"Evande1"},"content":"//        Student editedStudent \u003d new StudentBuilder(firstStudent).withAttendance(\"0\").build();","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"Evande1"},"content":"//        AttendanceCommand remarkCommand \u003d new AttendanceCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"Evande1"},"content":"//                new Attendance(editedStudent.getAttendance().toString()));","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"Evande1"},"content":"//        String expectedMessage \u003d String.format(AttendanceCommand.MESSAGE_DELETE_ATTENDANCE_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"Evande1"},"content":"//        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"Evande1"},"content":"//                new AddressBook(model.getAddressBook()), model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"Evande1"},"content":"//        expectedModel.setStudent(firstStudent, editedStudent);","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"Evande1"},"content":"//        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"Evande1"},"content":"//    }","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"Evande1"},"content":"//    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"Evande1"},"content":"//    public void execute_invalidStudentIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"Evande1"},"content":"//        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"Evande1"},"content":"//        AttendanceCommand remarkCommand \u003d new AttendanceCommand(outOfBoundIndex","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"Evande1"},"content":"//        , new Attendance(VALID_ATTENDANCE_BOB));","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"Evande1"},"content":"//        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"Evande1"},"content":"//    }","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"Evande1"},"content":"//    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"Evande1"},"content":"//     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"Evande1"},"content":"//     * but smaller than size of address book","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"Evande1"},"content":"//     */","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"Evande1"},"content":"//    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"Evande1"},"content":"//    public void execute_invalidStudentIndexFilteredList_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"Evande1"},"content":"//        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"Evande1"},"content":"//        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"Evande1"},"content":"//        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"Evande1"},"content":"//        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"Evande1"},"content":"//        AttendanceCommand remarkCommand \u003d new AttendanceCommand(outOfBoundIndex","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"Evande1"},"content":"//        , new Attendance(VALID_ATTENDANCE_BOB));","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"Evande1"},"content":"//        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"Evande1"},"content":"//    }","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"Evande1"},"content":"//    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"Evande1"},"content":"//    public void equals() {","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"Evande1"},"content":"//        final AttendanceCommand standardCommand \u003d new AttendanceCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"Evande1"},"content":"//                new Attendance(VALID_ATTENDANCE_AMY));","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"Evande1"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"Evande1"},"content":"//        AttendanceCommand commandWithSameValues \u003d new AttendanceCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"Evande1"},"content":"//                new Attendance(VALID_ATTENDANCE_AMY));","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"Evande1"},"content":"//        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"Evande1"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"Evande1"},"content":"//        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"Evande1"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"Evande1"},"content":"//        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"Evande1"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"Evande1"},"content":"//        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"Evande1"},"content":"//        // different index -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"Evande1"},"content":"//        assertFalse(standardCommand.equals(new AttendanceCommand(INDEX_SECOND_STUDENT,","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"Evande1"},"content":"//                new Attendance(VALID_ATTENDANCE_AMY))));","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"Evande1"},"content":"//        // different remark -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"Evande1"},"content":"//        assertFalse(standardCommand.equals(new AttendanceCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"Evande1"},"content":"//                new Attendance(VALID_ATTENDANCE_BOB))));","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"Evande1"},"content":"//    }","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"Evande1"},"content":"//}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Evande1":117}},{"path":"src/test/java/seedu/address/logic/commands/AttendanceDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"Evande1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"Evande1"},"content":"class AttendanceDeleteCommandTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Evande1"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Evande1"},"content":"    void execute() {","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"Evande1"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Evande1":10}},{"path":"src/test/java/seedu/address/logic/commands/AttendanceMarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"Evande1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"Evande1"},"content":"class AttendanceMarkCommandTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Evande1"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Evande1"},"content":"    void execute() {","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"Evande1"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Evande1":10}},{"path":"src/test/java/seedu/address/logic/commands/ClassGroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gowribhat"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"gowribhat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"gowribhat"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"gowribhat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLASS_GROUP_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLASS_GROUP_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"gowribhat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"gowribhat"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"gowribhat"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.student.ClassGroup;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"gowribhat"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"gowribhat"},"content":"class ClassGroupCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"gowribhat"},"content":"    private static final String CLASS_GROUP_STUB \u003d \"Some class\";","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"gowribhat"},"content":"    public void execute_addClassGroupUnfilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"gowribhat"},"content":"        Student firstStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"gowribhat"},"content":"        Student editedStudent \u003d new StudentBuilder(firstStudent).withClassGroup(CLASS_GROUP_STUB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"gowribhat"},"content":"        ClassGroupCommand classGroupCommand \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"gowribhat"},"content":"                new ClassGroupCommand(INDEX_FIRST_STUDENT, new ClassGroup(editedStudent.getClassGroup().value));","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"gowribhat"},"content":"        String expectedMessage \u003d String.format(ClassGroupCommand.MESSAGE_ADD_CLASS_GROUP_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"                new AddressBook(model.getAddressBook()), model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"gowribhat"},"content":"        expectedModel.setStudent(firstStudent, editedStudent);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"gowribhat"},"content":"        assertCommandSuccess(classGroupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"gowribhat"},"content":"    public void execute_deleteClassGroupUnfilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"gowribhat"},"content":"        Student firstPerson \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"gowribhat"},"content":"        Student editedPerson \u003d new StudentBuilder(firstPerson).withClassGroup(\"\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"gowribhat"},"content":"        ClassGroupCommand classGroupCommand \u003d new ClassGroupCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"gowribhat"},"content":"                new ClassGroup(editedPerson.getClassGroup().toString()));","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"gowribhat"},"content":"        String expectedMessage \u003d String.format(ClassGroupCommand.MESSAGE_DELETE_CLASS_GROUP_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"thamruicong"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"thamruicong"},"content":"                new AddressBook(model.getAddressBook()), model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"gowribhat"},"content":"        expectedModel.setStudent(firstPerson, editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"gowribhat"},"content":"        assertCommandSuccess(classGroupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"gowribhat"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"gowribhat"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"gowribhat"},"content":"        Student firstPerson \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"gowribhat"},"content":"        Student editedPerson \u003d new StudentBuilder(model.getFilteredStudentList()","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"gowribhat"},"content":"                .get(INDEX_FIRST_STUDENT.getZeroBased()))","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"gowribhat"},"content":"                .withClassGroup(CLASS_GROUP_STUB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"gowribhat"},"content":"        ClassGroupCommand classGroupCommand \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"gowribhat"},"content":"                new ClassGroupCommand(INDEX_FIRST_STUDENT, new ClassGroup(editedPerson.getClassGroup().value));","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"gowribhat"},"content":"        String expectedMessage \u003d String.format(ClassGroupCommand.MESSAGE_ADD_CLASS_GROUP_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"thamruicong"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"thamruicong"},"content":"                new AddressBook(model.getAddressBook()), model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"gowribhat"},"content":"        expectedModel.setStudent(firstPerson, editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"gowribhat"},"content":"        assertCommandSuccess(classGroupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"gowribhat"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"gowribhat"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"gowribhat"},"content":"        ClassGroupCommand classGroupCommand \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"gowribhat"},"content":"                new ClassGroupCommand(outOfBoundIndex, new ClassGroup(VALID_CLASS_GROUP_BOB));","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"gowribhat"},"content":"        assertCommandFailure(classGroupCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"gowribhat"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"gowribhat"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"gowribhat"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"gowribhat"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"gowribhat"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"gowribhat"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"gowribhat"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"gowribhat"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"gowribhat"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"gowribhat"},"content":"        ClassGroupCommand classGroupCommand \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"gowribhat"},"content":"                new ClassGroupCommand(outOfBoundIndex, new ClassGroup(VALID_CLASS_GROUP_BOB));","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"gowribhat"},"content":"        assertCommandFailure(classGroupCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"gowribhat"},"content":"    void testEquals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"gowribhat"},"content":"        final ClassGroupCommand standardCommand \u003d new ClassGroupCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"gowribhat"},"content":"                new ClassGroup(VALID_CLASS_GROUP_AMY));","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"gowribhat"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"gowribhat"},"content":"        ClassGroupCommand commandWithSameValues \u003d new ClassGroupCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"gowribhat"},"content":"                new ClassGroup(VALID_CLASS_GROUP_AMY));","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"gowribhat"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"gowribhat"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"gowribhat"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"gowribhat"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"gowribhat"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"gowribhat"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"gowribhat"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"gowribhat"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"gowribhat"},"content":"        assertNotEquals(standardCommand, new ClassGroupCommand(INDEX_SECOND_STUDENT,","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"gowribhat"},"content":"                new ClassGroup(VALID_CLASS_GROUP_AMY)));","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"gowribhat"},"content":"        // different class group -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"gowribhat"},"content":"        ClassGroupCommand commandWithDifferentValues \u003d new ClassGroupCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"gowribhat"},"content":"                new ClassGroup(VALID_CLASS_GROUP_BOB));","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"gowribhat"},"content":"        assertNotEquals(standardCommand, commandWithDifferentValues);","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"gowribhat"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"gowribhat":135,"thamruicong":8}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"thamruicong":3,"zzthian":1,"-":29}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_GROUP;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_TITLE;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Evande1"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_MARK;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.student.StudentContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"zzthian"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"gowribhat"},"content":"    public static final String VALID_CLASS_GROUP_AMY \u003d \"CS2030 Lab 31\";","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"gowribhat"},"content":"    public static final String VALID_CLASS_GROUP_BOB \u003d \"CS2040S Tutorial 13\";","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"zzthian"},"content":"    public static final String VALID_STUDENTID_AMY \u003d \"e0111111\";","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"zzthian"},"content":"    public static final String VALID_STUDENTID_BOB \u003d \"e0222222\";","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"Evande1"},"content":"    public static final String VALID_ATTENDANCE_AMY \u003d \"0\";","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"Evande1"},"content":"    public static final String VALID_ATTENDANCE_BOB \u003d \"1\";","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"gowribhat"},"content":"    public static final String CLASS_GROUP_DESC_AMY \u003d \" \" + PREFIX_CLASS_GROUP + VALID_CLASS_GROUP_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"gowribhat"},"content":"    public static final String CLASS_GROUP_DESC_BOB \u003d \" \" + PREFIX_CLASS_GROUP + VALID_CLASS_GROUP_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"zzthian"},"content":"    public static final String STUDENTID_DESC_AMY \u003d \" \" + PREFIX_ID + VALID_STUDENTID_AMY;","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"zzthian"},"content":"    public static final String STUDENTID_DESC_BOB \u003d \" \" + PREFIX_ID + VALID_STUDENTID_BOB;","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"zzthian"},"content":"    public static final String INVALID_STUDENTID_DESC \u003d \" \" + PREFIX_ID + \"ee19012\"; // format e0xxxxxx not followed","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"zzthian"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"zzthian"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"thamruicong"},"content":"    public static final String VALID_TASK_TITLE \u003d \"Grade assignments\";","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"thamruicong"},"content":"    public static final String VALID_TASK_DESCRIPTION \u003d \"Complete by tonight\";","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"thamruicong"},"content":"    public static final String INVALID_TASK_TITLE \u003d \"invalid title#\";","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"thamruicong"},"content":"    public static final String INVALID_TASK_DESCRIPTION \u003d \"invalid description?\";","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"thamruicong"},"content":"    public static final String TASK_TITLE_DESC \u003d \" \" + PREFIX_TASK_TITLE + VALID_TASK_TITLE;","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"thamruicong"},"content":"    public static final String TASK_DESCRIPTION_DESC \u003d \" \" + PREFIX_TASK_DESCRIPTION + VALID_TASK_DESCRIPTION;","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"zzthian"},"content":"        DESC_AMY \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"gowribhat"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withClassGroup(VALID_CLASS_GROUP_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"gowribhat"},"content":"                .withStudentId(VALID_STUDENTID_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"zzthian"},"content":"        DESC_BOB \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"gowribhat"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withClassGroup(VALID_CLASS_GROUP_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"gowribhat"},"content":"                .withStudentId(VALID_STUDENTID_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"zzthian"},"content":"     * - the address book, filtered student list and selected student in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"zzthian"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStudentList());","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"zzthian"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStudentList());","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"zzthian"},"content":"     * Updates {@code model}\u0027s filtered list to show only the student at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"zzthian"},"content":"    public static void showStudentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"zzthian"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"zzthian"},"content":"        Student student \u003d model.getFilteredStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-03"},{"lineNumber":141,"author":{"gitId":"zzthian"},"content":"        final String[] splitName \u003d student.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-02"},{"lineNumber":142,"author":{"gitId":"gowribhat"},"content":"        model.updateFilteredStudentList(new StudentContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"zzthian"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"gowribhat":11,"thamruicong":9,"zzthian":21,"Evande1":4,"-":102}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"zzthian"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"zzthian"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"zzthian"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"zzthian"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"zzthian"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"zzthian"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"zzthian"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"zzthian"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"zzthian"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"zzthian"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"thamruicong"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"zzthian"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"zzthian"},"content":"        showNoStudent(expectedModel);","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"zzthian"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"zzthian"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"zzthian"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"zzthian"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"zzthian"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"zzthian"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_STUDENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"zzthian"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"zzthian"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"zzthian"},"content":"    private void showNoStudent(Model model) {","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"zzthian"},"content":"        model.updateFilteredStudentList(p -\u003e false);","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"zzthian"},"content":"        assertTrue(model.getFilteredStudentList().isEmpty());","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"thamruicong":4,"zzthian":28,"-":79}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"zzthian"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"zzthian"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"zzthian"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"zzthian"},"content":"    public static final String TEST_STUDENT_NAME \u003d \"A random Name\";","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"zzthian"},"content":"        Student editedStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"Evande1"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(editedStudent).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"zzthian"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, descriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"zzthian"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"thamruicong"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"thamruicong"},"content":"                new AddressBook(model.getAddressBook()), model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"zzthian"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"zzthian"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"zzthian"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLastStudent.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"zzthian"},"content":"        StudentBuilder studentInList \u003d new StudentBuilder(lastStudent);","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"zzthian"},"content":"        Student editedStudent \u003d studentInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"zzthian"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"zzthian"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastStudent, descriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"zzthian"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"thamruicong"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"thamruicong"},"content":"                new AddressBook(model.getAddressBook()), model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"zzthian"},"content":"        expectedModel.setStudent(lastStudent, editedStudent);","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"zzthian"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, new EditCommand.EditStudentDescriptor());","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"zzthian"},"content":"        Student editedStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"zzthian"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"thamruicong"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"thamruicong"},"content":"                new AddressBook(model.getAddressBook()), model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"zzthian"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"zzthian"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"zzthian"},"content":"        Student editedStudent \u003d new StudentBuilder(studentInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-02"},{"lineNumber":96,"author":{"gitId":"zzthian"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"zzthian"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"zzthian"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"thamruicong"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"thamruicong"},"content":"                new AddressBook(model.getAddressBook()), model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"zzthian"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"zzthian"},"content":"    public void execute_duplicateStudentUnfilteredList_failure() {","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"zzthian"},"content":"        Student firstStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"zzthian"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(firstStudent).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"zzthian"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_STUDENT, descriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"zzthian"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"zzthian"},"content":"    public void execute_duplicateStudentIdUnfilteredList_failure() {","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"zzthian"},"content":"        Student firstStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"zzthian"},"content":"        Student secondStudent \u003d model.getFilteredStudentList().get(INDEX_SECOND_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"zzthian"},"content":"        String duplicateId \u003d secondStudent.getStudentId().toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"zzthian"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(firstStudent).withName(TEST_STUDENT_NAME)","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"zzthian"},"content":"                .withStudentId(duplicateId).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"zzthian"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"zzthian"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_ID);","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"zzthian"},"content":"    public void execute_duplicateStudentFilteredList_failure() {","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"zzthian"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"zzthian"},"content":"        // edit student in filtered list into a duplicate in address book","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"zzthian"},"content":"        Student studentInList \u003d model.getAddressBook().getStudentList().get(INDEX_SECOND_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"zzthian"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"zzthian"},"content":"                new EditStudentDescriptorBuilder(studentInList).build());","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"zzthian"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"zzthian"},"content":"    public void execute_duplicateStudentIdFilteredList_failure() {","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"zzthian"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"zzthian"},"content":"        // edit student in filtered list into a duplicate in address book","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"zzthian"},"content":"        Student studentInList \u003d model.getAddressBook().getStudentList().get(INDEX_SECOND_STUDENT.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"zzthian"},"content":"        String duplicateId \u003d studentInList.getStudentId().toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"zzthian"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"zzthian"},"content":"                new EditStudentDescriptorBuilder(studentInList).withName(TEST_STUDENT_NAME)","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"zzthian"},"content":"                        .withStudentId(duplicateId).build());","lastModifiedDate":"2022-10-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"zzthian"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_ID);","lastModifiedDate":"2022-10-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"zzthian"},"content":"    public void execute_invalidStudentIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"zzthian"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-10-03"},{"lineNumber":159,"author":{"gitId":"zzthian"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"zzthian"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":170,"author":{"gitId":"zzthian"},"content":"    public void execute_invalidStudentIndexFilteredList_failure() {","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"zzthian"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":172,"author":{"gitId":"zzthian"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":174,"author":{"gitId":"zzthian"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2022-10-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":177,"author":{"gitId":"zzthian"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":179,"author":{"gitId":"zzthian"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":184,"author":{"gitId":"zzthian"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, DESC_AMY);","lastModifiedDate":"2022-10-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"zzthian"},"content":"        EditStudentDescriptor copyDescriptor \u003d new EditCommand.EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-04"},{"lineNumber":188,"author":{"gitId":"zzthian"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_STUDENT, copyDescriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":201,"author":{"gitId":"zzthian"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_STUDENT, DESC_AMY)));","lastModifiedDate":"2022-10-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":204,"author":{"gitId":"zzthian"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_STUDENT, DESC_BOB)));","lastModifiedDate":"2022-10-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"thamruicong":10,"zzthian":79,"Evande1":1,"-":117}},{"path":"src/test/java/seedu/address/logic/commands/EditStudentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_BOB;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"zzthian"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"zzthian"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"zzthian"},"content":"public class EditStudentDescriptorTest {","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"zzthian"},"content":"        EditCommand.EditStudentDescriptor descriptorWithSameValues \u003d new EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"zzthian"},"content":"        EditStudentDescriptor editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"zzthian"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"zzthian"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"zzthian"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withStudentId(VALID_STUDENTID_BOB).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"zzthian"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"zzthian":10,"-":48}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"zzthian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.CARL;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.ELLE;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.FIONA;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.student.StudentContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"gowribhat"},"content":"        StudentContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"gowribhat"},"content":"                new StudentContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"gowribhat"},"content":"        StudentContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"gowribhat"},"content":"                new StudentContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"zzthian"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"zzthian"},"content":"    public void execute_zeroKeywords_noStudentFound() {","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"zzthian"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"gowribhat"},"content":"        StudentContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"zzthian"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"zzthian"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"zzthian"},"content":"    public void execute_multipleKeywords_multipleStudentsFound() {","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"zzthian"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STUDENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"gowribhat"},"content":"        StudentContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"zzthian"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"zzthian"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredStudentList());","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"gowribhat"},"content":"     * Parses {@code userInput} into a {@code StudentContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"gowribhat"},"content":"    private StudentContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"gowribhat"},"content":"        return new StudentContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"gowribhat":10,"thamruicong":3,"zzthian":15,"-":57}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"zzthian"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"thamruicong":3,"zzthian":4,"-":33}},{"path":"src/test/java/seedu/address/logic/commands/RemoveTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"public class RemoveTaskCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"    public void execute_validIndexTaskList_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"        Task taskToDelete \u003d model.getTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"        RemoveTaskCommand deleteCommand \u003d new RemoveTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"        String expectedMessage \u003d String.format(RemoveTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"    public void execute_invalidIndexTaskList_throwsCommandException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getTaskList().size() + 1);","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"        RemoveTaskCommand deleteCommand \u003d new RemoveTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TASK_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"thamruicong"},"content":"    public void equals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"thamruicong"},"content":"        RemoveTaskCommand deleteFirstCommand \u003d new RemoveTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"thamruicong"},"content":"        RemoveTaskCommand deleteSecondCommand \u003d new RemoveTaskCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"thamruicong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"thamruicong"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"thamruicong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"thamruicong"},"content":"        RemoveTaskCommand deleteFirstCommandCopy \u003d new RemoveTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"thamruicong"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"thamruicong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"thamruicong"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"thamruicong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"thamruicong"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"thamruicong"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"thamruicong"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":67}},{"path":"src/test/java/seedu/address/logic/commands/TaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"public class TaskCommandTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskCommand(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded();","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"        CommandResult commandResult \u003d new TaskCommand(validTask).execute(modelStub);","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"        assertEquals(String.format(TaskCommand.MESSAGE_SUCCESS, validTask), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"        assertEquals(Arrays.asList(validTask), modelStub.tasksAdded);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"thamruicong"},"content":"    public void equals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"thamruicong"},"content":"        Task firstTask \u003d new TaskBuilder().withTitle(\"First\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"thamruicong"},"content":"        Task secondTask \u003d new TaskBuilder().withTitle(\"Second\").build();","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"thamruicong"},"content":"        TaskCommand addFirstTaskCommand \u003d new TaskCommand(firstTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"thamruicong"},"content":"        TaskCommand addSecondTaskCommand \u003d new TaskCommand(secondTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"thamruicong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"thamruicong"},"content":"        assertTrue(addFirstTaskCommand.equals(addFirstTaskCommand));","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"thamruicong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"thamruicong"},"content":"        TaskCommand addFirstTaskCommandCopy \u003d new TaskCommand(firstTask);","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"thamruicong"},"content":"        assertTrue(addFirstTaskCommand.equals(addFirstTaskCommandCopy));","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"thamruicong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"thamruicong"},"content":"        assertFalse(addFirstTaskCommand.equals(1));","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"thamruicong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"thamruicong"},"content":"        assertFalse(addFirstTaskCommand.equals(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"thamruicong"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"thamruicong"},"content":"        assertFalse(addFirstTaskCommand.equals(addSecondTaskCommand));","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"thamruicong"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"thamruicong"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"thamruicong"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"thamruicong"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"thamruicong"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"thamruicong"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"thamruicong"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"thamruicong"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"thamruicong"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"thamruicong"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"thamruicong"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"thamruicong"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"thamruicong"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"thamruicong"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"thamruicong"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"thamruicong"},"content":"        public boolean hasStudentWithMatchingId(Student student) {","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"thamruicong"},"content":"        public Path getTaskBookFilePath() {","lastModifiedDate":"2022-10-15"},{"lineNumber":147,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":148,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":149,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":150,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":151,"author":{"gitId":"thamruicong"},"content":"        public void setTaskBookFilePath(Path taskBookFilePath) {","lastModifiedDate":"2022-10-15"},{"lineNumber":152,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-15"},{"lineNumber":153,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":154,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":155,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"thamruicong"},"content":"        public void setTaskBook(ReadOnlyTaskBook taskBook) {","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"thamruicong"},"content":"        public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"thamruicong"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"thamruicong"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":176,"author":{"gitId":"thamruicong"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"thamruicong"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":183,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":184,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":185,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":186,"author":{"gitId":"thamruicong"},"content":"    private class ModelStubAcceptingTaskAdded extends TaskCommandTest.ModelStub {","lastModifiedDate":"2022-10-11"},{"lineNumber":187,"author":{"gitId":"thamruicong"},"content":"        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":188,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":190,"author":{"gitId":"thamruicong"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":191,"author":{"gitId":"thamruicong"},"content":"            requireNonNull(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":192,"author":{"gitId":"thamruicong"},"content":"            return tasksAdded.stream().anyMatch(task::equals);","lastModifiedDate":"2022-10-11"},{"lineNumber":193,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":194,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":195,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":196,"author":{"gitId":"thamruicong"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-10-11"},{"lineNumber":197,"author":{"gitId":"thamruicong"},"content":"            requireNonNull(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":198,"author":{"gitId":"thamruicong"},"content":"            tasksAdded.add(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":199,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":200,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":201,"author":{"gitId":"thamruicong"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":202,"author":{"gitId":"thamruicong"},"content":"        public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2022-10-11"},{"lineNumber":203,"author":{"gitId":"thamruicong"},"content":"            return new TaskBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":204,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":205,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":206,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":206}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CLASS_GROUP_DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CLASS_GROUP_DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENTID_DESC;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENTID_DESC_AMY;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENTID_DESC_BOB;","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"Whysochong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLASS_GROUP_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Whysochong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"Whysochong"},"content":"import static seedu.address.logic.parser.ParserUtil.INFO_NOT_AVAILABLE;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.StudentId;","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"zzthian"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"zzthian"},"content":"        Student expectedStudent \u003d new StudentBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"gowribhat"},"content":"                + CLASS_GROUP_DESC_BOB + STUDENTID_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"gowribhat"},"content":"                + CLASS_GROUP_DESC_BOB + STUDENTID_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"gowribhat"},"content":"                + CLASS_GROUP_DESC_BOB + STUDENTID_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"gowribhat"},"content":"                + CLASS_GROUP_DESC_BOB + STUDENTID_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"gowribhat"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + CLASS_GROUP_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"gowribhat"},"content":"                + STUDENTID_DESC_AMY + STUDENTID_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"zzthian"},"content":"        Student expectedStudentMultipleTags \u003d new StudentBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":77,"author":{"gitId":"gowribhat"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + CLASS_GROUP_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"gowribhat"},"content":"                + STUDENTID_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedStudentMultipleTags));","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"zzthian"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-02"},{"lineNumber":85,"author":{"gitId":"gowribhat"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"gowribhat"},"content":"                        + CLASS_GROUP_DESC_AMY + STUDENTID_DESC_AMY, new AddCommand(expectedStudent));","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"gowribhat"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + CLASS_GROUP_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"gowribhat"},"content":"                + STUDENTID_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"zzthian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + STUDENTID_DESC_BOB","lastModifiedDate":"2022-10-08"},{"lineNumber":97,"author":{"gitId":"gowribhat"},"content":"                + CLASS_GROUP_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"zzthian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + STUDENTID_DESC_BOB","lastModifiedDate":"2022-10-08"},{"lineNumber":101,"author":{"gitId":"gowribhat"},"content":"                + CLASS_GROUP_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"zzthian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_STUDENTID_DESC","lastModifiedDate":"2022-10-08"},{"lineNumber":105,"author":{"gitId":"gowribhat"},"content":"                + CLASS_GROUP_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"zzthian"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + STUDENTID_DESC_BOB","lastModifiedDate":"2022-10-08"},{"lineNumber":109,"author":{"gitId":"gowribhat"},"content":"                + CLASS_GROUP_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"gowribhat"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + CLASS_GROUP_DESC_BOB","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"gowribhat"},"content":"                + INVALID_STUDENTID_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":117,"author":{"gitId":"gowribhat"},"content":"                + CLASS_GROUP_DESC_BOB + STUDENTID_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"Whysochong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"Whysochong"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"Whysochong"},"content":"    public void parse_missingCompulsoryFields_failure() {","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"Whysochong"},"content":"        // missing name","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"Whysochong"},"content":"        assertParseFailure(parser, STUDENTID_DESC_BOB,","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"Whysochong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"Whysochong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"Whysochong"},"content":"        // missing student ID","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"Whysochong"},"content":"        assertParseFailure(parser, NAME_DESC_AMY,","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"Whysochong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"Whysochong"},"content":"        // missing both name and student ID","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"Whysochong"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY,","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"Whysochong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"Whysochong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"Whysochong"},"content":"        // every field except for name","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"Whysochong"},"content":"        assertParseFailure(parser, STUDENTID_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + CLASS_GROUP_DESC_BOB,","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"Whysochong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"Whysochong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"Whysochong"},"content":"        //every field except for student ID","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"Whysochong"},"content":"        assertParseFailure(parser, PHONE_DESC_BOB + EMAIL_DESC_BOB + CLASS_GROUP_DESC_BOB + NAME_DESC_BOB,","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"Whysochong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"Whysochong"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"Whysochong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"Whysochong"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"Whysochong"},"content":"    public void parse_optionalFieldsNotNeed_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"Whysochong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"Whysochong"},"content":"        // Only name and Student ID","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"Whysochong"},"content":"        Student expectedStudentOne \u003d new StudentBuilder()","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"Whysochong"},"content":"                .withStudentId(VALID_STUDENTID_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"Whysochong"},"content":"                .withPhone(INFO_NOT_AVAILABLE).withEmail(INFO_NOT_AVAILABLE)","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"Whysochong"},"content":"                .withClassGroup(INFO_NOT_AVAILABLE).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"Whysochong"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + STUDENTID_DESC_BOB, new AddCommand(expectedStudentOne));","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"Whysochong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"Whysochong"},"content":"        // No Phone Number","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"Whysochong"},"content":"        Student expectedStudentTwo \u003d new StudentBuilder()","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"Whysochong"},"content":"                .withStudentId(VALID_STUDENTID_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"Whysochong"},"content":"                .withPhone(INFO_NOT_AVAILABLE).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"Whysochong"},"content":"                .withClassGroup(VALID_CLASS_GROUP_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"Whysochong"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + STUDENTID_DESC_BOB + EMAIL_DESC_BOB + CLASS_GROUP_DESC_BOB,","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"Whysochong"},"content":"                    new AddCommand(expectedStudentTwo));","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"Whysochong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"Whysochong"},"content":"        // No Email","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"Whysochong"},"content":"        Student expectedStudentThree \u003d new StudentBuilder()","lastModifiedDate":"2022-10-13"},{"lineNumber":164,"author":{"gitId":"Whysochong"},"content":"                .withStudentId(VALID_STUDENTID_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"Whysochong"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(INFO_NOT_AVAILABLE)","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"Whysochong"},"content":"                .withClassGroup(VALID_CLASS_GROUP_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":167,"author":{"gitId":"Whysochong"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + STUDENTID_DESC_BOB + PHONE_DESC_BOB + CLASS_GROUP_DESC_BOB,","lastModifiedDate":"2022-10-13"},{"lineNumber":168,"author":{"gitId":"Whysochong"},"content":"                    new AddCommand(expectedStudentThree));","lastModifiedDate":"2022-10-13"},{"lineNumber":169,"author":{"gitId":"Whysochong"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":170,"author":{"gitId":"Whysochong"},"content":"        // No Class Group","lastModifiedDate":"2022-10-13"},{"lineNumber":171,"author":{"gitId":"Whysochong"},"content":"        Student expectedStudentFour \u003d new StudentBuilder()","lastModifiedDate":"2022-10-13"},{"lineNumber":172,"author":{"gitId":"Whysochong"},"content":"                .withStudentId(VALID_STUDENTID_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-13"},{"lineNumber":173,"author":{"gitId":"Whysochong"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-13"},{"lineNumber":174,"author":{"gitId":"Whysochong"},"content":"                .withClassGroup(INFO_NOT_AVAILABLE).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":175,"author":{"gitId":"Whysochong"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + STUDENTID_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2022-10-13"},{"lineNumber":176,"author":{"gitId":"Whysochong"},"content":"                    new AddCommand(expectedStudentFour));","lastModifiedDate":"2022-10-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"gowribhat":21,"Whysochong":59,"zzthian":18,"-":80}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_GROUP;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_DESCRIPTION;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_TITLE;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"gowribhat"},"content":"import seedu.address.logic.commands.ClassGroupCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"zzthian"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"import seedu.address.logic.commands.RemoveTaskCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.student.ClassGroup;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.student.StudentContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"zzthian"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"zzthian"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"zzthian"},"content":"import seedu.address.testutil.StudentUtil;","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"zzthian"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"zzthian"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(StudentUtil.getAddCommand(student));","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"zzthian"},"content":"        assertEquals(new AddCommand(student), command);","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"zzthian"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_STUDENT.getOneBased());","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"zzthian"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_STUDENT), command);","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"zzthian"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"zzthian"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(student).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"zzthian"},"content":"                + INDEX_FIRST_STUDENT.getOneBased() + \" \" + StudentUtil.getEditStudentDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"zzthian"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_STUDENT, descriptor), command);","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"gowribhat"},"content":"    public void parseCommand_class() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"gowribhat"},"content":"        final ClassGroup classGroup \u003d new ClassGroup(\"Some remark.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"gowribhat"},"content":"        ClassGroupCommand command \u003d (ClassGroupCommand) parser.parseCommand(ClassGroupCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"gowribhat"},"content":"                + INDEX_FIRST_STUDENT.getOneBased() + \" \" + PREFIX_CLASS_GROUP + classGroup.value);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"gowribhat"},"content":"        assertEquals(new ClassGroupCommand(INDEX_FIRST_STUDENT, classGroup), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"gowribhat"},"content":"                FindCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords));","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"gowribhat"},"content":"        assertEquals(new FindCommand(new StudentContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"thamruicong"},"content":"    public void parseCommand_addTask() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"thamruicong"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"thamruicong"},"content":"        TaskCommand command \u003d (TaskCommand) parser.parseCommand(TaskCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"thamruicong"},"content":"                + PREFIX_TASK_TITLE + TaskBuilder.DEFAULT_TITLE + \" \"","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"thamruicong"},"content":"                + PREFIX_TASK_DESCRIPTION + TaskBuilder.DEFAULT_DESCRIPTION);","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"thamruicong"},"content":"        assertEquals(new TaskCommand(task), command);","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"thamruicong"},"content":"    public void parseCommand_removeTask() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"thamruicong"},"content":"        RemoveTaskCommand command \u003d (RemoveTaskCommand) parser.parseCommand(","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"thamruicong"},"content":"                RemoveTaskCommand.COMMAND_WORD + \" \" + INDEX_FIRST_STUDENT.getOneBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"thamruicong"},"content":"        assertEquals(new RemoveTaskCommand(INDEX_FIRST_STUDENT), command);","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"gowribhat":12,"thamruicong":22,"zzthian":15,"Evande1":1,"-":83}},{"path":"src/test/java/seedu/address/logic/parser/AttendanceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"Evande1"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"Evande1"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_MARK;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"Evande1"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"Evande1"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"Evande1"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Evande1"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"Evande1"},"content":"//import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"Evande1"},"content":"//public class AttendanceCommandParserTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"//    private AttendanceCommandParser parser \u003d new AttendanceCommandParser();","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"Evande1"},"content":"//    private final String nonEmptyAttendance \u003d \"1\";","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"Evande1"},"content":"//    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"Evande1"},"content":"//    public void parse_indexSpecified_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"Evande1"},"content":"//        // have remark","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"Evande1"},"content":"//        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Evande1"},"content":"//        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_MARK + nonEmptyAttendance;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"Evande1"},"content":"//        AttendanceCommand expectedCommand \u003d new AttendanceCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"Evande1"},"content":"//                new Attendance(nonEmptyAttendance));","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"Evande1"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"Evande1"},"content":"//        // no remark","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"Evande1"},"content":"//        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_MARK + \"0\";","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"Evande1"},"content":"//        expectedCommand \u003d new AttendanceCommand(INDEX_FIRST_STUDENT, new Attendance(\"0\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"Evande1"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"Evande1"},"content":"//    }","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"Evande1"},"content":"//    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"Evande1"},"content":"//    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"Evande1"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AttendanceCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"Evande1"},"content":"//        // no parameters","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"Evande1"},"content":"//        assertParseFailure(parser, AttendanceCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"Evande1"},"content":"//","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"Evande1"},"content":"//        // no index","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"Evande1"},"content":"//        assertParseFailure(parser, AttendanceCommand.COMMAND_WORD + \" \" + nonEmptyAttendance, expectedMessage);","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"Evande1"},"content":"//    }","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"Evande1"},"content":"//}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Evande1":44}},{"path":"src/test/java/seedu/address/logic/parser/ClassGroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gowribhat"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_GROUP;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"gowribhat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"gowribhat"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"gowribhat"},"content":"import seedu.address.logic.commands.ClassGroupCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.student.ClassGroup;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"gowribhat"},"content":"class ClassGroupCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"gowribhat"},"content":"    private ClassGroupCommandParser parser \u003d new ClassGroupCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"gowribhat"},"content":"    private final String nonEmptyClassGroup \u003d \"Some class group.\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"gowribhat"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"gowribhat"},"content":"        // have remark","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"gowribhat"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"gowribhat"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_CLASS_GROUP + nonEmptyClassGroup;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"gowribhat"},"content":"        ClassGroupCommand expectedCommand \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"gowribhat"},"content":"                new ClassGroupCommand(INDEX_FIRST_STUDENT, new ClassGroup(nonEmptyClassGroup));","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"gowribhat"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"gowribhat"},"content":"        // no remark","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"gowribhat"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_CLASS_GROUP;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"gowribhat"},"content":"        expectedCommand \u003d new ClassGroupCommand(INDEX_FIRST_STUDENT, new ClassGroup(\"\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"gowribhat"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"gowribhat"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"gowribhat"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClassGroupCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"gowribhat"},"content":"        // no parameters","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"gowribhat"},"content":"        assertParseFailure(parser, ClassGroupCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"gowribhat"},"content":"        // no index","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"gowribhat"},"content":"        assertParseFailure(parser, ClassGroupCommand.COMMAND_WORD + \" \" + nonEmptyClassGroup, expectedMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"gowribhat"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"gowribhat":45}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"zzthian"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_STUDENT));","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"zzthian":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENTID_DESC;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENTID_DESC_AMY;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENTID_DESC_BOB;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_AMY;","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_BOB;","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_STUDENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"zzthian"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.StudentId;","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"zzthian"},"content":"import seedu.address.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"zzthian"},"content":"        assertParseFailure(parser, \"1 a/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"zzthian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STUDENTID_DESC, StudentId.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"zzthian"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Student} being edited,","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"zzthian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2022-10-08"},{"lineNumber":105,"author":{"gitId":"zzthian"},"content":"                        + VALID_STUDENTID_AMY + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"zzthian"},"content":"        Index targetIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"zzthian"},"content":"                + EMAIL_DESC_AMY + STUDENTID_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"zzthian"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"zzthian"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withStudentId(VALID_STUDENTID_AMY)","lastModifiedDate":"2022-10-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"zzthian"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"zzthian"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"zzthian"},"content":"        Index targetIndex \u003d INDEX_THIRD_STUDENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"zzthian"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"zzthian"},"content":"                    .withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"zzthian"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"zzthian"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"zzthian"},"content":"        userInput \u003d targetIndex.getOneBased() + STUDENTID_DESC_AMY;","lastModifiedDate":"2022-10-08"},{"lineNumber":158,"author":{"gitId":"zzthian"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withStudentId(VALID_STUDENTID_AMY).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"zzthian"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":171,"author":{"gitId":"zzthian"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":172,"author":{"gitId":"zzthian"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + STUDENTID_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-08"},{"lineNumber":173,"author":{"gitId":"zzthian"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + STUDENTID_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-08"},{"lineNumber":174,"author":{"gitId":"zzthian"},"content":"                + PHONE_DESC_BOB + STUDENTID_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"zzthian"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-04"},{"lineNumber":177,"author":{"gitId":"zzthian"},"content":"                .withEmail(VALID_EMAIL_BOB).withStudentId(VALID_STUDENTID_BOB)","lastModifiedDate":"2022-10-08"},{"lineNumber":178,"author":{"gitId":"zzthian"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"zzthian"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":190,"author":{"gitId":"zzthian"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"zzthian"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + STUDENTID_DESC_BOB","lastModifiedDate":"2022-10-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":197,"author":{"gitId":"zzthian"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-04"},{"lineNumber":198,"author":{"gitId":"zzthian"},"content":"                .withStudentId(VALID_STUDENTID_BOB).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":205,"author":{"gitId":"zzthian"},"content":"        Index targetIndex \u003d INDEX_THIRD_STUDENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"zzthian"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-10-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"zzthian":47,"-":166}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.student.StudentContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"gowribhat"},"content":"                new FindCommand(new StudentContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"gowribhat":2,"-":32}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"Whysochong"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.attendance.Attendance;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.StudentId;","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.TaskTitle;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"zzthian"},"content":"    private static final String INVALID_STUDENTID \u003d \" \";","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"    private static final String INVALID_MARK \u003d \"2A\";","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"    private static final String INVALID_TITLE \u003d \"#title\";","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"    private static final String INVALID_DESCRIPTION \u003d \"?description\";","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"zzthian"},"content":"    private static final String VALID_STUDENTID \u003d \"e0623689\";","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"    private static final String VALID_MARK_1 \u003d \"0\";","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"    private static final String VALID_MARK_2 \u003d \"1\";","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"    private static final String VALID_TITLE \u003d \"valid title\";","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"thamruicong"},"content":"    private static final String VALID_DESCRIPTION \u003d \"valid description\";","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"zzthian"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"zzthian"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"Whysochong"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"Whysochong"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"Whysochong"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(Optional.of(INVALID_PHONE)));","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"Whysochong"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(Optional.of(VALID_PHONE)));","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"Whysochong"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(Optional.of(phoneWithWhitespace)));","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"Whysochong"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"zzthian"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_STUDENTID));","lastModifiedDate":"2022-10-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"zzthian"},"content":"        StudentId expectedStudentId \u003d new StudentId(VALID_STUDENTID);","lastModifiedDate":"2022-10-08"},{"lineNumber":129,"author":{"gitId":"zzthian"},"content":"        assertEquals(expectedStudentId, ParserUtil.parseAddress(VALID_STUDENTID));","lastModifiedDate":"2022-10-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"zzthian"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_STUDENTID + WHITESPACE;","lastModifiedDate":"2022-10-08"},{"lineNumber":135,"author":{"gitId":"zzthian"},"content":"        StudentId expectedStudentId \u003d new StudentId(VALID_STUDENTID);","lastModifiedDate":"2022-10-08"},{"lineNumber":136,"author":{"gitId":"zzthian"},"content":"        assertEquals(expectedStudentId, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2022-10-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"Whysochong"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((Optional\u003cString\u003e) null));","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":146,"author":{"gitId":"Whysochong"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(Optional.of(INVALID_EMAIL)));","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"Whysochong"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(Optional.of(VALID_EMAIL)));","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"Whysochong"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(Optional.of(emailWithWhitespace)));","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":208,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":209,"author":{"gitId":"thamruicong"},"content":"    public void parseAttendance_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":210,"author":{"gitId":"thamruicong"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAttendance((Optional\u003cString\u003e) null));","lastModifiedDate":"2022-10-14"},{"lineNumber":211,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":212,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":213,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":214,"author":{"gitId":"thamruicong"},"content":"    public void parseAttendance_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":215,"author":{"gitId":"thamruicong"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAttendance(Optional.of(INVALID_MARK)));","lastModifiedDate":"2022-10-14"},{"lineNumber":216,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":217,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":218,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":219,"author":{"gitId":"thamruicong"},"content":"    public void parseAttendance_validValueWithoutWhitespace_returnsAttendance() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":220,"author":{"gitId":"thamruicong"},"content":"        Attendance expectedAttendance1 \u003d new Attendance(VALID_MARK_1);","lastModifiedDate":"2022-10-14"},{"lineNumber":221,"author":{"gitId":"thamruicong"},"content":"        assertEquals(expectedAttendance1, ParserUtil.parseAttendance(Optional.of(VALID_MARK_1)));","lastModifiedDate":"2022-10-14"},{"lineNumber":222,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":223,"author":{"gitId":"thamruicong"},"content":"        Attendance expectedAttendance2 \u003d new Attendance(VALID_MARK_2);","lastModifiedDate":"2022-10-14"},{"lineNumber":224,"author":{"gitId":"thamruicong"},"content":"        assertEquals(expectedAttendance2, ParserUtil.parseAttendance(Optional.of(VALID_MARK_2)));","lastModifiedDate":"2022-10-14"},{"lineNumber":225,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":226,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":227,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":228,"author":{"gitId":"thamruicong"},"content":"    public void parseAttendance_validValueWithWhitespace_returnsTrimmedAttendance() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":229,"author":{"gitId":"thamruicong"},"content":"        String attendanceWithWhitespace1 \u003d WHITESPACE + VALID_MARK_1 + WHITESPACE;","lastModifiedDate":"2022-10-14"},{"lineNumber":230,"author":{"gitId":"thamruicong"},"content":"        Attendance expectedAttendance1 \u003d new Attendance(VALID_MARK_1);","lastModifiedDate":"2022-10-14"},{"lineNumber":231,"author":{"gitId":"thamruicong"},"content":"        assertEquals(expectedAttendance1, ParserUtil.parseAttendance(Optional.of(attendanceWithWhitespace1)));","lastModifiedDate":"2022-10-14"},{"lineNumber":232,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":233,"author":{"gitId":"thamruicong"},"content":"        String attendanceWithWhitespace2 \u003d WHITESPACE + VALID_MARK_2 + WHITESPACE;","lastModifiedDate":"2022-10-14"},{"lineNumber":234,"author":{"gitId":"thamruicong"},"content":"        Attendance expectedAttendance2 \u003d new Attendance(VALID_MARK_2);","lastModifiedDate":"2022-10-14"},{"lineNumber":235,"author":{"gitId":"thamruicong"},"content":"        assertEquals(expectedAttendance2, ParserUtil.parseAttendance(Optional.of(attendanceWithWhitespace2)));","lastModifiedDate":"2022-10-14"},{"lineNumber":236,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":237,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":238,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":239,"author":{"gitId":"thamruicong"},"content":"    public void parseTitle_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":240,"author":{"gitId":"thamruicong"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTitle(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":241,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":242,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":243,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":244,"author":{"gitId":"thamruicong"},"content":"    public void parseTitle_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":245,"author":{"gitId":"thamruicong"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTitle(INVALID_TITLE));","lastModifiedDate":"2022-10-14"},{"lineNumber":246,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":247,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":248,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":249,"author":{"gitId":"thamruicong"},"content":"    public void parseTitle_validValueWithoutWhitespace_returnsTitle() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":250,"author":{"gitId":"thamruicong"},"content":"        TaskTitle expectedTitle \u003d new TaskTitle(VALID_TITLE);","lastModifiedDate":"2022-10-14"},{"lineNumber":251,"author":{"gitId":"thamruicong"},"content":"        assertEquals(expectedTitle, ParserUtil.parseTitle(VALID_TITLE));","lastModifiedDate":"2022-10-14"},{"lineNumber":252,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":253,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":254,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":255,"author":{"gitId":"thamruicong"},"content":"    public void parseTitle_validValueWithWhitespace_returnsTrimmedTitle() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":256,"author":{"gitId":"thamruicong"},"content":"        String titleWithWhitespace \u003d WHITESPACE + VALID_TITLE + WHITESPACE;","lastModifiedDate":"2022-10-14"},{"lineNumber":257,"author":{"gitId":"thamruicong"},"content":"        TaskTitle expectedTitle \u003d new TaskTitle(VALID_TITLE);","lastModifiedDate":"2022-10-14"},{"lineNumber":258,"author":{"gitId":"thamruicong"},"content":"        assertEquals(expectedTitle, ParserUtil.parseTitle(titleWithWhitespace));","lastModifiedDate":"2022-10-14"},{"lineNumber":259,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":260,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":261,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":262,"author":{"gitId":"thamruicong"},"content":"    public void parseDescription_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":263,"author":{"gitId":"thamruicong"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescription(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":264,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":265,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":266,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":267,"author":{"gitId":"thamruicong"},"content":"    public void parseDescription_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":268,"author":{"gitId":"thamruicong"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDescription(INVALID_DESCRIPTION));","lastModifiedDate":"2022-10-14"},{"lineNumber":269,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":270,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":271,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":272,"author":{"gitId":"thamruicong"},"content":"    public void parseDescription_validValueWithoutWhitespace_returnsDescription() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":273,"author":{"gitId":"thamruicong"},"content":"        TaskDescription expectedDescription \u003d new TaskDescription(VALID_DESCRIPTION);","lastModifiedDate":"2022-10-14"},{"lineNumber":274,"author":{"gitId":"thamruicong"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(VALID_DESCRIPTION));","lastModifiedDate":"2022-10-14"},{"lineNumber":275,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":276,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":277,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":278,"author":{"gitId":"thamruicong"},"content":"    public void parseDescription_validValueWithWhitespace_returnsTrimmedDescription() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":279,"author":{"gitId":"thamruicong"},"content":"        String descriptionWithWhitespace \u003d WHITESPACE + VALID_DESCRIPTION + WHITESPACE;","lastModifiedDate":"2022-10-14"},{"lineNumber":280,"author":{"gitId":"thamruicong"},"content":"        TaskDescription expectedDescription \u003d new TaskDescription(VALID_DESCRIPTION);","lastModifiedDate":"2022-10-14"},{"lineNumber":281,"author":{"gitId":"thamruicong"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(descriptionWithWhitespace));","lastModifiedDate":"2022-10-14"},{"lineNumber":282,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"thamruicong":86,"Whysochong":11,"zzthian":15,"-":171}},{"path":"src/test/java/seedu/address/logic/parser/RemoveTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"import seedu.address.logic.commands.RemoveTaskCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"public class RemoveTaskCommandParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"    private RemoveTaskCommandParser parser \u003d new RemoveTaskCommandParser();","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"    public void parse_validArgs_returnsTaskDeleteCommand() {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"        assertParseSuccess(parser, \"1\", new RemoveTaskCommand(INDEX_FIRST_STUDENT));","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":24}},{"path":"src/test/java/seedu/address/logic/parser/TaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_DESCRIPTION_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_TITLE_DESC;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_DESCRIPTION;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_TITLE;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"import seedu.address.logic.commands.TaskCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"public class TaskCommandParserTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"    private TaskCommandParser parser \u003d new TaskCommandParser();","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"        Task expectedTask \u003d new TaskBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"                .withTitle(VALID_TASK_TITLE)","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"                .withDescription(VALID_TASK_DESCRIPTION)","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"                .build();","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"        assertParseSuccess(parser, TASK_TITLE_DESC + TASK_DESCRIPTION_DESC, new TaskCommand(expectedTask));","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, TaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"        // missing title prefix","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"        assertParseFailure(parser, VALID_TASK_TITLE + TASK_DESCRIPTION_DESC, expectedMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"        // missing description prefix","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"        assertParseFailure(parser, TASK_TITLE_DESC + VALID_TASK_DESCRIPTION, expectedMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"        // missing all prefix","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"        assertParseFailure(parser, VALID_TASK_TITLE + VALID_TASK_DESCRIPTION, expectedMessage);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":44}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_BOB;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"zzthian"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"zzthian"},"content":"        assertEquals(Collections.emptyList(), addressBook.getStudentList());","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"zzthian"},"content":"    public void resetData_withDuplicateStudent_throwsDuplicateStudentException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"zzthian"},"content":"        // Two students with the same identity fields","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"zzthian"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withStudentId(VALID_STUDENTID_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"zzthian"},"content":"        List\u003cStudent\u003e newStudents \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"zzthian"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newStudents);","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"zzthian"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"zzthian"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"zzthian"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasStudent(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"zzthian"},"content":"    public void hasStudent_studentNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"zzthian"},"content":"        assertFalse(addressBook.hasStudent(ALICE));","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"zzthian"},"content":"    public void hasStudent_studentInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"zzthian"},"content":"        addressBook.addStudent(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"zzthian"},"content":"        assertTrue(addressBook.hasStudent(ALICE));","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"zzthian"},"content":"    public void hasStudent_studentWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"zzthian"},"content":"        addressBook.addStudent(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"zzthian"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withStudentId(VALID_STUDENTID_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"zzthian"},"content":"        assertTrue(addressBook.hasStudent(editedAlice));","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"zzthian"},"content":"    public void getStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"zzthian"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getStudentList().remove(0));","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"zzthian"},"content":"     * A stub ReadOnlyAddressBook whose students list can violate interface constraints.","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"zzthian"},"content":"        private final ObservableList\u003cStudent\u003e students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"zzthian"},"content":"        AddressBookStub(Collection\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-02"},{"lineNumber":93,"author":{"gitId":"zzthian"},"content":"            this.students.setAll(students);","lastModifiedDate":"2022-10-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"zzthian"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"zzthian"},"content":"            return students;","lastModifiedDate":"2022-10-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"zzthian":32,"-":70}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"zzthian"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalTasks.FIRST;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalTasks.SECOND;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.student.StudentContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"        assertEquals(new TaskBook(), new TaskBook(modelManager.getTaskBook()));","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"zzthian"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"zzthian"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasStudent(null));","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"zzthian"},"content":"    public void hasStudent_studentNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"zzthian"},"content":"        assertFalse(modelManager.hasStudent(ALICE));","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"zzthian"},"content":"    public void hasStudent_studentInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"zzthian"},"content":"        modelManager.addStudent(ALICE);","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"zzthian"},"content":"        assertTrue(modelManager.hasStudent(ALICE));","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"zzthian"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"zzthian"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredStudentList().remove(0));","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"thamruicong"},"content":"    public void setTaskBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"thamruicong"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setTaskBookFilePath(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"thamruicong"},"content":"    public void setTaskBookFilePath_validPath_setsTaskBookFilePath() {","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"thamruicong"},"content":"        Path path \u003d Paths.get(\"task/book/file/path\");","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"thamruicong"},"content":"        modelManager.setTaskBookFilePath(path);","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"thamruicong"},"content":"        assertEquals(path, modelManager.getTaskBookFilePath());","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"thamruicong"},"content":"    public void setTaskBook_validTaskBook_setsTaskBook() {","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"thamruicong"},"content":"        TaskBook taskBook \u003d getTypicalTaskBook();","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"thamruicong"},"content":"        modelManager.setTaskBook(taskBook);","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"thamruicong"},"content":"        assertEquals(taskBook, modelManager.getTaskBook());","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"thamruicong"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"thamruicong"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTask(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":123,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":124,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":125,"author":{"gitId":"thamruicong"},"content":"    public void hasTask_taskNotInTaskBook_returnsFalse() {","lastModifiedDate":"2022-10-15"},{"lineNumber":126,"author":{"gitId":"thamruicong"},"content":"        assertFalse(modelManager.hasTask(FIRST));","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":130,"author":{"gitId":"thamruicong"},"content":"    public void hasTask_taskInTaskBook_returnsTrue() {","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"thamruicong"},"content":"        modelManager.addTask(FIRST);","lastModifiedDate":"2022-10-15"},{"lineNumber":132,"author":{"gitId":"thamruicong"},"content":"        assertTrue(modelManager.hasTask(FIRST));","lastModifiedDate":"2022-10-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"zzthian"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withStudent(ALICE).withStudent(BENSON).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"thamruicong"},"content":"        TaskBook taskBook \u003d new TaskBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"thamruicong"},"content":"        taskBook.addTask(FIRST);","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"thamruicong"},"content":"        taskBook.addTask(SECOND);","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"thamruicong"},"content":"        TaskBook differentTaskBook \u003d new TaskBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"thamruicong"},"content":"        modelManager \u003d new ModelManager(addressBook, taskBook, userPrefs);","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"thamruicong"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, taskBook, userPrefs);","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"thamruicong"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, taskBook, userPrefs)));","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"thamruicong"},"content":"        // different taskBook -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"thamruicong"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentTaskBook, userPrefs)));","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":167,"author":{"gitId":"gowribhat"},"content":"        modelManager.updateFilteredStudentList(new StudentContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"thamruicong"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, taskBook, userPrefs)));","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":171,"author":{"gitId":"zzthian"},"content":"        modelManager.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":176,"author":{"gitId":"thamruicong"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, taskBook, differentUserPrefs)));","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"gowribhat":2,"thamruicong":49,"zzthian":14,"-":113}},{"path":"src/test/java/seedu/address/model/TaskBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.model;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalTasks.FIRST;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"public class TaskBookTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"    private final TaskBook taskBook \u003d new TaskBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"        assertEquals(Collections.emptyList(), taskBook.getTaskList());","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskBook.resetData(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"    public void resetData_withValidReadOnlyTaskBook_replacesData() {","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"        TaskBook newData \u003d getTypicalTaskBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"        taskBook.resetData(newData);","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"        assertEquals(newData, taskBook);","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskBook.hasTask(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"    public void hasTask_taskNotInTaskBook_returnsFalse() {","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"        assertFalse(taskBook.hasTask(FIRST));","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"thamruicong"},"content":"    public void hasTask_taskInTaskBook_returnsTrue() {","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"thamruicong"},"content":"        taskBook.addTask(FIRST);","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"thamruicong"},"content":"        assertTrue(taskBook.hasTask(FIRST));","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"thamruicong"},"content":"    public void getTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"thamruicong"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e taskBook.getTaskList().remove(0));","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":56}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"    public void setTaskBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setTaskBookFilePath(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"    public void equals() {","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"        // Same object -\u003e returns true","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"        assertTrue(userPrefs.equals(userPrefs));","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"        // Different types -\u003e return false","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"        assertFalse(userPrefs.equals(1));","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"        UserPrefs userPrefs2 \u003d new UserPrefs();","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"        // Same values -\u003e return true","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"        assertTrue(userPrefs.equals(userPrefs2));","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"        assertTrue(userPrefs2.equals(userPrefs));","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"thamruicong":25,"-":21}},{"path":"src/test/java/seedu/address/model/attendance/AttendanceListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"package seedu.address.model.attendance;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"Evande1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"Evande1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Evande1"},"content":"public class AttendanceListTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"Evande1"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"Evande1"},"content":"    public void equals() {","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"Evande1"},"content":"        AttendanceList attendanceList \u003d new AttendanceList(\"CS2040\", \"10\");","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"Evande1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"Evande1"},"content":"        assertTrue(attendanceList.equals(attendanceList));","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"Evande1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"Evande1"},"content":"        AttendanceList attendanceCopy \u003d new AttendanceList(attendanceList.getMod(), attendanceList.getAttendanceList());","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"Evande1"},"content":"        assertTrue(attendanceList.equals(attendanceCopy));","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"Evande1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"Evande1"},"content":"        assertFalse(attendanceList.equals(50));","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"Evande1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"Evande1"},"content":"        assertFalse(attendanceList.equals(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"Evande1"},"content":"        // different attendance -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"Evande1"},"content":"        AttendanceList differentAttendanceList \u003d new AttendanceList();","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"Evande1"},"content":"        assertFalse(attendanceList.equals(differentAttendanceList));","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"Evande1"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Evande1":32}},{"path":"src/test/java/seedu/address/model/attendance/AttendanceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Evande1"},"content":"package seedu.address.model.attendance;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Evande1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Evande1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Evande1"},"content":"public class AttendanceTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"Evande1"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Evande1"},"content":"    public void equals() {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Evande1"},"content":"        Attendance attendance \u003d new Attendance(\"1\");","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"Evande1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"Evande1"},"content":"        assertTrue(attendance.equals(attendance));","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"Evande1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Evande1"},"content":"        Attendance attendanceCopy \u003d new Attendance(attendance.value);","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Evande1"},"content":"        assertTrue(attendance.equals(attendanceCopy));","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Evande1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"Evande1"},"content":"        assertFalse(attendance.equals(50));","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"Evande1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"Evande1"},"content":"        assertFalse(attendance.equals(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"Evande1"},"content":"        // different attendance -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Evande1"},"content":"        Attendance differentAttendance \u003d new Attendance(\"0\");","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Evande1"},"content":"        assertFalse(attendance.equals(differentAttendance));","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Evande1"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Evande1":30}},{"path":"src/test/java/seedu/address/model/student/ClassGroupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gowribhat"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"gowribhat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"gowribhat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"gowribhat"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"gowribhat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"gowribhat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"gowribhat"},"content":"class ClassGroupTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"gowribhat"},"content":"    private final String nonEmptyClassGroup \u003d \"Some class group.\";","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"gowribhat"},"content":"    private ClassGroup classGroup \u003d new ClassGroup(nonEmptyClassGroup);","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"gowribhat"},"content":"    void contains_classGroupContainsKeyword_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"gowribhat"},"content":"        // Blank keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new ClassGroup(\"cs2030 lab 31\").contains(\"\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"gowribhat"},"content":"        // Exact keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new ClassGroup(\"cs2030 lab 31\").contains(\"cs2030\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"gowribhat"},"content":"        // Partial matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new ClassGroup(\"cs2030 lab 31\").contains(\"2030\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"gowribhat"},"content":"    void contains_classGroupContainsKeyword_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"gowribhat"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"gowribhat"},"content":"        assertFalse(new ClassGroup(\"cs2030 lab 31\").contains(\"cs2103t\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"gowribhat"},"content":"        // Mixed-case keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"gowribhat"},"content":"        assertFalse(new ClassGroup(\"cs2030 lab 31\").contains(\"CS2030\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"gowribhat"},"content":"    void testToString() {","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"gowribhat"},"content":"        assertEquals(nonEmptyClassGroup, classGroup.toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"gowribhat"},"content":"    void testEquals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"gowribhat"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"gowribhat"},"content":"        assertEquals(classGroup, classGroup);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"gowribhat"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"gowribhat"},"content":"        ClassGroup classGroupCopy \u003d new ClassGroup(classGroup.value);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"gowribhat"},"content":"        assertEquals(classGroup, classGroupCopy);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"gowribhat"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"gowribhat"},"content":"        assertNotEquals(1, classGroup);","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"gowribhat"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"gowribhat"},"content":"        assertNotEquals(null, classGroup);","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"gowribhat"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"gowribhat"},"content":"        ClassGroup differentClassGroup \u003d new ClassGroup(\"Another class\");","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"gowribhat"},"content":"        assertNotEquals(classGroup, differentClassGroup);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"gowribhat"},"content":"    void testHashCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"gowribhat"},"content":"        assertEquals(classGroup.hashCode(), nonEmptyClassGroup.hashCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"gowribhat"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"gowribhat":65}},{"path":"src/test/java/seedu/address/model/student/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zzthian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"gowribhat"},"content":"    void contains_emailContainsKeyword_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"gowribhat"},"content":"        // Blank keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new Email(\"alice@example.com\").contains(\"\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"gowribhat"},"content":"        // Exact keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new Email(\"alice@example.com\").contains(\"alice@example.com\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"gowribhat"},"content":"        // Partial matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new Email(\"alice@example.com\").contains(\"alice\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"gowribhat"},"content":"    void contains_emailContainsKeyword_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"gowribhat"},"content":"        // Mixed-case keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"gowribhat"},"content":"        assertFalse(new Email(\"alice@example.com\").contains(\"aliCE@exAmpLe.com\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"gowribhat":18,"zzthian":1,"-":66}},{"path":"src/test/java/seedu/address/model/student/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zzthian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"gowribhat"},"content":"    void contains_nameContainsKeyword_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"gowribhat"},"content":"        // Blank keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new Name(\"Alice Tay\").contains(\"\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"gowribhat"},"content":"        // Exact keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new Name(\"Alice Tay\").contains(\"alice\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"gowribhat"},"content":"        // Partial matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new Name(\"Alice Tay\").contains(\"ali\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"gowribhat"},"content":"    void contains_nameContainsKeyword_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"gowribhat"},"content":"        // Keyword with non-alphanumeric characters","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"gowribhat"},"content":"        assertFalse(new Name(\"Alice Tay\").contains(\"**\u0026\u0026^%#\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"gowribhat"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"gowribhat"},"content":"        assertFalse(new Name(\"Alice Tay\").contains(\"Bob\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"gowribhat"},"content":"        // Mixed-case keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"gowribhat"},"content":"        assertFalse(new Name(\"Alice Tay\").contains(\"AlicE taY\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"gowribhat":24,"zzthian":1,"-":39}},{"path":"src/test/java/seedu/address/model/student/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zzthian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"gowribhat"},"content":"    void contains_phoneContainsKeyword_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"gowribhat"},"content":"        // Blank keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new Phone(\"12345678\").contains(\"\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"gowribhat"},"content":"        // Exact keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new Phone(\"12345678\").contains(\"12345678\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"gowribhat"},"content":"        // Partial matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new Phone(\"12345678\").contains(\"234\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"gowribhat"},"content":"    void contains_phoneContainsKeyword_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"gowribhat"},"content":"        // Keyword with alphabets","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"gowribhat"},"content":"        assertFalse(new Phone(\"12345678\").contains(\"aaaaa\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"gowribhat"},"content":"        // Keyword with both numbers and alphabets","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"gowribhat"},"content":"        assertFalse(new Phone(\"12345678\").contains(\"a9d87g\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"gowribhat":21,"zzthian":1,"-":39}},{"path":"src/test/java/seedu/address/model/student/StudentContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gowribhat"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"gowribhat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"gowribhat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"gowribhat"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"gowribhat"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"gowribhat"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"gowribhat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"gowribhat"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"gowribhat"},"content":"public class StudentContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"gowribhat"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"gowribhat"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"gowribhat"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"gowribhat"},"content":"        StudentContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"gowribhat"},"content":"                new StudentContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"gowribhat"},"content":"        StudentContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"gowribhat"},"content":"                new StudentContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"gowribhat"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"gowribhat"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"gowribhat"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"gowribhat"},"content":"        StudentContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"gowribhat"},"content":"                new StudentContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"gowribhat"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"gowribhat"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"gowribhat"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"gowribhat"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"gowribhat"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"gowribhat"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"gowribhat"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"gowribhat"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"gowribhat"},"content":"        // One keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"gowribhat"},"content":"        StudentContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"gowribhat"},"content":"                new StudentContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"gowribhat"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"gowribhat"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"gowribhat"},"content":"        predicate \u003d new StudentContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"gowribhat"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"gowribhat"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"gowribhat"},"content":"        predicate \u003d new StudentContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"gowribhat"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"gowribhat"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"gowribhat"},"content":"        predicate \u003d new StudentContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"gowribhat"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"gowribhat"},"content":"        // Only partial matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"gowribhat"},"content":"        predicate \u003d new StudentContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Car\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"gowribhat"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"gowribhat"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"gowribhat"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"gowribhat"},"content":"        StudentContainsKeywordsPredicate predicate \u003d new StudentContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"gowribhat"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"gowribhat"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"gowribhat"},"content":"        predicate \u003d new StudentContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"gowribhat"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"gowribhat"},"content":"    public void test_emailContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"gowribhat"},"content":"        // One keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"gowribhat"},"content":"        StudentContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"gowribhat"},"content":"                new StudentContainsKeywordsPredicate(Collections.singletonList(\"alice@example.com\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"gowribhat"},"content":"        assertTrue(predicate.test(new StudentBuilder().withEmail(\"alice@example.com\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"gowribhat"},"content":"        // Multiple keywords with only one match keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"gowribhat"},"content":"        predicate \u003d new StudentContainsKeywordsPredicate(Arrays.asList(\"alice@example.com\", \"johnd@example.com\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"gowribhat"},"content":"        assertTrue(predicate.test(new StudentBuilder().withEmail(\"alice@example.com\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"gowribhat"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"gowribhat"},"content":"        predicate \u003d new StudentContainsKeywordsPredicate(Arrays.asList(\"alIce@example.com\", \"aaa\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"gowribhat"},"content":"        assertTrue(predicate.test(new StudentBuilder().withEmail(\"alice@example.com\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"gowribhat"},"content":"        // Only partial matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"gowribhat"},"content":"        predicate \u003d new StudentContainsKeywordsPredicate(Arrays.asList(\"@example.com\", \"bob@example.com\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"gowribhat"},"content":"        assertTrue(predicate.test(new StudentBuilder().withEmail(\"alice@example.com\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"gowribhat"},"content":"    public void test_emailDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"gowribhat"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"gowribhat"},"content":"        StudentContainsKeywordsPredicate predicate \u003d new StudentContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"gowribhat"},"content":"        assertFalse(predicate.test(new StudentBuilder().withEmail(\"alice@example.com\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"gowribhat"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"gowribhat"},"content":"        predicate \u003d new StudentContainsKeywordsPredicate(Arrays.asList(\"bob@example.com\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"gowribhat"},"content":"        assertFalse(predicate.test(new StudentBuilder().withEmail(\"alice@example.com\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"gowribhat"},"content":"    public void test_classGroupContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"gowribhat"},"content":"        // Exact keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"gowribhat"},"content":"        StudentContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"gowribhat"},"content":"                new StudentContainsKeywordsPredicate(Collections.singletonList(\"cs2030\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"gowribhat"},"content":"        assertTrue(predicate.test(new StudentBuilder().withClassGroup(\"cs2030 lab 31\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"gowribhat"},"content":"        // Multiple keywords with only one match keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"gowribhat"},"content":"        predicate \u003d new StudentContainsKeywordsPredicate(Arrays.asList(\"cs2030\", \"aaa\", \"bb\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"gowribhat"},"content":"        assertTrue(predicate.test(new StudentBuilder().withClassGroup(\"cs2030 lab 31\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"gowribhat"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"gowribhat"},"content":"        predicate \u003d new StudentContainsKeywordsPredicate(Arrays.asList(\"CS2030\", \"lAb\", \"31\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"gowribhat"},"content":"        assertTrue(predicate.test(new StudentBuilder().withClassGroup(\"cs2030 lab 31\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"gowribhat"},"content":"        // Only partial matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"gowribhat"},"content":"        predicate \u003d new StudentContainsKeywordsPredicate(Arrays.asList(\"2030\", \"ab\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"gowribhat"},"content":"        assertTrue(predicate.test(new StudentBuilder().withClassGroup(\"cs2030 lab 31\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"gowribhat"},"content":"    public void test_classGroupDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"gowribhat"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"gowribhat"},"content":"        StudentContainsKeywordsPredicate predicate \u003d new StudentContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"gowribhat"},"content":"        assertFalse(predicate.test(new StudentBuilder().withClassGroup(\"cs2030 lab 31\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"gowribhat"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"gowribhat"},"content":"        predicate \u003d new StudentContainsKeywordsPredicate(Arrays.asList(\"cs2103t\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"gowribhat"},"content":"        assertFalse(predicate.test(new StudentBuilder().withClassGroup(\"cs2030 lab 31\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"gowribhat"},"content":"    public void test_phoneContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"gowribhat"},"content":"        // One keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"gowribhat"},"content":"        StudentContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"gowribhat"},"content":"                new StudentContainsKeywordsPredicate(Collections.singletonList(\"12345678\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"gowribhat"},"content":"        assertTrue(predicate.test(new StudentBuilder().withPhone(\"12345678\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"gowribhat"},"content":"        // Multiple keywords with only one match keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"gowribhat"},"content":"        predicate \u003d new StudentContainsKeywordsPredicate(Arrays.asList(\"12345678\", \"11111111\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"gowribhat"},"content":"        assertTrue(predicate.test(new StudentBuilder().withPhone(\"12345678\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"gowribhat"},"content":"        // Only partial matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"gowribhat"},"content":"        predicate \u003d new StudentContainsKeywordsPredicate(Arrays.asList(\"1234\", \"7\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"gowribhat"},"content":"        assertTrue(predicate.test(new StudentBuilder().withPhone(\"12345678\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"gowribhat"},"content":"    public void test_phoneDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"gowribhat"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"gowribhat"},"content":"        StudentContainsKeywordsPredicate predicate \u003d new StudentContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"gowribhat"},"content":"        assertFalse(predicate.test(new StudentBuilder().withPhone(\"98765678\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"gowribhat"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"gowribhat"},"content":"        predicate \u003d new StudentContainsKeywordsPredicate(Arrays.asList(\"99999999\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"gowribhat"},"content":"        assertFalse(predicate.test(new StudentBuilder().withPhone(\"98765678\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"gowribhat"},"content":"    public void test_studentIdContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"gowribhat"},"content":"        // One keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"gowribhat"},"content":"        StudentContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"gowribhat"},"content":"                new StudentContainsKeywordsPredicate(Collections.singletonList(\"e0998765\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"gowribhat"},"content":"        assertTrue(predicate.test(new StudentBuilder().withStudentId(\"e0998765\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"gowribhat"},"content":"        // Multiple keywords with only one match keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"gowribhat"},"content":"        predicate \u003d new StudentContainsKeywordsPredicate(Arrays.asList(\"e0998765\", \"e0693225\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"gowribhat"},"content":"        assertTrue(predicate.test(new StudentBuilder().withStudentId(\"e0998765\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"gowribhat"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"gowribhat"},"content":"        predicate \u003d new StudentContainsKeywordsPredicate(Arrays.asList(\"E0998765\", \"e000000\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"gowribhat"},"content":"        assertTrue(predicate.test(new StudentBuilder().withStudentId(\"e0998765\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"gowribhat"},"content":"        // Only partial matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"gowribhat"},"content":"        predicate \u003d new StudentContainsKeywordsPredicate(Arrays.asList(\"e099\", \"65\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"gowribhat"},"content":"        assertTrue(predicate.test(new StudentBuilder().withStudentId(\"e0998765\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"gowribhat"},"content":"    public void test_studentIdDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"gowribhat"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"gowribhat"},"content":"        StudentContainsKeywordsPredicate predicate \u003d new StudentContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"gowribhat"},"content":"        assertFalse(predicate.test(new StudentBuilder().withStudentId(\"e0998765\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"gowribhat"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"gowribhat"},"content":"        predicate \u003d new StudentContainsKeywordsPredicate(Arrays.asList(\"e0999999\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"gowribhat"},"content":"        assertFalse(predicate.test(new StudentBuilder().withStudentId(\"e0998765\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"gowribhat"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"gowribhat":198}},{"path":"src/test/java/seedu/address/model/student/StudentIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zzthian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"zzthian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"zzthian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"zzthian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"zzthian"},"content":"public class StudentIdTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"zzthian"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"zzthian"},"content":"        assertThrows(NullPointerException.class, () -\u003e new StudentId(null));","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"zzthian"},"content":"    public void constructor_invalidStudentId_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"zzthian"},"content":"        String invalidStudentId \u003d \"\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"zzthian"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new StudentId(invalidStudentId));","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"zzthian"},"content":"    public void isValidStudentId() {","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"zzthian"},"content":"        // null studentId","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"zzthian"},"content":"        assertThrows(NullPointerException.class, () -\u003e StudentId.isValidStudentId(null));","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"zzthian"},"content":"        // invalid studentIds","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"zzthian"},"content":"        assertFalse(StudentId.isValidStudentId(\"\")); // empty string","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"zzthian"},"content":"        assertFalse(StudentId.isValidStudentId(\"E0341923\")); // capitalized e","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"zzthian"},"content":"        // valid studentIds","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"zzthian"},"content":"        assertTrue(StudentId.isValidStudentId(\"e0123456\"));","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"zzthian"},"content":"        assertTrue(StudentId.isValidStudentId(\"e0000000\")); // all repeated numbers","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"zzthian"},"content":"        assertTrue(StudentId.isValidStudentId(\"e0394718\"));","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"gowribhat"},"content":"    void contains_studentIdContainsKeyword_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"gowribhat"},"content":"        // Blank keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new StudentId(\"e0123456\").contains(\"\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"gowribhat"},"content":"        // Exact keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new StudentId(\"e0123456\").contains(\"e0123456\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"gowribhat"},"content":"        // Partial matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new StudentId(\"e0123456\").contains(\"234\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"gowribhat"},"content":"    void contains_studentIdContainsKeyword_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"gowribhat"},"content":"        // Keyword with only alphabets","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"gowribhat"},"content":"        assertFalse(new StudentId(\"e0123456\").contains(\"aaaaa\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"gowribhat"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"gowribhat"},"content":"        assertFalse(new StudentId(\"e0123456\").contains(\"a9d87g\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"gowribhat"},"content":"        // Mixed-case keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"gowribhat"},"content":"        assertFalse(new StudentId(\"e0123456\").contains(\"E01234\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"zzthian"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"gowribhat":24,"zzthian":36}},{"path":"src/test/java/seedu/address/model/student/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zzthian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLASS_GROUP_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_BOB;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"gowribhat"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"gowribhat"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"zzthian"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"zzthian"},"content":"public class StudentTest {","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"zzthian"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"zzthian"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e student.getTags().remove(0));","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"zzthian"},"content":"    public void isSameStudent() {","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"zzthian"},"content":"        assertTrue(ALICE.isSameStudent(ALICE));","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"zzthian"},"content":"        assertFalse(ALICE.isSameStudent(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"zzthian"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"gowribhat"},"content":"                .withClassGroup(VALID_CLASS_GROUP_BOB).withStudentId(VALID_STUDENTID_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"gowribhat"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"zzthian"},"content":"        assertTrue(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"zzthian"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"zzthian"},"content":"        assertFalse(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"zzthian"},"content":"        Student editedBob \u003d new StudentBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"zzthian"},"content":"        assertFalse(BOB.isSameStudent(editedBob));","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"zzthian"},"content":"        editedBob \u003d new StudentBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"zzthian"},"content":"        assertFalse(BOB.isSameStudent(editedBob));","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"zzthian"},"content":"        Student aliceCopy \u003d new StudentBuilder(ALICE).build();","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"zzthian"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"zzthian"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"zzthian"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"zzthian"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"gowribhat"},"content":"        // different class group -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"gowribhat"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withClassGroup(VALID_CLASS_GROUP_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"gowribhat"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"gowribhat"},"content":"        // different student id -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"zzthian"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withStudentId(VALID_STUDENTID_BOB).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":97,"author":{"gitId":"zzthian"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"gowribhat"},"content":"    public void contains_blankKeyword_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new StudentBuilder(ALICE).build().contains(\"\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"gowribhat"},"content":"    public void contains_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"gowribhat"},"content":"        // Exact keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new StudentBuilder().withName(\"Alice Bob\").build().contains(\"alice\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"gowribhat"},"content":"        // Only partial matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new StudentBuilder().withName(\"Alice Bob\").build().contains(\"ali\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"gowribhat"},"content":"    public void contains_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"gowribhat"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"gowribhat"},"content":"        assertFalse(new StudentBuilder().withName(\"Alice Bob\").build().contains(\"ALiCE\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"gowribhat"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"gowribhat"},"content":"        assertFalse(new StudentBuilder().withName(\"Alice Bob\").build().contains(\"Carol\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"gowribhat"},"content":"    public void contains_emailContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"gowribhat"},"content":"        // Exact keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new StudentBuilder().withEmail(\"alice@example.com\").build().contains(\"alice@example.com\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"gowribhat"},"content":"        // Only partial matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new StudentBuilder().withEmail(\"alice@example.com\").build().contains(\"@example.com\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"gowribhat"},"content":"    public void contains_emailDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"gowribhat"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"gowribhat"},"content":"        assertFalse(new StudentBuilder().withEmail(\"alice@example.com\").build().contains(\"carol@example.com\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"gowribhat"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"gowribhat"},"content":"        assertFalse(new StudentBuilder().withEmail(\"alice@example.com\").build().contains(\"alIce@example.com\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"gowribhat"},"content":"    public void contains_phoneContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"gowribhat"},"content":"        // Exact keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new StudentBuilder().withPhone(\"12345678\").build().contains(\"12345678\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"gowribhat"},"content":"        // Only partial matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new StudentBuilder().withPhone(\"12345678\").build().contains(\"3456\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"gowribhat"},"content":"    public void contains_phoneDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"gowribhat"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"gowribhat"},"content":"        StudentContainsKeywordsPredicate predicate \u003d new StudentContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"gowribhat"},"content":"        assertFalse(predicate.test(new StudentBuilder().withPhone(\"98765678\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"gowribhat"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"gowribhat"},"content":"        predicate \u003d new StudentContainsKeywordsPredicate(Arrays.asList(\"99999999\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"gowribhat"},"content":"        assertFalse(predicate.test(new StudentBuilder().withPhone(\"98765678\").build()));","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"gowribhat"},"content":"        // Keyword with alphabets","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"gowribhat"},"content":"        assertFalse(new StudentBuilder().withPhone(\"12345678\").build().contains(\"aaaaa\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"gowribhat"},"content":"        // Keyword with both numbers and alphabets","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"gowribhat"},"content":"        assertFalse(new StudentBuilder().withPhone(\"12345678\").build().contains(\"a9d87g\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"gowribhat"},"content":"    public void contains_classGroupContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"gowribhat"},"content":"        // Exact keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new StudentBuilder().withClassGroup(\"cs2030 lab 31\").build().contains(\"cs2030\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"gowribhat"},"content":"        // Only partial matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new StudentBuilder().withClassGroup(\"cs2030 lab 31\").build().contains(\"2030\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"gowribhat"},"content":"    public void contains_classGroupDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"gowribhat"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"gowribhat"},"content":"        assertFalse(new StudentBuilder().withClassGroup(\"cs2030 lab 31\").build().contains(\"cs2103t\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"gowribhat"},"content":"        // Mixed-case keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"gowribhat"},"content":"        assertFalse(new StudentBuilder().withClassGroup(\"cs2030 lab 31\").build().contains(\"CS2030\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"gowribhat"},"content":"    public void contains_studentIdContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"gowribhat"},"content":"        // Exact keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new StudentBuilder().withStudentId(\"e0123456\").build().contains(\"e0123456\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"gowribhat"},"content":"        // Partial matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"gowribhat"},"content":"        assertTrue(new StudentBuilder().withStudentId(\"e0123456\").build().contains(\"234\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"gowribhat"},"content":"    public void contains_studentIdDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"gowribhat"},"content":"        // Keyword with only alphabets","lastModifiedDate":"2022-10-10"},{"lineNumber":199,"author":{"gitId":"gowribhat"},"content":"        assertFalse(new StudentBuilder().withStudentId(\"e0123456\").build().contains(\"aaaaa\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":200,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":201,"author":{"gitId":"gowribhat"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":202,"author":{"gitId":"gowribhat"},"content":"        assertFalse(new StudentBuilder().withStudentId(\"e0123456\").build().contains(\"a9d87g\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":203,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":204,"author":{"gitId":"gowribhat"},"content":"        // Mixed-case keyword","lastModifiedDate":"2022-10-10"},{"lineNumber":205,"author":{"gitId":"gowribhat"},"content":"        assertFalse(new StudentBuilder().withStudentId(\"e0123456\").build().contains(\"E01234\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":206,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"gowribhat":118,"zzthian":26,"-":63}},{"path":"src/test/java/seedu/address/model/student/UniqueStudentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zzthian"},"content":"package seedu.address.model.student;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"zzthian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"zzthian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"zzthian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_BOB;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"zzthian"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"zzthian"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"zzthian"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"zzthian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"zzthian"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"zzthian"},"content":"public class UniqueStudentListTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"zzthian"},"content":"    private final UniqueStudentList uniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"zzthian"},"content":"    public void contains_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"zzthian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.contains(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"zzthian"},"content":"    public void contains_studentNotInList_returnsFalse() {","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"zzthian"},"content":"        assertFalse(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"zzthian"},"content":"    public void contains_studentInList_returnsTrue() {","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"zzthian"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"zzthian"},"content":"        assertTrue(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"zzthian"},"content":"    public void contains_studentWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"zzthian"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"zzthian"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withStudentId(VALID_STUDENTID_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"zzthian"},"content":"                .build();","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"zzthian"},"content":"        assertTrue(uniqueStudentList.contains(editedAlice));","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"zzthian"},"content":"    public void add_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"zzthian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.add(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"zzthian"},"content":"    public void add_duplicateStudent_throwsDuplicateStudentException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"zzthian"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"zzthian"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.add(ALICE));","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"zzthian"},"content":"    public void setStudent_nullTargetStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"zzthian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(null, ALICE));","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"zzthian"},"content":"    public void setStudent_nullEditedStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"zzthian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(ALICE, null));","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"zzthian"},"content":"    public void setStudent_targetStudentNotInList_throwsStudentNotFoundException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"zzthian"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.setStudent(ALICE, ALICE));","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"zzthian"},"content":"    public void setStudent_editedStudentIsSameStudent_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"zzthian"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"zzthian"},"content":"        uniqueStudentList.setStudent(ALICE, ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"zzthian"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"zzthian"},"content":"        expectedUniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"zzthian"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"zzthian"},"content":"    public void setStudent_editedStudentHasSameIdentity_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"zzthian"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"zzthian"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withStudentId(VALID_STUDENTID_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"zzthian"},"content":"                .build();","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"zzthian"},"content":"        uniqueStudentList.setStudent(ALICE, editedAlice);","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"zzthian"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"zzthian"},"content":"        expectedUniqueStudentList.add(editedAlice);","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"zzthian"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"zzthian"},"content":"    public void setStudent_editedStudentHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"zzthian"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"zzthian"},"content":"        uniqueStudentList.setStudent(ALICE, BOB);","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"zzthian"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"zzthian"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"zzthian"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"zzthian"},"content":"    public void setStudent_editedStudentHasNonUniqueIdentity_throwsDuplicateStudentException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"zzthian"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"zzthian"},"content":"        uniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"zzthian"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudent(ALICE, BOB));","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"zzthian"},"content":"    public void remove_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"zzthian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.remove(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"zzthian"},"content":"    public void remove_studentDoesNotExist_throwsStudentNotFoundException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"zzthian"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.remove(ALICE));","lastModifiedDate":"2022-10-04"},{"lineNumber":122,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":123,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":125,"author":{"gitId":"zzthian"},"content":"    public void remove_existingStudent_removesStudent() {","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"zzthian"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"zzthian"},"content":"        uniqueStudentList.remove(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"zzthian"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"zzthian"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"zzthian"},"content":"    public void setStudent_nullUniqueStudentList_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"zzthian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((UniqueStudentList) null));","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"zzthian"},"content":"    public void setStudents_uniqueStudentList_replacesOwnListWithProvidedUniqueStudentList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"zzthian"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"zzthian"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-04"},{"lineNumber":141,"author":{"gitId":"zzthian"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-04"},{"lineNumber":142,"author":{"gitId":"zzthian"},"content":"        uniqueStudentList.setStudents(expectedUniqueStudentList);","lastModifiedDate":"2022-10-04"},{"lineNumber":143,"author":{"gitId":"zzthian"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-04"},{"lineNumber":144,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":145,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":146,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":147,"author":{"gitId":"zzthian"},"content":"    public void setStudents_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":148,"author":{"gitId":"zzthian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((List\u003cStudent\u003e) null));","lastModifiedDate":"2022-10-04"},{"lineNumber":149,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":150,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":151,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":152,"author":{"gitId":"zzthian"},"content":"    public void setStudents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-04"},{"lineNumber":153,"author":{"gitId":"zzthian"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":154,"author":{"gitId":"zzthian"},"content":"        List\u003cStudent\u003e studentList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-10-04"},{"lineNumber":155,"author":{"gitId":"zzthian"},"content":"        uniqueStudentList.setStudents(studentList);","lastModifiedDate":"2022-10-04"},{"lineNumber":156,"author":{"gitId":"zzthian"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-04"},{"lineNumber":157,"author":{"gitId":"zzthian"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-04"},{"lineNumber":158,"author":{"gitId":"zzthian"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2022-10-04"},{"lineNumber":159,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":161,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":162,"author":{"gitId":"zzthian"},"content":"    public void setStudents_listWithDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":163,"author":{"gitId":"zzthian"},"content":"        List\u003cStudent\u003e listWithDuplicateStudents \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":164,"author":{"gitId":"zzthian"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudents(listWithDuplicateStudents));","lastModifiedDate":"2022-10-04"},{"lineNumber":165,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":166,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":167,"author":{"gitId":"zzthian"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":168,"author":{"gitId":"zzthian"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":169,"author":{"gitId":"zzthian"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-04"},{"lineNumber":170,"author":{"gitId":"zzthian"},"content":"            -\u003e uniqueStudentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-04"},{"lineNumber":171,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":172,"author":{"gitId":"zzthian"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"zzthian":172}},{"path":"src/test/java/seedu/address/model/task/TaskDescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"public class TaskDescriptionTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskDescription(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TaskDescription(invalidDescription));","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":19}},{"path":"src/test/java/seedu/address/model/task/TaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalTasks.FIRST;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"public class TaskListTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.contains(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"        assertFalse(taskList.contains(FIRST));","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"        taskList.add(FIRST);","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"        assertTrue(taskList.contains(FIRST));","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.add(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"    public void remove_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.remove(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"        taskList.add(FIRST);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"        taskList.remove(FIRST);","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"        TaskList expectedTaskList \u003d new TaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"thamruicong"},"content":"        assertEquals(expectedTaskList, taskList);","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"thamruicong"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"thamruicong"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"thamruicong"},"content":"                -\u003e taskList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":54}},{"path":"src/test/java/seedu/address/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalTasks.FIRST;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalTasks.SECOND;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"public class TaskTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"    public void isSameTask() {","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"        assertTrue(FIRST.equals(FIRST));","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"        assertFalse(FIRST.equals(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"    public void equals() {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"        Task firstCopy \u003d new TaskBuilder(FIRST).build();","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"        assertTrue(FIRST.equals(firstCopy));","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"        assertTrue(FIRST.equals(FIRST));","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"        assertFalse(FIRST.equals(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"        assertFalse(FIRST.equals(5));","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"        assertFalse(FIRST.equals(SECOND));","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":42}},{"path":"src/test/java/seedu/address/model/task/TaskTitleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.model.task;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"public class TaskTitleTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskTitle(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"    public void constructor_invalidTitle_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"        String invalidTitle \u003d \"\";","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TaskTitle(invalidTitle));","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":20}},{"path":"src/test/java/seedu/address/storage/InputHistoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gowribhat"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"gowribhat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"gowribhat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"gowribhat"},"content":"class InputHistoryTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"gowribhat"},"content":"    void get() {","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"gowribhat"},"content":"        InputHistory test \u003d new InputHistory();","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"gowribhat"},"content":"        test.add(\"test 0\");","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"gowribhat"},"content":"        test.add(\"test 1\");","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"gowribhat"},"content":"        test.add(\"test 2\");","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"gowribhat"},"content":"        assertEquals(\"\", test.get());","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"gowribhat"},"content":"    void up() {","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"gowribhat"},"content":"        InputHistory test \u003d new InputHistory();","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"gowribhat"},"content":"        test.add(\"test 0\");","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"gowribhat"},"content":"        test.add(\"test 1\");","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"gowribhat"},"content":"        test.add(\"test 2\");","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"gowribhat"},"content":"        assertEquals(\"\", test.get());","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"gowribhat"},"content":"        test.up();","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"gowribhat"},"content":"        assertEquals(\"test 2\", test.get());","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"gowribhat"},"content":"        test.up();","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"gowribhat"},"content":"        assertEquals(\"test 1\", test.get());","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"gowribhat"},"content":"        test.up();","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"gowribhat"},"content":"        assertEquals(\"test 0\", test.get());","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"gowribhat"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"gowribhat"},"content":"    void down() {","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"gowribhat"},"content":"        InputHistory test \u003d new InputHistory();","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"gowribhat"},"content":"        test.add(\"test 0\");","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"gowribhat"},"content":"        test.add(\"test 1\");","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"gowribhat"},"content":"        test.add(\"test 2\");","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"gowribhat"},"content":"        test.up();","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"gowribhat"},"content":"        test.up();","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"gowribhat"},"content":"        test.up();","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"gowribhat"},"content":"        assertEquals(\"test 0\", test.get());","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"gowribhat"},"content":"        test.down();","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"gowribhat"},"content":"        assertEquals(\"test 1\", test.get());","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"gowribhat"},"content":"        test.down();","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"gowribhat"},"content":"        assertEquals(\"test 2\", test.get());","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"gowribhat"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"gowribhat":48}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"zzthian"},"content":"import static seedu.address.storage.JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.student.ClassGroup;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.StudentId;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"zzthian"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"zzthian"},"content":"    private static final String INVALID_STUDENTID \u003d \"abc12340\";","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"gowribhat"},"content":"    private static final String VALID_CLASS_GROUP \u003d BENSON.getClassGroup().toString();","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"zzthian"},"content":"    private static final String VALID_STUDENTID \u003d BENSON.getStudentId().toString();","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"Evande1"},"content":"    private static final JsonAdaptedAttendanceList VALID_ATTENDANCE \u003d new JsonAdaptedAttendanceList(BENSON","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"Evande1"},"content":"            .getAttendanceList().getMod(),","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"Evande1"},"content":"            BENSON.getAttendanceList()","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"Evande1"},"content":"                    .getAttendanceList().stream().map(JsonAdaptedAttendance::new)","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"Evande1"},"content":"                    .collect(Collectors.toList()));","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"zzthian"},"content":"    public void toModelType_validStudentDetails_returnsStudent() throws Exception {","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"zzthian"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(BENSON);","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"zzthian"},"content":"        assertEquals(BENSON, student.toModelType());","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"gowribhat"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"Evande1"},"content":"                VALID_CLASS_GROUP, VALID_STUDENTID, VALID_TAGS, VALID_ATTENDANCE);","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"zzthian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"gowribhat"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"Evande1"},"content":"                VALID_CLASS_GROUP, VALID_STUDENTID, VALID_TAGS, VALID_ATTENDANCE);","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"zzthian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"gowribhat"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"Evande1"},"content":"                VALID_CLASS_GROUP, VALID_STUDENTID, VALID_TAGS, VALID_ATTENDANCE);","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"zzthian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"gowribhat"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"Evande1"},"content":"                VALID_CLASS_GROUP, VALID_STUDENTID, VALID_TAGS, VALID_ATTENDANCE);","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"zzthian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"gowribhat"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"Evande1"},"content":"                VALID_CLASS_GROUP, VALID_STUDENTID, VALID_TAGS, VALID_ATTENDANCE);","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"zzthian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"gowribhat"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2022-10-08"},{"lineNumber":92,"author":{"gitId":"Evande1"},"content":"                VALID_CLASS_GROUP, VALID_STUDENTID, VALID_TAGS, VALID_ATTENDANCE);","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"zzthian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"gowribhat"},"content":"    public void toModelType_nullClassGroup_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"gowribhat"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"Evande1"},"content":"                null, VALID_STUDENTID, VALID_TAGS, VALID_ATTENDANCE);","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"gowribhat"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ClassGroup.class.getSimpleName());","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"gowribhat"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"gowribhat"},"content":"    public void toModelType_invalidStudentId_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"gowribhat"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-08"},{"lineNumber":108,"author":{"gitId":"Evande1"},"content":"                VALID_CLASS_GROUP, INVALID_STUDENTID, VALID_TAGS, VALID_ATTENDANCE);","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"zzthian"},"content":"        String expectedMessage \u003d StudentId.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"zzthian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"gowribhat"},"content":"    public void toModelType_nullStudentId_throwsIllegalValueException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"gowribhat"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-08"},{"lineNumber":116,"author":{"gitId":"Evande1"},"content":"                VALID_CLASS_GROUP, null, VALID_TAGS, VALID_ATTENDANCE);","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"zzthian"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, StudentId.class.getSimpleName());","lastModifiedDate":"2022-10-08"},{"lineNumber":118,"author":{"gitId":"zzthian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"gowribhat"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-08"},{"lineNumber":126,"author":{"gitId":"Evande1"},"content":"                VALID_CLASS_GROUP, VALID_STUDENTID, invalidTags, VALID_ATTENDANCE);","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"zzthian"},"content":"        assertThrows(IllegalValueException.class, student::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"gowribhat":19,"zzthian":23,"Evande1":16,"-":72}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TASK_DESCRIPTION;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TASK_TITLE;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_DESCRIPTION;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_TITLE;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.storage.JsonAdaptedTask.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalTasks.FIRST;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.TaskTitle;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"public class JsonAdaptedTaskTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"    public void toModelType_validTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(FIRST);","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"        assertEquals(FIRST, task.toModelType());","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"    public void toModelType_nullTitle_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(null, VALID_TASK_DESCRIPTION);","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TaskTitle.class.getSimpleName());","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_TASK_TITLE, null);","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TaskDescription.class.getSimpleName());","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"    public void toModelType_invalidTitle_throwsIllegalValueException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(INVALID_TASK_TITLE, VALID_TASK_DESCRIPTION);","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"        String expectedMessage \u003d String.format(TaskTitle.MESSAGE_CONSTRAINTS, TaskTitle.class.getSimpleName());","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"thamruicong"},"content":"    public void toModelType_invalidDescription_throwsIllegalValueException() {","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"thamruicong"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_TASK_TITLE, INVALID_TASK_DESCRIPTION);","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"thamruicong"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"thamruicong"},"content":"                TaskDescription.MESSAGE_CONSTRAINTS, TaskDescription.class.getSimpleName());","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"thamruicong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":54}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.HOON;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.IDA;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"zzthian"},"content":"    public void readAddressBook_invalidStudentAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"zzthian"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidStudentAddressBook.json\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"zzthian"},"content":"    public void readAddressBook_invalidAndValidStudentAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"zzthian"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidStudentAddressBook.json\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"zzthian"},"content":"        original.addStudent(HOON);","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"zzthian"},"content":"        original.removeStudent(ALICE);","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"zzthian"},"content":"        original.addStudent(IDA);","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zzthian":11,"-":99}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"zzthian"},"content":"import seedu.address.testutil.TypicalStudents;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"zzthian"},"content":"    private static final Path TYPICAL_STUDENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalStudentsAddressBook.json\");","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"zzthian"},"content":"    private static final Path INVALID_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidStudentAddressBook.json\");","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"zzthian"},"content":"    private static final Path DUPLICATE_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateStudentAddressBook.json\");","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"zzthian"},"content":"    public void toModelType_typicalStudentsFile_success() throws Exception {","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"zzthian"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_STUDENTS_FILE,","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"zzthian"},"content":"        AddressBook typicalStudentsAddressBook \u003d TypicalStudents.getTypicalAddressBook();","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"zzthian"},"content":"        assertEquals(addressBookFromFile, typicalStudentsAddressBook);","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"zzthian"},"content":"    public void toModelType_invalidStudentFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"zzthian"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_STUDENT_FILE,","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"Evande1"},"content":"    //@Test","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"Evande1"},"content":"    //public void toModelType_duplicateStudents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"Evande1"},"content":"    //    JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_STUDENT_FILE,","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"Evande1"},"content":"    //            JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"Evande1"},"content":"    //    assertThrows(IllegalValueException.class,","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"Evande1"},"content":"    //    JsonSerializableAddressBook.MESSAGE_DUPLICATE_STUDENT,","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"Evande1"},"content":"    //            dataFromFile::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"Evande1"},"content":"    //      }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zzthian":10,"Evande1":8,"-":29}},{"path":"src/test/java/seedu/address/storage/JsonSerializableTaskBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"import seedu.address.testutil.TypicalTasks;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"public class JsonSerializableTaskBookTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableTaskBookTest\");","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"    private static final Path TYPICAL_TASKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTaskBook.json\");","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"    private static final Path INVALID_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTaskBook.json\");","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"    public void toModelType_typicalTasksFile_success() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"        JsonSerializableTaskBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TASKS_FILE,","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"                JsonSerializableTaskBook.class).get();","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"        TaskBook taskBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"        TaskBook typicalTaskBook \u003d TypicalTasks.getTypicalTaskBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"        assertEquals(taskBookFromFile, typicalTaskBook);","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"    public void toModelType_invalidTaskFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"        JsonSerializableTaskBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TASK_FILE,","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"                JsonSerializableTaskBook.class).get();","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":38}},{"path":"src/test/java/seedu/address/storage/JsonTaskBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalTasks.FIRST;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalTasks.SECOND;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"public class JsonTaskBookStorageTest {","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonTaskBookStorageTest\");","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"    @TempDir","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"    public void readTaskBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"        assertThrows(NullPointerException.class, () -\u003e readTaskBook(null));","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"    private java.util.Optional\u003cReadOnlyTaskBook\u003e readTaskBook(String filePath) throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"        return new JsonTaskBookStorage(Paths.get(filePath)).readTaskBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"                : null;","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"        assertFalse(readTaskBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"thamruicong"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"thamruicong"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskBook(\"notJsonFormatTaskBook.json\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"thamruicong"},"content":"    public void readTaskBook_invalidTaskBook_throwDataConversionException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"thamruicong"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskBook(\"invalidTaskBook.json\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"thamruicong"},"content":"    public void readAndSaveTaskBook_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"thamruicong"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"thamruicong"},"content":"        TaskBook original \u003d getTypicalTaskBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"thamruicong"},"content":"        JsonTaskBookStorage jsonTaskBookStorage \u003d new JsonTaskBookStorage(filePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"thamruicong"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"thamruicong"},"content":"        jsonTaskBookStorage.saveTaskBook(original, filePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"thamruicong"},"content":"        ReadOnlyTaskBook readBack \u003d jsonTaskBookStorage.readTaskBook(filePath).get();","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"thamruicong"},"content":"        assertEquals(original, new TaskBook(readBack));","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"thamruicong"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"thamruicong"},"content":"        original.addTask(FIRST);","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"thamruicong"},"content":"        original.deleteTask(SECOND);","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"thamruicong"},"content":"        jsonTaskBookStorage.saveTaskBook(original, filePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"thamruicong"},"content":"        readBack \u003d jsonTaskBookStorage.readTaskBook(filePath).get();","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"thamruicong"},"content":"        assertEquals(original, new TaskBook(readBack));","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"thamruicong"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"thamruicong"},"content":"        original.addTask(FIRST);","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"thamruicong"},"content":"        jsonTaskBookStorage.saveTaskBook(original); // file path not specified","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"thamruicong"},"content":"        readBack \u003d jsonTaskBookStorage.readTaskBook().get(); // file path not specified","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"thamruicong"},"content":"        assertEquals(original, new TaskBook(readBack));","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"thamruicong"},"content":"    public void saveTaskBook_nullTaskBook_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"thamruicong"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaskBook(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"thamruicong"},"content":"    private void saveTaskBook(ReadOnlyTaskBook taskBook, String filePath) {","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"thamruicong"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"thamruicong"},"content":"            new JsonTaskBookStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"thamruicong"},"content":"                    .saveTaskBook(taskBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"thamruicong"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"thamruicong"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"thamruicong"},"content":"    public void saveTaskBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"thamruicong"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaskBook(new TaskBook(), null));","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":101}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"zzthian"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"        JsonTaskBookStorage taskBookStorage \u003d new JsonTaskBookStorage(getTempFilePath(\"tb\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, taskBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"    public void getUserPrefFilePath() {","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"        assertNotNull(storageManager.getUserPrefsFilePath());","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"thamruicong"},"content":"    public void getTaskBookFilePath() {","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"thamruicong"},"content":"        assertNotNull(storageManager.getTaskBookFilePath());","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"thamruicong"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"thamruicong"},"content":"    public void taskBookReadSave() throws Exception {","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"thamruicong"},"content":"        /*","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"thamruicong"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"thamruicong"},"content":"         * {@link JsonTaskBookStorage} class.","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"thamruicong"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonTaskBookStorageTest} class.","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"thamruicong"},"content":"         */","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"thamruicong"},"content":"        TaskBook original \u003d getTypicalTaskBook();","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"thamruicong"},"content":"        storageManager.saveTaskBook(original);","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"thamruicong"},"content":"        ReadOnlyTaskBook retrieved \u003d storageManager.readTaskBook().get();","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"thamruicong"},"content":"        assertEquals(original, new TaskBook(retrieved));","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"thamruicong":28,"zzthian":1,"-":66}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"zzthian"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withStudents(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"zzthian"},"content":"     * Adds a new {@code Student} to the {@code AddressBook} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"zzthian"},"content":"    public AddressBookBuilder withStudent(Student student) {","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"zzthian"},"content":"        addressBook.addStudent(student);","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zzthian":5,"-":29}},{"path":"src/test/java/seedu/address/testutil/EditStudentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zzthian"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"zzthian"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"zzthian"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"zzthian"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"zzthian"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"zzthian"},"content":"import seedu.address.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.student.ClassGroup;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.StudentId;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"zzthian"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"zzthian"},"content":" * A utility class to help with building EditStudentDescriptor objects.","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"zzthian"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"zzthian"},"content":"public class EditStudentDescriptorBuilder {","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"zzthian"},"content":"    private EditCommand.EditStudentDescriptor descriptor;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"zzthian"},"content":"    public EditStudentDescriptorBuilder() {","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"zzthian"},"content":"        descriptor \u003d new EditCommand.EditStudentDescriptor();","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"zzthian"},"content":"    public EditStudentDescriptorBuilder(EditStudentDescriptor descriptor) {","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"zzthian"},"content":"        this.descriptor \u003d new EditStudentDescriptor(descriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"zzthian"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"zzthian"},"content":"     * Returns an {@code EditStudentDescriptor} with fields containing {@code student}\u0027s details","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"zzthian"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"zzthian"},"content":"    public EditStudentDescriptorBuilder(Student student) {","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"zzthian"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"zzthian"},"content":"        descriptor.setName(student.getName());","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"zzthian"},"content":"        descriptor.setPhone(student.getPhone());","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"zzthian"},"content":"        descriptor.setEmail(student.getEmail());","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"gowribhat"},"content":"        descriptor.setClassGroup(student.getClassGroup());","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"zzthian"},"content":"        descriptor.setStudentId(student.getStudentId());","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"zzthian"},"content":"        descriptor.setTags(student.getTags());","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"zzthian"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"zzthian"},"content":"     * Sets the {@code Name} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"zzthian"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"zzthian"},"content":"    public EditStudentDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"zzthian"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"zzthian"},"content":"        return this;","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"zzthian"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"zzthian"},"content":"     * Sets the {@code Phone} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"zzthian"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"zzthian"},"content":"    public EditStudentDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"zzthian"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"zzthian"},"content":"        return this;","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"zzthian"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"zzthian"},"content":"     * Sets the {@code Email} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"zzthian"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"zzthian"},"content":"    public EditStudentDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"zzthian"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"zzthian"},"content":"        return this;","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"gowribhat"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"gowribhat"},"content":"     * Sets the {@code ClassGroup} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"gowribhat"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"gowribhat"},"content":"    public EditStudentDescriptorBuilder withClassGroup(String classGroup) {","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"gowribhat"},"content":"        descriptor.setClassGroup(new ClassGroup(classGroup));","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"gowribhat"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"zzthian"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"zzthian"},"content":"     * Sets the {@code StudentId} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"zzthian"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"zzthian"},"content":"    public EditStudentDescriptorBuilder withStudentId(String studentId) {","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"zzthian"},"content":"        descriptor.setStudentId(new StudentId(studentId));","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"zzthian"},"content":"        return this;","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"zzthian"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"zzthian"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditStudentDescriptor}","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"zzthian"},"content":"     * that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"zzthian"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"zzthian"},"content":"    public EditStudentDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"zzthian"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"zzthian"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"zzthian"},"content":"        return this;","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"zzthian"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"zzthian"},"content":"    public EditStudentDescriptor build() {","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"zzthian"},"content":"        return descriptor;","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"zzthian"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"zzthian"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"gowribhat":10,"zzthian":88}},{"path":"src/test/java/seedu/address/testutil/StudentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"Evande1"},"content":"import seedu.address.model.attendance.AttendanceList;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"gowribhat"},"content":"import seedu.address.model.student.ClassGroup;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Picture;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.StudentId;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"zzthian"},"content":" * A utility class to help with building Student objects.","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"zzthian"},"content":"public class StudentBuilder {","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"gowribhat"},"content":"    public static final String DEFAULT_CLASS_GROUP \u003d \"CS2030 Lab 22\";","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"zzthian"},"content":"    public static final String DEFAULT_STUDENTID \u003d \"e0707070\";","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"gowribhat"},"content":"    private ClassGroup classGroup;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"zzthian"},"content":"    private StudentId studentId;","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":35,"author":{"gitId":"Evande1"},"content":"    private AttendanceList attendanceList;","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"zzthian"},"content":"    private Picture picture;","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"Evande1"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"zzthian"},"content":"     * Creates a {@code StudentBuilder} with the default details.","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"zzthian"},"content":"    public StudentBuilder() {","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"gowribhat"},"content":"        classGroup \u003d new ClassGroup(DEFAULT_CLASS_GROUP);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"zzthian"},"content":"        studentId \u003d new StudentId(DEFAULT_STUDENTID);","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"Evande1"},"content":"        attendanceList \u003d new AttendanceList();","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"zzthian"},"content":"     * Initializes the StudentBuilder with the data of {@code StudentToCopy}.","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"zzthian"},"content":"    public StudentBuilder(Student studentToCopy) {","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"zzthian"},"content":"        name \u003d studentToCopy.getName();","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"zzthian"},"content":"        phone \u003d studentToCopy.getPhone();","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"zzthian"},"content":"        email \u003d studentToCopy.getEmail();","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"gowribhat"},"content":"        classGroup \u003d studentToCopy.getClassGroup();","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"zzthian"},"content":"        studentId \u003d studentToCopy.getStudentId();","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"zzthian"},"content":"        tags \u003d new HashSet\u003c\u003e(studentToCopy.getTags());","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"Evande1"},"content":"        attendanceList \u003d studentToCopy.getAttendanceList();","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"zzthian"},"content":"     * Sets the {@code Name} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"zzthian"},"content":"    public StudentBuilder withName(String name) {","lastModifiedDate":"2022-10-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"zzthian"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Student} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"zzthian"},"content":"    public StudentBuilder withTags(String ... tags) {","lastModifiedDate":"2022-10-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"zzthian"},"content":"     * Sets the {@code StudentId} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"zzthian"},"content":"    public StudentBuilder withStudentId(String studentId) {","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"zzthian"},"content":"        this.studentId \u003d new StudentId(studentId);","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"zzthian"},"content":"     * Sets the {@code Phone} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"zzthian"},"content":"    public StudentBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"zzthian"},"content":"     * Sets the {@code Email} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"zzthian"},"content":"    public StudentBuilder withEmail(String email) {","lastModifiedDate":"2022-10-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"Evande1"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"Evande1"},"content":"     * Sets the {@code AttendanceList} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"Evande1"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"Evande1"},"content":"    public StudentBuilder withAttendanceList(String mod, String size) {","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"Evande1"},"content":"        this.attendanceList \u003d new AttendanceList(mod, size);","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"Evande1"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"Evande1"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"gowribhat"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"gowribhat"},"content":"     * Sets the {@code ClassGroup} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"gowribhat"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"gowribhat"},"content":"    public StudentBuilder withClassGroup(String classGroup) {","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"gowribhat"},"content":"        this.classGroup \u003d new ClassGroup(classGroup);","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"gowribhat"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"gowribhat"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"zzthian"},"content":"    public Student build() {","lastModifiedDate":"2022-10-02"},{"lineNumber":120,"author":{"gitId":"Evande1"},"content":"        return new Student(name, phone, email, classGroup, studentId, tags, attendanceList);","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"gowribhat":13,"zzthian":33,"Evande1":13,"-":64}},{"path":"src/test/java/seedu/address/testutil/StudentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"gowribhat"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS_GROUP;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"zzthian"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"zzthian"},"content":" * A utility class for Student.","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"zzthian"},"content":"public class StudentUtil {","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"zzthian"},"content":"     * Returns an add command string for adding the {@code Student}.","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"zzthian"},"content":"    public static String getAddCommand(Student student) {","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"zzthian"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getStudentDetails(student);","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"zzthian"},"content":"     * Returns the part of command string for the given {@code student}\u0027s details.","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"zzthian"},"content":"    public static String getStudentDetails(Student student) {","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"zzthian"},"content":"        sb.append(PREFIX_NAME + student.getName().fullName + \" \");","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"zzthian"},"content":"        sb.append(PREFIX_PHONE + student.getPhone().value + \" \");","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"zzthian"},"content":"        sb.append(PREFIX_EMAIL + student.getEmail().value + \" \");","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"gowribhat"},"content":"        sb.append(PREFIX_CLASS_GROUP + student.getClassGroup().value + \" \");","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"zzthian"},"content":"        sb.append(PREFIX_ID + student.getStudentId().value + \" \");","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"zzthian"},"content":"        student.getTags().stream().forEach(","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"zzthian"},"content":"     * Returns the part of command string for the given {@code EditStudentDescriptor}\u0027s details.","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"zzthian"},"content":"    public static String getEditStudentDescriptorDetails(EditCommand.EditStudentDescriptor descriptor) {","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"gowribhat"},"content":"        descriptor.getClassGroup().ifPresent(classGroup -\u003e sb.append(PREFIX_CLASS_GROUP)","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"gowribhat"},"content":"                .append(classGroup.value).append(\" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"zzthian"},"content":"        descriptor.getStudentId().ifPresent(address -\u003e sb.append(PREFIX_ID).append(address.value).append(\" \"));","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"gowribhat":5,"zzthian":18,"-":44}},{"path":"src/test/java/seedu/address/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.TaskTitle;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"public class TaskBuilder {","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":"    public static final String DEFAULT_TITLE \u003d \"This is a title\";","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"This is a description\";","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"    private TaskTitle title;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"    private TaskDescription description;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"    public TaskBuilder() {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"        title \u003d new TaskTitle(DEFAULT_TITLE);","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"        description \u003d new TaskDescription(DEFAULT_DESCRIPTION);","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"        title \u003d taskToCopy.getTitle();","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"        description \u003d taskToCopy.getDescription();","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"     * Sets the {@code TaskTitle} of the {@code Task} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"    public TaskBuilder withTitle(String title) {","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"        this.title \u003d new TaskTitle(title);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"     * Sets the {@code TaskDescription} of the {@code Task} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"thamruicong"},"content":"    public TaskBuilder withDescription(String description) {","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"thamruicong"},"content":"        this.description \u003d new TaskDescription(description);","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"thamruicong"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"thamruicong"},"content":"    public Task build() {","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"thamruicong"},"content":"        return new Task(title, description);","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":52}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"zzthian"},"content":"     * Returns the middle index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"zzthian"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size() / 2);","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"zzthian"},"content":"     * Returns the last index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"zzthian"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"zzthian"},"content":"     * Returns the student in the {@code model}\u0027s student list at {@code index}.","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"zzthian"},"content":"    public static Student getStudent(Model model, Index index) {","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"zzthian"},"content":"        return model.getFilteredStudentList().get(index.getZeroBased());","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zzthian":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"zzthian"},"content":"    public static final Index INDEX_FIRST_STUDENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"zzthian"},"content":"    public static final Index INDEX_SECOND_STUDENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"zzthian"},"content":"    public static final Index INDEX_THIRD_STUDENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"thamruicong":3,"zzthian":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalStudents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLASS_GROUP_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"gowribhat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLASS_GROUP_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_AMY;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"zzthian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENTID_BOB;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"zzthian"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"zzthian"},"content":" * A utility class containing a list of {@code Student} objects to be used in tests.","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"zzthian"},"content":"public class TypicalStudents {","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"zzthian"},"content":"    public static final Student ALICE \u003d new StudentBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"zzthian"},"content":"            .withStudentId(\"e0123456\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"gowribhat"},"content":"            .withPhone(\"94351253\").withClassGroup(\"CS2030 Lab 2\")","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Evande1"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Evande1"},"content":"            .withAttendanceList(\"CS2030\", \"0\")","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"Evande1"},"content":"            .build();","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"zzthian"},"content":"    public static final Student BENSON \u003d new StudentBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"gowribhat"},"content":"            .withStudentId(\"e0354264\").withClassGroup(\"CS2040 Tutorial 32\")","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Evande1"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"Evande1"},"content":"            .withTags(\"owesMoney\", \"friends\").withAttendanceList(\"CS2040\", \"5\").build();","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"gowribhat"},"content":"    public static final Student CARL \u003d new StudentBuilder().withName(\"Carl Kurz\").withClassGroup(\"CS2030 Lab 2\")","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"gowribhat"},"content":"            .withPhone(\"95352563\").withEmail(\"heinz@example.com\").withStudentId(\"e0023682\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"gowribhat"},"content":"    public static final Student DANIEL \u003d new StudentBuilder().withName(\"Daniel Meier\").withClassGroup(\"CS2030 Lab 2\")","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"gowribhat"},"content":"            .withPhone(\"87652533\").withEmail(\"cornelia@example.com\")","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"gowribhat"},"content":"            .withStudentId(\"e0822195\").withTags(\"friends\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"zzthian"},"content":"    public static final Student ELLE \u003d new StudentBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"gowribhat"},"content":"            .withClassGroup(\"CS2040 Tutorial 32\").withEmail(\"werner@example.com\").withStudentId(\"e0747722\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"zzthian"},"content":"    public static final Student FIONA \u003d new StudentBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"gowribhat"},"content":"            .withClassGroup(\"CS2040 Tutorial 32\").withEmail(\"lydia@example.com\").withStudentId(\"e0792769\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"zzthian"},"content":"    public static final Student GEORGE \u003d new StudentBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"gowribhat"},"content":"            .withClassGroup(\"CS2040 Tutorial 32\").withEmail(\"anna@example.com\").withStudentId(\"e0121822\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":51,"author":{"gitId":"zzthian"},"content":"    public static final Student HOON \u003d new StudentBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"gowribhat"},"content":"            .withEmail(\"stefan@example.com\").withStudentId(\"e0565321\").withClassGroup(\"CS2103T Tutorial 15\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"zzthian"},"content":"    public static final Student IDA \u003d new StudentBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"gowribhat"},"content":"            .withEmail(\"hans@example.com\").withStudentId(\"e0565221\").withClassGroup(\"CS2103T Tutorial 15\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":56,"author":{"gitId":"zzthian"},"content":"    // Manually added - Student\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"zzthian"},"content":"    public static final Student AMY \u003d new StudentBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"gowribhat"},"content":"            .withEmail(VALID_EMAIL_AMY).withStudentId(VALID_STUDENTID_AMY).withClassGroup(VALID_CLASS_GROUP_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"gowribhat"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"zzthian"},"content":"    public static final Student BOB \u003d new StudentBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"gowribhat"},"content":"            .withEmail(VALID_EMAIL_BOB).withStudentId(VALID_STUDENTID_BOB).withClassGroup(VALID_CLASS_GROUP_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"gowribhat"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":66,"author":{"gitId":"zzthian"},"content":"    private TypicalStudents() {} // prevents instantiation","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"zzthian"},"content":"     * Returns an {@code AddressBook} with all the typical students.","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"zzthian"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"zzthian"},"content":"            ab.addStudent(student);","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":79,"author":{"gitId":"zzthian"},"content":"    public static List\u003cStudent\u003e getTypicalStudents() {","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"gowribhat":18,"zzthian":21,"Evande1":5,"-":38}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thamruicong"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"thamruicong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"thamruicong"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"thamruicong"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.TaskBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"thamruicong"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"thamruicong"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"thamruicong"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"thamruicong"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"thamruicong"},"content":"public class TypicalTasks {","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"thamruicong"},"content":"    public static final Task FIRST \u003d new TaskBuilder().withTitle(\"Grade assignments\")","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"thamruicong"},"content":"            .withDescription(\"Complete by tonight\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"thamruicong"},"content":"    public static final Task SECOND \u003d new TaskBuilder().withTitle(\"Prepare slides for studio\")","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"thamruicong"},"content":"            .withDescription(\"Topic Environment Model\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"thamruicong"},"content":"    public static final Task THIRD \u003d new TaskBuilder().withTitle(\"Review CS1101S topics with Adam\")","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"thamruicong"},"content":"            .withDescription(\"Essence of Recursion\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"thamruicong"},"content":"    public static final Task FOURTH \u003d new TaskBuilder().withTitle(\"Collect robot\")","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"thamruicong"},"content":"            .withDescription(\"At MakersLab\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"thamruicong"},"content":"    public static final Task FIFTH \u003d new TaskBuilder().withTitle(\"Go through tutorial sheet\")","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"thamruicong"},"content":"            .withDescription(\"By this friday\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"thamruicong"},"content":"    private TypicalTasks() {}","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"thamruicong"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"thamruicong"},"content":"     * Returns a {@code TaskBook} with all the typical tasks.","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"thamruicong"},"content":"     * @return","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"thamruicong"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"thamruicong"},"content":"    public static TaskBook getTypicalTaskBook() {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"thamruicong"},"content":"        TaskBook tb \u003d new TaskBook();","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"thamruicong"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"thamruicong"},"content":"            tb.addTask(task);","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"thamruicong"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"thamruicong"},"content":"        return tb;","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"thamruicong"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"thamruicong"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"thamruicong"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(FIRST, SECOND, THIRD, FOURTH, FIFTH));","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"thamruicong"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"thamruicong"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"thamruicong":43}}]
