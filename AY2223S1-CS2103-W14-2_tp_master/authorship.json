[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MinHeinA"},"content":"# **FoodWhere**","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103-W14-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103-W14-2/tp/actions)","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"MinHeinA"},"content":"FoodWhere (FW) is a desktop app for managing food reviews, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). FW can get your tasks done faster than traditional GUI apps if you can type fast.\u003cbr\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"MinHeinA"},"content":"**Example usages:**","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"MinHeinA"},"content":"  * add food stalls","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"MinHeinA"},"content":"  * add reviews for food stalls","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"MinHeinA"},"content":"  * list all food stalls stored in FoodWhere","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"MinHeinA"},"content":"  * list all reviews stored in FoodWhere","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"For more information on how to start using the application, check out the [User Guide](https://AY2223S1-CS2103-W14-2.github.io/tp/UserGuide.html)","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"MinHeinA"},"content":"**Acknowledgement**","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"MinHeinA"},"content":"   * This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"MinHeinA":12,"Hikoya":2,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"run {","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"mainClassName \u003d \u0027foodwhere.Main\u0027","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"Hikoya"},"content":"    archiveFileName \u003d \u0027foodwhere.jar\u0027","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Hikoya":6,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"### Chan Chung Loong","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"\u003cimg src\u003d\"images/hikoya.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"[[github](https://github.com/hikoya)]","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"[[portfolio](team/hikoya.md)]","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"* Role: Deliverables and Scheduling","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"* Responsibilities: User Interface","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"### Clarence Chew Xuan Da","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"\u003cimg src\u003d\"images/clarence-chew.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"[[github](http://github.com/clarence-chew)]","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"[[portfolio](team/clarence-chew.md)]","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"* Role: Documentation","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"* Responsibilities: Storage","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"### Jamie Tan Wei-Xuan","lastModifiedDate":"2022-09-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"\u003cimg src\u003d\"images/jamietan2002.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"[[github](http://github.com/jamietan2002)]","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"jamietan2002"},"content":"[[portfolio](team/jamietan2002.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":39,"author":{"gitId":"jamietan2002"},"content":"* Role: Code Quality and Integration","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"jamietan2002"},"content":"* Responsibilities: Main Logic (Command Parsing)","lastModifiedDate":"2022-09-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":42,"author":{"gitId":"LikHern"},"content":"### Low Lik Hern","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"LikHern"},"content":"\u003cimg src\u003d\"images/likhern.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":46,"author":{"gitId":"LikHern"},"content":"[[github](http://github.com/likhern)]","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"LikHern"},"content":"[[portfolio](team/likhern.md)]","lastModifiedDate":"2022-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":49,"author":{"gitId":"LikHern"},"content":"* Role: Testing","lastModifiedDate":"2022-09-25"},{"lineNumber":50,"author":{"gitId":"LikHern"},"content":"* Responsibilities: Data","lastModifiedDate":"2022-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":52,"author":{"gitId":"MinHeinA"},"content":"### Min Hein Aung","lastModifiedDate":"2022-09-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"MinHeinA"},"content":"\u003cimg src\u003d\"images/minheina.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"MinHeinA"},"content":"[[github](http://github.com/minheina)]","lastModifiedDate":"2022-09-20"},{"lineNumber":57,"author":{"gitId":"MinHeinA"},"content":"[[portfolio](team/minheina.md)]","lastModifiedDate":"2022-09-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"MinHeinA"},"content":"* Role: Team Lead","lastModifiedDate":"2022-09-20"},{"lineNumber":60,"author":{"gitId":"MinHeinA"},"content":"* Responsibilities: Component Logic","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"MinHeinA":6,"LikHern":6,"clarence-chew":6,"Hikoya":7,"-":30,"jamietan2002":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S1-CS2103-W14-2/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S1-CS2103-W14-2/tp/blob/master/src/main/java/foodwhere/Main.java) and [`MainApp`](https://github.com/AY2223S1-CS2103-W14-2/tp/blob/master/src/main/java/foodwhere/MainApp.java). It is responsible for,","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `sdel 1`.","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"clarence-chew"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S1-CS2103-W14-2/tp/blob/master/src/main/java/foodwhere/ui/Ui.java)","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"Hikoya"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `StallListPanel`, `ReviewListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"clarence-chew"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S1-CS2103-W14-2/tp/blob/master/src/main/java/foodwhere/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S1-CS2103-W14-2/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-10-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"Hikoya"},"content":"* depends on some classes in the `Model` component, as it displays `Stall` object residing in the `Model`.","lastModifiedDate":"2022-10-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"clarence-chew"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S1-CS2103-W14-2/tp/blob/master/src/main/java/foodwhere/logic/Logic.java)","lastModifiedDate":"2022-10-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"jamietan2002"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `RAddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"jamietan2002"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a review).","lastModifiedDate":"2022-10-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"jamietan2002"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `RAddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `RAddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2022-10-17"},{"lineNumber":113,"author":{"gitId":"jamietan2002"},"content":"* All `XYZCommandParser` classes (e.g., `RAddCommandParser`, `RDeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"clarence-chew"},"content":"**API** : [`Model.java`](https://github.com/AY2223S1-CS2103-W14-2/tp/blob/master/src/main/java/foodwhere/model/Model.java)","lastModifiedDate":"2022-10-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"LikHern"},"content":"* stores the address book data i.e., all `Stall` objects (which are contained in a `UniqueStallList` object) and all `Review` objects (which are contained in a `UniqueReviewList` object).","lastModifiedDate":"2022-10-18"},{"lineNumber":124,"author":{"gitId":"LikHern"},"content":"* stores the currently \u0027selected\u0027 `Stall` and `Review` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cStall\u003e` and `ObservableList\u003cReview\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-10-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"MinHeinA"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Stall` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Stall` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"clarence-chew"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S1-CS2103-W14-2/tp/blob/master/src/main/java/foodwhere/storage/Storage.java)","lastModifiedDate":"2022-10-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"clarence-chew"},"content":"Classes used by multiple components are in the `foodwhere.commons` package.","lastModifiedDate":"2022-10-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"Hikoya"},"content":"### **Review Components**","lastModifiedDate":"2022-10-18"},{"lineNumber":157,"author":{"gitId":"Hikoya"},"content":"* Added Classes into the model Component to encapsulate a Review","lastModifiedDate":"2022-10-18"},{"lineNumber":158,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":159,"author":{"gitId":"Hikoya"},"content":"#### **Implementation**","lastModifiedDate":"2022-10-18"},{"lineNumber":160,"author":{"gitId":"Hikoya"},"content":"\u003cimg src\u003d\"images/ModelReviewClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":161,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":162,"author":{"gitId":"Hikoya"},"content":"A `Review`,","lastModifiedDate":"2022-10-18"},{"lineNumber":163,"author":{"gitId":"Hikoya"},"content":"- is stored in `uniqueReviewList` of the Model","lastModifiedDate":"2022-10-18"},{"lineNumber":164,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":165,"author":{"gitId":"Hikoya"},"content":"A `Review` contains the following attributes,","lastModifiedDate":"2022-10-18"},{"lineNumber":166,"author":{"gitId":"Hikoya"},"content":"1. a `Name`, which represent the name of the Stall associated with the Review","lastModifiedDate":"2022-10-18"},{"lineNumber":167,"author":{"gitId":"Hikoya"},"content":"2. a `Date`, which represent the day, month and year as specified in `DD/MM/YYYY` format","lastModifiedDate":"2022-10-18"},{"lineNumber":168,"author":{"gitId":"Hikoya"},"content":"3. a `Content`, which represent the review of the Stall by the user","lastModifiedDate":"2022-10-18"},{"lineNumber":169,"author":{"gitId":"Hikoya"},"content":"4. a `Rating`, which represent the rating of the Stall from 0 to 5 inclusive","lastModifiedDate":"2022-10-18"},{"lineNumber":170,"author":{"gitId":"Hikoya"},"content":"5. can be assigned to a single `Stall`","lastModifiedDate":"2022-10-18"},{"lineNumber":171,"author":{"gitId":"Hikoya"},"content":"6. can be assigned multiple `Tags`","lastModifiedDate":"2022-10-18"},{"lineNumber":172,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":173,"author":{"gitId":"Hikoya"},"content":"#### Design considerations:","lastModifiedDate":"2022-10-18"},{"lineNumber":174,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":175,"author":{"gitId":"Hikoya"},"content":"#### Aspect: How the components within Review are added or changed","lastModifiedDate":"2022-10-18"},{"lineNumber":176,"author":{"gitId":"Hikoya"},"content":"- **Current Choice**: Attributes within `Review` are immutable, meaning that if there is an attribute that has to be edited, a new `Review` object has to be created.","lastModifiedDate":"2022-10-18"},{"lineNumber":177,"author":{"gitId":"Hikoya"},"content":"    * Pros: Concept of Immutability is met, making the code less prone to bugs as all components of a `Review` object are fixed","lastModifiedDate":"2022-10-18"},{"lineNumber":178,"author":{"gitId":"Hikoya"},"content":"    * Cons: Less flexible, more steps needed in editing `Review` objects","lastModifiedDate":"2022-10-18"},{"lineNumber":179,"author":{"gitId":"Hikoya"},"content":"- Alternative 1: Allow certain components within `Review`, like `Date` and `Content`to be mutable","lastModifiedDate":"2022-10-18"},{"lineNumber":180,"author":{"gitId":"Hikoya"},"content":"    * Pros: Less overhead as fewer objects are created","lastModifiedDate":"2022-10-18"},{"lineNumber":181,"author":{"gitId":"Hikoya"},"content":"    * Cons: Prone to error as a Component might not be correctly changed","lastModifiedDate":"2022-10-18"},{"lineNumber":182,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":183,"author":{"gitId":"MinHeinA"},"content":"### Review Adding feature","lastModifiedDate":"2022-10-18"},{"lineNumber":184,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":185,"author":{"gitId":"MinHeinA"},"content":"#### What is Review Adding feature about?","lastModifiedDate":"2022-10-18"},{"lineNumber":186,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":187,"author":{"gitId":"MinHeinA"},"content":"The Add Review mechanism is facilitated by `AddressBook`. This feature enhances `AddressBook` by allowing to store not only `Stall`, but also `Review`. This is stored internally as a `UniqueStallList` and `UniqueReviewList`. `Review` requires a `Stall` as `Review` is stored in `Stall`. Additionally, the feature implements the following operations:","lastModifiedDate":"2022-10-18"},{"lineNumber":188,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":189,"author":{"gitId":"MinHeinA"},"content":"* `AddressBook#addReview(Review)` —  Adds the `Review` to `UniqueReviewList`","lastModifiedDate":"2022-10-18"},{"lineNumber":190,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":191,"author":{"gitId":"MinHeinA"},"content":"For the command, the feature extends `command`, and is implemented as such:","lastModifiedDate":"2022-10-18"},{"lineNumber":192,"author":{"gitId":"MinHeinA"},"content":"* `radd s/STALL_INDEX d/DATE c/CONTENT r/RATING [t/TAGS]…`","lastModifiedDate":"2022-10-18"},{"lineNumber":193,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":194,"author":{"gitId":"MinHeinA"},"content":"#### Implementation Flow of Review Adding feature","lastModifiedDate":"2022-10-18"},{"lineNumber":195,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":196,"author":{"gitId":"MinHeinA"},"content":"Given below is an example usage scenario and how the Review adding mechanism behaves at each step.","lastModifiedDate":"2022-10-18"},{"lineNumber":197,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":198,"author":{"gitId":"MinHeinA"},"content":"Note: FoodWhere comes with preloaded data, and can be started on a fresh state with the `clear` command.","lastModifiedDate":"2022-10-18"},{"lineNumber":199,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":200,"author":{"gitId":"MinHeinA"},"content":"Step 1. The user launches the application for the first time. FoodWhere will be initialized with the preloaded data.","lastModifiedDate":"2022-10-18"},{"lineNumber":201,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":202,"author":{"gitId":"MinHeinA"},"content":"Step 2. The user executes `radd s/1 d/20-09-2022 c/The food was good, the chicken rice was fresh. r/4` command to create a new `Review` for `Stall` with index 1.","lastModifiedDate":"2022-10-18"},{"lineNumber":203,"author":{"gitId":"MinHeinA"},"content":"![AddTodo1](images/AddReview.png)","lastModifiedDate":"2022-10-18"},{"lineNumber":204,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":205,"author":{"gitId":"MinHeinA"},"content":"#### UML Diagram for Adding Review","lastModifiedDate":"2022-10-18"},{"lineNumber":206,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":207,"author":{"gitId":"MinHeinA"},"content":"The following activity diagram summarizes what happens when a user executes a new `radd` command:","lastModifiedDate":"2022-10-18"},{"lineNumber":208,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":209,"author":{"gitId":"MinHeinA"},"content":"\u003cimg src\u003d\"images/AddReviewActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":210,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":211,"author":{"gitId":"MinHeinA"},"content":"#### Design considerations:","lastModifiedDate":"2022-10-18"},{"lineNumber":212,"author":{"gitId":"MinHeinA"},"content":"- The Review adding commands are straight-to-the-point and efficient for users to add Review for Stall in FoodWhere.","lastModifiedDate":"2022-10-18"},{"lineNumber":213,"author":{"gitId":"MinHeinA"},"content":"- The prefixes allow users to understand what the different types of data fields Review need in order to be created.","lastModifiedDate":"2022-10-18"},{"lineNumber":214,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":215,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"MinHeinA"},"content":"Step 2. The user executes `delete 5` command to delete the 5th stall in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2022-10-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"MinHeinA"},"content":"Step 3. The user executes `add n/David …​` to add a new stall. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2022-10-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"MinHeinA"},"content":"Step 4. The user now decides that adding the stall was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2022-10-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"clarence-chew"},"content":"* **Alternative 1:** Saves the entire address book.","lastModifiedDate":"2022-10-18"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"MinHeinA"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the stall being deleted).","lastModifiedDate":"2022-10-05"},{"lineNumber":292,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"clarence-chew"},"content":"* **Alternative 3 (current choice):** Saves the entire address book, but ensuring that Stall and Review are both immutable.","lastModifiedDate":"2022-10-18"},{"lineNumber":295,"author":{"gitId":"clarence-chew"},"content":"  * Pros: Easy to implement, performance issues for memory are not too bad.","lastModifiedDate":"2022-10-18"},{"lineNumber":296,"author":{"gitId":"clarence-chew"},"content":"  * Cons: This needs Stall and Review to be guaranteed immutable, alongside all their parts. Good test cases are a must.","lastModifiedDate":"2022-10-18"},{"lineNumber":297,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":309,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":310,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":312,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"Hikoya"},"content":"* Food critics want to keep track of all the food stalls and reviews given","lastModifiedDate":"2022-09-24"},{"lineNumber":323,"author":{"gitId":"Hikoya"},"content":"* has a need to manage a significant number of food stalls and reviews","lastModifiedDate":"2022-09-24"},{"lineNumber":324,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":327,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"Hikoya"},"content":"* needs a local database to store all information","lastModifiedDate":"2022-09-24"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"Hikoya"},"content":"**Value proposition**:","lastModifiedDate":"2022-09-24"},{"lineNumber":331,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":332,"author":{"gitId":"Hikoya"},"content":"* An application to show all the food stalls and reviews given to the particular stalls","lastModifiedDate":"2022-09-24"},{"lineNumber":333,"author":{"gitId":"Hikoya"},"content":"* Commands are typed using command line","lastModifiedDate":"2022-09-24"},{"lineNumber":334,"author":{"gitId":"Hikoya"},"content":"* Manage stalls faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-09-24"},{"lineNumber":335,"author":{"gitId":"Hikoya"},"content":"* All stalls/reviews created are stored in the local database","lastModifiedDate":"2022-09-24"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"| Priority | As a …​                             | I want to …​                                                                                                                 | So that I can…​                                                                                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"Hikoya"},"content":"|----------|-------------------------------------|------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-10"},{"lineNumber":344,"author":{"gitId":"Hikoya"},"content":"| `* * *`  | user                                | create reviews for a food stall                                                                                              | record which food stall that I have visited have nice food                                                                                             |","lastModifiedDate":"2022-09-24"},{"lineNumber":345,"author":{"gitId":"Hikoya"},"content":"| `* * *`  | user                                | view reviews for a food stall                                                                                                | easily find out the best food I have eaten                                                                                                             |","lastModifiedDate":"2022-09-24"},{"lineNumber":346,"author":{"gitId":"Hikoya"},"content":"| `* * *`  | user                                | delete review for food stall                                                                                                 | delete any erroneous entries I have made                                                                                                               |","lastModifiedDate":"2022-09-24"},{"lineNumber":347,"author":{"gitId":"Hikoya"},"content":"| `* *`    | user                                | modify details of review for food stall                                                                                      | rectify any erroneous details in the entry                                                                                                             |","lastModifiedDate":"2022-09-24"},{"lineNumber":348,"author":{"gitId":"Hikoya"},"content":"| `* * *`  | user                                | list out food stall                                                                                                          | have a overview of the food stalls I have been to                                                                                                      |","lastModifiedDate":"2022-09-24"},{"lineNumber":349,"author":{"gitId":"Hikoya"},"content":"| `* *`    | user                                | list out food stall according from high to low reviews                                                                       | see the top few food stall                                                                                                                             |","lastModifiedDate":"2022-09-24"},{"lineNumber":350,"author":{"gitId":"Hikoya"},"content":"| `* * *`  | user                                | find food stall by substring match name                                                                                      | find the exact food stall I am interested in                                                                                                           |","lastModifiedDate":"2022-09-24"},{"lineNumber":351,"author":{"gitId":"Hikoya"},"content":"| `*`      | user                                | find food stall by approximate name                                                                                          | find the exact food stall I am interested in even when I’m not very sure about the stall name                                                          |","lastModifiedDate":"2022-09-24"},{"lineNumber":352,"author":{"gitId":"Hikoya"},"content":"| `*`      | user                                | tag a food stall with a tag                                                                                                  | categorize food stalls effectively                                                                                                                     |","lastModifiedDate":"2022-09-24"},{"lineNumber":353,"author":{"gitId":"Hikoya"},"content":"| `*`      | user                                | list out food place according to given tag                                                                                   | get an overview of the food place with the tag i am interested in                                                                                      |","lastModifiedDate":"2022-09-24"},{"lineNumber":354,"author":{"gitId":"Hikoya"},"content":"| `*`      | user                                | include photo along with the review                                                                                          | easily identify which photo belongs to which stall and upload them to social media                                                                     |","lastModifiedDate":"2022-09-24"},{"lineNumber":355,"author":{"gitId":"Hikoya"},"content":"| `* * *`  | user                                | purge existing data                                                                                                          | get rid of any sample data                                                                                                                             |","lastModifiedDate":"2022-09-24"},{"lineNumber":356,"author":{"gitId":"Hikoya"},"content":"| `* * *`  | user                                | add food stall addresses                                                                                                     | add a new location I can review                                                                                                                        |","lastModifiedDate":"2022-09-24"},{"lineNumber":357,"author":{"gitId":"Hikoya"},"content":"| `* * *`  | user                                | delete food stall addresses                                                                                                  | remove a stall when it closes                                                                                                                          |","lastModifiedDate":"2022-09-24"},{"lineNumber":358,"author":{"gitId":"Hikoya"},"content":"| `* * *`  | new user                            | see the application populated with sample data                                                                               | view what the app should look like                                                                                                                     |","lastModifiedDate":"2022-09-24"},{"lineNumber":359,"author":{"gitId":"Hikoya"},"content":"| `* *`    | user                                | modify the address of a place/food stall                                                                                     | update when a hawker moves to a different place                                                                                                        |","lastModifiedDate":"2022-09-24"},{"lineNumber":360,"author":{"gitId":"Hikoya"},"content":"| `*`      | user                                | find places close to my current location                                                                                     | choose where to go next effectively                                                                                                                    |","lastModifiedDate":"2022-09-24"},{"lineNumber":361,"author":{"gitId":"Hikoya"},"content":"| `*`      | user                                | store individual food ratings of a place                                                                                     | see which food I have reviewed from a place                                                                                                            |","lastModifiedDate":"2022-09-24"},{"lineNumber":362,"author":{"gitId":"Hikoya"},"content":"| `*`      | user                                | search food places by food type                                                                                              | organize my work to sure variety in food type in my reviews (for example, same/different types of food in the same review or to facilitate comparison) |","lastModifiedDate":"2022-09-24"},{"lineNumber":363,"author":{"gitId":"Hikoya"},"content":"| `*`      | user                                | send the reviews through other social media platforms                                                                        | share the review with my friends without having to make separate posts                                                                                 |","lastModifiedDate":"2022-09-24"},{"lineNumber":364,"author":{"gitId":"Hikoya"},"content":"| `* * *`  | user                                | include a date/day on my reviews                                                                                             | track how much reviewing I have done over time                                                                                                         |","lastModifiedDate":"2022-09-24"},{"lineNumber":365,"author":{"gitId":"Hikoya"},"content":"| `*`      | user                                | see review that are most recent (sorting)                                                                                    | get the most updated review                                                                                                                            |","lastModifiedDate":"2022-09-24"},{"lineNumber":366,"author":{"gitId":"Hikoya"},"content":"| `*`      | user                                | archive existing stalls / review                                                                                             | not be distracted by previous reviews made                                                                                                             |","lastModifiedDate":"2022-09-24"},{"lineNumber":367,"author":{"gitId":"Hikoya"},"content":"| `* * *`  | new user                            | check out what tools are available in this application                                                                       | learn how to use the application                                                                                                                       |","lastModifiedDate":"2022-09-24"},{"lineNumber":368,"author":{"gitId":"MinHeinA"},"content":"| `* * *`  | user helping another stall, eg. Bob | import data                                                                                                                  | get existing lists from Bob to work on                                                                                                                 |","lastModifiedDate":"2022-10-05"},{"lineNumber":369,"author":{"gitId":"Hikoya"},"content":"| `* * *`  | user                                | export data                                                                                                                  | archive my data entries somewhere else                                                                                                                 |","lastModifiedDate":"2022-09-24"},{"lineNumber":370,"author":{"gitId":"Hikoya"},"content":"| `*`      | user                                | set a deadline to review a particular stall                                                                                  | remind myself to complete the task                                                                                                                     |","lastModifiedDate":"2022-09-24"},{"lineNumber":371,"author":{"gitId":"Hikoya"},"content":"| `*`      | experienced user                    | see statistics of total number of reviews or stalls created                                                                  | keep track of my performance and targets for the year                                                                                                  |","lastModifiedDate":"2022-09-24"},{"lineNumber":372,"author":{"gitId":"Hikoya"},"content":"| `*`      | user                                | include custom rating metrics on my review (star system? Health benefits?)                                                   | be more nuanced on my review                                                                                                                           |","lastModifiedDate":"2022-09-24"},{"lineNumber":373,"author":{"gitId":"Hikoya"},"content":"| `* * *`  | user                                | include stall opening and closing times                                                                                      | plan my schedule on when to visit the stall accordingly                                                                                                |","lastModifiedDate":"2022-09-24"},{"lineNumber":374,"author":{"gitId":"Hikoya"},"content":"| `*`      | impatient user                      | manage over 1000 stalls and reviews in reasonable time                                                                       | minimize my waiting time                                                                                                                               |","lastModifiedDate":"2022-09-24"},{"lineNumber":375,"author":{"gitId":"Hikoya"},"content":"| `*`      | impatient user                      | open the app quickly                                                                                                         | not wait so long                                                                                                                                       |","lastModifiedDate":"2022-09-24"},{"lineNumber":376,"author":{"gitId":"Hikoya"},"content":"| `*`      | impatient user                      | get a visualisation for any loading times                                                                                    | know how long I need to wait                                                                                                                           |","lastModifiedDate":"2022-09-24"},{"lineNumber":377,"author":{"gitId":"Hikoya"},"content":"| `* *`    | user                                | search for past reviews by substring                                                                                         | see places I’ve been to before                                                                                                                         |","lastModifiedDate":"2022-09-24"},{"lineNumber":378,"author":{"gitId":"Hikoya"},"content":"| `* *`    | user                                | filter for past reviews by stall                                                                                             | see places I’ve been to before                                                                                                                         |","lastModifiedDate":"2022-09-24"},{"lineNumber":379,"author":{"gitId":"Hikoya"},"content":"| `*`      | advanced user                       | add command aliases                                                                                                          | speed up my workflow                                                                                                                                   |","lastModifiedDate":"2022-09-24"},{"lineNumber":380,"author":{"gitId":"Hikoya"},"content":"| `*`      | user                                | plan my social media posting schedule of my current reviews \u003cbr/\u003e (i.e. I want to post about this stall at this future date) | manage my social media presence                                                                                                                        |                                                                                                                                                     ","lastModifiedDate":"2022-09-24"},{"lineNumber":381,"author":{"gitId":"Hikoya"},"content":"| `*`      | advanced user                       | access data files in csv format                                                                                              | modify the data files used in the app programmatically to do custom things                                                                             |","lastModifiedDate":"2022-09-24"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"Hikoya"},"content":"\u003e Definition:","lastModifiedDate":"2022-09-24"},{"lineNumber":386,"author":{"gitId":"Hikoya"},"content":"\u003e - For all use cases below, the **System** is `FoodWhere` and the **Actor** is the `User`, unless specified otherwise.","lastModifiedDate":"2022-09-24"},{"lineNumber":387,"author":{"gitId":"Hikoya"},"content":"\u003e - More specifically, the `User` are **Food Critics**.","lastModifiedDate":"2022-09-24"},{"lineNumber":388,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":389,"author":{"gitId":"Hikoya"},"content":"\u003e Guarantees:","lastModifiedDate":"2022-09-24"},{"lineNumber":390,"author":{"gitId":"Hikoya"},"content":"\u003e - For any use cases below that changes any data, FoodWhere will guarantee that the data is updated and saved.","lastModifiedDate":"2022-09-24"},{"lineNumber":391,"author":{"gitId":"Hikoya"},"content":"****","lastModifiedDate":"2022-09-24"},{"lineNumber":392,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":393,"author":{"gitId":"Hikoya"},"content":"**Use case 1: Add a food stall**","lastModifiedDate":"2022-09-24"},{"lineNumber":394,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":395,"author":{"gitId":"Hikoya"},"content":"**MSS**","lastModifiedDate":"2022-09-24"},{"lineNumber":396,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":397,"author":{"gitId":"MinHeinA"},"content":"1. User starts FoodWhere.","lastModifiedDate":"2022-09-24"},{"lineNumber":398,"author":{"gitId":"MinHeinA"},"content":"2. User requests to add a stall through an appropriate command.","lastModifiedDate":"2022-09-24"},{"lineNumber":399,"author":{"gitId":"MinHeinA"},"content":"3. FoodWhere adds the stall and confirms with a success message that the stall is added.","lastModifiedDate":"2022-09-24"},{"lineNumber":400,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":401,"author":{"gitId":"Hikoya"},"content":"   Use case ends.","lastModifiedDate":"2022-09-24"},{"lineNumber":402,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":403,"author":{"gitId":"Hikoya"},"content":"**Extensions**","lastModifiedDate":"2022-09-24"},{"lineNumber":404,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":405,"author":{"gitId":"Hikoya"},"content":"* 2a. User issues the correct command with the wrong syntax.","lastModifiedDate":"2022-10-06"},{"lineNumber":406,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":407,"author":{"gitId":"Hikoya"},"content":"    * 2a1. FoodWhere sends an error message to the User, indicating that the syntax is incorrect,","lastModifiedDate":"2022-10-06"},{"lineNumber":408,"author":{"gitId":"MinHeinA"},"content":"      and attaches the correct syntax format in the message.","lastModifiedDate":"2022-09-24"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":410,"author":{"gitId":"Hikoya"},"content":"      Use case ends.","lastModifiedDate":"2022-09-24"},{"lineNumber":411,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":412,"author":{"gitId":"Hikoya"},"content":"****","lastModifiedDate":"2022-09-24"},{"lineNumber":413,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":414,"author":{"gitId":"Hikoya"},"content":"**Use case 2: Add a food review**","lastModifiedDate":"2022-09-24"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":416,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-09-24"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":418,"author":{"gitId":"MinHeinA"},"content":"1. User starts FoodWhere.","lastModifiedDate":"2022-09-24"},{"lineNumber":419,"author":{"gitId":"MinHeinA"},"content":"2. User requests to add a review through an appropriate command.","lastModifiedDate":"2022-09-24"},{"lineNumber":420,"author":{"gitId":"MinHeinA"},"content":"3. FoodWhere adds the review and confirms with a success message that the review is added.","lastModifiedDate":"2022-09-24"},{"lineNumber":421,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":422,"author":{"gitId":"Hikoya"},"content":"   Use case ends.","lastModifiedDate":"2022-09-24"},{"lineNumber":423,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":424,"author":{"gitId":"Hikoya"},"content":"**Extensions**","lastModifiedDate":"2022-09-24"},{"lineNumber":425,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":426,"author":{"gitId":"Hikoya"},"content":"* 2a. User issues the correct command with the wrong syntax","lastModifiedDate":"2022-10-06"},{"lineNumber":427,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":428,"author":{"gitId":"Hikoya"},"content":"    * 2a1. FoodWhere sends an error message to the User, indicating that the syntax is incorrect, and attaches the correct syntax format in the message.","lastModifiedDate":"2022-10-06"},{"lineNumber":429,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":430,"author":{"gitId":"Hikoya"},"content":"      Use case ends.","lastModifiedDate":"2022-09-24"},{"lineNumber":431,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":432,"author":{"gitId":"Hikoya"},"content":"****","lastModifiedDate":"2022-09-24"},{"lineNumber":433,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":434,"author":{"gitId":"Hikoya"},"content":"**Use case 3: Delete a food stall**","lastModifiedDate":"2022-09-24"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"MinHeinA"},"content":"1. User starts FoodWhere.","lastModifiedDate":"2022-09-24"},{"lineNumber":439,"author":{"gitId":"MinHeinA"},"content":"2. User requests to delete a stall through an appropriate command.","lastModifiedDate":"2022-09-24"},{"lineNumber":440,"author":{"gitId":"MinHeinA"},"content":"3. FoodWhere deletes the stall and confirms with a success message that the stall is deleted.","lastModifiedDate":"2022-09-24"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"Hikoya"},"content":"* 2a. FoodWhere detects an error in the entered data. (Invalid index)","lastModifiedDate":"2022-09-24"},{"lineNumber":447,"author":{"gitId":"Hikoya"},"content":"    * 2a1. FoodWhere sends an error message to the User, indicating the index used for the delete","lastModifiedDate":"2022-10-06"},{"lineNumber":448,"author":{"gitId":"Hikoya"},"content":"      command is incorrect, and attaches the correct syntax format in the message.","lastModifiedDate":"2022-10-06"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"Hikoya"},"content":"****","lastModifiedDate":"2022-09-24"},{"lineNumber":453,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":454,"author":{"gitId":"Hikoya"},"content":"**Use case 4: Delete a food review**","lastModifiedDate":"2022-09-24"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"Hikoya"},"content":"**MSS**","lastModifiedDate":"2022-09-24"},{"lineNumber":457,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":458,"author":{"gitId":"MinHeinA"},"content":"1. User starts FoodWhere.","lastModifiedDate":"2022-09-24"},{"lineNumber":459,"author":{"gitId":"MinHeinA"},"content":"2. User requests to delete a review through an appropriate command.","lastModifiedDate":"2022-09-24"},{"lineNumber":460,"author":{"gitId":"MinHeinA"},"content":"3. FoodWhere deletes the review and confirms with a success message that the review is deleted.","lastModifiedDate":"2022-09-24"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"Hikoya"},"content":"   Use case ends.","lastModifiedDate":"2022-09-24"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"Hikoya"},"content":"**Extensions**","lastModifiedDate":"2022-09-24"},{"lineNumber":465,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":466,"author":{"gitId":"Hikoya"},"content":"* 2a. FoodWhere detects an error in the entered data. (Invalid index)","lastModifiedDate":"2022-09-24"},{"lineNumber":467,"author":{"gitId":"Hikoya"},"content":"    * 2a1. FoodWhere sends an error message to the User, indicating the index used for the delete","lastModifiedDate":"2022-10-06"},{"lineNumber":468,"author":{"gitId":"Hikoya"},"content":"      command is incorrect, and attaches the correct syntax format in the message.","lastModifiedDate":"2022-10-06"},{"lineNumber":469,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":470,"author":{"gitId":"Hikoya"},"content":"      Use case ends.","lastModifiedDate":"2022-09-24"},{"lineNumber":471,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":472,"author":{"gitId":"Hikoya"},"content":"****","lastModifiedDate":"2022-09-24"},{"lineNumber":473,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":474,"author":{"gitId":"MinHeinA"},"content":"**Use case 5: List food stalls**","lastModifiedDate":"2022-09-24"},{"lineNumber":475,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":476,"author":{"gitId":"MinHeinA"},"content":"**MSS**","lastModifiedDate":"2022-09-24"},{"lineNumber":477,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":478,"author":{"gitId":"MinHeinA"},"content":"1. User starts FoodWhere.","lastModifiedDate":"2022-09-24"},{"lineNumber":479,"author":{"gitId":"MinHeinA"},"content":"2. User enters the command to list food stalls.","lastModifiedDate":"2022-09-24"},{"lineNumber":480,"author":{"gitId":"MinHeinA"},"content":"3. FoodWhere displays all food stalls.","lastModifiedDate":"2022-09-24"},{"lineNumber":481,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":482,"author":{"gitId":"MinHeinA"},"content":"   Use case ends.","lastModifiedDate":"2022-09-24"},{"lineNumber":483,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":484,"author":{"gitId":"MinHeinA"},"content":"**Extensions**","lastModifiedDate":"2022-09-24"},{"lineNumber":485,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":486,"author":{"gitId":"MinHeinA"},"content":"* 2a. User uses list food stalls command with the wrong syntax.","lastModifiedDate":"2022-09-24"},{"lineNumber":487,"author":{"gitId":"Hikoya"},"content":"    * 2a1. FoodWhere sends an error message to the User, indicating that the syntax is incorrect, and attaches the correct syntax format in the message.","lastModifiedDate":"2022-10-06"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":489,"author":{"gitId":"MinHeinA"},"content":"      Use case ends.","lastModifiedDate":"2022-09-24"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":491,"author":{"gitId":"MinHeinA"},"content":"****","lastModifiedDate":"2022-09-24"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":493,"author":{"gitId":"MinHeinA"},"content":"**Use case 6: List food reviews**","lastModifiedDate":"2022-09-24"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":495,"author":{"gitId":"MinHeinA"},"content":"**MSS**","lastModifiedDate":"2022-09-24"},{"lineNumber":496,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":497,"author":{"gitId":"MinHeinA"},"content":"1. User starts FoodWhere.","lastModifiedDate":"2022-09-24"},{"lineNumber":498,"author":{"gitId":"MinHeinA"},"content":"2. User enters the command to list food reviews.","lastModifiedDate":"2022-09-24"},{"lineNumber":499,"author":{"gitId":"MinHeinA"},"content":"3. FoodWhere displays all food reviews.","lastModifiedDate":"2022-09-24"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":501,"author":{"gitId":"MinHeinA"},"content":"   Use case ends.","lastModifiedDate":"2022-09-24"},{"lineNumber":502,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":503,"author":{"gitId":"MinHeinA"},"content":"**Extensions**","lastModifiedDate":"2022-09-24"},{"lineNumber":504,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":505,"author":{"gitId":"MinHeinA"},"content":"* 2a. User uses list food reviews command with the wrong syntax.","lastModifiedDate":"2022-09-24"},{"lineNumber":506,"author":{"gitId":"Hikoya"},"content":"    * 2a1. FoodWhere sends an error message to the User, indicating that the syntax is incorrect, and attaches the correct syntax format in the message.","lastModifiedDate":"2022-10-06"},{"lineNumber":507,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":508,"author":{"gitId":"MinHeinA"},"content":"      Use case ends.","lastModifiedDate":"2022-09-24"},{"lineNumber":509,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":510,"author":{"gitId":"MinHeinA"},"content":"****","lastModifiedDate":"2022-09-24"},{"lineNumber":511,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":512,"author":{"gitId":"MinHeinA"},"content":"**Use case 7: Exiting the program**","lastModifiedDate":"2022-09-24"},{"lineNumber":513,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":514,"author":{"gitId":"Hikoya"},"content":"**Preconditions**","lastModifiedDate":"2022-09-24"},{"lineNumber":515,"author":{"gitId":"MinHeinA"},"content":"- User is currently using FoodWhere.","lastModifiedDate":"2022-09-24"},{"lineNumber":516,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":517,"author":{"gitId":"Hikoya"},"content":"**MSS**","lastModifiedDate":"2022-09-24"},{"lineNumber":518,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":519,"author":{"gitId":"Hikoya"},"content":"1. User enters a command to exit FoodWhere.","lastModifiedDate":"2022-09-24"},{"lineNumber":520,"author":{"gitId":"Hikoya"},"content":"2. FoodWhere saves all changes to disk and closes.","lastModifiedDate":"2022-09-24"},{"lineNumber":521,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":522,"author":{"gitId":"Hikoya"},"content":"   Use case ends.","lastModifiedDate":"2022-09-24"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"Hikoya"},"content":"****","lastModifiedDate":"2022-09-24"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":526,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"clarence-chew"},"content":"#### Data Requirements","lastModifiedDate":"2022-09-24"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere should be released in a single JAR file which can run independently without installation.","lastModifiedDate":"2022-09-24"},{"lineNumber":531,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere\u0027s JAR file should be at most 100MB.","lastModifiedDate":"2022-09-24"},{"lineNumber":532,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere\u0027s documentation should be a static PDF.","lastModifiedDate":"2022-09-24"},{"lineNumber":533,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere\u0027s documentation should be at most 15MB per file.","lastModifiedDate":"2022-09-24"},{"lineNumber":534,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere\u0027s documentation should include appropriate UML diagrams.","lastModifiedDate":"2022-09-24"},{"lineNumber":535,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere\u0027s application data should be stored locally in human editable text files.","lastModifiedDate":"2022-09-24"},{"lineNumber":536,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere\u0027s application data should be stored in the directory containing the FoodWhere JAR file, or a subdirectory of the directory containing the FoodWhere JAR file.","lastModifiedDate":"2022-09-24"},{"lineNumber":537,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":538,"author":{"gitId":"clarence-chew"},"content":"#### Environment Requirements","lastModifiedDate":"2022-09-24"},{"lineNumber":539,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":540,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere should work on any _mainstream OS_ with Java `11` installed.","lastModifiedDate":"2022-09-24"},{"lineNumber":541,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere should work on both 32-bit and 64-bit environments.","lastModifiedDate":"2022-09-24"},{"lineNumber":542,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere should assume one local user.","lastModifiedDate":"2022-09-24"},{"lineNumber":543,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":544,"author":{"gitId":"clarence-chew"},"content":"#### Accessibility Requirements","lastModifiedDate":"2022-09-24"},{"lineNumber":545,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":546,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere\u0027s UI should not play audio.","lastModifiedDate":"2022-09-24"},{"lineNumber":547,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere should be usable without initializing a user account.","lastModifiedDate":"2022-09-24"},{"lineNumber":548,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere should be able to run completely locally on the device.","lastModifiedDate":"2022-09-24"},{"lineNumber":549,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere should be faster to use by solely typing (compared to a combination of typing and using the mouse) for a user with above average typing speed for regular English text.","lastModifiedDate":"2022-09-24"},{"lineNumber":550,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere\u0027s GUI should be optimal on standard screen resolutions 1920x1080 and higher, and for screen scales 100% and 125%.","lastModifiedDate":"2022-09-24"},{"lineNumber":551,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere\u0027s GUI should be usable for resolutions 1280x720 and higher, and for screen scale 150%.","lastModifiedDate":"2022-09-24"},{"lineNumber":552,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere\u0027s GUI should have enough information for a new user to start using after typing the `help` command.","lastModifiedDate":"2022-09-24"},{"lineNumber":553,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere should be developed in American English.","lastModifiedDate":"2022-09-24"},{"lineNumber":554,"author":{"gitId":"clarence-chew"},"content":"1.  All UI components in FoodWhere need to be recognisable by a user who has used GUIs before.","lastModifiedDate":"2022-09-24"},{"lineNumber":555,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere should not access other devices present on the system, such as a printer or a scanner.","lastModifiedDate":"2022-09-24"},{"lineNumber":556,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":557,"author":{"gitId":"clarence-chew"},"content":"#### Business/Domain Rules","lastModifiedDate":"2022-09-24"},{"lineNumber":558,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":559,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere stalls need to allow for the user to write multiple reviews on the stalls.","lastModifiedDate":"2022-09-24"},{"lineNumber":560,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":561,"author":{"gitId":"clarence-chew"},"content":"#### Performance Requirements","lastModifiedDate":"2022-09-24"},{"lineNumber":562,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":563,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere should hold up to 1000 stalls and 1000 reviews while handling each command in under 1 second.","lastModifiedDate":"2022-09-24"},{"lineNumber":564,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere\u0027s GUI should be functional within 5 seconds of starting, on reasonable device specifications.","lastModifiedDate":"2022-09-24"},{"lineNumber":565,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere should be closed within 5 seconds of termination, on reasonable device specifications.","lastModifiedDate":"2022-09-24"},{"lineNumber":566,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere\u0027s GUI should alert the user for any command that exceeds 5 seconds.","lastModifiedDate":"2022-09-24"},{"lineNumber":567,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":568,"author":{"gitId":"clarence-chew"},"content":"#### Fault Tolerance Requirements","lastModifiedDate":"2022-09-24"},{"lineNumber":569,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":570,"author":{"gitId":"clarence-chew"},"content":"1.  No ASCII text input for FoodWhere should terminate FoodWhere unexpectedly. An exception to this would be the `exit` command.","lastModifiedDate":"2022-09-24"},{"lineNumber":571,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere\u0027s application data should be saved after each successfully completed command.","lastModifiedDate":"2022-09-24"},{"lineNumber":572,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":573,"author":{"gitId":"clarence-chew"},"content":"#### Other Requirements","lastModifiedDate":"2022-09-24"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":575,"author":{"gitId":"clarence-chew"},"content":"1.  Images used in FoodWhere\u0027s UI need to adhere to copyright.","lastModifiedDate":"2022-09-24"},{"lineNumber":576,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere\u0027s codebase should be following the Object-oriented paradigm primarily.","lastModifiedDate":"2022-09-24"},{"lineNumber":577,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere\u0027s development must be strictly conducted under a framework where milestones must be met without delays and each milestone (v1.2, v1.3, v1.4) must have a usable product.","lastModifiedDate":"2022-09-24"},{"lineNumber":578,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere should be developed with respect to its very specific target user profile.","lastModifiedDate":"2022-09-24"},{"lineNumber":579,"author":{"gitId":"clarence-chew"},"content":"1.  FoodWhere should be developed in a team.","lastModifiedDate":"2022-09-24"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"jamietan2002"},"content":"* **User**: Refers to the food critic","lastModifiedDate":"2022-09-24"},{"lineNumber":585,"author":{"gitId":"jamietan2002"},"content":"* **Command**: Input by users that is within the Command List","lastModifiedDate":"2022-09-24"},{"lineNumber":586,"author":{"gitId":"jamietan2002"},"content":"* * **Review**: Refers to an entry for a particular food stall","lastModifiedDate":"2022-09-24"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"MinHeinA"},"content":"### Deleting a stall","lastModifiedDate":"2022-10-05"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"MinHeinA"},"content":"1. Deleting a stall while all stalls are being shown","lastModifiedDate":"2022-10-05"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"MinHeinA"},"content":"   1. Prerequisites: List all stalls using the `list` command. Multiple stalls in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"clarence-chew"},"content":"   1. Test case: `sdel 1`\u003cbr\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":623,"author":{"gitId":"clarence-chew"},"content":"      Expected: First stall is deleted from the list. Details of the deleted stall shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2022-10-18"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"clarence-chew"},"content":"   1. Test case: `sdel 0`\u003cbr\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":626,"author":{"gitId":"MinHeinA"},"content":"      Expected: No stall is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-10-05"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"clarence-chew"},"content":"   1. Other incorrect delete commands to try: `sdel`, `sdel x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":629,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"MinHeinA":89,"LikHern":2,"clarence-chew":66,"Hikoya":147,"-":328,"jamietan2002":7}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"   1. Run the `foodwhere.Main` and try a few commands.","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"Hikoya":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"   e.g. `foodwhere.commons.StringUtilTest`","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"   e.g. `foodwhere.StorageManagerTest`","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"   e.g. `foodwhere.LogicManagerTest`","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"Hikoya":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"FoodWhere (FW) is a **desktop app for managing food reviews, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). FW can get your tasks done faster than traditional GUI apps if you can type fast.","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"1. Download the latest `FoodWhere.jar` from [here](https://github.com/AY2223S1-CS2103-W14-2/tp/releases).","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your application.","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"1. On Windows and Mac, double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"   * **`slist`** : Lists all food stalls.","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"   * **`sadd`**`n/John Doe Eatery a/Blk 123 Bedok South t/halal`: Adds a food stall named John Doe Eatery to","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"     the list of food stalls.","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"   * **`sdel`**`3` : Deletes the 3rd food stall shown in the current list.","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"MinHeinA"},"content":"  e.g. in `sadd n/NAME a/ADDRESS`, `NAME` and `ADDRESS` are parameters which can be used as `sadd n/John Doe a/ABC Ave`.","lastModifiedDate":"2022-09-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"  e.g `n/NAME [t/TAGS]` can be used as `n/John Doe t/opensDaily` or as `n/John Doe`.","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"  e.g. `[t/TAGS]…​` can be used as ` ` (i.e. 0 times), `t/opendaily`, `t/petfriendly` etc.","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"  e.g. if the command specifies `n/NAME t/TAGS`, `t/TAGS n/NAME` is also acceptable.","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"  e.g. if you specify `n/John Doe Eatery n/Jane Doe Eatery`, only `n/Jane Doe Eatery` will be taken.","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"Hikoya"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"jamietan2002"},"content":"### Adding a stall: `sadd`","lastModifiedDate":"2022-09-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"jamietan2002"},"content":"Adds a stall.","lastModifiedDate":"2022-09-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"jamietan2002"},"content":"Format: `sadd n/NAME a/ADDRESS [t/TAGS]…`","lastModifiedDate":"2022-10-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"Hikoya"},"content":"* `sadd n/John Doe Eatery a/Blk 123 Bedok South t/VeryNice`","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"jamietan2002"},"content":"![sadd](images/sadd.png)","lastModifiedDate":"2022-09-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"jamietan2002"},"content":"### Adding a review: `radd`","lastModifiedDate":"2022-09-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"jamietan2002"},"content":"Adds a review.","lastModifiedDate":"2022-09-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"MinHeinA"},"content":"Format: `radd s/STALL_INDEX d/DATE c/CONTENT r/RATING [t/TAGS]…`","lastModifiedDate":"2022-10-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"MinHeinA"},"content":"* `radd s/3 d/2022-09-20 c/The food was good, the chicken rice was fresh. r/4`","lastModifiedDate":"2022-10-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"Hikoya"},"content":"### Listing all stalls: `slist`","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"Hikoya"},"content":"Shows a list of all stalls in the application.","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"jamietan2002"},"content":"Format: `slist`","lastModifiedDate":"2022-09-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"Hikoya"},"content":"### Listing all reviews: `rlist`","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"Hikoya"},"content":"Shows a list of all reviews in the application.","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":103,"author":{"gitId":"clarence-chew"},"content":"Format: `rlist`","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":105,"author":{"gitId":"Hikoya"},"content":"### Deleting a stall: `sdel`","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":107,"author":{"gitId":"Hikoya"},"content":"Deletes the specified stall from the application at the specified `INDEX`.","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":109,"author":{"gitId":"clarence-chew"},"content":"Format: `sdel INDEX`","lastModifiedDate":"2022-09-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":111,"author":{"gitId":"clarence-chew"},"content":"* The index refers to the index number shown in the displayed stalls list.","lastModifiedDate":"2022-09-19"},{"lineNumber":112,"author":{"gitId":"clarence-chew"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-09-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":114,"author":{"gitId":"clarence-chew"},"content":"Example:","lastModifiedDate":"2022-09-19"},{"lineNumber":115,"author":{"gitId":"clarence-chew"},"content":"* `sdel 2` deletes the 2nd stall in the application.","lastModifiedDate":"2022-09-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":117,"author":{"gitId":"Hikoya"},"content":"### Deleting a review: `rdel`","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":119,"author":{"gitId":"clarence-chew"},"content":"Deletes a review at the specified `INDEX`.","lastModifiedDate":"2022-09-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":121,"author":{"gitId":"clarence-chew"},"content":"Format: `rdel INDEX`","lastModifiedDate":"2022-09-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":123,"author":{"gitId":"clarence-chew"},"content":"* The index refers to the index number shown in the displayed reviews list.","lastModifiedDate":"2022-09-19"},{"lineNumber":124,"author":{"gitId":"clarence-chew"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-09-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":126,"author":{"gitId":"clarence-chew"},"content":"Example:","lastModifiedDate":"2022-09-19"},{"lineNumber":127,"author":{"gitId":"clarence-chew"},"content":"* `rdel 2` deletes the 2nd review in the application.","lastModifiedDate":"2022-09-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":129,"author":{"gitId":"jamietan2002"},"content":"### Finding a stall: `sfind`","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"jamietan2002"},"content":"Finds stalls whose names contain any of the given keywords.","lastModifiedDate":"2022-10-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":133,"author":{"gitId":"jamietan2002"},"content":"Format: `sfind KEYWORD [MORE_KEYWORDS]…`","lastModifiedDate":"2022-10-18"},{"lineNumber":134,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"jamietan2002"},"content":"* The search is case-insensitive. e.g. `eatery` will match `Eatery`","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"jamietan2002"},"content":"* The order of the keywords does not matter. e.g. `John\u0027s Eatery` will match `Eatery John\u0027s`","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"jamietan2002"},"content":"* Only the name is searched","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"jamietan2002"},"content":"* Only full words will be matched e.g. `Joh` will not match `John`","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"jamietan2002"},"content":"* Stalls matching at least one keyword will be returned (i.e. OR search) e.g. `John Doe` will return `John Eatery`, `Doe Restaurant`","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":141,"author":{"gitId":"jamietan2002"},"content":"Example:","lastModifiedDate":"2022-10-14"},{"lineNumber":142,"author":{"gitId":"jamietan2002"},"content":"* `sfind eatery` returns `John\u0027s eatery` and `Doe eatery`","lastModifiedDate":"2022-10-14"},{"lineNumber":143,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":144,"author":{"gitId":"jamietan2002"},"content":"### Finding a review: `rfind`","lastModifiedDate":"2022-10-17"},{"lineNumber":145,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":146,"author":{"gitId":"jamietan2002"},"content":"Finds reviews whose names contain any of the given keywords.","lastModifiedDate":"2022-10-17"},{"lineNumber":147,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":148,"author":{"gitId":"jamietan2002"},"content":"Format: `rfind KEYWORD [MORE_KEYWORDS]…`","lastModifiedDate":"2022-10-18"},{"lineNumber":149,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":150,"author":{"gitId":"jamietan2002"},"content":"* The search is case-insensitive. e.g. `eatery` will match `Eatery`","lastModifiedDate":"2022-10-17"},{"lineNumber":151,"author":{"gitId":"jamietan2002"},"content":"* The order of the keywords does not matter. e.g. `John\u0027s Eatery` will match `Eatery John\u0027s`","lastModifiedDate":"2022-10-17"},{"lineNumber":152,"author":{"gitId":"jamietan2002"},"content":"* Only the name is searched","lastModifiedDate":"2022-10-17"},{"lineNumber":153,"author":{"gitId":"jamietan2002"},"content":"* Only full words will be matched e.g. `Joh` will not match `John`","lastModifiedDate":"2022-10-17"},{"lineNumber":154,"author":{"gitId":"jamietan2002"},"content":"* Reviews matching at least one keyword will be returned (i.e. OR search) e.g. `John Doe` will return `John Eatery`, `Doe Restaurant`","lastModifiedDate":"2022-10-17"},{"lineNumber":155,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":156,"author":{"gitId":"jamietan2002"},"content":"Example:","lastModifiedDate":"2022-10-17"},{"lineNumber":157,"author":{"gitId":"jamietan2002"},"content":"* `rfind eatery` returns `John\u0027s eatery` and `Doe eatery`","lastModifiedDate":"2022-10-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"Hikoya"},"content":"Deletes all entries from the stall list and review list.","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"clarence-chew"},"content":"FoodWhere data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually. ","lastModifiedDate":"2022-09-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"Hikoya"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2022-10-24"},{"lineNumber":176,"author":{"gitId":"Hikoya"},"content":"If there are no commands entered, simply exiting the program will not generate a new JSON file if the file is not present.","lastModifiedDate":"2022-10-24"},{"lineNumber":177,"author":{"gitId":"Hikoya"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":178,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":182,"author":{"gitId":"clarence-chew"},"content":"FoodWhere data are saved as a JSON file `[JAR file location]/data/foodwhere.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-09-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":185,"author":{"gitId":"clarence-chew"},"content":"If your changes to the data file make its format invalid, FoodWhere will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-09-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"LikHern"},"content":"**A**: Install the app on the other computer and overwrite the empty data file it creates with the file that contains the data of your previous FoodWhere application.","lastModifiedDate":"2022-09-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"Hikoya"},"content":"| Action    | Format, Examples                                                                                         |","lastModifiedDate":"2022-10-11"},{"lineNumber":200,"author":{"gitId":"Hikoya"},"content":"|-----------|----------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-24"},{"lineNumber":201,"author":{"gitId":"Hikoya"},"content":"| **exit**  | `exit`                                                                                                   |","lastModifiedDate":"2022-10-24"},{"lineNumber":202,"author":{"gitId":"Hikoya"},"content":"| **help**  | `help`                                                                                                   |","lastModifiedDate":"2022-10-24"},{"lineNumber":203,"author":{"gitId":"Hikoya"},"content":"| **clear** | `clear`                                                                                                  |","lastModifiedDate":"2022-10-24"},{"lineNumber":204,"author":{"gitId":"Hikoya"},"content":"| **radd**  | `radd s/STALL_INDEX d/DATE c/CONTENT r/RATING [t/TAGS]…`\u003cbr\u003e e.g., `radd s/3 d/2022-09-20 c/Great food!` |","lastModifiedDate":"2022-10-24"},{"lineNumber":205,"author":{"gitId":"Hikoya"},"content":"| **rdel**  | `rdel INDEX`                                                                                             |","lastModifiedDate":"2022-10-24"},{"lineNumber":206,"author":{"gitId":"Hikoya"},"content":"| **rlist** | `rlist`                                                                                                  |","lastModifiedDate":"2022-10-24"},{"lineNumber":207,"author":{"gitId":"Hikoya"},"content":"| **rfind** | `rfind KEYWORD [MORE_KEYWORDS]…`                                                                         |","lastModifiedDate":"2022-10-24"},{"lineNumber":208,"author":{"gitId":"Hikoya"},"content":"| **sadd**  | `sadd n/NAME a/ADDRESS [t/TAGS]…`\u003cbr\u003e e.g., `sadd n/John Chicken Rice a/Blk 123 Bedok South t/veryNice`  |","lastModifiedDate":"2022-10-24"},{"lineNumber":209,"author":{"gitId":"Hikoya"},"content":"| **sdel**  | `sdel INDEX`                                                                                             |","lastModifiedDate":"2022-10-24"},{"lineNumber":210,"author":{"gitId":"Hikoya"},"content":"| **slist** | `slist`                                                                                                  |","lastModifiedDate":"2022-10-24"},{"lineNumber":211,"author":{"gitId":"Hikoya"},"content":"| **sfind** | `sfind KEYWORD [MORE_KEYWORDS]…`                                                                         |","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"MinHeinA":3,"LikHern":1,"clarence-chew":15,"Hikoya":39,"-":119,"jamietan2002":34}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"Hikoya"},"content":"    content: \"FoodWhere\";","lastModifiedDate":"2022-09-20"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"Hikoya":1,"-":294}},{"path":"docs/diagrams/AddReviewActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MinHeinA"},"content":"@startuml","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"MinHeinA"},"content":"start","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"MinHeinA"},"content":":User executes radd command;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"MinHeinA"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"MinHeinA"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"MinHeinA"},"content":"if () then ([Command is Valid])","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"MinHeinA"},"content":"    :FoodWhere saves the [Review] in [Stall];","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"MinHeinA"},"content":"else ([else])","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"MinHeinA"},"content":"endif","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"MinHeinA"},"content":"stop","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"MinHeinA"},"content":"@enduml","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"MinHeinA":12}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"user -[USER_COLOR]\u003e ui : \"sdel 1\"","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"sdel 1\")","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteStall(stall)","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Hikoya":3,"-":35}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"MinHeinA"},"content":"AddressBook *-right-\u003e \"1\" UniqueStallList","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"MinHeinA"},"content":"UniqueTagList -[hidden]down- UniqueStallList","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"MinHeinA"},"content":"UniqueStallList -right-\u003e Stall","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"MinHeinA"},"content":"Stall -up-\u003e \"*\" Tag","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"MinHeinA"},"content":"Stall *--\u003e Name","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"MinHeinA"},"content":"Stall *--\u003e Address","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"MinHeinA"},"content":"Stall *--\u003e \"*\" Review","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"MinHeinA":8,"-":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"jamietan2002"},"content":"participant \":RDeleteCommandParser\" as RDeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"jamietan2002"},"content":"participant \"d:RDeleteCommand\" as RDeleteCommand LOGIC_COLOR","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"jamietan2002"},"content":"[-\u003e LogicManager : execute(\"rdel 1\")","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"rdel 1\")","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"jamietan2002"},"content":"create RDeleteCommandParser","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"AddressBookParser -\u003e RDeleteCommandParser","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":"activate RDeleteCommandParser","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"jamietan2002"},"content":"RDeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":"deactivate RDeleteCommandParser","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"AddressBookParser -\u003e RDeleteCommandParser : parse(\"1\")","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"activate RDeleteCommandParser","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"create RDeleteCommand","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"RDeleteCommandParser -\u003e RDeleteCommand","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"jamietan2002"},"content":"activate RDeleteCommand","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"jamietan2002"},"content":"RDeleteCommand --\u003e RDeleteCommandParser : d","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"deactivate RDeleteCommand","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"jamietan2002"},"content":"RDeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"jamietan2002"},"content":"deactivate RDeleteCommandParser","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"jamietan2002"},"content":"RDeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"destroy RDeleteCommandParser","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"jamietan2002"},"content":"LogicManager -\u003e RDeleteCommand : execute()","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"jamietan2002"},"content":"activate RDeleteCommand","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"jamietan2002"},"content":"RDeleteCommand -\u003e Model : deleteReview(1)","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"jamietan2002"},"content":"Model --\u003e RDeleteCommand","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"jamietan2002"},"content":"RDeleteCommand -\u003e CommandResult","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"jamietan2002"},"content":"CommandResult --\u003e RDeleteCommand","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"jamietan2002"},"content":"RDeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"jamietan2002"},"content":"deactivate RDeleteCommand","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":40,"jamietan2002":28}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"MinHeinA"},"content":"Class UniqueStallList","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"Class UniqueReviewList","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"MinHeinA"},"content":"Class Stall","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"MinHeinA"},"content":"Class Address","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"Class Review","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"Class Date","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"Class Content","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"Class Rating","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"MinHeinA"},"content":"AddressBook *--\u003e \"1\" UniqueStallList","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"LikHern"},"content":"AddressBook *--\u003e \"1\" UniqueReviewList","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"LikHern"},"content":"UniqueStallList ---\u003e \"~* all\" Stall","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"LikHern"},"content":"UniqueReviewList ---\u003e \"~* all\" Review","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"MinHeinA"},"content":"Stall *--\u003e Address","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"LikHern"},"content":"Stall *-\u003e \"*\" Review","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"LikHern"},"content":"Stall *--\u003e Name","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"MinHeinA"},"content":"Stall *--\u003e \"*\" Tag","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"LikHern"},"content":"Review *--\u003e Date","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"LikHern"},"content":"Review *--\u003e Content","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"LikHern"},"content":"Review *--\u003e Rating","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"LikHern"},"content":"Review *--\u003e Name","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"LikHern"},"content":"Review *--\u003e \"*\" Tag","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"MinHeinA"},"content":"ModelManager --\u003e\"~* filtered\" Stall","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"LikHern"},"content":"ModelManager --\u003e\"~* filtered\" Review","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"MinHeinA":7,"LikHern":16,"-":33}},{"path":"docs/diagrams/ModelReviewClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"@startuml","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"!include style.puml","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"Package ReviewModel \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"Class Review","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"Class Name","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"Class Content","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"Class Date","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"Class Rating","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"Class Tag","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"Class UniqueReviewList","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"UniqueReviewList --\u003e \"~* all\" Review","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"AddressBook *--\u003e \"1\" UniqueReviewList","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"Review *--\u003e \"1\" Name","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"Review *--\u003e \"1\" Content","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"Review *--\u003e \"1\" Date","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"Review *--\u003e \"1\" Rating","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"Review *--\u003e \"*\" Tag","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"ModelManager --\u003e\"~* filtered\" Review","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"Stall \"1\" --\u003e \"~*assigned\" Review","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"@enduml","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"Hikoya":27}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"Class JsonAdaptedStall","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"Class JsonAdaptedReview","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedStall","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"JsonAdaptedStall --\u003e \"*\" JsonAdaptedReview","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"JsonAdaptedStall --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"JsonAdaptedReview --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"clarence-chew":6,"-":40}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"Class StallListPanel","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"Class StallCard","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"Class ReviewListPanel","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"Class ReviewCard","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"MainWindow *-down-\u003e \"1\" StallListPanel","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"MainWindow *-down-\u003e \"1\" ReviewListPanel","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"StallListPanel -down-\u003e \"*\" StallCard","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"ReviewListPanel -down-\u003e \"*\" ReviewCard","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"StallListPanel --|\u003e UiPart","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"StallCard --|\u003e UiPart","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"ReviewListPanel --|\u003e UiPart","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"ReviewCard --|\u003e UiPart","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"StallCard ..\u003e Model","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"ReviewCard ..\u003e Model","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"StallListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"ReviewListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Hikoya":16,"-":52}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: FoodWhere","lastModifiedDate":"2022-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103-W14-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103-W14-2/tp/actions)","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103-W14-2/tp/branch/master/graph/badge.svg?token\u003d6CXVRBBD2P)](https://codecov.io/gh/AY2223S1-CS2103-W14-2/tp)","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"**FoodWhere is a desktop application for managing your food stall addresses and reviews.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested in using FoodWhere, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing FoodWhere, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Hikoya":2,"-":17}},{"path":"docs/team/clarence-chew.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"layout: page","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"title: Clarence Chew Xuan Da\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"### Project: FoodWhere","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"**FoodWhere is a desktop application for managing your food stall addresses and reviews.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"to be added soon","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"clarence-chew":12}},{"path":"docs/team/hikoya.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"layout: page","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"title: Chan Chung Loong\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"### Project: FoodWhere","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"**FoodWhere is a desktop application for managing your food stall addresses and reviews.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"to be added soon","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Hikoya":12}},{"path":"docs/team/jamietan2002.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jamietan2002"},"content":"---","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"jamietan2002"},"content":"layout: page","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"jamietan2002"},"content":"title: Jamie\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"jamietan2002"},"content":"---","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"jamietan2002"},"content":"### Project: FoodWhere","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"**FoodWhere is a desktop application for managing your food stall addresses and reviews.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"jamietan2002"},"content":"to be added soon","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"jamietan2002":12}},{"path":"docs/team/likhern.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"layout: page","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"title: Low Lik Hern\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"### Project: FoodWhere","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"**FoodWhere is a desktop application for managing your food stall addresses and reviews.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"to be added soon","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"LikHern":12}},{"path":"docs/team/minheina.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MinHeinA"},"content":"---","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"MinHeinA"},"content":"layout: page","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"MinHeinA"},"content":"title: Min Hein Aung\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"MinHeinA"},"content":"---","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"MinHeinA"},"content":"### Project: FoodWhere","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"MinHeinA"},"content":"**FoodWhere is a desktop application for managing your food stall addresses and reviews.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"MinHeinA"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"MinHeinA"},"content":"to be added soon","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"MinHeinA":12}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"import foodwhere.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-09-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"Hikoya"},"content":"Simply add the following to [`foodwhere.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-09-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"Hikoya":4,"-":397}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"The `address` field in `Person` is actually an instance of the `foodwhere.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Hikoya":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `foodwhere.logic.Logic` component.","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `foodwhere.logic.Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `Logic`.","lastModifiedDate":"2022-09-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"A quick look at the `foodwhere.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Hikoya":3,"-":298}},{"path":"src/main/java/foodwhere/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.LogsCenter;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.util.FileUtil;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Hikoya":3,"-":61}},{"path":"src/main/java/foodwhere/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"Hikoya":1,"-":24}},{"path":"src/main/java/foodwhere/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.Config;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.LogsCenter;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.Version;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.util.ConfigUtil;","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.util.StringUtil;","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.Logic;","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.LogicManager;","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.AddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ModelManager;","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.UserPrefs;","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.util.SampleDataUtil;","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"import foodwhere.storage.AddressBookStorage;","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"import foodwhere.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"import foodwhere.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"import foodwhere.storage.Storage;","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"import foodwhere.storage.StorageManager;","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"import foodwhere.storage.UserPrefsStorage;","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"import foodwhere.ui.Ui;","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"import foodwhere.ui.UiManager;","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"MinHeinA"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"MinHeinA":1,"Hikoya":24,"-":158}},{"path":"src/main/java/foodwhere/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.core;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Hikoya":1,"-":62}},{"path":"src/main/java/foodwhere/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.core;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Hikoya":1,"-":78}},{"path":"src/main/java/foodwhere/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.core;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Hikoya":1,"-":111}},{"path":"src/main/java/foodwhere/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.core;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"jamietan2002"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! %1$s\";","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"MinHeinA"},"content":"    public static final String MESSAGE_INVALID_STALL_DISPLAYED_INDEX \u003d \"The stall index provided is invalid\";","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":"    public static final String MESSAGE_INVALID_REVIEW_DISPLAYED_INDEX \u003d \"The review index provided is invalid\";","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"jamietan2002"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"The index cannot be read as a positive integer.\\n\";","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"MinHeinA"},"content":"    public static final String MESSAGE_STALLS_LISTED_OVERVIEW \u003d \"%1$d stalls listed!\";","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":"    public static final String MESSAGE_REVIEWS_LISTED_OVERVIEW \u003d \"%1$d reviews listed!\";","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"    public static final String MESSAGE_MISSING_ADDRESS \u003d \"Missing address! \\n%1$s\";","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"    public static final String MESSAGE_MISSING_CONTENT \u003d \"Missing content! \\n%1$s\";","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"    public static final String MESSAGE_MISSING_DATE \u003d \"Missing date! \\n%1$s\";","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"    public static final String MESSAGE_MISSING_INDEX \u003d \"Missing index! \\n%1$s\";","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"    public static final String MESSAGE_MISSING_NAME \u003d \"Missing name! \\n%1$s\";","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"    public static final String MESSAGE_MISSING_RATING \u003d \"Missing rating! \\n%1$s\";","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"MinHeinA":2,"Hikoya":7,"-":8,"jamietan2002":4}},{"path":"src/main/java/foodwhere/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.core;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Hikoya":1,"-":115}},{"path":"src/main/java/foodwhere/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.core.index;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Hikoya":1,"-":53}},{"path":"src/main/java/foodwhere/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.exceptions;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Hikoya":1,"-":10}},{"path":"src/main/java/foodwhere/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.exceptions;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Hikoya":1,"-":20}},{"path":"src/main/java/foodwhere/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.util;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import foodwhere.MainApp;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Hikoya":3,"-":40}},{"path":"src/main/java/foodwhere/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.util;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Hikoya":1,"-":34}},{"path":"src/main/java/foodwhere/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.util;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.Config;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Hikoya":3,"-":20}},{"path":"src/main/java/foodwhere/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.util;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Hikoya":1,"-":82}},{"path":"src/main/java/foodwhere/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.util;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.LogsCenter;","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Hikoya":3,"-":140}},{"path":"src/main/java/foodwhere/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.util;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Hikoya":2,"-":66}},{"path":"src/main/java/foodwhere/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.GuiSettings;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.CommandResult;","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"     * @see Model#getAddressBook()","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"MinHeinA"},"content":"    /** Returns an unmodifiable view of the filtered list of stalls */","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"MinHeinA"},"content":"    ObservableList\u003cStall\u003e getFilteredStallList();","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"    /** Returns an unmodifiable view of the filtered list of reviews */","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"    ObservableList\u003cReview\u003e getFilteredReviewList();","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"MinHeinA":3,"Hikoya":11,"-":41}},{"path":"src/main/java/foodwhere/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.GuiSettings;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.LogsCenter;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.Command;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.CommandResult;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.parser.AddressBookParser;","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"import foodwhere.storage.Storage;","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"MinHeinA"},"content":"    public ObservableList\u003cStall\u003e getFilteredStallList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"MinHeinA"},"content":"        return model.getFilteredStallList();","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"Hikoya"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"Hikoya"},"content":"    public ObservableList\u003cReview\u003e getFilteredReviewList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"Hikoya"},"content":"        return model.getFilteredReviewList();","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"MinHeinA":3,"Hikoya":15,"-":69}},{"path":"src/main/java/foodwhere/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.AddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Hikoya":3,"-":20}},{"path":"src/main/java/foodwhere/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Hikoya":3,"-":17}},{"path":"src/main/java/foodwhere/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Hikoya":1,"-":70}},{"path":"src/main/java/foodwhere/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Hikoya":2,"-":17}},{"path":"src/main/java/foodwhere/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Hikoya":2,"-":19}},{"path":"src/main/java/foodwhere/logic/commands/RAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamietan2002"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"jamietan2002"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"jamietan2002"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"jamietan2002"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Address;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.review.Content;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.review.Date;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.review.Rating;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":" * Adds a review to the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"jamietan2002"},"content":"public class RAddCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"jamietan2002"},"content":"    public static final String COMMAND_WORD \u003d \"radd\";","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a review to the address book. \"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"jamietan2002"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"            + CliSyntax.PREFIX_STALL_INDEX + \"STALL_INDEX \"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"            + CliSyntax.PREFIX_DATE + \"DATE \"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"jamietan2002"},"content":"            + CliSyntax.PREFIX_CONTENT + \"CONTENT \"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"            + CliSyntax.PREFIX_RATING + \"RATING \"","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"            + \"[\" + CliSyntax.PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"jamietan2002"},"content":"            + CliSyntax.PREFIX_STALL_INDEX + \"3 \"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"MinHeinA"},"content":"            + CliSyntax.PREFIX_DATE + \"20/09/2022 \"","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"            + CliSyntax.PREFIX_CONTENT + \"The food was good, the chicken rice was fresh. \"","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"            + CliSyntax.PREFIX_RATING + \"4 \"","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"            + CliSyntax.PREFIX_TAG + \"opensDaily \"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"            + CliSyntax.PREFIX_TAG + \"worthyTrip\";","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"jamietan2002"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New review added: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"    public static final String MESSAGE_DUPLICATE_REVIEW \u003d \"This review already exists in the address book\";","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"jamietan2002"},"content":"    private final Index stallIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"jamietan2002"},"content":"    private final Date date;","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"jamietan2002"},"content":"    private final Content content;","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"    private final Rating rating;","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"    private final Set\u003cTag\u003e tagList;","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"jamietan2002"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"jamietan2002"},"content":"     * Creates an RAddCommand to add the specified {@code Review}","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"jamietan2002"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"    public RAddCommand(Index stallIndex, Date date, Content content, Rating rating, Set\u003cTag\u003e tagList) {","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"jamietan2002"},"content":"        requireNonNull(stallIndex);","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"jamietan2002"},"content":"        this.stallIndex \u003d stallIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"jamietan2002"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"jamietan2002"},"content":"        this.content \u003d content;","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"        this.rating \u003d rating;","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"        this.tagList \u003d tagList;","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"jamietan2002"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"jamietan2002"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"jamietan2002"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"jamietan2002"},"content":"        List\u003cStall\u003e lastShownList \u003d model.getFilteredStallList();","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"jamietan2002"},"content":"        if (stallIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"jamietan2002"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"jamietan2002"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"jamietan2002"},"content":"        Stall stall \u003d lastShownList.get(stallIndex.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"jamietan2002"},"content":"        Name name \u003d stall.getName();","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"        Address address \u003d stall.getAddress();","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"clarence-chew"},"content":"        Review toAdd \u003d new Review(name, address, date, content, rating, tagList);","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"Hikoya"},"content":"        if (model.hasReview(toAdd)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"Hikoya"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_REVIEW);","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"clarence-chew"},"content":"        model.addReviewToStall(toAdd, stall);","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"jamietan2002"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"jamietan2002"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"jamietan2002"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"jamietan2002"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"jamietan2002"},"content":"                || (other instanceof RAddCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"jamietan2002"},"content":"                \u0026\u0026 content.equals(((RAddCommand) other).content));","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"jamietan2002"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"jamietan2002"},"content":"    public String toString() {","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"jamietan2002"},"content":"        return content.toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"jamietan2002"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"MinHeinA":1,"clarence-chew":3,"Hikoya":20,"jamietan2002":75}},{"path":"src/main/java/foodwhere/logic/commands/RDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamietan2002"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"jamietan2002"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"jamietan2002"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"jamietan2002"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":" * Deletes a review identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"jamietan2002"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":"public class RDeleteCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"    public static final String COMMAND_WORD \u003d \"rdel\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"jamietan2002"},"content":"            + \": Deletes the review identified by the index number used in the displayed review list.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"jamietan2002"},"content":"    public static final String MESSAGE_DELETE_REVIEW_SUCCESS \u003d \"Deleted review: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"jamietan2002"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"    public RDeleteCommand(Index targetIndex) {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"jamietan2002"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"jamietan2002"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"jamietan2002"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"jamietan2002"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"        List\u003cReview\u003e lastShownList \u003d model.getFilteredReviewList();","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"jamietan2002"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"jamietan2002"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_REVIEW_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"jamietan2002"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"        Review reviewToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"jamietan2002"},"content":"        model.deleteReview(reviewToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"jamietan2002"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_REVIEW_SUCCESS, reviewToDelete));","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"jamietan2002"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"jamietan2002"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"jamietan2002"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"jamietan2002"},"content":"                || (other instanceof RDeleteCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"jamietan2002"},"content":"                \u0026\u0026 targetIndex.equals(((RDeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"jamietan2002"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jamietan2002":53}},{"path":"src/main/java/foodwhere/logic/commands/REditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MinHeinA"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.model.Model.PREDICATE_SHOW_ALL_REVIEWS;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"MinHeinA"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"MinHeinA"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"MinHeinA"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"MinHeinA"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"MinHeinA"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"MinHeinA"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.commons.core.Messages;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Address;","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.review.Content;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.review.Date;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.review.Rating;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"MinHeinA"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"MinHeinA"},"content":" * Edits the details of an existing review in the address book.","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"MinHeinA"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"MinHeinA"},"content":"public class REditCommand extends Command {","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"MinHeinA"},"content":"    public static final String COMMAND_WORD \u003d \"redit\";","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"MinHeinA"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the review identified \"","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"MinHeinA"},"content":"            + \"by the index number used in the displayed review list. \"","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"MinHeinA"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"MinHeinA"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"MinHeinA"},"content":"            + \"[\" + CliSyntax.PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"MinHeinA"},"content":"            + \"[\" + CliSyntax.PREFIX_CONTENT + \"CONTENT] \"","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"MinHeinA"},"content":"            + \"[\" + CliSyntax.PREFIX_RATING + \"RATING] \"","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"MinHeinA"},"content":"            + \"[\" + CliSyntax.PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"MinHeinA"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"MinHeinA"},"content":"    public static final String MESSAGE_EDIT_REVIEW_SUCCESS \u003d \"Edited Review: %1$s\";","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"MinHeinA"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"MinHeinA"},"content":"    public static final String MESSAGE_DUPLICATE_REVIEW \u003d \"This review already exists in the address book.\";","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"MinHeinA"},"content":"    private final Index index;","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"MinHeinA"},"content":"    private final EditReviewDescriptor editReviewDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"MinHeinA"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"MinHeinA"},"content":"     * @param index of the review in the filtered review list to edit","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"MinHeinA"},"content":"     * @param editReviewDescriptor details to edit the review with","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"MinHeinA"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"MinHeinA"},"content":"    public REditCommand(Index index, EditReviewDescriptor editReviewDescriptor) {","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"MinHeinA"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"MinHeinA"},"content":"        requireNonNull(editReviewDescriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"MinHeinA"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"MinHeinA"},"content":"        this.editReviewDescriptor \u003d new EditReviewDescriptor(editReviewDescriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"MinHeinA"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"MinHeinA"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"MinHeinA"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"MinHeinA"},"content":"        List\u003cReview\u003e lastShownList \u003d model.getFilteredReviewList();","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"MinHeinA"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"MinHeinA"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_REVIEW_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"MinHeinA"},"content":"        Review reviewToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"MinHeinA"},"content":"        Review editedReview \u003d createEditedReview(reviewToEdit, editReviewDescriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"MinHeinA"},"content":"        if (!reviewToEdit.isSameReview(editedReview) \u0026\u0026 model.hasReview(editedReview)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"MinHeinA"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_REVIEW);","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"MinHeinA"},"content":"        model.setReview(reviewToEdit, editedReview);","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"MinHeinA"},"content":"        model.updateFilteredReviewList(PREDICATE_SHOW_ALL_REVIEWS);","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"MinHeinA"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_REVIEW_SUCCESS, editedReview));","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"MinHeinA"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"MinHeinA"},"content":"     * Creates and returns a {@code Review} with the details of {@code reviewToEdit}","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"MinHeinA"},"content":"     * edited with {@code editReviewDescriptor}.","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"MinHeinA"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"MinHeinA"},"content":"    private static Review createEditedReview(Review reviewToEdit, EditReviewDescriptor editReviewDescriptor) {","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"MinHeinA"},"content":"        assert reviewToEdit !\u003d null;","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"MinHeinA"},"content":"        Name name \u003d reviewToEdit.getName();","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"clarence-chew"},"content":"        Address address \u003d reviewToEdit.getAddress();","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"MinHeinA"},"content":"        Date updatedDate \u003d editReviewDescriptor.getDate().orElse(reviewToEdit.getDate());","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"MinHeinA"},"content":"        Content updatedContent \u003d editReviewDescriptor.getContent().orElse(reviewToEdit.getContent());","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"MinHeinA"},"content":"        Rating updatedRating \u003d editReviewDescriptor.getRating().orElse(reviewToEdit.getRating());","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"MinHeinA"},"content":"        Set\u003cTag\u003e updatedTags \u003d editReviewDescriptor.getTags().orElse(reviewToEdit.getTags());","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"clarence-chew"},"content":"        return new Review(name, address, updatedDate, updatedContent, updatedRating, updatedTags);","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"MinHeinA"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"MinHeinA"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"MinHeinA"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"MinHeinA"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"MinHeinA"},"content":"            return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"MinHeinA"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"MinHeinA"},"content":"        if (!(other instanceof SEditCommand)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"MinHeinA"},"content":"            return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"MinHeinA"},"content":"        // state check","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"MinHeinA"},"content":"        REditCommand e \u003d (REditCommand) other;","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"MinHeinA"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"MinHeinA"},"content":"                \u0026\u0026 editReviewDescriptor.equals(e.editReviewDescriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"MinHeinA"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"MinHeinA"},"content":"     * Stores the details to edit the review with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"MinHeinA"},"content":"     * corresponding field value of the review.","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"MinHeinA"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"MinHeinA"},"content":"    public static class EditReviewDescriptor {","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"MinHeinA"},"content":"        private Date date;","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"MinHeinA"},"content":"        private Content content;","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"MinHeinA"},"content":"        private Rating rating;","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"MinHeinA"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"MinHeinA"},"content":"        public EditReviewDescriptor() {}","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"MinHeinA"},"content":"        /**","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"MinHeinA"},"content":"         * Copy constructor.","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"MinHeinA"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"MinHeinA"},"content":"         */","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"MinHeinA"},"content":"        public EditReviewDescriptor(EditReviewDescriptor toCopy) {","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"MinHeinA"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2022-10-16"},{"lineNumber":136,"author":{"gitId":"MinHeinA"},"content":"            setContent(toCopy.content);","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"MinHeinA"},"content":"            setRating(toCopy.rating);","lastModifiedDate":"2022-10-16"},{"lineNumber":138,"author":{"gitId":"MinHeinA"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2022-10-16"},{"lineNumber":139,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":140,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"MinHeinA"},"content":"        /**","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"MinHeinA"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"MinHeinA"},"content":"         */","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"MinHeinA"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"MinHeinA"},"content":"            return CollectionUtil.isAnyNonNull(date, content, rating, tags);","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"MinHeinA"},"content":"        public void setDate(Date date) {","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"MinHeinA"},"content":"            this.date \u003d date;","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"MinHeinA"},"content":"        public Optional\u003cDate\u003e getDate() {","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"MinHeinA"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"MinHeinA"},"content":"        public void setContent(Content content) {","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"MinHeinA"},"content":"            this.content \u003d content;","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"MinHeinA"},"content":"        public Optional\u003cContent\u003e getContent() {","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"MinHeinA"},"content":"            return Optional.ofNullable(content);","lastModifiedDate":"2022-10-16"},{"lineNumber":162,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"MinHeinA"},"content":"        public void setRating(Rating rating) {","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"MinHeinA"},"content":"            this.rating \u003d rating;","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":167,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":168,"author":{"gitId":"MinHeinA"},"content":"        public Optional\u003cRating\u003e getRating() {","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"MinHeinA"},"content":"            return Optional.ofNullable(rating);","lastModifiedDate":"2022-10-16"},{"lineNumber":170,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"MinHeinA"},"content":"        /**","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"MinHeinA"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"MinHeinA"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-16"},{"lineNumber":175,"author":{"gitId":"MinHeinA"},"content":"         */","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"MinHeinA"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-16"},{"lineNumber":177,"author":{"gitId":"MinHeinA"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":179,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":180,"author":{"gitId":"MinHeinA"},"content":"        /**","lastModifiedDate":"2022-10-16"},{"lineNumber":181,"author":{"gitId":"MinHeinA"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-16"},{"lineNumber":182,"author":{"gitId":"MinHeinA"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-10-16"},{"lineNumber":183,"author":{"gitId":"MinHeinA"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-10-16"},{"lineNumber":184,"author":{"gitId":"MinHeinA"},"content":"         */","lastModifiedDate":"2022-10-16"},{"lineNumber":185,"author":{"gitId":"MinHeinA"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-10-16"},{"lineNumber":186,"author":{"gitId":"MinHeinA"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-10-16"},{"lineNumber":187,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":188,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":189,"author":{"gitId":"MinHeinA"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":190,"author":{"gitId":"MinHeinA"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":191,"author":{"gitId":"MinHeinA"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-16"},{"lineNumber":192,"author":{"gitId":"MinHeinA"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-16"},{"lineNumber":193,"author":{"gitId":"MinHeinA"},"content":"                return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":194,"author":{"gitId":"MinHeinA"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":195,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":196,"author":{"gitId":"MinHeinA"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-16"},{"lineNumber":197,"author":{"gitId":"MinHeinA"},"content":"            if (!(other instanceof EditReviewDescriptor)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":198,"author":{"gitId":"MinHeinA"},"content":"                return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":199,"author":{"gitId":"MinHeinA"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":200,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":201,"author":{"gitId":"MinHeinA"},"content":"            // state check","lastModifiedDate":"2022-10-16"},{"lineNumber":202,"author":{"gitId":"MinHeinA"},"content":"            EditReviewDescriptor e \u003d (EditReviewDescriptor) other;","lastModifiedDate":"2022-10-16"},{"lineNumber":203,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":204,"author":{"gitId":"MinHeinA"},"content":"            return getDate().equals(e.getDate())","lastModifiedDate":"2022-10-16"},{"lineNumber":205,"author":{"gitId":"MinHeinA"},"content":"                    \u0026\u0026 getContent().equals(e.getContent())","lastModifiedDate":"2022-10-16"},{"lineNumber":206,"author":{"gitId":"MinHeinA"},"content":"                    \u0026\u0026 getRating().equals(e.getRating())","lastModifiedDate":"2022-10-16"},{"lineNumber":207,"author":{"gitId":"MinHeinA"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2022-10-16"},{"lineNumber":208,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":209,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":210,"author":{"gitId":"MinHeinA"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"MinHeinA":207,"clarence-chew":2,"Hikoya":1}},{"path":"src/main/java/foodwhere/logic/commands/RFindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamietan2002"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"jamietan2002"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.commons.core.Messages;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.review.ReviewContainsKeywordsPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":" * Finds and lists all reviews in address book whose names or tags contains any of the argument keywords.","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"jamietan2002"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"jamietan2002"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":"public class RFindCommand extends Command {","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":"    public static final String COMMAND_WORD \u003d \"rfind\";","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all reviews whose names or tags contain any of \"","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"jamietan2002"},"content":"            + CliSyntax.PREFIX_NAME + \"NAME_KEYWORD [MORE_NAME_KEYWORDS]... \"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"            + CliSyntax.PREFIX_TAG + \"TAG_KEYWORD [MORE_TAG_KEYWORDS]... \"","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":"            + \"Example: \"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":"            + CliSyntax.PREFIX_NAME + \"Chicken \"","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"jamietan2002"},"content":"            + CliSyntax.PREFIX_TAG + \"opensDaily \";","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"jamietan2002"},"content":"    private final ReviewContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"    public RFindCommand(ReviewContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"jamietan2002"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"jamietan2002"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"jamietan2002"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"jamietan2002"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"        model.updateFilteredReviewList(predicate);","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"jamietan2002"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"jamietan2002"},"content":"                String.format(Messages.MESSAGE_REVIEWS_LISTED_OVERVIEW, model.getFilteredReviewList().size()));","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"jamietan2002"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"jamietan2002"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"jamietan2002"},"content":"                || (other instanceof RFindCommand // instanceof handles nulls","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"jamietan2002"},"content":"                \u0026\u0026 predicate.equals(((RFindCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"jamietan2002"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"jamietan2002":47}},{"path":"src/main/java/foodwhere/logic/commands/RListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamietan2002"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.model.Model.PREDICATE_SHOW_ALL_REVIEWS;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"jamietan2002"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"jamietan2002"},"content":" * Lists all reviews in the address book to the user.","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":"public class RListCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"jamietan2002"},"content":"    public static final String COMMAND_WORD \u003d \"rlist\";","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"jamietan2002"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all reviews\";","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"jamietan2002"},"content":"        model.updateFilteredReviewList(PREDICATE_SHOW_ALL_REVIEWS);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jamietan2002":24}},{"path":"src/main/java/foodwhere/logic/commands/RSortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import foodwhere.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"import foodwhere.model.review.comparator.ReviewsComparatorList;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":" * Sort and list all reviews in the address book to the user.","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"public class RSortCommand extends Command {","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"    public static final String COMMAND_WORD \u003d \"rsort\";","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"            + \": Sort the review list by specified criteria. See user guide for the list of criteria supported.\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"            + \"Parameters: CRITERIA (case-insensitive)\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"            + \"Example: \" + COMMAND_WORD + \" name\";","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"The review list is now sorted by %1$s\";","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"    private final ReviewsComparatorList reviewsComparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"    public RSortCommand(ReviewsComparatorList reviewsComparator) {","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"        this.reviewsComparator \u003d reviewsComparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"LikHern"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"LikHern"},"content":"        model.sortReviews(reviewsComparator.getComparator());","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"LikHern"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, reviewsComparator.getCriteria()));","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"LikHern":36}},{"path":"src/main/java/foodwhere/logic/commands/SAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.parser.CliSyntax;","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"MinHeinA"},"content":" * Adds a stall to the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"jamietan2002"},"content":"public class SAddCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"jamietan2002"},"content":"    public static final String COMMAND_WORD \u003d \"sadd\";","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"MinHeinA"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a stall to the address book. \"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"            + CliSyntax.PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"            + CliSyntax.PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"            + \"[\" + CliSyntax.PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"            + CliSyntax.PREFIX_NAME + \"Ah Kim Chicken Rice \"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"            + CliSyntax.PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"            + CliSyntax.PREFIX_TAG + \"chickenRice \"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"            + CliSyntax.PREFIX_TAG + \"opensDaily\";","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"MinHeinA"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New stall added: %1$s\";","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"MinHeinA"},"content":"    public static final String MESSAGE_DUPLICATE_STALL \u003d \"This stall already exists in the address book\";","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"MinHeinA"},"content":"    private final Stall toAdd;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"jamietan2002"},"content":"     * Creates an SAddCommand to add the specified {@code Stall}","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"    public SAddCommand(Stall stall) {","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"MinHeinA"},"content":"        requireNonNull(stall);","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"MinHeinA"},"content":"        toAdd \u003d stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"MinHeinA"},"content":"        if (model.hasStall(toAdd)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"MinHeinA"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STALL);","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"MinHeinA"},"content":"        model.addStall(toAdd);","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"jamietan2002"},"content":"                || (other instanceof SAddCommand // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"jamietan2002"},"content":"                \u0026\u0026 toAdd.equals(((SAddCommand) other).toAdd));","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"MinHeinA":11,"Hikoya":11,"-":31,"jamietan2002":6}},{"path":"src/main/java/foodwhere/logic/commands/SDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.Messages;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.index.Index;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"MinHeinA"},"content":" * Deletes a stall identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":"public class SDeleteCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"    public static final String COMMAND_WORD \u003d \"sdel\";","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"MinHeinA"},"content":"            + \": Deletes the stall identified by the index number used in the displayed stall list.\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"MinHeinA"},"content":"    public static final String MESSAGE_DELETE_STALL_SUCCESS \u003d \"Deleted Stall: %1$s\";","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"    public SDeleteCommand(Index targetIndex) {","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"MinHeinA"},"content":"        List\u003cStall\u003e lastShownList \u003d model.getFilteredStallList();","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"MinHeinA"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"MinHeinA"},"content":"        Stall stallToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"MinHeinA"},"content":"        model.deleteStall(stallToDelete);","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"MinHeinA"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_STALL_SUCCESS, stallToDelete));","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"jamietan2002"},"content":"                || (other instanceof SDeleteCommand // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"jamietan2002"},"content":"                \u0026\u0026 targetIndex.equals(((SDeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"MinHeinA":9,"Hikoya":5,"-":34,"jamietan2002":5}},{"path":"src/main/java/foodwhere/logic/commands/SEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.model.Model.PREDICATE_SHOW_ALL_STALLS;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.Messages;","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.index.Index;","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.util.CollectionUtil;","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.parser.CliSyntax;","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Address;","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.ReviewBuilder;","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"MinHeinA"},"content":" * Edits the details of an existing stall in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"MinHeinA"},"content":"public class SEditCommand extends Command {","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"MinHeinA"},"content":"    public static final String COMMAND_WORD \u003d \"sedit\";","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"MinHeinA"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the stall identified \"","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"MinHeinA"},"content":"            + \"by the index number used in the displayed stall list. \"","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"            + \"[\" + CliSyntax.PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-09-26"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"            + \"[\" + CliSyntax.PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"            + \"[\" + CliSyntax.PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"MinHeinA"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"MinHeinA"},"content":"    public static final String MESSAGE_EDIT_STALL_SUCCESS \u003d \"Edited Stall: %1$s\";","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"MinHeinA"},"content":"    public static final String MESSAGE_DUPLICATE_STALL \u003d \"This stall already exists in the address book.\";","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"MinHeinA"},"content":"    private final EditStallDescriptor editStallDescriptor;","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"MinHeinA"},"content":"     * @param index of the stall in the filtered stall list to edit","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"MinHeinA"},"content":"     * @param editStallDescriptor details to edit the stall with","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"MinHeinA"},"content":"    public SEditCommand(Index index, EditStallDescriptor editStallDescriptor) {","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"MinHeinA"},"content":"        requireNonNull(editStallDescriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"MinHeinA"},"content":"        this.editStallDescriptor \u003d new EditStallDescriptor(editStallDescriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"MinHeinA"},"content":"        List\u003cStall\u003e lastShownList \u003d model.getFilteredStallList();","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"MinHeinA"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"MinHeinA"},"content":"        Stall stallToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"MinHeinA"},"content":"        Stall editedStall \u003d createEditedStall(stallToEdit, editStallDescriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"MinHeinA"},"content":"        if (!stallToEdit.isSameStall(editedStall) \u0026\u0026 model.hasStall(editedStall)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"MinHeinA"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STALL);","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"MinHeinA"},"content":"        model.setStall(stallToEdit, editedStall);","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"MinHeinA"},"content":"        model.updateFilteredStallList(PREDICATE_SHOW_ALL_STALLS);","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"MinHeinA"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_STALL_SUCCESS, editedStall));","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"MinHeinA"},"content":"     * Creates and returns a {@code Stall} with the details of {@code stallToEdit}","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"MinHeinA"},"content":"     * edited with {@code editStallDescriptor}.","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"MinHeinA"},"content":"    private static Stall createEditedStall(Stall stallToEdit, EditStallDescriptor editStallDescriptor) {","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"MinHeinA"},"content":"        assert stallToEdit !\u003d null;","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"MinHeinA"},"content":"        Name updatedName \u003d editStallDescriptor.getName().orElse(stallToEdit.getName());","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"MinHeinA"},"content":"        Address updatedAddress \u003d editStallDescriptor.getAddress().orElse(stallToEdit.getAddress());","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"Hikoya"},"content":"        Set\u003cTag\u003e updatedTags \u003d editStallDescriptor.getTags().orElse(stallToEdit.getTags());","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"clarence-chew"},"content":"        Set\u003cReview\u003e updatedReviews \u003d editStallDescriptor.getReviews()","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"clarence-chew"},"content":"                .orElse(stallToEdit.getReviews())","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"clarence-chew"},"content":"                .stream()","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"clarence-chew"},"content":"                .map(review -\u003e new ReviewBuilder(review)","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"clarence-chew"},"content":"                        .withName(updatedName.fullName)","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"clarence-chew"},"content":"                        .withAddress(updatedAddress.value)","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"clarence-chew"},"content":"                        .build())","lastModifiedDate":"2022-10-23"},{"lineNumber":99,"author":{"gitId":"clarence-chew"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"clarence-chew"},"content":"        return new Stall(updatedName, updatedAddress, updatedTags, updatedReviews);","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"MinHeinA"},"content":"        if (!(other instanceof SEditCommand)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand e \u003d (SEditCommand) other;","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":118,"author":{"gitId":"MinHeinA"},"content":"                \u0026\u0026 editStallDescriptor.equals(e.editStallDescriptor);","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"MinHeinA"},"content":"     * Stores the details to edit the stall with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"MinHeinA"},"content":"     * corresponding field value of the stall.","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"MinHeinA"},"content":"    public static class EditStallDescriptor {","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":128,"author":{"gitId":"Hikoya"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"clarence-chew"},"content":"        private Set\u003cReview\u003e reviews;","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"MinHeinA"},"content":"        public EditStallDescriptor() {}","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":135,"author":{"gitId":"Hikoya"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"MinHeinA"},"content":"        public EditStallDescriptor(EditStallDescriptor toCopy) {","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":140,"author":{"gitId":"Hikoya"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"clarence-chew"},"content":"            setReviews(toCopy.reviews);","lastModifiedDate":"2022-10-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"Hikoya"},"content":"            return CollectionUtil.isAnyNonNull(name, address, tags);","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"Hikoya"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"Hikoya"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"Hikoya"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"Hikoya"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":176,"author":{"gitId":"Hikoya"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":178,"author":{"gitId":"Hikoya"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-10-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":180,"author":{"gitId":"Hikoya"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-10-12"},{"lineNumber":181,"author":{"gitId":"Hikoya"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-10-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":184,"author":{"gitId":"clarence-chew"},"content":"        /**","lastModifiedDate":"2022-10-20"},{"lineNumber":185,"author":{"gitId":"clarence-chew"},"content":"         * Sets {@code reviews} to this object\u0027s {@code reviews}.","lastModifiedDate":"2022-10-20"},{"lineNumber":186,"author":{"gitId":"clarence-chew"},"content":"         * A defensive copy of {@code reviews} is used internally.","lastModifiedDate":"2022-10-20"},{"lineNumber":187,"author":{"gitId":"clarence-chew"},"content":"         */","lastModifiedDate":"2022-10-20"},{"lineNumber":188,"author":{"gitId":"clarence-chew"},"content":"        public void setReviews(Set\u003cReview\u003e reviews) {","lastModifiedDate":"2022-10-20"},{"lineNumber":189,"author":{"gitId":"clarence-chew"},"content":"            this.reviews \u003d (reviews !\u003d null) ? new HashSet\u003c\u003e(reviews) : null;","lastModifiedDate":"2022-10-20"},{"lineNumber":190,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":191,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":192,"author":{"gitId":"clarence-chew"},"content":"        /**","lastModifiedDate":"2022-10-20"},{"lineNumber":193,"author":{"gitId":"clarence-chew"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-20"},{"lineNumber":194,"author":{"gitId":"clarence-chew"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-10-20"},{"lineNumber":195,"author":{"gitId":"clarence-chew"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-10-20"},{"lineNumber":196,"author":{"gitId":"clarence-chew"},"content":"         */","lastModifiedDate":"2022-10-20"},{"lineNumber":197,"author":{"gitId":"clarence-chew"},"content":"        public Optional\u003cSet\u003cReview\u003e\u003e getReviews() {","lastModifiedDate":"2022-10-20"},{"lineNumber":198,"author":{"gitId":"clarence-chew"},"content":"            return (reviews !\u003d null) ? Optional.of(Collections.unmodifiableSet(reviews)) : Optional.empty();","lastModifiedDate":"2022-10-20"},{"lineNumber":199,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":200,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"MinHeinA"},"content":"            if (!(other instanceof EditStallDescriptor)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"MinHeinA"},"content":"            EditStallDescriptor e \u003d (EditStallDescriptor) other;","lastModifiedDate":"2022-10-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"Hikoya"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2022-10-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"MinHeinA":41,"clarence-chew":31,"Hikoya":27,"-":122}},{"path":"src/main/java/foodwhere/logic/commands/SFindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.Messages;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.stall.StallContainsKeywordsPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":" * Finds and lists all stalls in address book whose name or tags contain any of the argument keywords.","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":"public class SFindCommand extends Command {","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":"    public static final String COMMAND_WORD \u003d \"sfind\";","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":"            + \": Finds all stalls where either the name or tags contain any of \"","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"jamietan2002"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"            + CliSyntax.PREFIX_NAME + \"NAME_KEYWORD [MORE_NAME_KEYWORDS]... \"","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":"            + CliSyntax.PREFIX_TAG + \"TAG_KEYWORD [MORE_TAG_KEYWORDS]... \"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":"            + \"Example: \"","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"jamietan2002"},"content":"            + CliSyntax.PREFIX_NAME + \"Chicken \"","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":"            + CliSyntax.PREFIX_TAG + \"opensDaily \";","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"    private final StallContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"jamietan2002"},"content":"    public SFindCommand(StallContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"MinHeinA"},"content":"        model.updateFilteredStallList(predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"MinHeinA"},"content":"                String.format(Messages.MESSAGE_STALLS_LISTED_OVERVIEW, model.getFilteredStallList().size()));","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"jamietan2002"},"content":"                || (other instanceof SFindCommand // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"jamietan2002"},"content":"                \u0026\u0026 predicate.equals(((SFindCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"MinHeinA":2,"Hikoya":3,"-":26,"jamietan2002":17}},{"path":"src/main/java/foodwhere/logic/commands/SListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.model.Model.PREDICATE_SHOW_ALL_STALLS;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"MinHeinA"},"content":" * Lists all stalls in the address book to the user.","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":"public class SListCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"jamietan2002"},"content":"    public static final String COMMAND_WORD \u003d \"slist\";","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"MinHeinA"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all stalls\";","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"MinHeinA"},"content":"        model.updateFilteredStallList(PREDICATE_SHOW_ALL_STALLS);","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"MinHeinA":4,"Hikoya":2,"-":16,"jamietan2002":2}},{"path":"src/main/java/foodwhere/logic/commands/SSortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import foodwhere.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"import foodwhere.model.stall.comparator.StallsComparatorList;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":" * Sort and list all stalls in the address book to the user.","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"public class SSortCommand extends Command {","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"    public static final String COMMAND_WORD \u003d \"ssort\";","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"            + \": Sort the stall list by specified criteria. See user guide for the list of criteria supported.\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"            + \"Parameters: CRITERIA (case-insensitive)\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"            + \"Example: \" + COMMAND_WORD + \" name\";","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"The stall list is now sorted by %1$s\";","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"    private final StallsComparatorList stallsComparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"    public SSortCommand(StallsComparatorList stallsComparator) {","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"        this.stallsComparator \u003d stallsComparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"LikHern"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"LikHern"},"content":"        model.sortStalls(stallsComparator.getComparator());","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"LikHern"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, stallsComparator.getCriteria()));","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"LikHern":36}},{"path":"src/main/java/foodwhere/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands.exceptions;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Hikoya":1,"-":16}},{"path":"src/main/java/foodwhere/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.ClearCommand;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.Command;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.ExitCommand;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.HelpCommand;","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.RAddCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.RDeleteCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.commands.REditCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.RFindCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.RListCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"import foodwhere.logic.commands.RSortCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.SAddCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.SDeleteCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.commands.SEditCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.SFindCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.SListCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"import foodwhere.logic.commands.SSortCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"jamietan2002"},"content":"        case RAddCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"jamietan2002"},"content":"            return new RAddCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"jamietan2002"},"content":"        case SAddCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"jamietan2002"},"content":"            return new SAddCommandParser().parse(arguments);","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"jamietan2002"},"content":"        case SDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"jamietan2002"},"content":"            return new SDeleteCommandParser().parse(arguments);","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"jamietan2002"},"content":"        case RDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"jamietan2002"},"content":"            return new RDeleteCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"jamietan2002"},"content":"        case RListCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"jamietan2002"},"content":"            return new RListCommand();","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"jamietan2002"},"content":"        case SListCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"jamietan2002"},"content":"            return new SListCommand();","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":81,"author":{"gitId":"MinHeinA"},"content":"        case REditCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"MinHeinA"},"content":"            return new REditCommandParser().parse(arguments);","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"jamietan2002"},"content":"        case RFindCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"jamietan2002"},"content":"            return new RFindCommandParser().parse(arguments);","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"MinHeinA"},"content":"        case SEditCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"MinHeinA"},"content":"            return new SEditCommandParser().parse(arguments);","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"jamietan2002"},"content":"        case SFindCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"jamietan2002"},"content":"            return new SFindCommandParser().parse(arguments);","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"LikHern"},"content":"        case SSortCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"LikHern"},"content":"            return new SSortCommandParser().parse(arguments);","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"LikHern"},"content":"        case RSortCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"LikHern"},"content":"            return new RSortCommandParser().parse(arguments);","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"MinHeinA":7,"LikHern":8,"Hikoya":8,"-":52,"jamietan2002":29}},{"path":"src/main/java/foodwhere/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"Hikoya":1,"-":59}},{"path":"src/main/java/foodwhere/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Hikoya":1,"-":147}},{"path":"src/main/java/foodwhere/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":"    public static final Prefix PREFIX_CONTENT \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":"    public static final Prefix PREFIX_STALL_INDEX \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"    public static final Prefix PREFIX_RATING \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Hikoya":3,"-":12,"jamietan2002":3}},{"path":"src/main/java/foodwhere/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.Command;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Hikoya":3,"-":13}},{"path":"src/main/java/foodwhere/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.commons.core.Messages;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.index.Index;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.util.StringUtil;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Address;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.review.Content;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.review.Date;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.review.Rating;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"import foodwhere.model.review.comparator.ReviewsComparatorList;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"import foodwhere.model.stall.comparator.StallsComparatorList;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"jamietan2002"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"jamietan2002"},"content":"     * Parses {@code Collection\u003cString\u003e names} into a {@code Set\u003cNames\u003e}.","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"jamietan2002"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"jamietan2002"},"content":"    public static Set\u003cName\u003e parseNameList(Collection\u003cString\u003e names) throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"jamietan2002"},"content":"        requireNonNull(names);","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"jamietan2002"},"content":"        final Set\u003cName\u003e nameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"jamietan2002"},"content":"        for (String name : names) {","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"jamietan2002"},"content":"            nameSet.add(parseName(name));","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"jamietan2002"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"jamietan2002"},"content":"        return nameSet;","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"Hikoya"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"Hikoya"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"Hikoya"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"Hikoya"},"content":"        requireNonNull(tag);","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"Hikoya"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"Hikoya"},"content":"        if (!Tag.isValidTag(trimmedTag)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"Hikoya"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"Hikoya"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":99,"author":{"gitId":"Hikoya"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":101,"author":{"gitId":"Hikoya"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"Hikoya"},"content":"        requireNonNull(tags);","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"Hikoya"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"Hikoya"},"content":"        for (String tag : tags) {","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"Hikoya"},"content":"            tagSet.add(parseTag(tag));","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":107,"author":{"gitId":"Hikoya"},"content":"        return tagSet;","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":109,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"jamietan2002"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"jamietan2002"},"content":"     * Parses a {@code String date} into an {@code Date}.","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"jamietan2002"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"jamietan2002"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"jamietan2002"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"jamietan2002"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"jamietan2002"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"jamietan2002"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"jamietan2002"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"jamietan2002"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"jamietan2002"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"jamietan2002"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"jamietan2002"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"jamietan2002"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"jamietan2002"},"content":"     * Parses a {@code String content} into an {@code Content}.","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"jamietan2002"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"jamietan2002"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"jamietan2002"},"content":"     * @throws ParseException if the given {@code content} is invalid.","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"jamietan2002"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"jamietan2002"},"content":"    public static Content parseContent(String content) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"jamietan2002"},"content":"        requireNonNull(content);","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"jamietan2002"},"content":"        String trimmedContent \u003d content.trim();","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"jamietan2002"},"content":"        if (!Content.isValidContent(trimmedContent)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"jamietan2002"},"content":"            throw new ParseException(Content.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"jamietan2002"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"jamietan2002"},"content":"        return new Content(trimmedContent);","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"Hikoya"},"content":"     * Parses a {@code String rating} into an {@code Rating}.","lastModifiedDate":"2022-10-21"},{"lineNumber":142,"author":{"gitId":"Hikoya"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"Hikoya"},"content":"     * @throws ParseException if the given {@code rating} is invalid.","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"Hikoya"},"content":"    public static Rating parseRating(String rating) throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":147,"author":{"gitId":"Hikoya"},"content":"        requireNonNull(rating);","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"Hikoya"},"content":"        if (!Rating.isValidRating(rating)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"Hikoya"},"content":"            throw new ParseException(Rating.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"Hikoya"},"content":"        return new Rating(rating);","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":154,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":155,"author":{"gitId":"LikHern"},"content":"     * Parses a {@code String criteria} into an {@code StallsComparatorList}.","lastModifiedDate":"2022-10-20"},{"lineNumber":156,"author":{"gitId":"LikHern"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-20"},{"lineNumber":157,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":158,"author":{"gitId":"LikHern"},"content":"     * @throws ParseException if the given {@code criteria} is invalid.","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":160,"author":{"gitId":"LikHern"},"content":"    public static StallsComparatorList parseStallCriteria(String criteria) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"LikHern"},"content":"        requireNonNull(criteria);","lastModifiedDate":"2022-10-20"},{"lineNumber":162,"author":{"gitId":"LikHern"},"content":"        String trimmedCriteria \u003d criteria.trim();","lastModifiedDate":"2022-10-20"},{"lineNumber":163,"author":{"gitId":"LikHern"},"content":"        try {","lastModifiedDate":"2022-10-20"},{"lineNumber":164,"author":{"gitId":"LikHern"},"content":"            return StallsComparatorList.valueOf(trimmedCriteria.toUpperCase());","lastModifiedDate":"2022-10-20"},{"lineNumber":165,"author":{"gitId":"LikHern"},"content":"        } catch (IllegalArgumentException iae) {","lastModifiedDate":"2022-10-20"},{"lineNumber":166,"author":{"gitId":"LikHern"},"content":"            throw new ParseException(StallsComparatorList.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":167,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":168,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":169,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":170,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":171,"author":{"gitId":"LikHern"},"content":"     * Parses a {@code String criteria} into an {@code ReviewsComparatorList}.","lastModifiedDate":"2022-10-20"},{"lineNumber":172,"author":{"gitId":"LikHern"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-20"},{"lineNumber":173,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":174,"author":{"gitId":"LikHern"},"content":"     * @throws ParseException if the given {@code criteria} is invalid.","lastModifiedDate":"2022-10-20"},{"lineNumber":175,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":176,"author":{"gitId":"LikHern"},"content":"    public static ReviewsComparatorList parseReviewCriteria(String criteria) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":177,"author":{"gitId":"LikHern"},"content":"        requireNonNull(criteria);","lastModifiedDate":"2022-10-20"},{"lineNumber":178,"author":{"gitId":"LikHern"},"content":"        String trimmedCriteria \u003d criteria.trim();","lastModifiedDate":"2022-10-20"},{"lineNumber":179,"author":{"gitId":"LikHern"},"content":"        try {","lastModifiedDate":"2022-10-20"},{"lineNumber":180,"author":{"gitId":"LikHern"},"content":"            return ReviewsComparatorList.valueOf(trimmedCriteria.toUpperCase());","lastModifiedDate":"2022-10-20"},{"lineNumber":181,"author":{"gitId":"LikHern"},"content":"        } catch (IllegalArgumentException iae) {","lastModifiedDate":"2022-10-20"},{"lineNumber":182,"author":{"gitId":"LikHern"},"content":"            throw new ParseException(ReviewsComparatorList.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":183,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":184,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"LikHern":34,"Hikoya":37,"-":67,"jamietan2002":47}},{"path":"src/main/java/foodwhere/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Hikoya":1,"-":38}},{"path":"src/main/java/foodwhere/logic/parser/RAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamietan2002"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_MISSING_CONTENT;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_MISSING_DATE;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_MISSING_INDEX;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_MISSING_RATING;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.RAddCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.review.Content;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.review.Date;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.review.Rating;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":" * Parses input arguments and creates a new RAddCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"jamietan2002"},"content":"public class RAddCommandParser implements Parser\u003cRAddCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"jamietan2002"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"     * Parses the given {@code String} of arguments in the context of the RAddCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"     * and returns an RAddCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"jamietan2002"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"    public RAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"jamietan2002"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"jamietan2002"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"jamietan2002"},"content":"                        CliSyntax.PREFIX_STALL_INDEX,","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"                        CliSyntax.PREFIX_DATE,","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"jamietan2002"},"content":"                        CliSyntax.PREFIX_CONTENT,","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"                        CliSyntax.PREFIX_RATING,","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"                        CliSyntax.PREFIX_TAG);","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_STALL_INDEX)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"            throw new ParseException(String.format(MESSAGE_MISSING_INDEX, RAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_DATE)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"            throw new ParseException(String.format(MESSAGE_MISSING_DATE, RAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_CONTENT)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"            throw new ParseException(String.format(MESSAGE_MISSING_CONTENT, RAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_RATING)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"            throw new ParseException(String.format(MESSAGE_MISSING_RATING, RAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"jamietan2002"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"jamietan2002"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"jamietan2002"},"content":"        Index stallIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"jamietan2002"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"jamietan2002"},"content":"            stallIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(CliSyntax.PREFIX_STALL_INDEX).get());","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"jamietan2002"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_STALL_DISPLAYED_INDEX,","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"                    RAddCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"jamietan2002"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"jamietan2002"},"content":"        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(CliSyntax.PREFIX_DATE).get());","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"jamietan2002"},"content":"        Content content \u003d ParserUtil.parseContent(argMultimap.getValue(CliSyntax.PREFIX_CONTENT).get());","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"Hikoya"},"content":"        Rating rating \u003d ParserUtil.parseRating(argMultimap.getValue(CliSyntax.PREFIX_RATING).get());","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"Hikoya"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(CliSyntax.PREFIX_TAG));","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"        return new RAddCommand(stallIndex, date, content, rating, tagList);","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"jamietan2002"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"jamietan2002"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"jamietan2002"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"jamietan2002"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"jamietan2002"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"jamietan2002"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"jamietan2002"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Hikoya":32,"jamietan2002":53}},{"path":"src/main/java/foodwhere/logic/parser/RDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamietan2002"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.RDeleteCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"jamietan2002"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":" * Parses input arguments and creates a new RDeleteCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"jamietan2002"},"content":"public class RDeleteCommandParser implements Parser\u003cRDeleteCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"jamietan2002"},"content":"     * Parses the given {@code String} of arguments in the context of the RDeleteCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":"     * and returns a RDeleteCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":"    public RDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"jamietan2002"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"            return new RDeleteCommand(index);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"jamietan2002"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, pe.getMessage())","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":"                            + RDeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"jamietan2002"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"jamietan2002"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jamietan2002":30}},{"path":"src/main/java/foodwhere/logic/parser/REditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MinHeinA"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"MinHeinA"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"MinHeinA"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"MinHeinA"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"MinHeinA"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"MinHeinA"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.commons.core.index.Index;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.commands.REditCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.commands.REditCommand.EditReviewDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"MinHeinA"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"MinHeinA"},"content":" * Parses input arguments and creates a new REditCommand object","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"MinHeinA"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"MinHeinA"},"content":"public class REditCommandParser implements Parser\u003cREditCommand\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"MinHeinA"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"MinHeinA"},"content":"     * Parses the given {@code String} of arguments in the context of the REditCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"MinHeinA"},"content":"     * and returns an REditCommand object for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"MinHeinA"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"MinHeinA"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"MinHeinA"},"content":"    public REditCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"MinHeinA"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"MinHeinA"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"MinHeinA"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"MinHeinA"},"content":"                        CliSyntax.PREFIX_DATE,","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"MinHeinA"},"content":"                        CliSyntax.PREFIX_CONTENT,","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"MinHeinA"},"content":"                        CliSyntax.PREFIX_RATING,","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"MinHeinA"},"content":"                        CliSyntax.PREFIX_TAG);","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"MinHeinA"},"content":"        Index index;","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"MinHeinA"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"MinHeinA"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"MinHeinA"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"MinHeinA"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, REditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"MinHeinA"},"content":"        EditReviewDescriptor editReviewDescriptor \u003d new EditReviewDescriptor();","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"MinHeinA"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_DATE).isPresent()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"MinHeinA"},"content":"            editReviewDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(CliSyntax.PREFIX_DATE).get()));","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"MinHeinA"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_CONTENT).isPresent()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"MinHeinA"},"content":"            editReviewDescriptor.setContent(ParserUtil.parseContent(","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"MinHeinA"},"content":"                    argMultimap.getValue(CliSyntax.PREFIX_CONTENT).get()));","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"MinHeinA"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_RATING).isPresent()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"MinHeinA"},"content":"            editReviewDescriptor.setRating(ParserUtil.parseRating(","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"                    argMultimap.getValue(CliSyntax.PREFIX_RATING).get()));","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"MinHeinA"},"content":"        parseTagsForEdit(argMultimap.getAllValues(CliSyntax.PREFIX_TAG))","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"MinHeinA"},"content":"                .ifPresent(editReviewDescriptor::setTags);","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"MinHeinA"},"content":"        if (!editReviewDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"MinHeinA"},"content":"            throw new ParseException(REditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"MinHeinA"},"content":"        return new REditCommand(index, editReviewDescriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"MinHeinA"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"MinHeinA"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"MinHeinA"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"MinHeinA"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"MinHeinA"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"MinHeinA"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"MinHeinA"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"MinHeinA"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"MinHeinA"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"MinHeinA"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"MinHeinA"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"MinHeinA"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"MinHeinA":80,"Hikoya":1}},{"path":"src/main/java/foodwhere/logic/parser/RFindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamietan2002"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"jamietan2002"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"jamietan2002"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.RFindCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.review.ReviewContainsKeywordsPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"jamietan2002"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":" * Parses input arguments and creates a new RFindCommand object","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"public class RFindCommandParser implements Parser\u003cRFindCommand\u003e {","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"jamietan2002"},"content":"     * Parses the given {@code String} of arguments in the context of the RFindCommand","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"     * and returns a RFindCommand object for execution.","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"jamietan2002"},"content":"    public RFindCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"jamietan2002"},"content":"            ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"                    CliSyntax.PREFIX_NAME,","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"                    CliSyntax.PREFIX_TAG);","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"        if ((!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_NAME)","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, CliSyntax.PREFIX_TAG))","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"jamietan2002"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"jamietan2002"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"jamietan2002"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"jamietan2002"},"content":"        Set\u003cName\u003e nameSet \u003d ParserUtil.parseNameList(argMultimap.getAllValues(CliSyntax.PREFIX_NAME));","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"jamietan2002"},"content":"        Set\u003cTag\u003e tagSet \u003d ParserUtil.parseTags(argMultimap.getAllValues(CliSyntax.PREFIX_TAG));","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"jamietan2002"},"content":"        return new RFindCommand(new ReviewContainsKeywordsPredicate(nameSet, tagSet));","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"jamietan2002"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"jamietan2002"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"jamietan2002"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"jamietan2002":47}},{"path":"src/main/java/foodwhere/logic/parser/RSortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import foodwhere.logic.commands.RSortCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"import foodwhere.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"import foodwhere.model.review.comparator.ReviewsComparatorList;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":" * Parses input arguments and creates a new RSortCommand object","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"public class RSortCommandParser implements Parser\u003cRSortCommand\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"     * Parses the given {@code String} of arguments in the context of the RSortCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"     * and returns a RSortCommand object for execution.","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"    public RSortCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"        try {","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"            ReviewsComparatorList reviewsComparator \u003d ParserUtil.parseReviewCriteria(args);","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"            return new RSortCommand(reviewsComparator);","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RSortCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"LikHern":27}},{"path":"src/main/java/foodwhere/logic/parser/SAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_MISSING_ADDRESS;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_MISSING_NAME;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.SAddCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Address;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":" * Parses input arguments and creates a new SAddCommand object","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"public class SAddCommandParser implements Parser\u003cSAddCommand\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":"     * Parses the given {@code String} of arguments in the context of the SAddCommand","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":"     * and returns an SAddCommand object for execution.","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"jamietan2002"},"content":"    public SAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"                        CliSyntax.PREFIX_NAME,","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"                        CliSyntax.PREFIX_ADDRESS,","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"                        CliSyntax.PREFIX_TAG);","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_NAME)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"            throw new ParseException(String.format(MESSAGE_MISSING_NAME, SAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_ADDRESS)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"            throw new ParseException(String.format(MESSAGE_MISSING_ADDRESS, SAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"        if (!arePrefixesPresent(argMultimap,","lastModifiedDate":"2022-09-26"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"                CliSyntax.PREFIX_NAME,","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"MinHeinA"},"content":"                CliSyntax.PREFIX_ADDRESS)","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":46,"author":{"gitId":"jamietan2002"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(CliSyntax.PREFIX_NAME).get());","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(CliSyntax.PREFIX_ADDRESS).get());","lastModifiedDate":"2022-09-26"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(CliSyntax.PREFIX_TAG));","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"        Stall stall \u003d new Stall(name, address, tagList);","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"jamietan2002"},"content":"        return new SAddCommand(stall);","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"MinHeinA":2,"Hikoya":26,"-":30,"jamietan2002":8}},{"path":"src/main/java/foodwhere/logic/parser/SDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.index.Index;","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.SDeleteCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":" * Parses input arguments and creates a new SDeleteCommand object","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"jamietan2002"},"content":"public class SDeleteCommandParser implements Parser\u003cSDeleteCommand\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":"     * Parses the given {@code String} of arguments in the context of the SDeleteCommand","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":"     * and returns a SDeleteCommand object for execution.","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"    public SDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":"            return new SDeleteCommand(index);","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INVALID_INDEX)","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"jamietan2002"},"content":"                            + SDeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Hikoya":4,"-":17,"jamietan2002":11}},{"path":"src/main/java/foodwhere/logic/parser/SEditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.index.Index;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.commands.SEditCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.commands.SEditCommand.EditStallDescriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"MinHeinA"},"content":" * Parses input arguments and creates a new SEditCommand object","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"MinHeinA"},"content":"public class SEditCommandParser implements Parser\u003cSEditCommand\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"MinHeinA"},"content":"     * Parses the given {@code String} of arguments in the context of the SEditCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"MinHeinA"},"content":"     * and returns an SEditCommand object for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"MinHeinA"},"content":"    public SEditCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"                        CliSyntax.PREFIX_NAME,","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"                        CliSyntax.PREFIX_ADDRESS,","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"                        CliSyntax.PREFIX_TAG);","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"MinHeinA"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SEditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"MinHeinA"},"content":"        EditStallDescriptor editStallDescriptor \u003d new EditStallDescriptor();","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"MinHeinA"},"content":"            editStallDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(CliSyntax.PREFIX_NAME).get()));","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2022-09-26"},{"lineNumber":48,"author":{"gitId":"MinHeinA"},"content":"            editStallDescriptor.setAddress(ParserUtil.parseAddress(","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"                    argMultimap.getValue(CliSyntax.PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"        parseTagsForEdit(argMultimap.getAllValues(CliSyntax.PREFIX_TAG))","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"                .ifPresent(editStallDescriptor::setTags);","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"MinHeinA"},"content":"        if (!editStallDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"MinHeinA"},"content":"            throw new ParseException(SEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"MinHeinA"},"content":"        return new SEditCommand(index, editStallDescriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"Hikoya"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"Hikoya"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"Hikoya"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"Hikoya"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"Hikoya"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"MinHeinA":14,"Hikoya":22,"-":40}},{"path":"src/main/java/foodwhere/logic/parser/SFindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"jamietan2002"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"jamietan2002"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.SFindCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.stall.StallContainsKeywordsPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"jamietan2002"},"content":" * Parses input arguments and creates a new SFindCommand object","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":"public class SFindCommandParser implements Parser\u003cSFindCommand\u003e {","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"     * Parses the given {@code String} of arguments in the context of the SFindCommand","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"jamietan2002"},"content":"     * and returns a SFindCommand object for execution.","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":"    public SFindCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"jamietan2002"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"jamietan2002"},"content":"                        CliSyntax.PREFIX_NAME,","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"                        CliSyntax.PREFIX_TAG);","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"jamietan2002"},"content":"        if ((!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_NAME)","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, CliSyntax.PREFIX_TAG))","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"jamietan2002"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"        Set\u003cName\u003e nameList \u003d ParserUtil.parseNameList(argMultimap.getAllValues(CliSyntax.PREFIX_NAME));","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"jamietan2002"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(CliSyntax.PREFIX_TAG));","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"jamietan2002"},"content":"        return new SFindCommand(new StallContainsKeywordsPredicate(nameList, tagList));","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"jamietan2002"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Hikoya":3,"-":16,"jamietan2002":27}},{"path":"src/main/java/foodwhere/logic/parser/SSortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import foodwhere.logic.commands.SSortCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"import foodwhere.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"import foodwhere.model.stall.comparator.StallsComparatorList;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":" * Parses input arguments and creates a new SSortCommand object","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"public class SSortCommandParser implements Parser\u003cSSortCommand\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"     * Parses the given {@code String} of arguments in the context of the SSortCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"     * and returns a SSortCommand object for execution.","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"    public SSortCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"        try {","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"            StallsComparatorList stallsComparator \u003d ParserUtil.parseStallCriteria(args);","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"            return new SSortCommand(stallsComparator);","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SSortCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"LikHern":27}},{"path":"src/main/java/foodwhere/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.parser.exceptions;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"Hikoya":2,"-":15}},{"path":"src/main/java/foodwhere/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.model;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.UniqueReviewList;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.stall.StallBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.UniqueStallList;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.stall.exceptions.StallNotFoundException;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"MinHeinA"},"content":" * Duplicates are not allowed (by .isSameStall comparison)","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"MinHeinA"},"content":"    private final UniqueStallList stalls;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"    private final UniqueReviewList reviews;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"MinHeinA"},"content":"        stalls \u003d new UniqueStallList();","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"        reviews \u003d new UniqueReviewList();","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"MinHeinA"},"content":"     * Creates an AddressBook using the Stalls in the {@code toBeCopied}","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"        refreshReviews();","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"     * Sets {@code reviews} correctly.","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"    private void refreshReviews() {","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"        ArrayList\u003cReview\u003e current \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"        for (Stall stall : stalls) {","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"            for (Review review : stall.getReviews()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"                current.add(review);","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"        ArrayList\u003cReview\u003e toRemove \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"        for (Review review : reviews) {","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"            if (!current.contains(review)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"                toRemove.add(review);","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"        for (Review review : toRemove) {","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"            reviews.remove(review);","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"clarence-chew"},"content":"        for (Review review : current) {","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"clarence-chew"},"content":"            if (!reviews.contains(review)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"clarence-chew"},"content":"                reviews.add(review);","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"clarence-chew"},"content":"     * Finds the {@code Stall} which this review refers to","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"clarence-chew"},"content":"    private Stall getStallOfReview(Review review) throws StallNotFoundException {","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"clarence-chew"},"content":"        for (Stall stall : stalls) {","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"clarence-chew"},"content":"            boolean isMatchingName \u003d stall.getName().equals(review.getName());","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"clarence-chew"},"content":"            boolean isMatchingAddress \u003d stall.getAddress().equals(review.getAddress());","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"clarence-chew"},"content":"            if (isMatchingName \u0026\u0026 isMatchingAddress) {","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"clarence-chew"},"content":"                return stall;","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"clarence-chew"},"content":"        throw new StallNotFoundException();","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"MinHeinA"},"content":"     * Replaces the contents of the stall list with {@code stalls}.","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"MinHeinA"},"content":"     * {@code stalls} must not contain duplicate stalls.","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"MinHeinA"},"content":"    public void setStalls(List\u003cStall\u003e stalls) {","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"MinHeinA"},"content":"        this.stalls.setStalls(stalls);","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"clarence-chew"},"content":"        refreshReviews();","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":106,"author":{"gitId":"MinHeinA"},"content":"        setStalls(newData.getStallList());","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"clarence-chew"},"content":"        refreshReviews();","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"MinHeinA"},"content":"    //// stall-level operations","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"MinHeinA"},"content":"     * Returns true if a stall with the same identity as {@code stall} exists in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"MinHeinA"},"content":"    public boolean hasStall(Stall stall) {","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"MinHeinA"},"content":"        requireNonNull(stall);","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"MinHeinA"},"content":"        return stalls.contains(stall);","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"MinHeinA"},"content":"     * Adds a stall to the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"MinHeinA"},"content":"     * The stall must not already exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"MinHeinA"},"content":"    public void addStall(Stall p) {","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"MinHeinA"},"content":"        stalls.add(p);","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"clarence-chew"},"content":"        refreshReviews();","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"MinHeinA"},"content":"     * Replaces the given stall {@code target} in the list with {@code editedStall}.","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":132,"author":{"gitId":"MinHeinA"},"content":"     * The stall identity of {@code editedStall} must not be the same as another existing stall in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"MinHeinA"},"content":"    public void setStall(Stall target, Stall editedStall) {","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"MinHeinA"},"content":"        requireNonNull(editedStall);","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"MinHeinA"},"content":"        stalls.setStall(target, editedStall);","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"clarence-chew"},"content":"        refreshReviews();","lastModifiedDate":"2022-10-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"MinHeinA"},"content":"    public void removeStall(Stall key) {","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"MinHeinA"},"content":"        stalls.remove(key);","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"clarence-chew"},"content":"        refreshReviews();","lastModifiedDate":"2022-10-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"LikHern"},"content":"     * Sorts the stall list by {@code comparator}.","lastModifiedDate":"2022-10-20"},{"lineNumber":151,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"LikHern"},"content":"    public void sortStalls(Comparator\u003cStall\u003e comparator) {","lastModifiedDate":"2022-10-20"},{"lineNumber":153,"author":{"gitId":"LikHern"},"content":"        stalls.sort(comparator);","lastModifiedDate":"2022-10-20"},{"lineNumber":154,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"clarence-chew"},"content":"    //// review methods","lastModifiedDate":"2022-10-09"},{"lineNumber":157,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":158,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":159,"author":{"gitId":"clarence-chew"},"content":"     * Returns true if a review with the same identity as {@code review} exists in the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":160,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"clarence-chew"},"content":"    public boolean hasReview(Review review) {","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"clarence-chew"},"content":"        requireNonNull(review);","lastModifiedDate":"2022-10-09"},{"lineNumber":163,"author":{"gitId":"clarence-chew"},"content":"        return reviews.contains(review);","lastModifiedDate":"2022-10-09"},{"lineNumber":164,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":165,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":166,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":167,"author":{"gitId":"clarence-chew"},"content":"     * Adds a review to the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":168,"author":{"gitId":"clarence-chew"},"content":"     * The review must not already exist in the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":169,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":170,"author":{"gitId":"clarence-chew"},"content":"    public void addReview(Review review) {","lastModifiedDate":"2022-10-20"},{"lineNumber":171,"author":{"gitId":"clarence-chew"},"content":"        requireNonNull(review);","lastModifiedDate":"2022-10-20"},{"lineNumber":172,"author":{"gitId":"clarence-chew"},"content":"        Stall oldStall \u003d getStallOfReview(review);","lastModifiedDate":"2022-10-20"},{"lineNumber":173,"author":{"gitId":"clarence-chew"},"content":"        Stall newStall \u003d new StallBuilder(oldStall)","lastModifiedDate":"2022-10-20"},{"lineNumber":174,"author":{"gitId":"clarence-chew"},"content":"                .addReview(review).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":175,"author":{"gitId":"clarence-chew"},"content":"        setStall(oldStall, newStall);","lastModifiedDate":"2022-10-20"},{"lineNumber":176,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":177,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":178,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":179,"author":{"gitId":"clarence-chew"},"content":"     * Adds a review to a stall in the address book.","lastModifiedDate":"2022-10-23"},{"lineNumber":180,"author":{"gitId":"clarence-chew"},"content":"     * The review must not already exist in the address book.","lastModifiedDate":"2022-10-23"},{"lineNumber":181,"author":{"gitId":"clarence-chew"},"content":"     * The stall must exist in the address book.","lastModifiedDate":"2022-10-23"},{"lineNumber":182,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":183,"author":{"gitId":"clarence-chew"},"content":"    public void addReviewToStall(Review review, Stall stall) {","lastModifiedDate":"2022-10-23"},{"lineNumber":184,"author":{"gitId":"clarence-chew"},"content":"        requireNonNull(review);","lastModifiedDate":"2022-10-23"},{"lineNumber":185,"author":{"gitId":"clarence-chew"},"content":"        Stall newStall \u003d new StallBuilder(stall)","lastModifiedDate":"2022-10-23"},{"lineNumber":186,"author":{"gitId":"clarence-chew"},"content":"                .addReview(review).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":187,"author":{"gitId":"clarence-chew"},"content":"        setStall(stall, newStall);","lastModifiedDate":"2022-10-23"},{"lineNumber":188,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":189,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":190,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":191,"author":{"gitId":"clarence-chew"},"content":"     * Replaces the given review {@code target} in the list with {@code editedReview}.","lastModifiedDate":"2022-10-09"},{"lineNumber":192,"author":{"gitId":"clarence-chew"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":193,"author":{"gitId":"clarence-chew"},"content":"     * The review identity of {@code editedReview} must not be the same as another existing review in the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":194,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":195,"author":{"gitId":"clarence-chew"},"content":"    public void setReview(Review target, Review editedReview) {","lastModifiedDate":"2022-10-09"},{"lineNumber":196,"author":{"gitId":"clarence-chew"},"content":"        requireNonNull(target);","lastModifiedDate":"2022-10-20"},{"lineNumber":197,"author":{"gitId":"clarence-chew"},"content":"        requireNonNull(editedReview);","lastModifiedDate":"2022-10-09"},{"lineNumber":198,"author":{"gitId":"clarence-chew"},"content":"        Stall oldStall \u003d getStallOfReview(target);","lastModifiedDate":"2022-10-20"},{"lineNumber":199,"author":{"gitId":"clarence-chew"},"content":"        Stall newStall \u003d new StallBuilder(oldStall)","lastModifiedDate":"2022-10-20"},{"lineNumber":200,"author":{"gitId":"clarence-chew"},"content":"                .removeReview(target)","lastModifiedDate":"2022-10-20"},{"lineNumber":201,"author":{"gitId":"clarence-chew"},"content":"                .addReview(editedReview).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":202,"author":{"gitId":"clarence-chew"},"content":"        setStall(oldStall, newStall);","lastModifiedDate":"2022-10-20"},{"lineNumber":203,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":204,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":205,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":206,"author":{"gitId":"clarence-chew"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-10-09"},{"lineNumber":207,"author":{"gitId":"clarence-chew"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":208,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":209,"author":{"gitId":"clarence-chew"},"content":"    public void removeReview(Review key) {","lastModifiedDate":"2022-10-09"},{"lineNumber":210,"author":{"gitId":"clarence-chew"},"content":"        requireNonNull(key);","lastModifiedDate":"2022-10-20"},{"lineNumber":211,"author":{"gitId":"clarence-chew"},"content":"        Stall oldStall \u003d getStallOfReview(key);","lastModifiedDate":"2022-10-20"},{"lineNumber":212,"author":{"gitId":"clarence-chew"},"content":"        Stall newStall \u003d new StallBuilder(oldStall)","lastModifiedDate":"2022-10-20"},{"lineNumber":213,"author":{"gitId":"clarence-chew"},"content":"                .removeReview(key).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":214,"author":{"gitId":"clarence-chew"},"content":"        setStall(oldStall, newStall);","lastModifiedDate":"2022-10-20"},{"lineNumber":215,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":216,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":217,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":218,"author":{"gitId":"LikHern"},"content":"     * Sorts the review list by {@code comparator}.","lastModifiedDate":"2022-10-20"},{"lineNumber":219,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":220,"author":{"gitId":"LikHern"},"content":"    public void sortReviews(Comparator\u003cReview\u003e comparator) {","lastModifiedDate":"2022-10-20"},{"lineNumber":221,"author":{"gitId":"LikHern"},"content":"        reviews.sort(comparator);","lastModifiedDate":"2022-10-20"},{"lineNumber":222,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":223,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"clarence-chew"},"content":"        return stalls.asUnmodifiableObservableList().size() + \" stalls, \"","lastModifiedDate":"2022-10-09"},{"lineNumber":229,"author":{"gitId":"clarence-chew"},"content":"                + reviews.asUnmodifiableObservableList().size() + \" reviews\";","lastModifiedDate":"2022-10-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"MinHeinA"},"content":"    public ObservableList\u003cStall\u003e getStallList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":235,"author":{"gitId":"MinHeinA"},"content":"        return stalls.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":238,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":239,"author":{"gitId":"clarence-chew"},"content":"    public ObservableList\u003cReview\u003e getReviewList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":240,"author":{"gitId":"clarence-chew"},"content":"        return reviews.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-09"},{"lineNumber":241,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":242,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":247,"author":{"gitId":"clarence-chew"},"content":"                \u0026\u0026 stalls.equals(((AddressBook) other).stalls)","lastModifiedDate":"2022-10-09"},{"lineNumber":248,"author":{"gitId":"clarence-chew"},"content":"                \u0026\u0026 reviews.equals(((AddressBook) other).reviews));","lastModifiedDate":"2022-10-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":253,"author":{"gitId":"clarence-chew"},"content":"        return Objects.hash(stalls, reviews);","lastModifiedDate":"2022-10-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"MinHeinA":29,"LikHern":15,"clarence-chew":127,"Hikoya":1,"-":83}},{"path":"src/main/java/foodwhere/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.model;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.GuiSettings;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"MinHeinA"},"content":"    Predicate\u003cStall\u003e PREDICATE_SHOW_ALL_STALLS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"    Predicate\u003cReview\u003e PREDICATE_SHOW_ALL_REVIEWS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"MinHeinA"},"content":"     * Returns true if a stall with the same identity as {@code stall} exists in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"MinHeinA"},"content":"    boolean hasStall(Stall stall);","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"MinHeinA"},"content":"     * Deletes the given stall.","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"MinHeinA"},"content":"     * The stall must exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"MinHeinA"},"content":"    void deleteStall(Stall target);","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"MinHeinA"},"content":"     * Adds the given stall.","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"MinHeinA"},"content":"     * {@code stall} must not already exist in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"MinHeinA"},"content":"    void addStall(Stall stall);","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"MinHeinA"},"content":"     * Replaces the given stall {@code target} with {@code editedStall}.","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"MinHeinA"},"content":"     * The stall identity of {@code editedStall} must not be the same as another existing stall in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"MinHeinA"},"content":"    void setStall(Stall target, Stall editedStall);","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"LikHern"},"content":"     * Sorts the stall list by {@code comparator}.","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"LikHern"},"content":"    void sortStalls(Comparator\u003cStall\u003e comparator);","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"LikHern"},"content":"     * Returns true if a review with the same identity as {@code review} exists in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"LikHern"},"content":"    boolean hasReview(Review review);","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"LikHern"},"content":"     * Deletes the given review.","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"LikHern"},"content":"     * The review must exist in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"LikHern"},"content":"    void deleteReview(Review target);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"LikHern"},"content":"     * Adds the given review.","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"LikHern"},"content":"     * {@code review} must not already exist in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"LikHern"},"content":"    void addReview(Review review);","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"clarence-chew"},"content":"     * Adds the given review to the stall.","lastModifiedDate":"2022-10-23"},{"lineNumber":108,"author":{"gitId":"clarence-chew"},"content":"     * {@code review} must not already exist in the address book.","lastModifiedDate":"2022-10-23"},{"lineNumber":109,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":110,"author":{"gitId":"clarence-chew"},"content":"    void addReviewToStall(Review review, Stall stall);","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"Hikoya"},"content":"     * Replaces the given review {@code target} with {@code editedReview}.","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"Hikoya"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"Hikoya"},"content":"     * The review identity of {@code editedReview} must not be the same as another existing review in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"Hikoya"},"content":"    void setReview(Review target, Review editedReview);","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"LikHern"},"content":"     * Sorts the review list by {@code comparator}.","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"LikHern"},"content":"    void sortReviews(Comparator\u003cReview\u003e comparator);","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"MinHeinA"},"content":"    /** Returns an unmodifiable view of the filtered stall list */","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"MinHeinA"},"content":"    ObservableList\u003cStall\u003e getFilteredStallList();","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"Hikoya"},"content":"    /** Returns an unmodifiable view of the filtered review list */","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"Hikoya"},"content":"    ObservableList\u003cReview\u003e getFilteredReviewList();","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"MinHeinA"},"content":"     * Updates the filter of the filtered stall list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"MinHeinA"},"content":"    void updateFilteredStallList(Predicate\u003cStall\u003e predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"jamietan2002"},"content":"     * Updates the filter of the filtered review list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"Hikoya"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"Hikoya"},"content":"    void updateFilteredReviewList(Predicate\u003cReview\u003e predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"MinHeinA":17,"LikHern":31,"clarence-chew":6,"Hikoya":18,"-":68,"jamietan2002":3}},{"path":"src/main/java/foodwhere/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.model;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.GuiSettings;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.LogsCenter;","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"MinHeinA"},"content":"    private final FilteredList\u003cStall\u003e filteredStalls;","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"    private final FilteredList\u003cReview\u003e filteredReviews;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"MinHeinA"},"content":"        filteredStalls \u003d new FilteredList\u003c\u003e(this.addressBook.getStallList());","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"        filteredReviews \u003d new FilteredList\u003c\u003e(this.addressBook.getReviewList());","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"MinHeinA"},"content":"    public boolean hasStall(Stall stall) {","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"MinHeinA"},"content":"        requireNonNull(stall);","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"MinHeinA"},"content":"        return addressBook.hasStall(stall);","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"MinHeinA"},"content":"    public void deleteStall(Stall target) {","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"MinHeinA"},"content":"        addressBook.removeStall(target);","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"MinHeinA"},"content":"    public void addStall(Stall stall) {","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"MinHeinA"},"content":"        addressBook.addStall(stall);","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"MinHeinA"},"content":"        updateFilteredStallList(PREDICATE_SHOW_ALL_STALLS);","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"MinHeinA"},"content":"    public void setStall(Stall target, Stall editedStall) {","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"MinHeinA"},"content":"        requireAllNonNull(target, editedStall);","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"MinHeinA"},"content":"        addressBook.setStall(target, editedStall);","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"LikHern"},"content":"    public void sortStalls(Comparator\u003cStall\u003e comparator) {","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"LikHern"},"content":"        addressBook.sortStalls(comparator);","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"LikHern"},"content":"    public boolean hasReview(Review review) {","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"LikHern"},"content":"        requireNonNull(review);","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"LikHern"},"content":"        return addressBook.hasReview(review);","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"LikHern"},"content":"    public void deleteReview(Review target) {","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"LikHern"},"content":"        addressBook.removeReview(target);","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"LikHern"},"content":"    public void addReview(Review review) {","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"LikHern"},"content":"        addressBook.addReview(review);","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"LikHern"},"content":"        updateFilteredReviewList(PREDICATE_SHOW_ALL_REVIEWS);","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"clarence-chew"},"content":"        updateFilteredStallList(PREDICATE_SHOW_ALL_STALLS);","lastModifiedDate":"2022-10-23"},{"lineNumber":139,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":140,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":141,"author":{"gitId":"clarence-chew"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":142,"author":{"gitId":"clarence-chew"},"content":"    public void addReviewToStall(Review review, Stall stall) {","lastModifiedDate":"2022-10-23"},{"lineNumber":143,"author":{"gitId":"clarence-chew"},"content":"        addressBook.addReviewToStall(review, stall);","lastModifiedDate":"2022-10-23"},{"lineNumber":144,"author":{"gitId":"clarence-chew"},"content":"        updateFilteredReviewList(PREDICATE_SHOW_ALL_REVIEWS);","lastModifiedDate":"2022-10-23"},{"lineNumber":145,"author":{"gitId":"jamietan2002"},"content":"        updateFilteredStallList(PREDICATE_SHOW_ALL_STALLS);","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"Hikoya"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"Hikoya"},"content":"    public void setReview(Review target, Review editedStall) {","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"Hikoya"},"content":"        requireAllNonNull(target, editedStall);","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"Hikoya"},"content":"        addressBook.setReview(target, editedStall);","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"LikHern"},"content":"    public void sortReviews(Comparator\u003cReview\u003e comparator) {","lastModifiedDate":"2022-10-20"},{"lineNumber":157,"author":{"gitId":"LikHern"},"content":"        addressBook.sortReviews(comparator);","lastModifiedDate":"2022-10-20"},{"lineNumber":158,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"MinHeinA"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Stall List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":163,"author":{"gitId":"MinHeinA"},"content":"     * Returns an unmodifiable view of the list of {@code Stall} backed by the internal list of","lastModifiedDate":"2022-10-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":167,"author":{"gitId":"MinHeinA"},"content":"    public ObservableList\u003cStall\u003e getFilteredStallList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"MinHeinA"},"content":"        return filteredStalls;","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"MinHeinA"},"content":"    public void updateFilteredStallList(Predicate\u003cStall\u003e predicate) {","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":174,"author":{"gitId":"MinHeinA"},"content":"        filteredStalls.setPredicate(predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":177,"author":{"gitId":"Hikoya"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Review List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"Hikoya"},"content":"     * Returns an unmodifiable view of the list of {@code Review} backed by the internal list of","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"Hikoya"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"Hikoya"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"Hikoya"},"content":"    public ObservableList\u003cReview\u003e getFilteredReviewList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"Hikoya"},"content":"        return filteredReviews;","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"Hikoya"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"Hikoya"},"content":"    public void updateFilteredReviewList(Predicate\u003cReview\u003e predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"Hikoya"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"Hikoya"},"content":"        filteredReviews.setPredicate(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":210,"author":{"gitId":"MinHeinA"},"content":"                \u0026\u0026 filteredStalls.equals(other.filteredStalls);","lastModifiedDate":"2022-10-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"MinHeinA":21,"LikHern":28,"clarence-chew":10,"Hikoya":28,"-":125,"jamietan2002":2}},{"path":"src/main/java/foodwhere/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.model;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"MinHeinA"},"content":"     * Returns an unmodifiable view of the stalls list.","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"MinHeinA"},"content":"     * This list will not contain any duplicate stalls.","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"MinHeinA"},"content":"    ObservableList\u003cStall\u003e getStallList();","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"    ObservableList\u003cReview\u003e getReviewList();","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"MinHeinA":4,"clarence-chew":2,"Hikoya":1,"-":12}},{"path":"src/main/java/foodwhere/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.model;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.GuiSettings;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Hikoya":2,"-":14}},{"path":"src/main/java/foodwhere/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.model;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.GuiSettings;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"foodwhere.json\");","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Hikoya":3,"-":84}},{"path":"src/main/java/foodwhere/model/commons/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.model.commons;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"MinHeinA"},"content":" * Represents a Stall\u0027s address in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"MinHeinA"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"MinHeinA":2,"Hikoya":2,"-":53}},{"path":"src/main/java/foodwhere/model/commons/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.model.commons;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"MinHeinA"},"content":" * Represents a Stall\u0027s name in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"jamietan2002"},"content":"                \u0026\u0026 fullName.equalsIgnoreCase(((Name) other).fullName)); // state check","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"MinHeinA":1,"Hikoya":3,"-":55,"jamietan2002":1}},{"path":"src/main/java/foodwhere/model/commons/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.model.commons;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTag(String)}","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags should be alphanumeric\";","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"    public final String tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"     * @param tag A valid tag.","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"    public Tag(String tag) {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"        requireNonNull(tag);","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"        checkArgument(isValidTag(tag), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"     * Returns true if a given string is a valid tag.","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"    public static boolean isValidTag(String test) {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"jamietan2002"},"content":"                \u0026\u0026 tag.equalsIgnoreCase(((Tag) other).tag)); // state check","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"        return tag.hashCode();","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"        return \u0027[\u0027 + tag + \u0027]\u0027;","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"Hikoya":15,"-":39,"jamietan2002":1}},{"path":"src/main/java/foodwhere/model/review/Content.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package foodwhere.model.review;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import static foodwhere.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":" * Represents a Review\u0027s content in the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidContent(String)}","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"public class Content {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Contents can take any values, and it should not be blank\";","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"     * The first character of the content must not be a whitespace,","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"    public final String value;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"     * Constructs an {@code Content}.","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"     * @param content A valid content.","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"    public Content(String content) {","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"        requireNonNull(content);","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"        checkArgument(isValidContent(content), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"        value \u003d content;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"LikHern"},"content":"     * Returns true if a given string is a valid content.","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"LikHern"},"content":"    public static boolean isValidContent(String test) {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"LikHern"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"LikHern"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"LikHern"},"content":"        return value;","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"LikHern"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"LikHern"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"LikHern"},"content":"                || (other instanceof Content // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"LikHern"},"content":"                \u0026\u0026 value.equals(((Content) other).value)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"LikHern"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"LikHern"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"LikHern":57}},{"path":"src/main/java/foodwhere/model/review/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package foodwhere.model.review;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import static foodwhere.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"import java.time.chrono.IsoChronology;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":" * Represents a Review\u0027s date in the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"public class Date implements Comparable\u003cDate\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Dates can be written as DD/MM/YYYY or DD-MM-YYYY\";","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"    public static final String VALID_DATE_CONSTRAINTS \u003d \"Dates have to be a valid date\";","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{1,2}-\\\\d{1,2}-\\\\d{4}|\\\\d{1,2}/\\\\d{1,2}/\\\\d{4}\";","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    //@@author clarence-chew-reused","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    //Reused from https://stackoverflow.com/a/30478777","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final DateTimeFormatter SLASH_DATE_FORMAT \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .appendPattern(\"d/M/yyyy\")","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .parseDefaulting(ChronoField.ERA, 1)","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .toFormatter()","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withChronology(IsoChronology.INSTANCE)","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final DateTimeFormatter DASH_DATE_FORMAT \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .appendPattern(\"d-M-yyyy\")","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .parseDefaulting(ChronoField.ERA, 1)","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .toFormatter()","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withChronology(IsoChronology.INSTANCE)","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"    public static final DateTimeFormatter OUTPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"    public static final DateTimeFormatter[] PARSING_DATE_FORMATS \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"            new DateTimeFormatter[]{ SLASH_DATE_FORMAT, DASH_DATE_FORMAT };","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"LikHern"},"content":"    public final String value;","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"    public final LocalDate date;","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"LikHern"},"content":"     * Constructs an {@code Date}.","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"LikHern"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"LikHern"},"content":"     * @param date A valid date.","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"LikHern"},"content":"    public Date(String date) {","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"LikHern"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"        checkArgument(isValidFormat(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"        checkArgument(isValidDate(date), VALID_DATE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"        this.date \u003d parseDate(date, PARSING_DATE_FORMATS);","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"        value \u003d this.date.format(OUTPUT_DATE_FORMAT);","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"     * Parses a date with formats given until one works.","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"     * @param date The string to be parsed.","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"     * @param formats The formats to use to parse the string.","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"     * @return Successfully parsed date.","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"     * @throws IllegalArgumentException If the string cannot be parsed.","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"clarence-chew"},"content":"    private static LocalDate parseDate(String date, DateTimeFormatter[] formats) {","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"clarence-chew"},"content":"        for (DateTimeFormatter format : formats) {","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"clarence-chew"},"content":"            try {","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"clarence-chew"},"content":"                LocalDate result \u003d LocalDate.parse(date, format);","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"clarence-chew"},"content":"                if (result \u003d\u003d null) {","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"                    continue;","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"clarence-chew"},"content":"                }","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"clarence-chew"},"content":"                return result;","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"clarence-chew"},"content":"            } catch (DateTimeParseException ex) {","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"clarence-chew"},"content":"                // fallthrough - try another parser","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"clarence-chew"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"clarence-chew"},"content":"        throw new IllegalArgumentException(VALID_DATE_CONSTRAINTS);","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"clarence-chew"},"content":"     * Returns true if a given string is in a valid format.","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"clarence-chew"},"content":"    public static boolean isValidFormat(String test) {","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"clarence-chew"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"LikHern"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"LikHern"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"clarence-chew"},"content":"        if (!isValidFormat(test)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"clarence-chew"},"content":"            return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"clarence-chew"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"clarence-chew"},"content":"            parseDate(test, PARSING_DATE_FORMATS);","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"clarence-chew"},"content":"        } catch (IllegalArgumentException ex) {","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"clarence-chew"},"content":"            // not a valid date","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"clarence-chew"},"content":"            return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"clarence-chew"},"content":"        return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"LikHern"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"LikHern"},"content":"        return value;","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"LikHern"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"LikHern"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"LikHern"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"LikHern"},"content":"                \u0026\u0026 value.equals(((Date) other).value)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"LikHern"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"LikHern"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"clarence-chew"},"content":"     * Compares two dates.","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"clarence-chew"},"content":"     * @param other The object to be compared.","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"clarence-chew"},"content":"     * @return 1 if this date is later, -1 if this date is earlier, 0 if the dates are the same.","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"clarence-chew"},"content":"    public int compareTo(Date other) {","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"clarence-chew"},"content":"        requireNonNull(other);","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"clarence-chew"},"content":"        return date.compareTo(other.date);","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"LikHern":47,"clarence-chew":71,"-":16}},{"path":"src/main/java/foodwhere/model/review/Rating.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.model.review;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":" * Represents a Review\u0027s rating in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRating(String)}","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"public class Rating {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"            \"Ratings can take any integer between 0 to 5, and it should not be blank\";","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"    public static final Integer MAX_RATING \u003d 5;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"    public static final Integer MIN_RATING \u003d 0;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"    public final Integer value;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"     * Constructs an {@code Rating}.","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"     * @param rating A valid rating.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"    public Rating(String rating) {","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"        requireNonNull(rating);","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"        checkArgument(isValidRating(rating), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"        value \u003d Integer.valueOf(rating);","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"     * Returns true if a given number is a valid rating.","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"    public static boolean isValidRating(String test) {","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"        if (test \u003d\u003d null) {","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"            throw new NullPointerException(\"Rating is null\");","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"        Integer value;","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"        try {","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"            value \u003d Integer.valueOf(test);","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"            return false;","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"        return value \u003e\u003d MIN_RATING \u0026\u0026 value \u003c\u003d MAX_RATING;","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"    public String toString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"        return value.toString();","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"Hikoya"},"content":"                || (other instanceof Rating // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"                \u0026\u0026 value.equals(((Rating) other).value)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"Hikoya"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"Hikoya":66}},{"path":"src/main/java/foodwhere/model/review/Review.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package foodwhere.model.review;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import static foodwhere.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Address;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":" * Represents a Review in the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":" * Guarantees: tags are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"public class Review {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"    // Identity fields","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"    private final Name name;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"    private final Address address;","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"    // Data fields","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"    private final Date date;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"    private final Content content;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"    private final Rating rating;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"    public Review(Name name, Address address, Date date, Content content, Rating rating, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"        requireAllNonNull(name, date, content, tags);","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"LikHern"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"LikHern"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"LikHern"},"content":"        this.content \u003d content;","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"        this.rating \u003d rating;","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"    public Name getName() {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"LikHern"},"content":"        return name;","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"    public Address getAddress() {","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"        return address;","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"LikHern"},"content":"    public Date getDate() {","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"LikHern"},"content":"        return date;","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"LikHern"},"content":"    public Content getContent() {","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"LikHern"},"content":"        return content;","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"    public Rating getRating() {","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"        return rating;","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"LikHern"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"Hikoya"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"Hikoya"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"LikHern"},"content":"     * Returns true if both review have the same stall name.","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"LikHern"},"content":"     * This defines a weaker notion of equality between two reviews.","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"LikHern"},"content":"    public boolean isSameReview(Review otherReview) {","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"LikHern"},"content":"        if (otherReview \u003d\u003d this) {","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"LikHern"},"content":"            return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"LikHern"},"content":"        return otherReview !\u003d null","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"clarence-chew"},"content":"                \u0026\u0026 otherReview.getName().equals(getName())","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"clarence-chew"},"content":"                \u0026\u0026 otherReview.getDate().equals(getDate())","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"clarence-chew"},"content":"                \u0026\u0026 otherReview.getContent().equals(getContent())","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"Hikoya"},"content":"                \u0026\u0026 otherReview.getRating().equals(getRating())","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"Hikoya"},"content":"                \u0026\u0026 otherReview.getTags().equals(getTags());","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"LikHern"},"content":"     * Returns true if both stalls have the same identity and data fields.","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"LikHern"},"content":"     * This defines a stronger notion of equality between two stalls.","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"LikHern"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"LikHern"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"LikHern"},"content":"            return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"LikHern"},"content":"        if (!(other instanceof Review)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"LikHern"},"content":"            return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"clarence-chew"},"content":"        Review otherReview \u003d (Review) other;","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"clarence-chew"},"content":"        return otherReview.getName().equals(getName())","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"clarence-chew"},"content":"                \u0026\u0026 otherReview.getAddress().equals(getAddress())","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"clarence-chew"},"content":"                \u0026\u0026 otherReview.getDate().equals(getDate())","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"clarence-chew"},"content":"                \u0026\u0026 otherReview.getContent().equals(getContent())","lastModifiedDate":"2022-10-23"},{"lineNumber":108,"author":{"gitId":"clarence-chew"},"content":"                \u0026\u0026 otherReview.getRating().equals(getRating())","lastModifiedDate":"2022-10-23"},{"lineNumber":109,"author":{"gitId":"clarence-chew"},"content":"                \u0026\u0026 otherReview.getTags().equals(getTags());","lastModifiedDate":"2022-10-23"},{"lineNumber":110,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"LikHern"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"LikHern"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"clarence-chew"},"content":"        return Objects.hash(name, address, date, content, rating, tags);","lastModifiedDate":"2022-10-23"},{"lineNumber":116,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"LikHern"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"LikHern"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"LikHern"},"content":"        builder.append(getName())","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"clarence-chew"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2022-10-23"},{"lineNumber":123,"author":{"gitId":"clarence-chew"},"content":"                .append(getAddress())","lastModifiedDate":"2022-10-23"},{"lineNumber":124,"author":{"gitId":"LikHern"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"LikHern"},"content":"                .append(getDate())","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"LikHern"},"content":"                .append(\"; Content: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"Hikoya"},"content":"                .append(getContent())","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"Hikoya"},"content":"                .append(\"; Rating: \")","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"Hikoya"},"content":"                .append(getRating());","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"Hikoya"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"Hikoya"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"Hikoya"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"Hikoya"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"LikHern"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"LikHern":91,"clarence-chew":21,"Hikoya":27}},{"path":"src/main/java/foodwhere/model/review/ReviewBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package foodwhere.model.review;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Address;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":" * A utility class to help with building Review objects.","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"public class ReviewBuilder {","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"    public static final String DEFAULT_NAME \u003d \"Untitled Review\";","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"Unknown Location\";","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"    public static final String DEFAULT_DATE \u003d \"1/1/1970\";","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"    public static final String DEFAULT_CONTENT \u003d \"No comment.\";","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"    public static final String DEFAULT_RATING \u003d \"3\";","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"    private Name name;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"    private Address address;","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"    private Date date;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"    private Content content;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"    private Rating rating;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"     * Creates a {@code ReviewBuilder} with the default details.","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"    public ReviewBuilder() {","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"        date \u003d new Date(DEFAULT_DATE);","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"        content \u003d new Content(DEFAULT_CONTENT);","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"        rating \u003d new Rating(DEFAULT_RATING);","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"     * Initializes the ReviewBuilder with the data of {@code reviewToCopy}.","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"    public ReviewBuilder(Review reviewToCopy) {","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"        name \u003d reviewToCopy.getName();","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"        address \u003d reviewToCopy.getAddress();","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"        date \u003d reviewToCopy.getDate();","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"        content \u003d reviewToCopy.getContent();","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"        rating \u003d reviewToCopy.getRating();","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"        tags \u003d new HashSet\u003c\u003e(reviewToCopy.getTags());","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"     * Sets the {@code Name} of the {@code Review} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"    public ReviewBuilder withName(String name) {","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"     * Sets the {@code Address} of the {@code Review} that we are building.","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"    public ReviewBuilder withAddress(String address) {","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"        return this;","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"LikHern"},"content":"     * Sets the {@code Date} of the {@code Review} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"LikHern"},"content":"    public ReviewBuilder withDate(String date) {","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"LikHern"},"content":"        this.date \u003d new Date(date);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"clarence-chew"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"clarence-chew"},"content":"     * Sets the {@code Content} of the {@code Review} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"clarence-chew"},"content":"    public ReviewBuilder withContent(String content) {","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"clarence-chew"},"content":"        this.content \u003d new Content(content);","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"clarence-chew"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"Hikoya"},"content":"     * Sets the {@code Rating} of the {@code Review} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"Hikoya"},"content":"    public ReviewBuilder withRating(Integer rating) {","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"Hikoya"},"content":"        this.rating \u003d new Rating(String.valueOf(rating));","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"Hikoya"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"Hikoya"},"content":"     * Parses the {@code tag} into a {@code Set\u003cTag\u003e} and set it to the {@code Review} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"Hikoya"},"content":"    public ReviewBuilder withTags(String ... tags) {","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"Hikoya"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"LikHern"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"clarence-chew"},"content":"    public Review build() {","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"clarence-chew"},"content":"        return new Review(name, address, date, content, rating, tags);","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"LikHern":9,"clarence-chew":75,"Hikoya":21}},{"path":"src/main/java/foodwhere/model/review/ReviewContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamietan2002"},"content":"package foodwhere.model.review;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"jamietan2002"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"jamietan2002"},"content":"import java.util.List;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"jamietan2002"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"jamietan2002"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.commons.util.StringUtil;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"jamietan2002"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"jamietan2002"},"content":" * Tests that a {@code Review}\u0027s {@code Name} or {@code Tag} matches any of the keywords given for each field.","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"jamietan2002"},"content":"public class ReviewContainsKeywordsPredicate implements Predicate\u003cReview\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":"    private final HashSet\u003cName\u003e nameKeywords;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":"    private final HashSet\u003cTag\u003e tagKeywords;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"     * Creates a ReviewContainsKeywordsPredicate where arguments are in List","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"jamietan2002"},"content":"     * @param nameKeywords List of name keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"     * @param tagKeywords List of tag keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":"    public ReviewContainsKeywordsPredicate(List\u003cName\u003e nameKeywords, List\u003cTag\u003e tagKeywords) {","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"jamietan2002"},"content":"        this.nameKeywords \u003d new HashSet\u003cName\u003e(nameKeywords);","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":"        this.tagKeywords \u003d new HashSet\u003cTag\u003e(tagKeywords);","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"jamietan2002"},"content":"     * Creates a ReviewContainsKeywordsPredicate where arguments are in Set","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"     * @param nameKeywords Set of name keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"     * @param tagKeywords Set of tag keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"jamietan2002"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"jamietan2002"},"content":"    public ReviewContainsKeywordsPredicate(Set\u003cName\u003e nameKeywords, Set\u003cTag\u003e tagKeywords) {","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"jamietan2002"},"content":"        this.nameKeywords \u003d new HashSet\u003cName\u003e(nameKeywords);","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"        this.tagKeywords \u003d new HashSet\u003cTag\u003e(tagKeywords);","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"jamietan2002"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"jamietan2002"},"content":"    public boolean test(Review review) {","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"jamietan2002"},"content":"        for (Tag tag : review.getTags()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"            if (tagKeywords.stream().anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(tag.tag, keyword.tag))) {","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"jamietan2002"},"content":"                return true;","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"jamietan2002"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"jamietan2002"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"jamietan2002"},"content":"        return nameKeywords.stream()","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"jamietan2002"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(review.getName().fullName, keyword.fullName));","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"jamietan2002"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"jamietan2002"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"jamietan2002"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"jamietan2002"},"content":"                || (other instanceof ReviewContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"jamietan2002"},"content":"                \u0026\u0026 nameKeywords.equals(((ReviewContainsKeywordsPredicate) other).nameKeywords))","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"jamietan2002"},"content":"                \u0026\u0026 tagKeywords.equals(((ReviewContainsKeywordsPredicate) other).tagKeywords);","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"jamietan2002"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jamietan2002":59}},{"path":"src/main/java/foodwhere/model/review/UniqueReviewList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package foodwhere.model.review;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import static foodwhere.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"import foodwhere.model.review.exceptions.DuplicateReviewException;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"import foodwhere.model.review.exceptions.ReviewNotFoundException;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":" * A list of reviews that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":" * A review is considered unique by comparing using {@code Review#isSameReview(Review)}. As such, adding and updating","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":" * of reviews uses Review#isSameReview(Review) for equality so as to ensure that the review being added or updated is","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":" * unique in terms of identity in the UniqueReviewList. However, the removal of a Review uses Review#equals(Object) so","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":" * as to ensure that the review with exactly the same fields will be removed.","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":" *","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":" *","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":" * @see Review#isSameReview(Review)","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"public class UniqueReviewList implements Iterable\u003cReview\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"    private final ObservableList\u003cReview\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"    private final ObservableList\u003cReview\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"LikHern"},"content":"     * Returns true if the list contains an equivalent review as the given argument.","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"LikHern"},"content":"    public boolean contains(Review toCheck) {","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"LikHern"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"LikHern"},"content":"        return internalList.stream().anyMatch(toCheck::isSameReview);","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"LikHern"},"content":"     * Adds a review to the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"LikHern"},"content":"     * The review must not already exist in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"LikHern"},"content":"    public void add(Review toAdd) {","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"LikHern"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"LikHern"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"LikHern"},"content":"            throw new DuplicateReviewException();","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"LikHern"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"LikHern"},"content":"     * Replaces the review {@code target} in the list with {@code editedReview}.","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"LikHern"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"LikHern"},"content":"     * The review identity of {@code editedReview} must not be the same as another existing review in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"LikHern"},"content":"    public void setReview(Review target, Review editedReview) {","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"LikHern"},"content":"        requireAllNonNull(target, editedReview);","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"LikHern"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"LikHern"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"LikHern"},"content":"            throw new ReviewNotFoundException();","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"LikHern"},"content":"        if (!target.isSameReview(editedReview) \u0026\u0026 contains(editedReview)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"LikHern"},"content":"            throw new DuplicateReviewException();","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"LikHern"},"content":"        internalList.set(index, editedReview);","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"LikHern"},"content":"     * Removes the equivalent review from the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"LikHern"},"content":"     * The review must exist in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"LikHern"},"content":"    public void remove(Review toRemove) {","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"LikHern"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"LikHern"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"LikHern"},"content":"            throw new ReviewNotFoundException();","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"LikHern"},"content":"    /** Sorts the list by {@code comparator}. */","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"LikHern"},"content":"    public void sort(Comparator\u003cReview\u003e comparator) {","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"LikHern"},"content":"        internalList.sort(comparator);","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"LikHern"},"content":"    public void setStalls(UniqueReviewList replacement) {","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"LikHern"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"LikHern"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"LikHern"},"content":"     * Replaces the contents of this list with {@code reviews}.","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"LikHern"},"content":"     * {@code reviews} must not contain duplicate reviews.","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"LikHern"},"content":"    public void setReviews(List\u003cReview\u003e reviews) {","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"LikHern"},"content":"        requireAllNonNull(reviews);","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"LikHern"},"content":"        if (!reviewsAreUnique(reviews)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"LikHern"},"content":"            throw new DuplicateReviewException();","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"LikHern"},"content":"        internalList.setAll(reviews);","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"LikHern"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"LikHern"},"content":"    public ObservableList\u003cReview\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"LikHern"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"LikHern"},"content":"    public Iterator\u003cReview\u003e iterator() {","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"LikHern"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"LikHern"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"LikHern"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"LikHern"},"content":"                || (other instanceof UniqueReviewList // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"LikHern"},"content":"                \u0026\u0026 internalList.equals(((UniqueReviewList) other).internalList));","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"LikHern"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"LikHern"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"LikHern"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"LikHern"},"content":"     * Returns true if {@code reviews} contains only unique reviews.","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"LikHern"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"LikHern"},"content":"    private boolean reviewsAreUnique(List\u003cReview\u003e reviews) {","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"LikHern"},"content":"        for (int i \u003d 0; i \u003c reviews.size() - 1; i++) {","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"LikHern"},"content":"            for (int j \u003d i + 1; j \u003c reviews.size(); j++) {","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"LikHern"},"content":"                if (reviews.get(i).isSameReview(reviews.get(j))) {","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"LikHern"},"content":"                    return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"LikHern"},"content":"                }","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"LikHern"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"LikHern"},"content":"        return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"LikHern":143}},{"path":"src/main/java/foodwhere/model/review/comparator/DateComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package foodwhere.model.review.comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":" * Creates a comparator class {@code DateComparator} that compares the review by date.","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"public class DateComparator implements Comparator\u003cReview\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"    public int compare(Review r1, Review r2) {","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"        return r1.getDate().compareTo(r2.getDate());","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"LikHern":15}},{"path":"src/main/java/foodwhere/model/review/comparator/NameComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package foodwhere.model.review.comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":" * Creates a comparator class {@code NameComparator} that compares the review by name lexicographically.","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"public class NameComparator implements Comparator\u003cReview\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"    public int compare(Review r1, Review r2) {","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"        return r1.getName().fullName.compareTo(r2.getName().fullName);","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"LikHern":15}},{"path":"src/main/java/foodwhere/model/review/comparator/RatingComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package foodwhere.model.review.comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":" * Creates a comparator class {@code RatingComparator} that compares the review by rating.","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"public class RatingComparator implements Comparator\u003cReview\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"    public int compare(Review r1, Review r2) {","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"        return r1.getRating().value.compareTo(r2.getRating().value);","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"LikHern":15}},{"path":"src/main/java/foodwhere/model/review/comparator/ReviewsComparatorList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package foodwhere.model.review.comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":" * A list of supported comparator between reviews.","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"public enum ReviewsComparatorList {","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"    NAME(\"name (A to Z)\", new NameComparator()),","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"    REVERSEDNAME(\"name (Z to A)\", new NameComparator().reversed()),","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"    DATE(\"date (Oldest to Newest)\", new DateComparator()),","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"    REVERSEDDATE(\"date (Newest to Oldest)\", new DateComparator().reversed()),","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"    RATING(\"rating (Lowest to Highest)\", new RatingComparator()),","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"    REVERSEDRATING(\"rating (Highest to Lowest)\", new RatingComparator().reversed());","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"See user guide for the supported criteria\";","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"    private final String criteria;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"    private final Comparator\u003cReview\u003e comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"    ReviewsComparatorList(String criteria, Comparator\u003cReview\u003e comparator) {","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"        this.criteria \u003d criteria;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"    public String getCriteria() {","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"        return criteria;","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"LikHern"},"content":"    public Comparator\u003cReview\u003e getComparator() {","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"LikHern"},"content":"        return comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"LikHern":36}},{"path":"src/main/java/foodwhere/model/review/exceptions/DuplicateReviewException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package foodwhere.model.review.exceptions;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":" * Signals that the operation will result in duplicate Reviews (Reviews are considered duplicates if they have the same","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":" * identity).","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"public class DuplicateReviewException extends RuntimeException {","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"    public DuplicateReviewException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"        super(\"Operation would result in duplicate reviews\");","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"LikHern":11}},{"path":"src/main/java/foodwhere/model/review/exceptions/ReviewNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package foodwhere.model.review.exceptions;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":" * Signals that the operation is unable to find the specified review.","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"public class ReviewNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"LikHern":6}},{"path":"src/main/java/foodwhere/model/stall/Stall.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MinHeinA"},"content":"package foodwhere.model.stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Address;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"MinHeinA"},"content":" * Represents a Stall in the address book.","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":" * Guarantees: tags are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"MinHeinA"},"content":"public class Stall {","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"MinHeinA"},"content":"    private final Set\u003cReview\u003e reviews \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"    public Stall(Name name, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"        requireAllNonNull(name, address, tags);","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"MinHeinA"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"MinHeinA"},"content":"     * Constructor with reviews, reviews can be empty as it is optional","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"MinHeinA"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"    public Stall(Name name, Address address, Set\u003cTag\u003e tags, Set\u003cReview\u003e reviews) {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"        requireAllNonNull(name, address, tags);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"MinHeinA"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"MinHeinA"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"MinHeinA"},"content":"        if (!reviews.isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"MinHeinA"},"content":"            this.reviews.addAll(reviews);","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"Hikoya"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"MinHeinA"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"MinHeinA"},"content":"     * Returns an immutable review set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"MinHeinA"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"MinHeinA"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"MinHeinA"},"content":"    public Set\u003cReview\u003e getReviews() {","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"MinHeinA"},"content":"        return Collections.unmodifiableSet(reviews);","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"MinHeinA"},"content":"     * Returns true if both stalls have the same name.","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"MinHeinA"},"content":"     * This defines a weaker notion of equality between two stalls.","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"MinHeinA"},"content":"    public boolean isSameStall(Stall otherStall) {","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"MinHeinA"},"content":"        if (otherStall \u003d\u003d this) {","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"MinHeinA"},"content":"        return otherStall !\u003d null","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"clarence-chew"},"content":"                \u0026\u0026 otherStall.getName().equals(getName())","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"clarence-chew"},"content":"                \u0026\u0026 otherStall.getAddress().equals(getAddress());","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"MinHeinA"},"content":"     * Returns true if both stalls have the same identity and data fields.","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"MinHeinA"},"content":"     * This defines a stronger notion of equality between two stalls.","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"MinHeinA"},"content":"        if (!(other instanceof Stall)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"MinHeinA"},"content":"        Stall otherStall \u003d (Stall) other;","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"MinHeinA"},"content":"        return otherStall.getName().equals(getName())","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"MinHeinA"},"content":"                \u0026\u0026 otherStall.getAddress().equals(getAddress())","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"Hikoya"},"content":"                \u0026\u0026 otherStall.getTags().equals(getTags())","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"MinHeinA"},"content":"                \u0026\u0026 otherStall.getReviews().equals(getReviews());","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"Hikoya"},"content":"        return Objects.hash(name, address, tags, reviews);","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":124,"author":{"gitId":"Hikoya"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"Hikoya"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"Hikoya"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"Hikoya"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"MinHeinA"},"content":"        Set\u003cReview\u003e reviews \u003d getReviews();","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"MinHeinA"},"content":"        if (!reviews.isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"MinHeinA"},"content":"            builder.append(\"; Reviews: \");","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"MinHeinA"},"content":"            reviews.forEach(builder::append);","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"MinHeinA":41,"clarence-chew":2,"Hikoya":21,"-":74}},{"path":"src/main/java/foodwhere/model/stall/StallBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package foodwhere.model.stall;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Address;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.ReviewBuilder;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.exceptions.ReviewNotFoundException;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.util.SampleDataUtil;","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"MinHeinA"},"content":" * A utility class to help with building Stall objects.","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"MinHeinA"},"content":"public class StallBuilder {","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"    public static final String DEFAULT_NAME \u003d \"Unnamed Stall\";","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"Unknown Location\";","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"    private HashSet\u003cReview\u003e reviews;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"MinHeinA"},"content":"     * Creates a {@code StallBuilder} with the default details.","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"MinHeinA"},"content":"    public StallBuilder() {","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"MinHeinA"},"content":"        reviews \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":41,"author":{"gitId":"MinHeinA"},"content":"     * Initializes the StallBuilder with the data of {@code stallToCopy}.","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"MinHeinA"},"content":"    public StallBuilder(Stall stallToCopy) {","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"MinHeinA"},"content":"        name \u003d stallToCopy.getName();","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"MinHeinA"},"content":"        address \u003d stallToCopy.getAddress();","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"        tags \u003d new HashSet\u003c\u003e(stallToCopy.getTags());","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"MinHeinA"},"content":"        reviews \u003d new HashSet\u003c\u003e(stallToCopy.getReviews());","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"     * Sets the {@code name} of the {@code Stall} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"MinHeinA"},"content":"    public StallBuilder withName(String name) {","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Stall} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"    public StallBuilder withTags(String ... tags) {","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"     * Sets the {@code address} of the {@code Stall} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"MinHeinA"},"content":"    public StallBuilder withAddress(String address) {","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"MinHeinA"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"     * Sets the {@code reviews} of the {@code Stall} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"clarence-chew"},"content":"    public StallBuilder withReviews(Review ... reviews) {","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"clarence-chew"},"content":"        requireNonNull(reviews);","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"clarence-chew"},"content":"        for (Review review : reviews) {","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"clarence-chew"},"content":"            requireNonNull(review);","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"clarence-chew"},"content":"        this.reviews \u003d new HashSet\u003c\u003e(List.of(reviews));","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"clarence-chew"},"content":"        return this;","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"clarence-chew"},"content":"     * Adds a review to the {@code Stall} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"clarence-chew"},"content":"    public StallBuilder addReview(Review review) {","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"clarence-chew"},"content":"        requireNonNull(review);","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"clarence-chew"},"content":"        this.reviews.add(review);","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"clarence-chew"},"content":"        return this;","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"clarence-chew"},"content":"     * Removes a review from the {@code Stall} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"MinHeinA"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"clarence-chew"},"content":"    public StallBuilder removeReview(Review review) {","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"clarence-chew"},"content":"        requireNonNull(review);","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"clarence-chew"},"content":"        if (!this.reviews.contains(review)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"clarence-chew"},"content":"            throw new ReviewNotFoundException();","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"clarence-chew"},"content":"        this.reviews.remove(review);","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"MinHeinA"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"clarence-chew"},"content":"     * Builds a stall.","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"clarence-chew"},"content":"     * @return Stall with the stored data.","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"MinHeinA"},"content":"    public Stall build() {","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"clarence-chew"},"content":"        HashSet\u003cReview\u003e namedReviews \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"clarence-chew"},"content":"        for (Review review : reviews) {","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"clarence-chew"},"content":"            Review namedReview \u003d new ReviewBuilder(review)","lastModifiedDate":"2022-10-21"},{"lineNumber":115,"author":{"gitId":"clarence-chew"},"content":"                    .withName(name.fullName).build();","lastModifiedDate":"2022-10-21"},{"lineNumber":116,"author":{"gitId":"clarence-chew"},"content":"            namedReviews.add(namedReview);","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"clarence-chew"},"content":"        return new Stall(name, address, tags, namedReviews);","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"MinHeinA":19,"clarence-chew":50,"Hikoya":10,"-":41}},{"path":"src/main/java/foodwhere/model/stall/StallContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamietan2002"},"content":"package foodwhere.model.stall;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"jamietan2002"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"jamietan2002"},"content":"import java.util.List;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"jamietan2002"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"jamietan2002"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.commons.util.StringUtil;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"jamietan2002"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"jamietan2002"},"content":" * Tests that a {@code Stall}\u0027s {@code Name} or {@code Tag} matches any of the keywords given for each field.","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"jamietan2002"},"content":"public class StallContainsKeywordsPredicate implements Predicate\u003cStall\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":"    private final HashSet\u003cName\u003e nameKeywords;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":"    private final HashSet\u003cTag\u003e tagKeywords;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"     * Creates a StallContainsKeywordsPredicate where arguments are in List","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"jamietan2002"},"content":"     * @param nameKeywords List of name keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"     * @param tagKeywords List of tag keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":"    public StallContainsKeywordsPredicate(List\u003cName\u003e nameKeywords, List\u003cTag\u003e tagKeywords) {","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"jamietan2002"},"content":"        this.nameKeywords \u003d new HashSet\u003cName\u003e(nameKeywords);","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":"        this.tagKeywords \u003d new HashSet\u003cTag\u003e(tagKeywords);","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"jamietan2002"},"content":"     * Creates a StallContainsKeywordsPredicate where arguments are in Set","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"     * @param nameKeywords Set of name keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"     * @param tagKeywords Set of tag keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"jamietan2002"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"jamietan2002"},"content":"    public StallContainsKeywordsPredicate(Set\u003cName\u003e nameKeywords, Set\u003cTag\u003e tagKeywords) {","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"jamietan2002"},"content":"        this.nameKeywords \u003d new HashSet\u003cName\u003e(nameKeywords);","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"        this.tagKeywords \u003d new HashSet\u003cTag\u003e(tagKeywords);","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"jamietan2002"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"jamietan2002"},"content":"    public boolean test(Stall stall) {","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"jamietan2002"},"content":"        for (Tag tag : stall.getTags()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"            if (tagKeywords.stream().anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(tag.tag, keyword.tag))) {","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"jamietan2002"},"content":"                return true;","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"jamietan2002"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"jamietan2002"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"jamietan2002"},"content":"        return nameKeywords.stream()","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"jamietan2002"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(stall.getName().fullName, keyword.fullName));","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"jamietan2002"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"jamietan2002"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"jamietan2002"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"jamietan2002"},"content":"                || (other instanceof StallContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"jamietan2002"},"content":"                \u0026\u0026 nameKeywords.equals(((StallContainsKeywordsPredicate) other).nameKeywords))","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"jamietan2002"},"content":"                \u0026\u0026 tagKeywords.equals(((StallContainsKeywordsPredicate) other).tagKeywords);","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"jamietan2002"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jamietan2002":60}},{"path":"src/main/java/foodwhere/model/stall/UniqueStallList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MinHeinA"},"content":"package foodwhere.model.stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"MinHeinA"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"MinHeinA"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"MinHeinA"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.exceptions.DuplicateStallException;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.exceptions.StallNotFoundException;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"MinHeinA"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"MinHeinA"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"MinHeinA"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"MinHeinA"},"content":" * A list of stalls that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"MinHeinA"},"content":" * A stall is considered unique by comparing using {@code Stall#isSameStall(Stall)}. As such, adding and updating of","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"MinHeinA"},"content":" * stalls uses Stall#isSameStalls(Stall) for equality so as to ensure that the stall being added or updated is","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"MinHeinA"},"content":" * unique in terms of identity in the UniqueStallList. However, the removal of a stall uses Stall#equals(Object) so","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"MinHeinA"},"content":" * as to ensure that the stall with exactly the same fields will be removed.","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"MinHeinA"},"content":" *","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"MinHeinA"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"MinHeinA"},"content":" *","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"MinHeinA"},"content":" * @see Stall#isSameStall(Stall)","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"MinHeinA"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"MinHeinA"},"content":"public class UniqueStallList implements Iterable\u003cStall\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"MinHeinA"},"content":"    private final ObservableList\u003cStall\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"MinHeinA"},"content":"    private final ObservableList\u003cStall\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"MinHeinA"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"MinHeinA"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"MinHeinA"},"content":"     * Returns true if the list contains an equivalent stall as the given argument.","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"MinHeinA"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"MinHeinA"},"content":"    public boolean contains(Stall toCheck) {","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"MinHeinA"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"MinHeinA"},"content":"        return internalList.stream().anyMatch(toCheck::isSameStall);","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"MinHeinA"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"MinHeinA"},"content":"     * Adds a stall to the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"MinHeinA"},"content":"     * The stall must not already exist in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"MinHeinA"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"MinHeinA"},"content":"    public void add(Stall toAdd) {","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"MinHeinA"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"MinHeinA"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"MinHeinA"},"content":"            throw new DuplicateStallException();","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"MinHeinA"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"MinHeinA"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"MinHeinA"},"content":"     * Replaces the stall {@code target} in the list with {@code editedStall}.","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"MinHeinA"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"MinHeinA"},"content":"     * The stall identity of {@code editedStall} must not be the same as another existing stall in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"MinHeinA"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"MinHeinA"},"content":"    public void setStall(Stall target, Stall editedStall) {","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"MinHeinA"},"content":"        requireAllNonNull(target, editedStall);","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"MinHeinA"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"MinHeinA"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"MinHeinA"},"content":"            throw new StallNotFoundException();","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"MinHeinA"},"content":"        if (!target.isSameStall(editedStall) \u0026\u0026 contains(editedStall)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"MinHeinA"},"content":"            throw new DuplicateStallException();","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"MinHeinA"},"content":"        internalList.set(index, editedStall);","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"MinHeinA"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"MinHeinA"},"content":"     * Removes the equivalent stall from the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"MinHeinA"},"content":"     * The stall must exist in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"MinHeinA"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"MinHeinA"},"content":"    public void remove(Stall toRemove) {","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"MinHeinA"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"MinHeinA"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"MinHeinA"},"content":"            throw new StallNotFoundException();","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"LikHern"},"content":"    /** Sorts the list by {@code comparator}. */","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"LikHern"},"content":"    public void sort(Comparator\u003cStall\u003e comparator) {","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"LikHern"},"content":"        internalList.sort(comparator);","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"MinHeinA"},"content":"    public void setStalls(UniqueStallList replacement) {","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"MinHeinA"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"MinHeinA"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"MinHeinA"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"MinHeinA"},"content":"     * Replaces the contents of this list with {@code stalls}.","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"MinHeinA"},"content":"     * {@code stalls} must not contain duplicate stalls.","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"MinHeinA"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"MinHeinA"},"content":"    public void setStalls(List\u003cStall\u003e stalls) {","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"MinHeinA"},"content":"        requireAllNonNull(stalls);","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"MinHeinA"},"content":"        if (!stallsAreUnique(stalls)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"MinHeinA"},"content":"            throw new DuplicateStallException();","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"MinHeinA"},"content":"        internalList.setAll(stalls);","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"MinHeinA"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"MinHeinA"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"MinHeinA"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"MinHeinA"},"content":"    public ObservableList\u003cStall\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"MinHeinA"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"MinHeinA"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"MinHeinA"},"content":"    public Iterator\u003cStall\u003e iterator() {","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"MinHeinA"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"MinHeinA"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"MinHeinA"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"MinHeinA"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"MinHeinA"},"content":"                || (other instanceof UniqueStallList // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"MinHeinA"},"content":"                        \u0026\u0026 internalList.equals(((UniqueStallList) other).internalList));","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"MinHeinA"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"MinHeinA"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"MinHeinA"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"MinHeinA"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"MinHeinA"},"content":"     * Returns true if {@code stalls} contains only unique stalls.","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"MinHeinA"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"MinHeinA"},"content":"    private boolean stallsAreUnique(List\u003cStall\u003e stalls) {","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"MinHeinA"},"content":"        for (int i \u003d 0; i \u003c stalls.size() - 1; i++) {","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"MinHeinA"},"content":"            for (int j \u003d i + 1; j \u003c stalls.size(); j++) {","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"MinHeinA"},"content":"                if (stalls.get(i).isSameStall(stalls.get(j))) {","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"MinHeinA"},"content":"                    return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"MinHeinA"},"content":"                }","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"MinHeinA"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"MinHeinA"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"MinHeinA"},"content":"        return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"MinHeinA"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"MinHeinA":137,"LikHern":6}},{"path":"src/main/java/foodwhere/model/stall/comparator/NameComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package foodwhere.model.stall.comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":" * Creates a comparator class {@code NameComparator} that compares the stall by name lexicographically.","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"public class NameComparator implements Comparator\u003cStall\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"    public int compare(Stall s1, Stall s2) {","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"        return s1.getName().fullName.compareTo(s2.getName().fullName);","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"LikHern":15}},{"path":"src/main/java/foodwhere/model/stall/comparator/StallsComparatorList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package foodwhere.model.stall.comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":" * A list of supported comparator between stalls.","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"public enum StallsComparatorList {","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"    NAME(\"name (A to Z)\", new NameComparator()),","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"    REVERSEDNAME(\"name (Z to A)\", new NameComparator().reversed());","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"See user guide for the supported criteria\";","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"    private final String criteria;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"    private final Comparator\u003cStall\u003e comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"    StallsComparatorList(String criteria, Comparator\u003cStall\u003e comparator) {","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"        this.criteria \u003d criteria;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"    public String getCriteria() {","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"        return criteria;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"    public Comparator\u003cStall\u003e getComparator() {","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"        return comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"LikHern":32}},{"path":"src/main/java/foodwhere/model/stall/exceptions/DuplicateStallException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MinHeinA"},"content":"package foodwhere.model.stall.exceptions;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"MinHeinA"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"MinHeinA"},"content":" * Signals that the operation will result in duplicate Stalls (Stalls are considered duplicates if they have the same","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"MinHeinA"},"content":" * identity).","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"MinHeinA"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"MinHeinA"},"content":"public class DuplicateStallException extends RuntimeException {","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"MinHeinA"},"content":"    public DuplicateStallException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"MinHeinA"},"content":"        super(\"Operation would result in duplicate stalls\");","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"MinHeinA"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"MinHeinA":11}},{"path":"src/main/java/foodwhere/model/stall/exceptions/StallNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MinHeinA"},"content":"package foodwhere.model.stall.exceptions;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"MinHeinA"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"MinHeinA"},"content":" * Signals that the operation is unable to find the specified stall.","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"MinHeinA"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"MinHeinA"},"content":"public class StallNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"MinHeinA":6}},{"path":"src/main/java/foodwhere/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.model.util;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"MinHeinA"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"MinHeinA"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.AddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Address;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.review.Content;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.review.Date;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.review.Rating;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"MinHeinA"},"content":"    public static Stall[] getSampleStalls() {","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"MinHeinA"},"content":"        return new Stall[] {","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"            new Stall(new Name(\"Alex Chicken Rice\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"                    getTagSet(\"chickenrice\")),","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"            new Stall(new Name(\"Char Char Kuey Tiao\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"                    getTagSet(\"charkwaytiao\")),","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"            new Stall(new Name(\"Yu Bak Chor Mee\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"                    getTagSet(\"bakchormee\")),","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"            new Stall(new Name(\"Irfan Muslim Food\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"                    getTagSet(\"family\", \"halal\", \"muslim\"))","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"        };","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"    public static Review[] getSampleReviews() {","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"        return new Review[] {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"            new Review(new Name(\"Alex Chicken Rice\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"                    new Date(\"20/09/2022\"), new Content(\"Very tasty. Worth the trip\"), new Rating(\"5\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"                    getTagSet(\"travelworthy\")),","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"            new Review(new Name(\"Irfan Muslim Food\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"                    new Date(\"21/09/2022\"), new Content(\"Very affordable\"), new Rating(\"3\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"                    getTagSet(\"halal\"))","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"MinHeinA"},"content":"        for (Stall sampleStall : getSampleStalls()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"MinHeinA"},"content":"            sampleAb.addStall(sampleStall);","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"        for (Review sampleReview : getSampleReviews()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"            sampleAb.addReview(sampleReview);","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"                .map(Tag::new)","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"MinHeinA"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"MinHeinA"},"content":"     * Returns a review set containing the list of reviews given.","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"MinHeinA"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"MinHeinA"},"content":"    public static Set\u003cReview\u003e getReviewSet(Review... reviews) {","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"MinHeinA"},"content":"        return new HashSet\u003c\u003e(List.of(reviews));","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"MinHeinA":15,"clarence-chew":6,"Hikoya":29,"-":26}},{"path":"src/main/java/foodwhere/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.storage;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.AddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":" * Represents a storage for {@link AddressBook}.","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Hikoya":5,"-":41}},{"path":"src/main/java/foodwhere/storage/JsonAdaptedReview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package foodwhere.storage;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Address;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.Content;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.Date;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.review.Rating;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":" * Jackson-friendly version of {@link Review}.","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"class JsonAdaptedReview {","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Review\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"    private final String date;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"    private final String content;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"    private final Integer rating;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"     * Constructs a {@code JsonAdaptedReview} with the given stall details.","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"    public JsonAdaptedReview(@JsonProperty(\"date\") String date,","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"                             @JsonProperty(\"content\") String content,","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"                             @JsonProperty(\"rating\") Integer rating,","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"        this.content \u003d content;","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"        this.rating \u003d rating;","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"     * Converts a given {@code Review} into this class for Jackson use.","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"    public JsonAdaptedReview(Review source) {","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"        this.date \u003d source.getDate().value;","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"        this.content \u003d source.getContent().value;","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"        this.rating \u003d source.getRating().value;","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"        this.tags.addAll(source.getTags().stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"     * Converts this Jackson-friendly adapted review object into the model\u0027s {@code Review} object.","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted stall.","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"    public Review toModelType(Name modelName, Address modelAddress) throws IllegalValueException {","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"        if (modelName \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"            throw new IllegalValueException(String.format(JsonAdaptedReview.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"clarence-chew"},"content":"                    Name.class.getSimpleName()));","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"clarence-chew"},"content":"        if (modelAddress \u003d\u003d null) {","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"clarence-chew"},"content":"            throw new IllegalValueException(String.format(JsonAdaptedReview.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"clarence-chew"},"content":"                    Address.class.getSimpleName()));","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"Hikoya"},"content":"        final List\u003cTag\u003e reviewTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"Hikoya"},"content":"        for (JsonAdaptedTag tag : this.tags) {","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"Hikoya"},"content":"            reviewTags.add(tag.toModelType());","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"clarence-chew"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"clarence-chew"},"content":"            throw new IllegalValueException(String.format(JsonAdaptedReview.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"clarence-chew"},"content":"                    Date.class.getSimpleName()));","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"clarence-chew"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"clarence-chew"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"clarence-chew"},"content":"        final Date modelDate \u003d new Date(date);","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"clarence-chew"},"content":"        if (content \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"clarence-chew"},"content":"            throw new IllegalValueException(String.format(JsonAdaptedReview.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"clarence-chew"},"content":"                    Content.class.getSimpleName()));","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"clarence-chew"},"content":"        if (!Content.isValidContent(content)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"clarence-chew"},"content":"            throw new IllegalValueException(Content.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"Hikoya"},"content":"        final Content modelContent \u003d new Content(content);","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"Hikoya"},"content":"        if (rating \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"Hikoya"},"content":"            throw new IllegalValueException(String.format(JsonAdaptedReview.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"Hikoya"},"content":"                    Rating.class.getSimpleName()));","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"Hikoya"},"content":"        if (!Rating.isValidRating(String.valueOf(rating))) {","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"clarence-chew"},"content":"            throw new IllegalValueException(Rating.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"Hikoya"},"content":"        final Rating modelRating \u003d new Rating(String.valueOf(rating));","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"Hikoya"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(reviewTags);","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"clarence-chew"},"content":"        return new Review(modelName, modelAddress, modelDate, modelContent, modelRating, modelTags);","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"clarence-chew":86,"Hikoya":28}},{"path":"src/main/java/foodwhere/storage/JsonAdaptedStall.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.storage;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Address;","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"MinHeinA"},"content":" * Jackson-friendly version of {@link Stall}.","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"MinHeinA"},"content":"class JsonAdaptedStall {","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"MinHeinA"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Stall\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"    private final List\u003cJsonAdaptedReview\u003e reviews \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"MinHeinA"},"content":"     * Constructs a {@code JsonAdaptedStall} with the given stall details.","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"    public JsonAdaptedStall(@JsonProperty(\"name\") String name,","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"MinHeinA"},"content":"                            @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"                            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"                            @JsonProperty(\"reviews\") List\u003cJsonAdaptedReview\u003e reviews) {","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"        if (reviews !\u003d null) {","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"            this.reviews.addAll(reviews);","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"MinHeinA"},"content":"     * Converts a given {@code Stall} into this class for Jackson use.","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"MinHeinA"},"content":"    public JsonAdaptedStall(Stall source) {","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"        reviews.addAll(source.getReviews().stream()","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"                .map(JsonAdaptedReview::new)","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"     * Checks if a review is of this stall.","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"     * @throws IllegalValueException if there are data constraints violated in the name of the stall.","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"    public boolean isReviewOfStall(Review review) throws IllegalValueException {","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"clarence-chew"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"clarence-chew"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"clarence-chew"},"content":"        return name.equals(review.getName().fullName);","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"clarence-chew"},"content":"     * Adds the review to the stall.","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"clarence-chew"},"content":"    public void addReview(Review review) {","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"clarence-chew"},"content":"        reviews.add(new JsonAdaptedReview(review));","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"MinHeinA"},"content":"     * Converts this Jackson-friendly adapted stall object into the model\u0027s {@code Stall} object.","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"MinHeinA"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted stall.","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"MinHeinA"},"content":"    public Stall toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"Hikoya"},"content":"        final List\u003cTag\u003e stallTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"Hikoya"},"content":"        for (JsonAdaptedTag tag : this.tags) {","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"Hikoya"},"content":"            stallTags.add(tag.toModelType());","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"Hikoya"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(stallTags);","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":111,"author":{"gitId":"clarence-chew"},"content":"        return new Stall(modelName, modelAddress, modelTags, new HashSet\u003c\u003e(getModelReviews()));","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"clarence-chew"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"clarence-chew"},"content":"     * Converts the reviews in this Jackson-friendly adapted stall object into the model\u0027s {@code Review} objects.","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"clarence-chew"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"clarence-chew"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted stall.","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"clarence-chew"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"clarence-chew"},"content":"    public List\u003cReview\u003e getModelReviews() throws IllegalValueException {","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"clarence-chew"},"content":"        final List\u003cReview\u003e modelReviews \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"clarence-chew"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"clarence-chew"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"clarence-chew"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"clarence-chew"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"clarence-chew"},"content":"        final Name modelStallName \u003d new Name(name);","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"clarence-chew"},"content":"        final Address modelStallAddress \u003d new Address(address);","lastModifiedDate":"2022-10-23"},{"lineNumber":130,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"clarence-chew"},"content":"        for (JsonAdaptedReview review : reviews) {","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"clarence-chew"},"content":"            modelReviews.add(review.toModelType(modelStallName, modelStallAddress));","lastModifiedDate":"2022-10-23"},{"lineNumber":133,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"clarence-chew"},"content":"        return modelReviews;","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"MinHeinA":11,"clarence-chew":55,"Hikoya":15,"-":55}},{"path":"src/main/java/foodwhere/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.storage;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"    private final String tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tag}.","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"    public JsonAdaptedTag(String tag) {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"        tag \u003d source.tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"    public String getTag() {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"        return tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"        if (!Tag.isValidTag(tag)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"        return new Tag(tag);","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"Hikoya":12,"-":36}},{"path":"src/main/java/foodwhere/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.storage;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.LogsCenter;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.util.FileUtil;","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.util.JsonUtil;","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Hikoya":7,"-":73}},{"path":"src/main/java/foodwhere/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.storage;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.AddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"@JsonRootName(value \u003d \"foodwhere\")","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"MinHeinA"},"content":"    public static final String MESSAGE_DUPLICATE_STALL \u003d \"Stalls list contains duplicate stall(s).\";","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"MinHeinA"},"content":"    private final List\u003cJsonAdaptedStall\u003e stalls \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"MinHeinA"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given stalls.","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"MinHeinA"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"stalls\") List\u003cJsonAdaptedStall\u003e stalls) {","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"MinHeinA"},"content":"        this.stalls.addAll(stalls);","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"        stalls.addAll(source.getStallList()","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"                .stream()","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"                .map(JsonAdaptedStall::new)","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"MinHeinA"},"content":"        for (JsonAdaptedStall jsonAdaptedStall : stalls) {","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"MinHeinA"},"content":"            Stall stall \u003d jsonAdaptedStall.toModelType();","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"MinHeinA"},"content":"            if (addressBook.hasStall(stall)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"MinHeinA"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_STALL);","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"MinHeinA"},"content":"            addressBook.addStall(stall);","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"MinHeinA":11,"clarence-chew":4,"Hikoya":5,"-":43}},{"path":"src/main/java/foodwhere/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.storage;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.util.JsonUtil;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.UserPrefs;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Hikoya":5,"-":42}},{"path":"src/main/java/foodwhere/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.storage;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.UserPrefs;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Hikoya":5,"-":27}},{"path":"src/main/java/foodwhere/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.storage;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.LogsCenter;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.UserPrefs;","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Hikoya":6,"-":72}},{"path":"src/main/java/foodwhere/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.storage;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.UserPrefs;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Hikoya":6,"-":30}},{"path":"src/main/java/foodwhere/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.ui;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.Logic;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.CommandResult;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"Hikoya"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2022-09-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"Hikoya":6,"-":80}},{"path":"src/main/java/foodwhere/ui/CopyMenuItem.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.ui;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.LogsCenter;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":" * MenuItem that is used to copy content to clipboard.","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"public class CopyMenuItem\u003cT\u003e extends MenuItem {","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CopyMenuItem.class);","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"     * Enum to decide what content is copied.","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"    public enum Action {","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"        FIELDS_ADDRESS, FIELDS_CONTENT, FIELDS_DATE, FIELDS_NAME, FIELDS_RATING, FIELDS_TAG;","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"        /**","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"         * Returns the content of the Stall according to the type.","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"         *","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"         * @param stallItem Stall object.","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"         * @param action Type of content to return.","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"         * @return String content to be copied to clipboard.","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"         */","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"        public String describeStall(Stall stallItem, Action action, String tag) {","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"            switch(action) {","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"            case FIELDS_ADDRESS:","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"                return stallItem.getAddress().toString();","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"            case FIELDS_NAME:","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"                return stallItem.getName().toString();","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"            case FIELDS_TAG:","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"                return stallItem.getTags().toString();","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"            case FIELDS_CONTENT:","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"                // fallthrough","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"            case FIELDS_DATE:","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"                // fallthrough","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"            case FIELDS_RATING:","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"                // fallthrough","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"            default:","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"                CopyMenuItem.throwRunTimeError(action, tag, stallItem.getClass().getName());","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"                break;","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"            // should not reach here.","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"            return null;","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"Hikoya"},"content":"        /**","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"         * Returns the content of the Review according to the type.","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"         *","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"         * @param reviewItem Stall object.","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"         * @param action Type of content to return.","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"         * @return String content to be copied to clipboard.","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"Hikoya"},"content":"         */","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"        public String describeReview(Review reviewItem, Action action, String tag) {","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"            switch(action) {","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"Hikoya"},"content":"            case FIELDS_CONTENT:","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"Hikoya"},"content":"                return reviewItem.getContent().toString();","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"Hikoya"},"content":"            case FIELDS_DATE:","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"Hikoya"},"content":"                return reviewItem.getDate().toString();","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"Hikoya"},"content":"            case FIELDS_NAME:","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"Hikoya"},"content":"                return reviewItem.getName().toString();","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"Hikoya"},"content":"            case FIELDS_RATING:","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"                return reviewItem.getRating().toString();","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"Hikoya"},"content":"            case FIELDS_TAG:","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"Hikoya"},"content":"                return reviewItem.getTags().toString();","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"Hikoya"},"content":"            case FIELDS_ADDRESS:","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"Hikoya"},"content":"                // fallthrough","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"Hikoya"},"content":"            default:","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"Hikoya"},"content":"                CopyMenuItem.throwRunTimeError(action, tag, reviewItem.getClass().getName());","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"Hikoya"},"content":"                break;","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"Hikoya"},"content":"            // should not reach here.","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"Hikoya"},"content":"            return null;","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"Hikoya"},"content":"    private final T item;","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"Hikoya"},"content":"    private final Clipboard clipboard;","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"Hikoya"},"content":"    private final Action action;","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"Hikoya"},"content":"    private final String tag;","lastModifiedDate":"2022-10-18"},{"lineNumber":93,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"Hikoya"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"Hikoya"},"content":"    public CopyMenuItem(String tag, T item, Clipboard clipboard, Action action) {","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"Hikoya"},"content":"        super(tag);","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"Hikoya"},"content":"        requireAllNonNull(tag, item, clipboard, action);","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"Hikoya"},"content":"        this.item \u003d item;","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"Hikoya"},"content":"        this.clipboard \u003d clipboard;","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"Hikoya"},"content":"        this.action \u003d action;","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"Hikoya"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-10-18"},{"lineNumber":104,"author":{"gitId":"Hikoya"},"content":"        this.setOnAction();","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"Hikoya"},"content":"    private static void throwRunTimeError(Action action, String tag, String className) {","lastModifiedDate":"2022-10-18"},{"lineNumber":108,"author":{"gitId":"Hikoya"},"content":"        String errorFormat \u003d \"Invalid type of object passed in. The Action passed in is %s, the Tag is %s \"","lastModifiedDate":"2022-10-18"},{"lineNumber":109,"author":{"gitId":"Hikoya"},"content":"                + \"and the Type of object is %s\";","lastModifiedDate":"2022-10-18"},{"lineNumber":110,"author":{"gitId":"Hikoya"},"content":"        String errorMessage \u003d String.format(errorFormat, action, tag, className);","lastModifiedDate":"2022-10-18"},{"lineNumber":111,"author":{"gitId":"Hikoya"},"content":"        logger.info(errorMessage);","lastModifiedDate":"2022-10-18"},{"lineNumber":112,"author":{"gitId":"Hikoya"},"content":"        throw new RuntimeException(errorMessage);","lastModifiedDate":"2022-10-18"},{"lineNumber":113,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"Hikoya"},"content":"     * Sets the content of the clipboard according to the type of the item.","lastModifiedDate":"2022-10-17"},{"lineNumber":117,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"Hikoya"},"content":"    public void setOnAction() {","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"Hikoya"},"content":"        ClipboardContent content \u003d new ClipboardContent();","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"Hikoya"},"content":"        String result \u003d \"\";","lastModifiedDate":"2022-10-17"},{"lineNumber":122,"author":{"gitId":"Hikoya"},"content":"        if (this.item instanceof Stall) {","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"Hikoya"},"content":"            result \u003d this.action.describeStall((Stall) this.item, this.action, this.tag);","lastModifiedDate":"2022-10-18"},{"lineNumber":124,"author":{"gitId":"Hikoya"},"content":"        } else if (this.item instanceof Review) {","lastModifiedDate":"2022-10-17"},{"lineNumber":125,"author":{"gitId":"Hikoya"},"content":"            result \u003d this.action.describeReview((Review) this.item, this.action, this.tag);","lastModifiedDate":"2022-10-18"},{"lineNumber":126,"author":{"gitId":"Hikoya"},"content":"        } else {","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"Hikoya"},"content":"            CopyMenuItem.throwRunTimeError(this.action, this.tag, this.item.getClass().getName());","lastModifiedDate":"2022-10-18"},{"lineNumber":128,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":130,"author":{"gitId":"Hikoya"},"content":"        if (result !\u003d null \u0026\u0026 !result.isEmpty()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":131,"author":{"gitId":"Hikoya"},"content":"            content.putString(result);","lastModifiedDate":"2022-10-17"},{"lineNumber":132,"author":{"gitId":"Hikoya"},"content":"            super.setOnAction((ActionEvent actionEvent) -\u003e this.clipboard.setContent(content));","lastModifiedDate":"2022-10-17"},{"lineNumber":133,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":136,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"Hikoya":137}},{"path":"src/main/java/foodwhere/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.ui;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.LogsCenter;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"    public static final String CLIPBOARD_CONTENT \u003d \"FoodWhere allows the user to copy the \"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"            + \"name, address or other content to the clipboard. \"","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"            + \"To copy any of the content to the clipboard, \"","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"            + \"right-click on either the stall or review card in the lists using the mouse cursor.\";","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"    public static final String CLIPBOARD_TITLE \u003d \"Copy Function of Text to Clipboard\";","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"    public static final String USERGUIDE_TITLE \u003d \"User Guide\";","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103-w14-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"    public static final String HELPWINDOW_TITLE \u003d \"Help Window\";","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"    private Label title;","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"    private Label copyTitle;","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"    private Label copyContent;","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"    private Label userGuideTitle;","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"        title.setText(HELPWINDOW_TITLE);","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"        copyTitle.setText(CLIPBOARD_TITLE);","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"        copyContent.setText(CLIPBOARD_CONTENT);","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"        userGuideTitle.setText(USERGUIDE_TITLE);","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Hikoya":23,"-":98}},{"path":"src/main/java/foodwhere/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.ui;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.GuiSettings;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.LogsCenter;","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.Logic;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.CommandResult;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"    private StallListPanel stallListPanel;","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"    private ReviewListPanel reviewListPanel;","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"    private StackPane stallListPanelPlaceholder;","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-09-25"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"    private StackPane reviewListPanelPlaceholder;","lastModifiedDate":"2022-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"MinHeinA"},"content":"        stallListPanel \u003d new StallListPanel(logic.getFilteredStallList());","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"Hikoya"},"content":"        stallListPanelPlaceholder.getChildren().add(stallListPanel.getRoot());","lastModifiedDate":"2022-10-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"Hikoya"},"content":"        reviewListPanel \u003d new ReviewListPanel(logic.getFilteredReviewList());","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"Hikoya"},"content":"        reviewListPanelPlaceholder.getChildren().add(reviewListPanel.getRoot());","lastModifiedDate":"2022-09-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"Hikoya"},"content":"    public StallListPanel getStallListPanel() {","lastModifiedDate":"2022-10-02"},{"lineNumber":174,"author":{"gitId":"Hikoya"},"content":"        return stallListPanel;","lastModifiedDate":"2022-10-02"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"Hikoya"},"content":"    public ReviewListPanel getReviewListPanel() {","lastModifiedDate":"2022-09-25"},{"lineNumber":178,"author":{"gitId":"Hikoya"},"content":"        return reviewListPanel;","lastModifiedDate":"2022-09-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"Hikoya"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2022-09-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"MinHeinA":1,"Hikoya":20,"-":186}},{"path":"src/main/java/foodwhere/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.ui;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Hikoya":1,"-":27}},{"path":"src/main/java/foodwhere/ui/ReviewCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.ui;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":" * An UI component that displays information of a {@code Review}.","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":" * Will be updated to a Review for later iterations.","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"public class ReviewCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"    private static final String FXML \u003d \"ReviewListCard.fxml\";","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"    public final Review review;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"    private GridPane gridPane;","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"    private Label address;","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"    private Label date;","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"    private Label content;","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"    private Label rating;","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"    private ImageView ratingIcon;","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"    private Label tags;","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"    private Label tagsLabel;","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"     * Creates a {@code ReviewCode} with the given {@code Review} and index to display.","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"    public ReviewCard(Review review, int displayedIndex) {","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"        this.review \u003d review;","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"        address.setText(review.getAddress().value);","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"        name.setText(review.getName().fullName);","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"Hikoya"},"content":"        date.setText(review.getDate().value);","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"Hikoya"},"content":"        content.setText(review.getContent().value);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"Hikoya"},"content":"        setRatingIcon();","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"Hikoya"},"content":"        if (!review.getTags().isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"Hikoya"},"content":"            String assigneesNames \u003d review.getTags()","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"                    .stream()","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"Hikoya"},"content":"                    .flatMap(rev -\u003e Stream.of(rev.tag))","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"Hikoya"},"content":"                    .collect(Collectors.joining(\", \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"Hikoya"},"content":"            tags.setText(assigneesNames);","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"Hikoya"},"content":"            tagsLabel.setText(\"Tags:\");","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"Hikoya"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"Hikoya"},"content":"            removeRow(gridPane, GridPane.getRowIndex(tagsLabel));","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"Hikoya"},"content":"     * Sets the image of ratingIcon {@code ImageView} and the text of ratings {@code Label}.","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"Hikoya"},"content":"    private void setRatingIcon() {","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"Hikoya"},"content":"        Image ratingIconImage;","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"Hikoya"},"content":"        Integer val \u003d review.getRating().value;","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"Hikoya"},"content":"        switch (val) {","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"Hikoya"},"content":"        case 0:","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"Hikoya"},"content":"            ratingIconImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"Hikoya"},"content":"                    getClass().getResourceAsStream(\"/images/stars_0.png\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"Hikoya"},"content":"            break;","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"Hikoya"},"content":"        case 1:","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"Hikoya"},"content":"            ratingIconImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"Hikoya"},"content":"                    getClass().getResourceAsStream(\"/images/stars_1.png\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"Hikoya"},"content":"            break;","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"Hikoya"},"content":"        case 2:","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"Hikoya"},"content":"            ratingIconImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"Hikoya"},"content":"                    getClass().getResourceAsStream(\"/images/stars_2.png\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"Hikoya"},"content":"            break;","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"Hikoya"},"content":"        case 3:","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"Hikoya"},"content":"            ratingIconImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"Hikoya"},"content":"                    getClass().getResourceAsStream(\"/images/stars_3.png\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"Hikoya"},"content":"            break;","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"Hikoya"},"content":"        case 4:","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"Hikoya"},"content":"            ratingIconImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"Hikoya"},"content":"                    getClass().getResourceAsStream(\"/images/stars_4.png\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"Hikoya"},"content":"            break;","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"Hikoya"},"content":"        case 5:","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"Hikoya"},"content":"            ratingIconImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"Hikoya"},"content":"                    getClass().getResourceAsStream(\"/images/stars_5.png\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"Hikoya"},"content":"            break;","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"Hikoya"},"content":"        default:","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"Hikoya"},"content":"            throw new RuntimeException(\"Invalid rating\");","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"Hikoya"},"content":"        ratingIcon.setImage(ratingIconImage);","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"Hikoya"},"content":"     * Adapted from https://stackoverflow.com/a/70961583.","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"Hikoya"},"content":"     * Gets row index constrain for given node, forcefully as integer: 0 as null.","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"Hikoya"},"content":"     * @param node Node to look up the constraint for.","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"Hikoya"},"content":"     * @return The row index as primitive integer.","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"Hikoya"},"content":"    public static int getRowIndexAsInteger(Node node) {","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"Hikoya"},"content":"        final var a \u003d GridPane.getRowIndex(node);","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"Hikoya"},"content":"        if (a \u003d\u003d null) {","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"Hikoya"},"content":"            return 0;","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"Hikoya"},"content":"        return a;","lastModifiedDate":"2022-10-16"},{"lineNumber":136,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":138,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":139,"author":{"gitId":"Hikoya"},"content":"     * Adapted from https://stackoverflow.com/a/70961583.","lastModifiedDate":"2022-10-16"},{"lineNumber":140,"author":{"gitId":"Hikoya"},"content":"     * Removes row from grid pane by index.","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"Hikoya"},"content":"     * @param grid Grid pane to be affected","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"Hikoya"},"content":"     * @param targetRowIndexIntegerObject Target row index to be removed. Integer object type,","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"Hikoya"},"content":"     *                                    because for some reason `getRowIndex` returns null","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"Hikoya"},"content":"     *                                    for children at 0th row.","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"Hikoya"},"content":"    private void removeRow(GridPane grid, Integer targetRowIndexIntegerObject) {","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"Hikoya"},"content":"        int targetRowIndex \u003d targetRowIndexIntegerObject \u003d\u003d null ? 3 : targetRowIndexIntegerObject;","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"Hikoya"},"content":"        // Remove children from row","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"Hikoya"},"content":"        grid.getChildren().removeIf(node -\u003e (getRowIndexAsInteger(node) \u003d\u003d targetRowIndex));","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"Hikoya"},"content":"        // Update indexes of other rows, i.e., shift rows up","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"Hikoya"},"content":"        grid.getChildren().forEach(node -\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"Hikoya"},"content":"            int rowIndex \u003d getRowIndexAsInteger(node);","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"Hikoya"},"content":"            if (targetRowIndex \u003c rowIndex) {","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"Hikoya"},"content":"                GridPane.setRowIndex(node, rowIndex - 1);","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"Hikoya"},"content":"        });","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":162,"author":{"gitId":"Hikoya"},"content":"        // Remove row constraints","lastModifiedDate":"2022-10-16"},{"lineNumber":163,"author":{"gitId":"Hikoya"},"content":"        grid.getRowConstraints().remove(targetRowIndex);","lastModifiedDate":"2022-10-16"},{"lineNumber":164,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":174,"author":{"gitId":"Hikoya"},"content":"        if (!(other instanceof ReviewCard)) {","lastModifiedDate":"2022-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":179,"author":{"gitId":"Hikoya"},"content":"        ReviewCard card \u003d (ReviewCard) other;","lastModifiedDate":"2022-09-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":181,"author":{"gitId":"Hikoya"},"content":"                \u0026\u0026 review.equals(card.review);","lastModifiedDate":"2022-10-02"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Hikoya":133,"-":50}},{"path":"src/main/java/foodwhere/ui/ReviewListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.ui;","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.LogsCenter;","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.control.ContextMenu;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"/**","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"MinHeinA"},"content":" * Panel containing the list of stalls.","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":" * Will be updated to a Review for later iterations.","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":" */","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"public class ReviewListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"    private static final String FXML \u003d \"ReviewListPanel.fxml\";","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ReviewListPanel.class);","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"    private ListView\u003cReview\u003e reviewListView;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"     * Creates a {@code ReviewListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"    public ReviewListPanel(ObservableList\u003cReview\u003e reviewList) {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"        super(FXML);","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"        logger.info(\"Populating reviews from storage...\");","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"        reviewListView.setItems(reviewList);","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"        reviewListView.setCellFactory(listView -\u003e new ReviewListViewCell());","lastModifiedDate":"2022-09-25"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"     * Handles the activity when the user clicks on the review in the list.","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"     * Adapted code from https://stackoverflow.com/questions/20635192/how-to-create-popup-menu.","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"    public void handleMouseClicked() {","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"        final Review selectedReview \u003d reviewListView.getSelectionModel().getSelectedItem();","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"        if (selectedReview !\u003d null) {","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"            final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"            final ContextMenu contextMenu \u003d new ContextMenu();","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"            final ObservableList\u003cMenuItem\u003e contextMenuItems \u003d contextMenu.getItems();","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"            CopyMenuItem\u003cReview\u003e copyReviewName \u003d new CopyMenuItem\u003c\u003e(\"Copy Name\",","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"                    selectedReview, clipboard, CopyMenuItem.Action.FIELDS_NAME);","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"            CopyMenuItem\u003cReview\u003e copyReviewDate \u003d new CopyMenuItem\u003c\u003e(\"Copy Date\",","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"                    selectedReview, clipboard, CopyMenuItem.Action.FIELDS_DATE);","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"            CopyMenuItem\u003cReview\u003e copyReviewContent \u003d new CopyMenuItem\u003c\u003e(\"Copy Content\",","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"                    selectedReview, clipboard, CopyMenuItem.Action.FIELDS_CONTENT);","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"            CopyMenuItem\u003cReview\u003e copyReviewRating \u003d new CopyMenuItem\u003c\u003e(\"Copy Rating\",","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"Hikoya"},"content":"                    selectedReview, clipboard, CopyMenuItem.Action.FIELDS_RATING);","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"            contextMenuItems.addAll(copyReviewName, copyReviewDate, copyReviewContent, copyReviewRating);","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"            if (!selectedReview.getTags().isEmpty()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"                CopyMenuItem\u003cReview\u003e copyReviewTag \u003d new CopyMenuItem\u003c\u003e(\"Copy Tag\",","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"Hikoya"},"content":"                        selectedReview, clipboard, CopyMenuItem.Action.FIELDS_TAG);","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"                contextMenuItems.add(copyReviewTag);","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"Hikoya"},"content":"            reviewListView.setContextMenu(contextMenu);","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":73,"author":{"gitId":"Hikoya"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Review} using a {@code ReviewCard}.","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":75,"author":{"gitId":"Hikoya"},"content":"    class ReviewListViewCell extends ListCell\u003cReview\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"Hikoya"},"content":"        @Override","lastModifiedDate":"2022-09-25"},{"lineNumber":77,"author":{"gitId":"Hikoya"},"content":"        protected void updateItem(Review review, boolean empty) {","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"Hikoya"},"content":"            super.updateItem(review, empty);","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":80,"author":{"gitId":"Hikoya"},"content":"            if (empty || review \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"Hikoya"},"content":"                setGraphic(null);","lastModifiedDate":"2022-09-25"},{"lineNumber":82,"author":{"gitId":"Hikoya"},"content":"                setText(null);","lastModifiedDate":"2022-09-25"},{"lineNumber":83,"author":{"gitId":"Hikoya"},"content":"            } else {","lastModifiedDate":"2022-09-25"},{"lineNumber":84,"author":{"gitId":"Hikoya"},"content":"                setGraphic(new ReviewCard(review, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-09-25"},{"lineNumber":86,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":87,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":88,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":89,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"MinHeinA":1,"Hikoya":88}},{"path":"src/main/java/foodwhere/ui/StallCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.ui;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":" * An UI component that displays information of a {@code Stall}.","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":" * Will be updated to a Stall for later iterations.","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"public class StallCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"    private static final String FXML \u003d \"StallListCard.fxml\";","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"MinHeinA"},"content":"    public final Stall stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"    private GridPane gridPane;","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"    private Label tags;","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"    private Label tagsLabel;","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"MinHeinA"},"content":"     * Creates a {@code StallCode} with the given {@code Stall} and index to display.","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"MinHeinA"},"content":"    public StallCard(Stall stall, int displayedIndex) {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"MinHeinA"},"content":"        this.stall \u003d stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"MinHeinA"},"content":"        name.setText(stall.getName().fullName);","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"MinHeinA"},"content":"        address.setText(stall.getAddress().value);","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"        if (!stall.getTags().isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"Hikoya"},"content":"            String assigneesNames \u003d stall.getTags()","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"                    .stream()","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"                    .flatMap(rev -\u003e Stream.of(rev.tag))","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"                    .collect(Collectors.joining(\", \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"            tags.setText(assigneesNames);","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"Hikoya"},"content":"            tagsLabel.setText(\"Tags:\");","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"        } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"            removeRow(gridPane, GridPane.getRowIndex(tagsLabel));","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"Hikoya"},"content":"     * Adapted from https://stackoverflow.com/a/70961583.","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"Hikoya"},"content":"     * Gets row index constrain for given node, forcefully as integer: 0 as null.","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"Hikoya"},"content":"     * @param node Node to look up the constraint for.","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"     * @return The row index as primitive integer.","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"Hikoya"},"content":"    public static int getRowIndexAsInteger(Node node) {","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"Hikoya"},"content":"        final var a \u003d GridPane.getRowIndex(node);","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"Hikoya"},"content":"        if (a \u003d\u003d null) {","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"Hikoya"},"content":"            return 0;","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"Hikoya"},"content":"        return a;","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"Hikoya"},"content":"     * Adapted from https://stackoverflow.com/a/70961583.","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"Hikoya"},"content":"     * Removes row from grid pane by index.","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"Hikoya"},"content":"     * @param grid Grid pane to be affected","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"Hikoya"},"content":"     * @param targetRowIndexIntegerObject Target row index to be removed. Integer object type,","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"Hikoya"},"content":"     *                                    because for some reason `getRowIndex` returns null","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"Hikoya"},"content":"     *                                    for children at 0th row.","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"Hikoya"},"content":"    private void removeRow(GridPane grid, Integer targetRowIndexIntegerObject) {","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"Hikoya"},"content":"        int targetRowIndex \u003d targetRowIndexIntegerObject \u003d\u003d null ? 1 : targetRowIndexIntegerObject;","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"Hikoya"},"content":"        // Remove children from row","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"Hikoya"},"content":"        grid.getChildren().removeIf(node -\u003e (getRowIndexAsInteger(node) \u003d\u003d targetRowIndex));","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"Hikoya"},"content":"        // Update indexes of other rows, i.e., shift rows up","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"Hikoya"},"content":"        grid.getChildren().forEach(node -\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"Hikoya"},"content":"            int rowIndex \u003d getRowIndexAsInteger(node);","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"Hikoya"},"content":"            if (targetRowIndex \u003c rowIndex) {","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"Hikoya"},"content":"                GridPane.setRowIndex(node, rowIndex - 1);","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"Hikoya"},"content":"        });","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"Hikoya"},"content":"        // Remove row constraints","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"Hikoya"},"content":"        grid.getRowConstraints().remove(targetRowIndex);","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":121,"author":{"gitId":"Hikoya"},"content":"        if (!(other instanceof StallCard)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":126,"author":{"gitId":"Hikoya"},"content":"        StallCard card \u003d (StallCard) other;","lastModifiedDate":"2022-10-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":128,"author":{"gitId":"Hikoya"},"content":"                \u0026\u0026 stall.equals(card.stall);","lastModifiedDate":"2022-10-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"MinHeinA":7,"Hikoya":72,"-":51}},{"path":"src/main/java/foodwhere/ui/StallListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.ui;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.LogsCenter;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.control.ContextMenu;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"MinHeinA"},"content":" * Panel containing the list of stalls.","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"public class StallListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"    private static final String FXML \u003d \"StallListPanel.fxml\";","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StallListPanel.class);","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"MinHeinA"},"content":"    private ListView\u003cStall\u003e stallListView;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"     * Creates a {@code StallListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"MinHeinA"},"content":"    public StallListPanel(ObservableList\u003cStall\u003e stallList) {","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"        logger.info(\"Populating stalls from storage...\");","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"MinHeinA"},"content":"        stallListView.setItems(stallList);","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"        stallListView.setCellFactory(listView -\u003e new StallListViewCell());","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"     * Handles the activity when the user clicks on the stall in the list.","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"     * Adapted code from https://stackoverflow.com/questions/20635192/how-to-create-popup-menu.","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"    @FXML","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"    public void handleMouseClicked() {","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"        final Stall selectedStall \u003d stallListView.getSelectionModel().getSelectedItem();","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"        if (selectedStall !\u003d null) {","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"            final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"            final ContextMenu contextMenu \u003d new ContextMenu();","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"            final ObservableList\u003cMenuItem\u003e contextMenuItems \u003d contextMenu.getItems();","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"            CopyMenuItem\u003cStall\u003e copyStallName \u003d new CopyMenuItem\u003c\u003e(\"Copy Name\",","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"                    selectedStall, clipboard, CopyMenuItem.Action.FIELDS_NAME);","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"            CopyMenuItem\u003cStall\u003e copyStallAddress \u003d new CopyMenuItem\u003c\u003e(\"Copy Address\",","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"                    selectedStall, clipboard, CopyMenuItem.Action.FIELDS_ADDRESS);","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"            contextMenuItems.addAll(copyStallName, copyStallAddress);","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"Hikoya"},"content":"            if (!selectedStall.getTags().isEmpty()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"                CopyMenuItem\u003cStall\u003e copyStallTag \u003d new CopyMenuItem\u003c\u003e(\"Copy Tag\",","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"                        selectedStall, clipboard, CopyMenuItem.Action.FIELDS_TAG);","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"                contextMenuItems.add(copyStallTag);","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"Hikoya"},"content":"            stallListView.setContextMenu(contextMenu);","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"MinHeinA"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Stall} using a {@code StallCard}.","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"MinHeinA"},"content":"    class StallListViewCell extends ListCell\u003cStall\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"MinHeinA"},"content":"        protected void updateItem(Stall stall, boolean empty) {","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"MinHeinA"},"content":"            super.updateItem(stall, empty);","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"MinHeinA"},"content":"            if (empty || stall \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"MinHeinA"},"content":"                setGraphic(new StallCard(stall, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"MinHeinA":11,"Hikoya":43,"-":31}},{"path":"src/main/java/foodwhere/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.ui;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Hikoya":1,"-":27}},{"path":"src/main/java/foodwhere/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.ui;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Hikoya":1,"-":12}},{"path":"src/main/java/foodwhere/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.ui;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import foodwhere.MainApp;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.LogsCenter;","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.util.StringUtil;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.Logic;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/food-where_icon.png\";","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Hikoya":6,"-":82}},{"path":"src/main/java/foodwhere/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.ui;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.MainApp;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Hikoya":3,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":".label-list-panel-background {","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"    -fx-background-color: #273549;","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":".label-list-panel {","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":136,"author":{"gitId":"Hikoya"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"MinHeinA"},"content":"#filterField, #stallListPanel, #stallWebpage {","lastModifiedDate":"2022-10-05"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"MinHeinA":1,"Hikoya":12,"-":350}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"#copyButton, #helpMessage, #copyTitle, #copyContent {","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"#title, #userGuideTitle {","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-01-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Hikoya":10,"-":18}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"      \u003cHBox fx:id\u003d\"helpMessageContainer\" alignment\u003d\"CENTER\" spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"          \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"            \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"              \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"600.0\" minWidth\u003d\"-Infinity\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"            \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"            \u003cLabel fx:id\u003d\"userGuideTitle\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"              \u003cGridPane.margin\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"                \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"              \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"15.0\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"                \u003cLabel fx:id\u003d\"helpMessage\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"                \u003cButton fx:id\u003d\"copyButton\" alignment\u003d\"CENTER_RIGHT\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"              \u003c/children\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"              \u003cGridPane.margin\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"              \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"              \u003cLabel fx:id\u003d\"title\" GridPane.rowIndex\u003d\"2\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"                \u003cGridPane.margin\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"                \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"              \u003c/Label\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"              \u003cLabel fx:id\u003d\"copyTitle\" GridPane.rowIndex\u003d\"3\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"                \u003cGridPane.margin\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"                \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"              \u003c/Label\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"              \u003cImageView fitHeight\u003d\"400.0\" fitWidth\u003d\"400.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" GridPane.rowIndex\u003d\"4\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"Hikoya"},"content":"                \u003cimage\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"                  \u003cImage url\u003d\"@/images/clipboard.png\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"                \u003c/image\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"                \u003cGridPane.margin\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"                  \u003cInsets bottom\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"                \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"Hikoya"},"content":"              \u003c/ImageView\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"              \u003cLabel fx:id\u003d\"copyContent\" minHeight\u003d\"30.0\" wrapText\u003d\"true\" GridPane.rowIndex\u003d\"5\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"                \u003cGridPane.margin\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"Hikoya"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"Hikoya"},"content":"                \u003c/GridPane.margin\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"              \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":70,"author":{"gitId":"Hikoya"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"Hikoya"},"content":"            \u003crowConstraints\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"Hikoya"},"content":"              \u003cRowConstraints minHeight\u003d\"-Infinity\" valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"Hikoya"},"content":"              \u003cRowConstraints minHeight\u003d\"-Infinity\" valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"              \u003cRowConstraints minHeight\u003d\"-Infinity\" valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"Hikoya"},"content":"              \u003cRowConstraints minHeight\u003d\"-Infinity\" valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"Hikoya"},"content":"              \u003cRowConstraints minHeight\u003d\"-Infinity\" valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"Hikoya"},"content":"              \u003cRowConstraints minHeight\u003d\"-Infinity\" valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"Hikoya"},"content":"            \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"Hikoya"},"content":"          \u003c/GridPane\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":85,"author":{"gitId":"Hikoya"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"Hikoya":58,"-":32}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"         title\u003d\"FoodWhere\" minWidth\u003d\"850\" minHeight\u003d\"750\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"    \u003cImage url\u003d\"@/images/food-where_icon.png\" /\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"        \u003cHBox prefWidth\u003d\"400\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"          \u003cStackPane minWidth\u003d\"300\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"            \u003cVBox fx:id\u003d\"stallList\" minWidth\u003d\"300.0\" prefWidth\u003d\"300.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"              \u003cHBox spacing\u003d\"10.0\" styleClass\u003d\"label-list-panel-background\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":58,"author":{"gitId":"Hikoya"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"                  \u003cImageView pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" fitHeight\u003d\"25.0\" fitWidth\u003d\"25.0\"\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"                    \u003cimage\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"                      \u003cImage url\u003d\"@../images/stall.png\" /\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"                    \u003c/image\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"                  \u003c/ImageView\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":64,"author":{"gitId":"Hikoya"},"content":"                  \u003cLabel text\u003d\"Stalls\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" styleClass\u003d\"label-list-panel\"\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"                      \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":67,"author":{"gitId":"Hikoya"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":68,"author":{"gitId":"Hikoya"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":69,"author":{"gitId":"Hikoya"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":70,"author":{"gitId":"Hikoya"},"content":"                \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":71,"author":{"gitId":"Hikoya"},"content":"                  \u003cInsets bottom\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":72,"author":{"gitId":"Hikoya"},"content":"                \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":73,"author":{"gitId":"Hikoya"},"content":"              \u003c/HBox\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"              \u003cStackPane fx:id\u003d\"stallListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":76,"author":{"gitId":"Hikoya"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":78,"author":{"gitId":"Hikoya"},"content":"          \u003cStackPane minWidth\u003d\"300\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":79,"author":{"gitId":"Hikoya"},"content":"            \u003cVBox fx:id\u003d\"reviewList\" minWidth\u003d\"300.0\" prefWidth\u003d\"300.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":80,"author":{"gitId":"Hikoya"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":81,"author":{"gitId":"Hikoya"},"content":"                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":82,"author":{"gitId":"Hikoya"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":83,"author":{"gitId":"Hikoya"},"content":"              \u003cHBox spacing\u003d\"10.0\" styleClass\u003d\"label-list-panel-background\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":84,"author":{"gitId":"Hikoya"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":85,"author":{"gitId":"Hikoya"},"content":"                  \u003cImageView pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" fitHeight\u003d\"25.0\" fitWidth\u003d\"25.0\"\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":86,"author":{"gitId":"Hikoya"},"content":"                    \u003cimage\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":87,"author":{"gitId":"Hikoya"},"content":"                      \u003cImage url\u003d\"@../images/review.png\" /\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":88,"author":{"gitId":"Hikoya"},"content":"                    \u003c/image\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":89,"author":{"gitId":"Hikoya"},"content":"                  \u003c/ImageView\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":90,"author":{"gitId":"Hikoya"},"content":"                  \u003cLabel text\u003d\"Reviews\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" styleClass\u003d\"label-list-panel\"\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":91,"author":{"gitId":"Hikoya"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":92,"author":{"gitId":"Hikoya"},"content":"                      \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":93,"author":{"gitId":"Hikoya"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":94,"author":{"gitId":"Hikoya"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":95,"author":{"gitId":"Hikoya"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":96,"author":{"gitId":"Hikoya"},"content":"                \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":97,"author":{"gitId":"Hikoya"},"content":"                  \u003cInsets bottom\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":98,"author":{"gitId":"Hikoya"},"content":"                \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":99,"author":{"gitId":"Hikoya"},"content":"              \u003c/HBox\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":100,"author":{"gitId":"Hikoya"},"content":"              \u003cStackPane fx:id\u003d\"reviewListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":101,"author":{"gitId":"Hikoya"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":102,"author":{"gitId":"Hikoya"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":103,"author":{"gitId":"Hikoya"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Hikoya":56,"-":53}},{"path":"src/main/resources/view/ReviewListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"      \u003cGridPane prefHeight\u003d\"200.0\" prefWidth\u003d\"350.0\"\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"          \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"            \u003cVBox prefHeight\u003d\"180.0\" prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"                  \u003cHBox prefHeight\u003d\"30.0\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"                        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$id\" translateX\u003d\"10.0\" translateY\u003d\"5.0\"\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"                           \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"                              \u003cInsets bottom\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"                           \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"                        \u003cLabel fx:id\u003d\"name\" prefHeight\u003d\"18.0\" prefWidth\u003d\"285.0\" snapToPixel\u003d\"false\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$name\" translateX\u003d\"30.0\" translateY\u003d\"5.0\"\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"                           \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"                              \u003cInsets bottom\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"                           \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"                  \u003c/HBox\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"                  \u003cGridPane fx:id\u003d\"gridPane\"\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"                    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"                      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"170.20001220703125\" minWidth\u003d\"10.0\" prefWidth\u003d\"73.6\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"                      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"276.79999999999995\" minWidth\u003d\"10.0\" prefWidth\u003d\"276.79999999999995\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"                    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"                    \u003crowConstraints\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"                        \u003cRowConstraints minHeight\u003d\"20.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"                      \u003cRowConstraints minHeight\u003d\"20.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"                      \u003cRowConstraints minHeight\u003d\"60.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"                        \u003cRowConstraints minHeight\u003d\"20.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"                        \u003cRowConstraints minHeight\u003d\"20.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"                    \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"                        \u003cLabel fx:id\u003d\"contentLabel\" styleClass\u003d\"cell_small_label\" text\u003d\"Content:\" translateX\u003d\"10.0\" wrapText\u003d\"true\" GridPane.rowIndex\u003d\"2\" /\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"                        \u003cLabel fx:id\u003d\"dateLabel\" styleClass\u003d\"cell_small_label\" text\u003d\"Date:\" translateX\u003d\"10.0\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"                        \u003cLabel fx:id\u003d\"content\" styleClass\u003d\"cell_small_label\" translateX\u003d\"10.0\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"2\" /\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"                        \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" translateX\u003d\"10.0\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"                         \u003cLabel fx:id\u003d\"rating\" alignment\u003d\"CENTER\" styleClass\u003d\"cell_small_label\" text\u003d\"Rating:\" translateX\u003d\"10.0\" GridPane.rowIndex\u003d\"3\" /\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"                         \u003cImageView fx:id\u003d\"ratingIcon\" fitHeight\u003d\"17.0\" fitWidth\u003d\"240.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" translateX\u003d\"10.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"3\" /\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"                         \u003cLabel fx:id\u003d\"tagsLabel\" styleClass\u003d\"cell_small_label\" text\u003d\"Tags:\" translateX\u003d\"10.0\" GridPane.rowIndex\u003d\"4\" /\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"                        \u003cLabel fx:id\u003d\"tags\" styleClass\u003d\"cell_small_label\" translateX\u003d\"10.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"4\" /\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"                        \u003cLabel fx:id\u003d\"addressLabel\" styleClass\u003d\"cell_small_label\" text\u003d\"Address:\" translateX\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"Hikoya"},"content":"                        \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" translateX\u003d\"10.0\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"1\" /\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"                  \u003c/GridPane\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"               \u003c/children\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"         \u003c/children\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"Hikoya"},"content":"      \u003c/GridPane\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"   \u003c/children\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"Hikoya":66}},{"path":"src/main/resources/view/ReviewListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"    \u003cListView fx:id\u003d\"reviewListView\" VBox.vgrow\u003d\"ALWAYS\" onMouseClicked\u003d\"#handleMouseClicked\"/\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"Hikoya":8}},{"path":"src/main/resources/view/StallListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" prefHeight\u003d\"96.0\" prefWidth\u003d\"350.0\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"    \u003cGridPane prefHeight\u003d\"150.0\" prefWidth\u003d\"350.0\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"        \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"        \u003cVBox prefHeight\u003d\"120.0\" prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"            \u003cHBox prefHeight\u003d\"30.0\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$id\" translateX\u003d\"10.0\" translateY\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"                \u003cLabel fx:id\u003d\"name\" prefHeight\u003d\"18.0\" prefWidth\u003d\"285.0\" snapToPixel\u003d\"false\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$name\" translateX\u003d\"30.0\" translateY\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"              \u003c/children\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"            \u003cGridPane fx:id\u003d\"gridPane\"\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"              \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"170.20001220703125\" minWidth\u003d\"10.0\" prefWidth\u003d\"73.6\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"276.79999999999995\" minWidth\u003d\"10.0\" prefWidth\u003d\"276.79999999999995\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"              \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"              \u003crowConstraints\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"                \u003cRowConstraints minHeight\u003d\"20.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"                \u003cRowConstraints minHeight\u003d\"20.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"              \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"                \u003cLabel fx:id\u003d\"addressLabel\" styleClass\u003d\"cell_small_label\" text\u003d\"Address:\" translateX\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"                \u003cLabel fx:id\u003d\"tagsLabel\" styleClass\u003d\"cell_small_label\" text\u003d\"Tags:\" translateX\u003d\"10.0\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"                \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" translateX\u003d\"10.0\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"1\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"                \u003cLabel fx:id\u003d\"tags\" styleClass\u003d\"cell_small_label\" translateX\u003d\"10.0\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"              \u003c/children\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"            \u003c/GridPane\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"          \u003c/children\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"      \u003c/children\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"  \u003c/children\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Hikoya":35,"-":14}},{"path":"src/main/resources/view/StallListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"  \u003cListView fx:id\u003d\"stallListView\" VBox.vgrow\u003d\"ALWAYS\" onMouseClicked\u003d\"#handleMouseClicked\" /\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Hikoya":1,"-":7}},{"path":"src/test/java/foodwhere/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Hikoya":1,"-":57}},{"path":"src/test/java/foodwhere/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.core;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Hikoya":1,"-":26}},{"path":"src/test/java/foodwhere/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.core;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Hikoya":2,"-":133}},{"path":"src/test/java/foodwhere/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.core.index;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"MinHeinA"},"content":"        final Index fifthStallIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"MinHeinA"},"content":"        assertTrue(fifthStallIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"MinHeinA"},"content":"        assertTrue(fifthStallIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"MinHeinA"},"content":"        assertTrue(fifthStallIndex.equals(fifthStallIndex));","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"MinHeinA"},"content":"        assertFalse(fifthStallIndex.equals(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"MinHeinA"},"content":"        assertFalse(fifthStallIndex.equals(5.0f));","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"MinHeinA"},"content":"        assertFalse(fifthStallIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"MinHeinA":7,"Hikoya":2,"-":51}},{"path":"src/test/java/foodwhere/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.util;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"        assertNotNull(AppUtil.getImage(\"/images/food-where_icon.png\"));","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Hikoya":3,"-":33}},{"path":"src/test/java/foodwhere/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.util;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2022-09-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2022-09-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2022-09-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2022-09-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"Hikoya":3,"-":105}},{"path":"src/test/java/foodwhere/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.util;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.Config;","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2022-09-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2022-09-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Hikoya":4,"-":112}},{"path":"src/test/java/foodwhere/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.util;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Hikoya":2,"-":21}},{"path":"src/test/java/foodwhere/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.util;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.testutil.SerializableTestClass;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.testutil.TestUtil;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Hikoya":3,"-":42}},{"path":"src/test/java/foodwhere/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.commons.util;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2022-09-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2022-09-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2022-09-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2022-09-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2022-09-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Hikoya":2,"-":141}},{"path":"src/test/java/foodwhere/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.testutil.TypicalStalls.AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.Messages;","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.CommandResult;","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.SAddCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.SListCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ModelManager;","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.UserPrefs;","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.stall.StallBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"import foodwhere.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"import foodwhere.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"import foodwhere.storage.StorageManager;","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"        assertParseException(invalidCommand, Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-09-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"jamietan2002"},"content":"        String deleteCommand \u003d \"sdel 9\";","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"MinHeinA"},"content":"        assertCommandException(deleteCommand, Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"jamietan2002"},"content":"        String listCommand \u003d SListCommand.COMMAND_WORD;","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"jamietan2002"},"content":"        assertCommandSuccess(listCommand, SListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"jamietan2002"},"content":"        String addCommand \u003d SAddCommand.COMMAND_WORD + NAME_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"Hikoya"},"content":"        Stall expectedStall \u003d new StallBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"MinHeinA"},"content":"        expectedModel.addStall(expectedStall);","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"MinHeinA"},"content":"    public void getFilteredStallList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredStallList().remove(0));","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"MinHeinA":6,"clarence-chew":1,"Hikoya":17,"-":128,"jamietan2002":6}},{"path":"src/test/java/foodwhere/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.AddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ModelManager;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.UserPrefs;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.testutil.TypicalStalls;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"MinHeinA"},"content":"        Model model \u003d new ModelManager(TypicalStalls.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"MinHeinA"},"content":"        Model expectedModel \u003d new ModelManager(TypicalStalls.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"MinHeinA":3,"Hikoya":6,"-":23}},{"path":"src/test/java/foodwhere/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"Hikoya":1,"-":53}},{"path":"src/test/java/foodwhere/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.index.Index;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.parser.CliSyntax;","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.AddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.review.ReviewContainsKeywordsPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.stall.StallContainsKeywordsPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.testutil.EditStallDescriptorBuilder;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"    public static final String VALID_DATE_AMY \u003d \"20/09/2022\";","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"jamietan2002"},"content":"    public static final String VALID_DATE_BOB \u003d \"20/08/2022\";","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"LikHern"},"content":"    public static final String VALID_CONTENT_AMY \u003d \"Good, 5/5\";","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"LikHern"},"content":"    public static final String VALID_CONTENT_BOB \u003d \"Bad, 1/5\";","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"    public static final Integer VALID_RATING_AMY \u003d 4;","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"    public static final Integer VALID_RATING_BOB \u003d 3;","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"jamietan2002"},"content":"    public static final String STALL_INDEX_DESC \u003d \" \" + CliSyntax.PREFIX_STALL_INDEX + \"1\";","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"    public static final String DATE_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_DATE + VALID_DATE_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"jamietan2002"},"content":"    public static final String DATE_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_DATE + VALID_DATE_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"jamietan2002"},"content":"    public static final String CONTENT_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_CONTENT + VALID_CONTENT_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"jamietan2002"},"content":"    public static final String CONTENT_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_CONTENT + VALID_CONTENT_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2022-09-26"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2022-09-26"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2022-09-26"},{"lineNumber":51,"author":{"gitId":"jamietan2002"},"content":"    public static final String RATING_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_RATING + VALID_RATING_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"jamietan2002"},"content":"    public static final String RATING_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_RATING + VALID_RATING_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + CliSyntax.PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + CliSyntax.PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"jamietan2002"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \"","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"jamietan2002"},"content":"            + CliSyntax.PREFIX_DATE + \"\"; //invalid date format","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + CliSyntax.PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-09-26"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \"","lastModifiedDate":"2022-09-26"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"            + CliSyntax.PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2022-09-26"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"            + CliSyntax.PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"MinHeinA"},"content":"    public static final SEditCommand.EditStallDescriptor DESC_AMY;","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"MinHeinA"},"content":"    public static final SEditCommand.EditStallDescriptor DESC_BOB;","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"MinHeinA"},"content":"        DESC_AMY \u003d new EditStallDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"MinHeinA"},"content":"                .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"MinHeinA"},"content":"        DESC_BOB \u003d new EditStallDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"MinHeinA"},"content":"                .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"Hikoya"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"MinHeinA"},"content":"     * - the address book, filtered stall list and selected stall in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"MinHeinA"},"content":"        List\u003cStall\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStallList());","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"Hikoya"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-09-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"MinHeinA"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStallList());","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":123,"author":{"gitId":"MinHeinA"},"content":"     * Updates {@code model}\u0027s filtered list to show only the stall at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"MinHeinA"},"content":"    public static void showStallAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"MinHeinA"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStallList().size());","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"MinHeinA"},"content":"        Stall stall \u003d model.getFilteredStallList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"jamietan2002"},"content":"        String name \u003d stall.getName().toString().split(\" \")[0];","lastModifiedDate":"2022-10-21"},{"lineNumber":131,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":132,"author":{"gitId":"jamietan2002"},"content":"        model.updateFilteredStallList(new StallContainsKeywordsPredicate(Collections.singletonList(new Name(name)),","lastModifiedDate":"2022-10-21"},{"lineNumber":133,"author":{"gitId":"jamietan2002"},"content":"                Collections.emptyList()));","lastModifiedDate":"2022-10-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"MinHeinA"},"content":"        assertEquals(1, model.getFilteredStallList().size());","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":138,"author":{"gitId":"jamietan2002"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":139,"author":{"gitId":"jamietan2002"},"content":"     * Updates {@code model}\u0027s filtered list to show only the review at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-15"},{"lineNumber":140,"author":{"gitId":"jamietan2002"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"jamietan2002"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"jamietan2002"},"content":"    public static void showReviewAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-15"},{"lineNumber":143,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStallList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":144,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"jamietan2002"},"content":"        Review review \u003d model.getFilteredReviewList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"jamietan2002"},"content":"        String name \u003d review.getName().toString().split(\" \")[0];","lastModifiedDate":"2022-10-21"},{"lineNumber":147,"author":{"gitId":"jamietan2002"},"content":"        model.updateFilteredReviewList(new ReviewContainsKeywordsPredicate(Collections.singletonList(new Name(name)),","lastModifiedDate":"2022-10-21"},{"lineNumber":148,"author":{"gitId":"jamietan2002"},"content":"                Collections.emptyList()));","lastModifiedDate":"2022-10-21"},{"lineNumber":149,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":150,"author":{"gitId":"jamietan2002"},"content":"        assertEquals(1, model.getFilteredReviewList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":151,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":152,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"MinHeinA":16,"LikHern":2,"Hikoya":26,"-":71,"jamietan2002":38}},{"path":"src/test/java/foodwhere/logic/commands/EditStallDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.testutil.EditStallDescriptorBuilder;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"MinHeinA"},"content":"public class EditStallDescriptorTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"    public void equals() {","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand.EditStallDescriptor descriptorWithSameValues \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"MinHeinA"},"content":"                new SEditCommand.EditStallDescriptor(CommandTestUtil.DESC_AMY);","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"        assertTrue(CommandTestUtil.DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"        assertTrue(CommandTestUtil.DESC_AMY.equals(CommandTestUtil.DESC_AMY));","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"        assertFalse(CommandTestUtil.DESC_AMY.equals(null));","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"        assertFalse(CommandTestUtil.DESC_AMY.equals(5));","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"        assertFalse(CommandTestUtil.DESC_AMY.equals(CommandTestUtil.DESC_BOB));","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand.EditStallDescriptor editedAmy \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"MinHeinA"},"content":"                new EditStallDescriptorBuilder(CommandTestUtil.DESC_AMY)","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"                        .withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"        assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2022-09-26"},{"lineNumber":38,"author":{"gitId":"MinHeinA"},"content":"        editedAmy \u003d new EditStallDescriptorBuilder(CommandTestUtil.DESC_AMY)","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"                .withAddress(CommandTestUtil.VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"        assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-09-26"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":42,"author":{"gitId":"MinHeinA"},"content":"        // different details -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"MinHeinA"},"content":"        editedAmy \u003d new EditStallDescriptorBuilder(CommandTestUtil.DESC_AMY)","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"        assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"MinHeinA":9,"Hikoya":38}},{"path":"src/test/java/foodwhere/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ModelManager;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"Hikoya":5,"-":14}},{"path":"src/test/java/foodwhere/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ModelManager;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HelpCommand.SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"Hikoya":5,"-":14}},{"path":"src/test/java/foodwhere/logic/commands/RAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jamietan2002"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"jamietan2002"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"jamietan2002"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"jamietan2002"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.AddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.ReviewBuilder;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.testutil.TypicalIndexes;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.testutil.TypicalStalls;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"jamietan2002"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RAddCommand.","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":"public class RAddCommandTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":"    private Model model \u003d new ModelManager(TypicalStalls.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"    public void execute_withTagsUnfilteredList_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"jamietan2002"},"content":"        Index indexLastStall \u003d Index.fromOneBased(model.getFilteredStallList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"        Stall lastStall \u003d model.getFilteredStallList().get(indexLastStall.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"        String name \u003d lastStall.getName().toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"        String address \u003d lastStall.getAddress().toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"        Review review \u003d new ReviewBuilder().withName(name)","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"                .withAddress(address).withTags(CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"jamietan2002"},"content":"        RAddCommand rAddCommand \u003d new RAddCommand(indexLastStall, review.getDate(),","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"jamietan2002"},"content":"                review.getContent(), review.getRating(), review.getTags());","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"jamietan2002"},"content":"        String expectedMessage \u003d String.format(RAddCommand.MESSAGE_SUCCESS, review);","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"jamietan2002"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"        expectedModel.addReview(review);","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"jamietan2002"},"content":"        assertCommandSuccess(rAddCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"jamietan2002"},"content":"    public void execute_noTagsUnfilteredList_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"jamietan2002"},"content":"        Index indexLastStall \u003d Index.fromOneBased(model.getFilteredStallList().size());","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"jamietan2002"},"content":"        Stall lastStall \u003d model.getFilteredStallList().get(indexLastStall.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"jamietan2002"},"content":"        String name \u003d lastStall.getName().toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"        String address \u003d lastStall.getAddress().toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"        Review review \u003d new ReviewBuilder().withName(name).withAddress(address).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"jamietan2002"},"content":"        RAddCommand rAddCommand \u003d new RAddCommand(indexLastStall, review.getDate(),","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"jamietan2002"},"content":"                review.getContent(), review.getRating(), review.getTags());","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"jamietan2002"},"content":"        String expectedMessage \u003d String.format(RAddCommand.MESSAGE_SUCCESS, review);","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"jamietan2002"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"jamietan2002"},"content":"        expectedModel.addReview(review);","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"jamietan2002"},"content":"        assertCommandSuccess(rAddCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"jamietan2002"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"jamietan2002"},"content":"        CommandTestUtil.showStallAtIndex(model, TypicalIndexes.INDEX_FIRST_STALL);","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"jamietan2002"},"content":"        Stall stallInFilteredList \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"jamietan2002"},"content":"                model.getFilteredStallList().get(TypicalIndexes.INDEX_FIRST_STALL.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"jamietan2002"},"content":"        String name \u003d stallInFilteredList.getName().toString();","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"clarence-chew"},"content":"        String address \u003d stallInFilteredList.getAddress().toString();","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"        Review review \u003d new ReviewBuilder().withName(name).withAddress(address).build();","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"jamietan2002"},"content":"        RAddCommand rAddCommand \u003d new RAddCommand(TypicalIndexes.INDEX_FIRST_STALL, review.getDate(),","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"jamietan2002"},"content":"                review.getContent(), review.getRating(), review.getTags());","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"jamietan2002"},"content":"        String expectedMessage \u003d String.format(RAddCommand.MESSAGE_SUCCESS, review);","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"jamietan2002"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"jamietan2002"},"content":"        expectedModel.addReview(review);","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"jamietan2002"},"content":"        assertCommandSuccess(rAddCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"jamietan2002"},"content":"    public void execute_duplicateReviewUnfilteredList_failure() {","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"jamietan2002"},"content":"        Review firstReview \u003d model.getFilteredReviewList().get(TypicalIndexes.INDEX_FIRST_REVIEW.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"jamietan2002"},"content":"        Review review \u003d new ReviewBuilder(firstReview).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"jamietan2002"},"content":"        RAddCommand rAddCommand \u003d new RAddCommand(TypicalIndexes.INDEX_FIRST_STALL, review.getDate(),","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"jamietan2002"},"content":"                review.getContent(), review.getRating(), review.getTags());","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"jamietan2002"},"content":"        CommandTestUtil.assertCommandFailure(rAddCommand, model, RAddCommand.MESSAGE_DUPLICATE_REVIEW);","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"jamietan2002"},"content":"    public void execute_invalidStallIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"jamietan2002"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredReviewList().size() + 1);","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"jamietan2002"},"content":"        Review review \u003d new ReviewBuilder().build();","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"jamietan2002"},"content":"        RAddCommand rAddCommand \u003d new RAddCommand(outOfBoundIndex, review.getDate(),","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"jamietan2002"},"content":"                review.getContent(), review.getRating(), review.getTags());","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"jamietan2002"},"content":"        CommandTestUtil.assertCommandFailure(rAddCommand, model, Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"jamietan2002"},"content":"    public void equals() {","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"jamietan2002"},"content":"        Review review \u003d new ReviewBuilder().build();","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"jamietan2002"},"content":"        final RAddCommand standardCommand \u003d new RAddCommand(TypicalIndexes.INDEX_FIRST_REVIEW, review.getDate(),","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"jamietan2002"},"content":"                review.getContent(), review.getRating(), review.getTags());","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"jamietan2002"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"jamietan2002"},"content":"        RAddCommand commandWithSameValues \u003d new RAddCommand(TypicalIndexes.INDEX_FIRST_STALL,","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"jamietan2002"},"content":"                review.getDate(), review.getContent(), review.getRating(), review.getTags());","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"jamietan2002"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":123,"author":{"gitId":"jamietan2002"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":124,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-15"},{"lineNumber":125,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":126,"author":{"gitId":"jamietan2002"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":130,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":132,"author":{"gitId":"jamietan2002"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"clarence-chew":8,"jamietan2002":124}},{"path":"src/test/java/foodwhere/logic/commands/RDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jamietan2002"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"jamietan2002"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"jamietan2002"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"jamietan2002"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.testutil.TypicalIndexes;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.testutil.TypicalStalls;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":" * {@code RDeleteCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"jamietan2002"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"public class RDeleteCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":"    private Model model \u003d new ModelManager(TypicalStalls.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"jamietan2002"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"        Review reviewToDelete \u003d model.getFilteredReviewList().get(TypicalIndexes.INDEX_FIRST_REVIEW.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"        RDeleteCommand rDeleteCommand \u003d new RDeleteCommand(TypicalIndexes.INDEX_FIRST_REVIEW);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"        String expectedMessage \u003d String.format(rDeleteCommand.MESSAGE_DELETE_REVIEW_SUCCESS, reviewToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"jamietan2002"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"jamietan2002"},"content":"        expectedModel.deleteReview(reviewToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"        assertCommandSuccess(rDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"jamietan2002"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"jamietan2002"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredReviewList().size() + 1);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"        RDeleteCommand rDeleteCommand \u003d new RDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"jamietan2002"},"content":"        CommandTestUtil.assertCommandFailure(rDeleteCommand, model, Messages.MESSAGE_INVALID_REVIEW_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"jamietan2002"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"jamietan2002"},"content":"        Review reviewToDelete \u003d model.getFilteredReviewList().get(TypicalIndexes.INDEX_FIRST_REVIEW.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"jamietan2002"},"content":"        RDeleteCommand rDeleteCommand \u003d new RDeleteCommand(TypicalIndexes.INDEX_FIRST_REVIEW);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"jamietan2002"},"content":"        String expectedMessage \u003d String.format(rDeleteCommand.MESSAGE_DELETE_REVIEW_SUCCESS, reviewToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"jamietan2002"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"jamietan2002"},"content":"        expectedModel.deleteReview(reviewToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"jamietan2002"},"content":"        showNoReview(expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"jamietan2002"},"content":"        CommandTestUtil.assertCommandSuccess(rDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"jamietan2002"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"jamietan2002"},"content":"        RDeleteCommand deleteFirstCommand \u003d new RDeleteCommand(TypicalIndexes.INDEX_FIRST_REVIEW);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"jamietan2002"},"content":"        RDeleteCommand deleteSecondCommand \u003d new RDeleteCommand(TypicalIndexes.INDEX_SECOND_REVIEW);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"jamietan2002"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"jamietan2002"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"jamietan2002"},"content":"        RDeleteCommand deleteFirstCommandCopy \u003d new RDeleteCommand(TypicalIndexes.INDEX_FIRST_REVIEW);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"jamietan2002"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"jamietan2002"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"jamietan2002"},"content":"        // different stall -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"jamietan2002"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"jamietan2002"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"jamietan2002"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"jamietan2002"},"content":"    private void showNoReview(Model model) {","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"jamietan2002"},"content":"        model.updateFilteredReviewList(p -\u003e false);","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(model.getFilteredReviewList().isEmpty());","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"jamietan2002"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jamietan2002":91}},{"path":"src/test/java/foodwhere/logic/commands/RFindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jamietan2002"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"jamietan2002"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"jamietan2002"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"jamietan2002"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"jamietan2002"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":"import java.util.List;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"jamietan2002"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.commons.core.Messages;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.ModelManager;","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.UserPrefs;","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.review.ReviewContainsKeywordsPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.testutil.TypicalReviews;","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.testutil.TypicalStalls;","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"jamietan2002"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":" * Contains integration tests (interaction with the Model) for {@code RFindCommand}.","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"jamietan2002"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"public class RFindCommandTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"    private Model model \u003d new ModelManager(TypicalStalls.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"jamietan2002"},"content":"    private Model expectedModel \u003d new ModelManager(TypicalStalls.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"jamietan2002"},"content":"    public void equals() {","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"jamietan2002"},"content":"        ReviewContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"jamietan2002"},"content":"                new ReviewContainsKeywordsPredicate(Collections.singleton(new Name(\"first\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"first\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"jamietan2002"},"content":"        ReviewContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"jamietan2002"},"content":"                new ReviewContainsKeywordsPredicate(Collections.singleton(new Name(\"second\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"first\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"jamietan2002"},"content":"        ReviewContainsKeywordsPredicate thirdPredicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"                new ReviewContainsKeywordsPredicate(Collections.singleton(new Name(\"first\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"second\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"jamietan2002"},"content":"        ReviewContainsKeywordsPredicate fourthPredicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"jamietan2002"},"content":"                new ReviewContainsKeywordsPredicate(Collections.singleton(new Name(\"second\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"second\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"jamietan2002"},"content":"        RFindCommand findFirstCommand \u003d new RFindCommand(firstPredicate);","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"jamietan2002"},"content":"        RFindCommand findSecondCommand \u003d new RFindCommand(secondPredicate);","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"jamietan2002"},"content":"        RFindCommand findThirdCommand \u003d new RFindCommand(thirdPredicate);","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"jamietan2002"},"content":"        RFindCommand findFourthCommand \u003d new RFindCommand(fourthPredicate);","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"jamietan2002"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"jamietan2002"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"jamietan2002"},"content":"        RFindCommand findFirstCommandCopy \u003d new RFindCommand(firstPredicate);","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"jamietan2002"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"jamietan2002"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"jamietan2002"},"content":"        // different name or tag -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand)); //different names","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(findFirstCommand.equals(findThirdCommand)); //different tags","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(findFirstCommand.equals(findFourthCommand)); //different names and tags","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"jamietan2002"},"content":"    public void execute_zeroKeywords_noReviewFound() {","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"jamietan2002"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_REVIEWS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"jamietan2002"},"content":"        ReviewContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"jamietan2002"},"content":"        RFindCommand command \u003d new RFindCommand(predicate);","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"jamietan2002"},"content":"        expectedModel.updateFilteredReviewList(predicate);","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"jamietan2002"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"jamietan2002"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredReviewList());","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"jamietan2002"},"content":"    public void execute_multipleKeywords_multipleStallsFound() {","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"jamietan2002"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_REVIEWS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"jamietan2002"},"content":"        ReviewContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"jamietan2002"},"content":"        RFindCommand command \u003d new RFindCommand(predicate);","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"jamietan2002"},"content":"        expectedModel.updateFilteredReviewList(predicate);","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"jamietan2002"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"jamietan2002"},"content":"        assertEquals(Arrays.asList(TypicalReviews.CARL,","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"jamietan2002"},"content":"                TypicalReviews.ELLE,","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"jamietan2002"},"content":"                TypicalReviews.FIONA),","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"jamietan2002"},"content":"                model.getFilteredReviewList());","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"jamietan2002"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"jamietan2002"},"content":"     * Parses {@code userInput} into a {@code ReviewContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"jamietan2002"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"jamietan2002"},"content":"    private ReviewContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"jamietan2002"},"content":"        List\u003cString\u003e lst \u003d Arrays.asList(userInput.split(\"\\\\s+\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"jamietan2002"},"content":"        List\u003cName\u003e nameList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"jamietan2002"},"content":"        for (String s : lst) {","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"jamietan2002"},"content":"            nameList.add(new Name(s));","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"jamietan2002"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"jamietan2002"},"content":"        return new ReviewContainsKeywordsPredicate(nameList, Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":103,"author":{"gitId":"jamietan2002"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"jamietan2002":103}},{"path":"src/test/java/foodwhere/logic/commands/RListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jamietan2002"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.showReviewAtIndex;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"jamietan2002"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"jamietan2002"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.testutil.TypicalIndexes;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.testutil.TypicalStalls;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"jamietan2002"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RListCommand.","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"public class RListCommandTest {","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"    private Model model;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"jamietan2002"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"jamietan2002"},"content":"        model \u003d new ModelManager(TypicalStalls.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"jamietan2002"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"        assertCommandSuccess(new RListCommand(), model, RListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"jamietan2002"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"        showReviewAtIndex(model, TypicalIndexes.INDEX_FIRST_REVIEW);","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"jamietan2002"},"content":"        assertCommandSuccess(new RListCommand(), model, RListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"jamietan2002"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"jamietan2002":39}},{"path":"src/test/java/foodwhere/logic/commands/SAddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ModelManager;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.UserPrefs;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.stall.StallBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.testutil.TypicalStalls;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":" * Contains integration tests (interaction with the Model) for {@code SAddCommand}.","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":"public class SAddCommandIntegrationTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"MinHeinA"},"content":"        model \u003d new ModelManager(TypicalStalls.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"MinHeinA"},"content":"    public void execute_newStall_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"MinHeinA"},"content":"        Stall validStall \u003d new StallBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"MinHeinA"},"content":"        expectedModel.addStall(validStall);","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"jamietan2002"},"content":"        assertCommandSuccess(new SAddCommand(validStall), model,","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"                String.format(SAddCommand.MESSAGE_SUCCESS, validStall), expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"MinHeinA"},"content":"    public void execute_duplicateStall_throwsCommandException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"MinHeinA"},"content":"        Stall stallInList \u003d model.getAddressBook().getStallList().get(0);","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"        assertCommandFailure(new SAddCommand(stallInList), model, SAddCommand.MESSAGE_DUPLICATE_STALL);","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"MinHeinA":8,"clarence-chew":1,"Hikoya":6,"-":25,"jamietan2002":5}},{"path":"src/test/java/foodwhere/logic/commands/SAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.GuiSettings;","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.AddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.stall.StallBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"public class SAddCommandTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"MinHeinA"},"content":"    public void constructor_nullStall_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SAddCommand(null));","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"MinHeinA"},"content":"    public void execute_stallAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"MinHeinA"},"content":"        ModelStubAcceptingStallAdded modelStub \u003d new ModelStubAcceptingStallAdded();","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"MinHeinA"},"content":"        Stall validStall \u003d new StallBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"jamietan2002"},"content":"        CommandResult commandResult \u003d new SAddCommand(validStall).execute(modelStub);","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"        assertEquals(String.format(SAddCommand.MESSAGE_SUCCESS, validStall), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"MinHeinA"},"content":"        assertEquals(Arrays.asList(validStall), modelStub.stallsAdded);","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"MinHeinA"},"content":"    public void execute_duplicateStall_throwsCommandException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"MinHeinA"},"content":"        Stall validStall \u003d new StallBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"        SAddCommand sAddCommand \u003d new SAddCommand(validStall);","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"MinHeinA"},"content":"        ModelStub modelStub \u003d new ModelStubWithStall(validStall);","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(CommandException.class, SAddCommand.MESSAGE_DUPLICATE_STALL, () -\u003e sAddCommand.execute(modelStub));","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"MinHeinA"},"content":"        Stall alice \u003d new StallBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"MinHeinA"},"content":"        Stall bob \u003d new StallBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"jamietan2002"},"content":"        SAddCommand addAliceCommand \u003d new SAddCommand(alice);","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"jamietan2002"},"content":"        SAddCommand addBobCommand \u003d new SAddCommand(bob);","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"jamietan2002"},"content":"        SAddCommand addAliceCommandCopy \u003d new SAddCommand(alice);","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"MinHeinA"},"content":"        // different stall -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"MinHeinA"},"content":"        public void addStall(Stall stall) {","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"LikHern"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"LikHern"},"content":"        public void addReview(Review review) {","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"LikHern"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"clarence-chew"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":124,"author":{"gitId":"clarence-chew"},"content":"        public void addReviewToStall(Review review, Stall stall) {","lastModifiedDate":"2022-10-23"},{"lineNumber":125,"author":{"gitId":"clarence-chew"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-23"},{"lineNumber":126,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":127,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":128,"author":{"gitId":"Hikoya"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"Hikoya"},"content":"        public void setReview(Review target, Review editedReview) {","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"Hikoya"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"MinHeinA"},"content":"        public boolean hasStall(Stall stall) {","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"LikHern"},"content":"        public boolean hasReview(Review review) {","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"jamietan2002"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"LikHern"},"content":"        public void deleteStall(Stall target) {","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"LikHern"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"LikHern"},"content":"        public void deleteReview(Review target) {","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"LikHern"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"LikHern"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"LikHern"},"content":"        public void setStall(Stall target, Stall editedStall) {","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"LikHern"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"LikHern"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"LikHern"},"content":"        public void sortStalls(Comparator\u003cStall\u003e comparator) {","lastModifiedDate":"2022-10-20"},{"lineNumber":170,"author":{"gitId":"LikHern"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":173,"author":{"gitId":"LikHern"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":174,"author":{"gitId":"LikHern"},"content":"        public void sortReviews(Comparator\u003cReview\u003e comparator) {","lastModifiedDate":"2022-10-20"},{"lineNumber":175,"author":{"gitId":"LikHern"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"LikHern"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":177,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"MinHeinA"},"content":"        public ObservableList\u003cStall\u003e getFilteredStallList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"Hikoya"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"Hikoya"},"content":"        public ObservableList\u003cReview\u003e getFilteredReviewList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"Hikoya"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"MinHeinA"},"content":"        public void updateFilteredStallList(Predicate\u003cStall\u003e predicate) {","lastModifiedDate":"2022-10-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"Hikoya"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"Hikoya"},"content":"        public void updateFilteredReviewList(Predicate\u003cReview\u003e predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"Hikoya"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"MinHeinA"},"content":"     * A Model stub that contains a single stall.","lastModifiedDate":"2022-10-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"MinHeinA"},"content":"    private class ModelStubWithStall extends ModelStub {","lastModifiedDate":"2022-10-05"},{"lineNumber":203,"author":{"gitId":"MinHeinA"},"content":"        private final Stall stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"MinHeinA"},"content":"        ModelStubWithStall(Stall stall) {","lastModifiedDate":"2022-10-05"},{"lineNumber":206,"author":{"gitId":"MinHeinA"},"content":"            requireNonNull(stall);","lastModifiedDate":"2022-10-05"},{"lineNumber":207,"author":{"gitId":"MinHeinA"},"content":"            this.stall \u003d stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"MinHeinA"},"content":"        public boolean hasStall(Stall stall) {","lastModifiedDate":"2022-10-05"},{"lineNumber":212,"author":{"gitId":"MinHeinA"},"content":"            requireNonNull(stall);","lastModifiedDate":"2022-10-05"},{"lineNumber":213,"author":{"gitId":"MinHeinA"},"content":"            return this.stall.isSameStall(stall);","lastModifiedDate":"2022-10-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"MinHeinA"},"content":"     * A Model stub that always accept the stall being added.","lastModifiedDate":"2022-10-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"MinHeinA"},"content":"    private class ModelStubAcceptingStallAdded extends ModelStub {","lastModifiedDate":"2022-10-05"},{"lineNumber":221,"author":{"gitId":"MinHeinA"},"content":"        final ArrayList\u003cStall\u003e stallsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"MinHeinA"},"content":"        public boolean hasStall(Stall stall) {","lastModifiedDate":"2022-10-05"},{"lineNumber":225,"author":{"gitId":"MinHeinA"},"content":"            requireNonNull(stall);","lastModifiedDate":"2022-10-05"},{"lineNumber":226,"author":{"gitId":"MinHeinA"},"content":"            return stallsAdded.stream().anyMatch(stall::isSameStall);","lastModifiedDate":"2022-10-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"MinHeinA"},"content":"        public void addStall(Stall stall) {","lastModifiedDate":"2022-10-05"},{"lineNumber":231,"author":{"gitId":"MinHeinA"},"content":"            requireNonNull(stall);","lastModifiedDate":"2022-10-05"},{"lineNumber":232,"author":{"gitId":"MinHeinA"},"content":"            stallsAdded.add(stall);","lastModifiedDate":"2022-10-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"MinHeinA":34,"LikHern":28,"clarence-chew":8,"Hikoya":25,"-":138,"jamietan2002":8}},{"path":"src/test/java/foodwhere/logic/commands/SDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.Messages;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.index.Index;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ModelManager;","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.UserPrefs;","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"import foodwhere.testutil.TypicalIndexes;","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.testutil.TypicalStalls;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":" * {@code SDeleteCommand}.","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"public class SDeleteCommandTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"MinHeinA"},"content":"    private Model model \u003d new ModelManager(TypicalStalls.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":28,"author":{"gitId":"MinHeinA"},"content":"        Stall stallToDelete \u003d model.getFilteredStallList().get(TypicalIndexes.INDEX_FIRST_STALL.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"        SDeleteCommand sDeleteCommand \u003d new SDeleteCommand(TypicalIndexes.INDEX_FIRST_STALL);","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"        String expectedMessage \u003d String.format(sDeleteCommand.MESSAGE_DELETE_STALL_SUCCESS, stallToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"MinHeinA"},"content":"        expectedModel.deleteStall(stallToDelete);","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"        assertCommandSuccess(sDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"MinHeinA"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStallList().size() + 1);","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"        SDeleteCommand sDeleteCommand \u003d new SDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"jamietan2002"},"content":"        CommandTestUtil.assertCommandFailure(sDeleteCommand, model, Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"MinHeinA"},"content":"        CommandTestUtil.showStallAtIndex(model, TypicalIndexes.INDEX_FIRST_STALL);","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"MinHeinA"},"content":"        Stall stallToDelete \u003d model.getFilteredStallList().get(TypicalIndexes.INDEX_FIRST_STALL.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"jamietan2002"},"content":"        SDeleteCommand sDeleteCommand \u003d new SDeleteCommand(TypicalIndexes.INDEX_FIRST_STALL);","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"jamietan2002"},"content":"        String expectedMessage \u003d String.format(sDeleteCommand.MESSAGE_DELETE_STALL_SUCCESS, stallToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"MinHeinA"},"content":"        expectedModel.deleteStall(stallToDelete);","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"MinHeinA"},"content":"        showNoStall(expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"jamietan2002"},"content":"        CommandTestUtil.assertCommandSuccess(sDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"MinHeinA"},"content":"        CommandTestUtil.showStallAtIndex(model, TypicalIndexes.INDEX_FIRST_STALL);","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"MinHeinA"},"content":"        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_STALL;","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"MinHeinA"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStallList().size());","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"jamietan2002"},"content":"        SDeleteCommand sDeleteCommand \u003d new SDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"jamietan2002"},"content":"        CommandTestUtil.assertCommandFailure(sDeleteCommand, model, Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"jamietan2002"},"content":"        SDeleteCommand deleteFirstCommand \u003d new SDeleteCommand(TypicalIndexes.INDEX_FIRST_STALL);","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"jamietan2002"},"content":"        SDeleteCommand deleteSecondCommand \u003d new SDeleteCommand(TypicalIndexes.INDEX_SECOND_STALL);","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"jamietan2002"},"content":"        SDeleteCommand deleteFirstCommandCopy \u003d new SDeleteCommand(TypicalIndexes.INDEX_FIRST_STALL);","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"MinHeinA"},"content":"        // different stall -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"MinHeinA"},"content":"    private void showNoStall(Model model) {","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"MinHeinA"},"content":"        model.updateFilteredStallList(p -\u003e false);","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"MinHeinA"},"content":"        assertTrue(model.getFilteredStallList().isEmpty());","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"MinHeinA":17,"Hikoya":8,"-":66,"jamietan2002":15}},{"path":"src/test/java/foodwhere/logic/commands/SEditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.Messages;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.index.Index;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.AddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ModelManager;","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.UserPrefs;","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.stall.StallBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.testutil.EditStallDescriptorBuilder;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"import foodwhere.testutil.TypicalIndexes;","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.testutil.TypicalStalls;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"MinHeinA"},"content":" * Contains integration tests (interaction with the Model) and unit tests for SEditCommand.","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"MinHeinA"},"content":"public class SEditCommandTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"MinHeinA"},"content":"    private Model model \u003d new ModelManager(TypicalStalls.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"MinHeinA"},"content":"        Stall editedStall \u003d new StallBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand.EditStallDescriptor descriptor \u003d new EditStallDescriptorBuilder(editedStall).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand sEditCommand \u003d new SEditCommand(TypicalIndexes.INDEX_FIRST_STALL, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"MinHeinA"},"content":"        String expectedMessage \u003d String.format(SEditCommand.MESSAGE_EDIT_STALL_SUCCESS, editedStall);","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"MinHeinA"},"content":"        expectedModel.setStall(model.getFilteredStallList().get(0), editedStall);","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"MinHeinA"},"content":"        assertCommandSuccess(sEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-09-26"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"MinHeinA"},"content":"        Index indexLastStall \u003d Index.fromOneBased(model.getFilteredStallList().size());","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"MinHeinA"},"content":"        Stall lastStall \u003d model.getFilteredStallList().get(indexLastStall.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":47,"author":{"gitId":"MinHeinA"},"content":"        StallBuilder stallInList \u003d new StallBuilder(lastStall);","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"MinHeinA"},"content":"        Stall editedStall \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"MinHeinA"},"content":"                stallInList.withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand.EditStallDescriptor descriptor \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"MinHeinA"},"content":"                new EditStallDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand sEditCommand \u003d new SEditCommand(indexLastStall, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":57,"author":{"gitId":"MinHeinA"},"content":"        String expectedMessage \u003d String.format(SEditCommand.MESSAGE_EDIT_STALL_SUCCESS, editedStall);","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-09-26"},{"lineNumber":60,"author":{"gitId":"MinHeinA"},"content":"        expectedModel.setStall(lastStall, editedStall);","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":62,"author":{"gitId":"MinHeinA"},"content":"        assertCommandSuccess(sEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":64,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":65,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-09-26"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-09-26"},{"lineNumber":67,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand sEditCommand \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"MinHeinA"},"content":"                new SEditCommand(TypicalIndexes.INDEX_FIRST_STALL, new SEditCommand.EditStallDescriptor());","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"MinHeinA"},"content":"        Stall editedStall \u003d model.getFilteredStallList().get(TypicalIndexes.INDEX_FIRST_STALL.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":71,"author":{"gitId":"MinHeinA"},"content":"        String expectedMessage \u003d String.format(SEditCommand.MESSAGE_EDIT_STALL_SUCCESS, editedStall);","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":73,"author":{"gitId":"Hikoya"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-09-26"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":75,"author":{"gitId":"MinHeinA"},"content":"        assertCommandSuccess(sEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":77,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":78,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-09-26"},{"lineNumber":79,"author":{"gitId":"Hikoya"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-09-26"},{"lineNumber":80,"author":{"gitId":"MinHeinA"},"content":"        CommandTestUtil.showStallAtIndex(model, TypicalIndexes.INDEX_FIRST_STALL);","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":82,"author":{"gitId":"MinHeinA"},"content":"        Stall stallInFilteredList \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"MinHeinA"},"content":"                model.getFilteredStallList().get(TypicalIndexes.INDEX_FIRST_STALL.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"MinHeinA"},"content":"        Stall editedStall \u003d new StallBuilder(stallInFilteredList).withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand sEditCommand \u003d new SEditCommand(TypicalIndexes.INDEX_FIRST_STALL,","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"MinHeinA"},"content":"                new EditStallDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":88,"author":{"gitId":"MinHeinA"},"content":"        String expectedMessage \u003d String.format(SEditCommand.MESSAGE_EDIT_STALL_SUCCESS, editedStall);","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":90,"author":{"gitId":"Hikoya"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-09-26"},{"lineNumber":91,"author":{"gitId":"MinHeinA"},"content":"        expectedModel.setStall(model.getFilteredStallList().get(0), editedStall);","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":93,"author":{"gitId":"MinHeinA"},"content":"        assertCommandSuccess(sEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":95,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":96,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-09-26"},{"lineNumber":97,"author":{"gitId":"MinHeinA"},"content":"    public void execute_duplicateStallUnfilteredList_failure() {","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"MinHeinA"},"content":"        Stall firstStall \u003d model.getFilteredStallList().get(TypicalIndexes.INDEX_FIRST_STALL.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand.EditStallDescriptor descriptor \u003d new EditStallDescriptorBuilder(firstStall).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand sEditCommand \u003d new SEditCommand(TypicalIndexes.INDEX_SECOND_STALL, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":102,"author":{"gitId":"MinHeinA"},"content":"        CommandTestUtil.assertCommandFailure(sEditCommand, model, SEditCommand.MESSAGE_DUPLICATE_STALL);","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":104,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":105,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-09-26"},{"lineNumber":106,"author":{"gitId":"MinHeinA"},"content":"    public void execute_duplicateStallFilteredList_failure() {","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"MinHeinA"},"content":"        CommandTestUtil.showStallAtIndex(model, TypicalIndexes.INDEX_FIRST_STALL);","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":109,"author":{"gitId":"MinHeinA"},"content":"        // edit stall in filtered list into a duplicate in address book","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"MinHeinA"},"content":"        Stall stallInList \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"MinHeinA"},"content":"                model.getAddressBook().getStallList().get(TypicalIndexes.INDEX_SECOND_STALL.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand sEditCommand \u003d new SEditCommand(TypicalIndexes.INDEX_FIRST_STALL,","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"MinHeinA"},"content":"                new EditStallDescriptorBuilder(stallInList).build());","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":115,"author":{"gitId":"MinHeinA"},"content":"        CommandTestUtil.assertCommandFailure(sEditCommand, model, SEditCommand.MESSAGE_DUPLICATE_STALL);","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":117,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":118,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-09-26"},{"lineNumber":119,"author":{"gitId":"MinHeinA"},"content":"    public void execute_invalidStallIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"MinHeinA"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStallList().size() + 1);","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand.EditStallDescriptor descriptor \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"MinHeinA"},"content":"                new EditStallDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand sEditCommand \u003d new SEditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":125,"author":{"gitId":"MinHeinA"},"content":"        CommandTestUtil.assertCommandFailure(sEditCommand, model, Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":127,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":128,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":129,"author":{"gitId":"Hikoya"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-09-26"},{"lineNumber":130,"author":{"gitId":"Hikoya"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-09-26"},{"lineNumber":131,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":132,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-09-26"},{"lineNumber":133,"author":{"gitId":"MinHeinA"},"content":"    public void execute_invalidStallIndexFilteredList_failure() {","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"MinHeinA"},"content":"        CommandTestUtil.showStallAtIndex(model, TypicalIndexes.INDEX_FIRST_STALL);","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"MinHeinA"},"content":"        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_STALL;","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"Hikoya"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-09-26"},{"lineNumber":137,"author":{"gitId":"MinHeinA"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStallList().size());","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":139,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand sEditCommand \u003d new SEditCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-16"},{"lineNumber":140,"author":{"gitId":"MinHeinA"},"content":"                new EditStallDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":142,"author":{"gitId":"MinHeinA"},"content":"        CommandTestUtil.assertCommandFailure(sEditCommand, model, Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":144,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":145,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-09-26"},{"lineNumber":146,"author":{"gitId":"Hikoya"},"content":"    public void equals() {","lastModifiedDate":"2022-09-26"},{"lineNumber":147,"author":{"gitId":"MinHeinA"},"content":"        final SEditCommand standardCommand \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"MinHeinA"},"content":"                new SEditCommand(TypicalIndexes.INDEX_FIRST_STALL, CommandTestUtil.DESC_AMY);","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":150,"author":{"gitId":"Hikoya"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-09-26"},{"lineNumber":151,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand.EditStallDescriptor copyDescriptor \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"MinHeinA"},"content":"                new SEditCommand.EditStallDescriptor(CommandTestUtil.DESC_AMY);","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand commandWithSameValues \u003d new SEditCommand(TypicalIndexes.INDEX_FIRST_STALL, copyDescriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"Hikoya"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-09-26"},{"lineNumber":155,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":156,"author":{"gitId":"Hikoya"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-09-26"},{"lineNumber":157,"author":{"gitId":"Hikoya"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-09-26"},{"lineNumber":158,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":159,"author":{"gitId":"Hikoya"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-09-26"},{"lineNumber":160,"author":{"gitId":"Hikoya"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-09-26"},{"lineNumber":161,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":162,"author":{"gitId":"Hikoya"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-09-26"},{"lineNumber":163,"author":{"gitId":"Hikoya"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-09-26"},{"lineNumber":164,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":165,"author":{"gitId":"Hikoya"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-09-26"},{"lineNumber":166,"author":{"gitId":"Hikoya"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2022-09-26"},{"lineNumber":167,"author":{"gitId":"MinHeinA"},"content":"                new SEditCommand(TypicalIndexes.INDEX_SECOND_STALL, CommandTestUtil.DESC_AMY)));","lastModifiedDate":"2022-10-16"},{"lineNumber":168,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":169,"author":{"gitId":"Hikoya"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-09-26"},{"lineNumber":170,"author":{"gitId":"Hikoya"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2022-09-26"},{"lineNumber":171,"author":{"gitId":"MinHeinA"},"content":"                new SEditCommand(TypicalIndexes.INDEX_FIRST_STALL, CommandTestUtil.DESC_BOB)));","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":173,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":174,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"MinHeinA":70,"clarence-chew":1,"Hikoya":103}},{"path":"src/test/java/foodwhere/logic/commands/SFindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.Messages;","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ModelManager;","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.UserPrefs;","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.stall.StallContainsKeywordsPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.testutil.TypicalStalls;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":" * Contains integration tests (interaction with the Model) for {@code SFindCommand}.","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"public class SFindCommandTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"MinHeinA"},"content":"    private Model model \u003d new ModelManager(TypicalStalls.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"MinHeinA"},"content":"    private Model expectedModel \u003d new ModelManager(TypicalStalls.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"jamietan2002"},"content":"        StallContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"jamietan2002"},"content":"                new StallContainsKeywordsPredicate(Collections.singleton(new Name(\"first\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"first\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"jamietan2002"},"content":"        StallContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"jamietan2002"},"content":"                new StallContainsKeywordsPredicate(Collections.singleton(new Name(\"second\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"first\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"jamietan2002"},"content":"        StallContainsKeywordsPredicate thirdPredicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"                new StallContainsKeywordsPredicate(Collections.singleton(new Name(\"first\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"second\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"jamietan2002"},"content":"        StallContainsKeywordsPredicate fourthPredicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"jamietan2002"},"content":"                new StallContainsKeywordsPredicate(Collections.singleton(new Name(\"second\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"second\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"jamietan2002"},"content":"        SFindCommand findFirstCommand \u003d new SFindCommand(firstPredicate);","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"jamietan2002"},"content":"        SFindCommand findSecondCommand \u003d new SFindCommand(secondPredicate);","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"jamietan2002"},"content":"        SFindCommand findThirdCommand \u003d new SFindCommand(thirdPredicate);","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"jamietan2002"},"content":"        SFindCommand findFourthCommand \u003d new SFindCommand(fourthPredicate);","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"jamietan2002"},"content":"        SFindCommand findFirstCommandCopy \u003d new SFindCommand(firstPredicate);","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"jamietan2002"},"content":"        // different name or tag -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand)); //different names","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(findFirstCommand.equals(findThirdCommand)); //different tags","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(findFirstCommand.equals(findFourthCommand)); //different names and tags","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"MinHeinA"},"content":"    public void execute_zeroKeywords_noStallFound() {","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"MinHeinA"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_STALLS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"jamietan2002"},"content":"        StallContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"jamietan2002"},"content":"        SFindCommand command \u003d new SFindCommand(predicate);","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"MinHeinA"},"content":"        expectedModel.updateFilteredStallList(predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"Hikoya"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-09-26"},{"lineNumber":79,"author":{"gitId":"MinHeinA"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStallList());","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"MinHeinA"},"content":"    public void execute_multipleKeywords_multipleStallsFound() {","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"MinHeinA"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_STALLS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"jamietan2002"},"content":"        StallContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"jamietan2002"},"content":"        SFindCommand command \u003d new SFindCommand(predicate);","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"MinHeinA"},"content":"        expectedModel.updateFilteredStallList(predicate);","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"Hikoya"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-09-26"},{"lineNumber":89,"author":{"gitId":"clarence-chew"},"content":"        List\u003cStall\u003e toFind \u003d Arrays.asList(TypicalStalls.CARL,","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"MinHeinA"},"content":"                TypicalStalls.ELLE,","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"clarence-chew"},"content":"                TypicalStalls.FIONA);","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"clarence-chew"},"content":"        List\u003cStall\u003e foundStalls \u003d model.getFilteredStallList();","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(3, foundStalls.size());","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"clarence-chew"},"content":"        for (Stall stall : toFind) {","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"clarence-chew"},"content":"            assertTrue(foundStalls.stream().anyMatch(found -\u003e found.isSameStall(stall)));","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":100,"author":{"gitId":"jamietan2002"},"content":"     * Parses {@code userInput} into a {@code StallContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":102,"author":{"gitId":"jamietan2002"},"content":"    private StallContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"jamietan2002"},"content":"        List\u003cString\u003e lst \u003d Arrays.asList(userInput.split(\"\\\\s+\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"jamietan2002"},"content":"        List\u003cName\u003e nameList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"jamietan2002"},"content":"        for (String s : lst) {","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"jamietan2002"},"content":"            nameList.add(new Name(s));","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"jamietan2002"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"jamietan2002"},"content":"        return new StallContainsKeywordsPredicate(nameList, Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"MinHeinA":11,"clarence-chew":9,"Hikoya":8,"-":42,"jamietan2002":40}},{"path":"src/test/java/foodwhere/logic/commands/SListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.commands;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.logic.commands.CommandTestUtil.showStallAtIndex;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ModelManager;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.UserPrefs;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import foodwhere.testutil.TypicalIndexes;","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.testutil.TypicalStalls;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":" * Contains integration tests (interaction with the Model) and unit tests for SListCommand.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"public class SListCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"    private Model model;","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"    @BeforeEach","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"    public void setUp() {","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"MinHeinA"},"content":"        model \u003d new ModelManager(TypicalStalls.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"        assertCommandSuccess(new SListCommand(), model, SListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"MinHeinA"},"content":"        showStallAtIndex(model, TypicalIndexes.INDEX_FIRST_STALL);","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"jamietan2002"},"content":"        assertCommandSuccess(new SListCommand(), model, SListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"MinHeinA":4,"Hikoya":31,"jamietan2002":4}},{"path":"src/test/java/foodwhere/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.Messages;","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.commands.RAddCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.commands.RDeleteCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.RFindCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.commands.RListCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.commands.SAddCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.commands.SDeleteCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.commands.SEditCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.commands.SFindCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.commands.SListCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.ReviewBuilder;","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.review.ReviewContainsKeywordsPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.stall.StallBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.stall.StallContainsKeywordsPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.testutil.EditStallDescriptorBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.testutil.StallUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.testutil.TypicalIndexes;","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"jamietan2002"},"content":"    public void parseCommand_sadd() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"MinHeinA"},"content":"        Stall stall \u003d new StallBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"jamietan2002"},"content":"        SAddCommand command \u003d (SAddCommand) parser.parseCommand(StallUtil.getSAddCommand(stall));","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"jamietan2002"},"content":"        assertEquals(new SAddCommand(stall), command);","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"jamietan2002"},"content":"    public void parseCommand_radd() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"jamietan2002"},"content":"        Review review \u003d new ReviewBuilder().build();","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"jamietan2002"},"content":"        RAddCommand command \u003d (RAddCommand) parser.parseCommand(RAddCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"jamietan2002"},"content":"                + \"s/\" + TypicalIndexes.INDEX_FIRST_REVIEW.getOneBased() + \" \"","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"jamietan2002"},"content":"                + \"d/\" + review.getDate() + \" \"","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"jamietan2002"},"content":"                + \"c/\" + review.getContent() + \" \"","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"jamietan2002"},"content":"                + \"r/\" + review.getRating());","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"jamietan2002"},"content":"        assertEquals(new RAddCommand(TypicalIndexes.INDEX_FIRST_REVIEW, review.getDate(),","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"jamietan2002"},"content":"                review.getContent(), review.getRating(), review.getTags()), command);","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"jamietan2002"},"content":"    public void parseCommand_sdelete() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"jamietan2002"},"content":"        SDeleteCommand command \u003d (SDeleteCommand) parser.parseCommand(","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"jamietan2002"},"content":"                SDeleteCommand.COMMAND_WORD + \" \" + TypicalIndexes.INDEX_FIRST_STALL.getOneBased());","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"jamietan2002"},"content":"        assertEquals(new SDeleteCommand(TypicalIndexes.INDEX_FIRST_STALL), command);","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"jamietan2002"},"content":"    public void parseCommand_rdelete() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"jamietan2002"},"content":"        RDeleteCommand command \u003d (RDeleteCommand) parser.parseCommand(","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"jamietan2002"},"content":"                RDeleteCommand.COMMAND_WORD + \" \" + TypicalIndexes.INDEX_FIRST_REVIEW.getOneBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"jamietan2002"},"content":"        assertEquals(new RDeleteCommand(TypicalIndexes.INDEX_FIRST_REVIEW), command);","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"MinHeinA"},"content":"    public void parseCommand_sedit() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"MinHeinA"},"content":"        Stall stall \u003d new StallBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand.EditStallDescriptor descriptor \u003d new EditStallDescriptorBuilder(stall).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand command \u003d (SEditCommand) parser.parseCommand(SEditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"MinHeinA"},"content":"                + TypicalIndexes.INDEX_FIRST_STALL.getOneBased() + \" \"","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"MinHeinA"},"content":"                + StallUtil.getEditStallDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"MinHeinA"},"content":"        assertEquals(new SEditCommand(TypicalIndexes.INDEX_FIRST_STALL, descriptor), command);","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"jamietan2002"},"content":"    public void parseCommand_sfind() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"jamietan2002"},"content":"        List\u003cName\u003e nameKeywords \u003d Arrays.asList(new Name(\"foo\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"jamietan2002"},"content":"        List\u003cTag\u003e tagKeywords \u003d Arrays.asList(new Tag(\"bar\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"jamietan2002"},"content":"        SFindCommand command \u003d (SFindCommand) parser.parseCommand(","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"jamietan2002"},"content":"                SFindCommand.COMMAND_WORD + \" \" + \"n/foo t/bar\");","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"jamietan2002"},"content":"        assertEquals(new SFindCommand(new StallContainsKeywordsPredicate(nameKeywords, tagKeywords)), command);","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":108,"author":{"gitId":"jamietan2002"},"content":"    public void parseCommand_rfind() throws Exception {","lastModifiedDate":"2022-10-17"},{"lineNumber":109,"author":{"gitId":"jamietan2002"},"content":"        List\u003cName\u003e nameKeywords \u003d Arrays.asList(new Name(\"foo\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"jamietan2002"},"content":"        List\u003cTag\u003e tagKeywords \u003d Arrays.asList(new Tag(\"bar\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"jamietan2002"},"content":"        RFindCommand command \u003d (RFindCommand) parser.parseCommand(","lastModifiedDate":"2022-10-17"},{"lineNumber":112,"author":{"gitId":"jamietan2002"},"content":"                RFindCommand.COMMAND_WORD + \" \" + \"n/foo t/bar\");","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"jamietan2002"},"content":"        assertEquals(new RFindCommand(new ReviewContainsKeywordsPredicate(nameKeywords, tagKeywords)), command);","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":115,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"jamietan2002"},"content":"    public void parseCommand_slist() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(parser.parseCommand(SListCommand.COMMAND_WORD) instanceof SListCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(parser.parseCommand(SListCommand.COMMAND_WORD + \" 3\") instanceof SListCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"jamietan2002"},"content":"    public void parseCommand_rlist() throws Exception {","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(parser.parseCommand(RListCommand.COMMAND_WORD) instanceof RListCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(parser.parseCommand(RListCommand.COMMAND_WORD + \" 3\") instanceof RListCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":136,"author":{"gitId":"Hikoya"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2022-09-26"},{"lineNumber":137,"author":{"gitId":"Hikoya"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), () -\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":138,"author":{"gitId":"Hikoya"},"content":"                        parser.parseCommand(\"\"));","lastModifiedDate":"2022-09-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":143,"author":{"gitId":"Hikoya"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2022-09-26"},{"lineNumber":144,"author":{"gitId":"Hikoya"},"content":"                Messages.MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2022-09-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"MinHeinA":20,"clarence-chew":2,"Hikoya":9,"-":55,"jamietan2002":60}},{"path":"src/test/java/foodwhere/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"Hikoya":1,"-":149}},{"path":"src/test/java/foodwhere/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.Command;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                                          Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"            Assertions.assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Hikoya":6,"-":35}},{"path":"src/test/java/foodwhere/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.commons.core.Messages;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Address;","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"import foodwhere.testutil.TypicalIndexes;","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"jamietan2002"},"content":"        assertThrows(ParseException.class, Messages.MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"MinHeinA"},"content":"        Assertions.assertEquals(TypicalIndexes.INDEX_FIRST_STALL, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"MinHeinA"},"content":"        Assertions.assertEquals(TypicalIndexes.INDEX_FIRST_STALL, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2022-09-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"Hikoya"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2022-09-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"Hikoya"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"Hikoya"},"content":"                ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"Hikoya"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Tag(VALID_TAG_1),","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"Hikoya"},"content":"                new Tag(VALID_TAG_2)));","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"MinHeinA":3,"Hikoya":14,"-":128,"jamietan2002":2}},{"path":"src/test/java/foodwhere/logic/parser/RAddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jamietan2002"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.CONTENT_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.CONTENT_DESC_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.DATE_DESC_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.RATING_DESC_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.RATING_DESC_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.STALL_INDEX_DESC;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_CONTENT_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_RATING_AMY;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.testutil.TypicalIndexes.INDEX_FIRST_STALL;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"jamietan2002"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.commons.core.Messages;","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.RAddCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.review.Date;","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.ReviewBuilder;","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.testutil.TypicalReviews;","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"jamietan2002"},"content":"public class RAddCommandParserTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"    private RAddCommandParser parser \u003d new RAddCommandParser();","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"jamietan2002"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"jamietan2002"},"content":"        Review expectedReview \u003d new ReviewBuilder(TypicalReviews.AMY).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"jamietan2002"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + STALL_INDEX_DESC + DATE_DESC_AMY","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"jamietan2002"},"content":"                + CONTENT_DESC_AMY + RATING_DESC_AMY + TAG_DESC_FRIEND, new RAddCommand(INDEX_FIRST_STALL,","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"jamietan2002"},"content":"                expectedReview.getDate(), expectedReview.getContent(), expectedReview.getRating(),","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"jamietan2002"},"content":"                expectedReview.getTags()));","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"jamietan2002"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"jamietan2002"},"content":"        Review expectedReviewMultipleTags \u003d","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"jamietan2002"},"content":"                new ReviewBuilder(TypicalReviews.BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"jamietan2002"},"content":"                .build();","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"jamietan2002"},"content":"        RAddCommand expectedCommandMultipleTags \u003d new RAddCommand(INDEX_FIRST_STALL,","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"jamietan2002"},"content":"                expectedReviewMultipleTags.getDate(), expectedReviewMultipleTags.getContent(),","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"jamietan2002"},"content":"                expectedReviewMultipleTags.getRating(), expectedReviewMultipleTags.getTags());","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"jamietan2002"},"content":"        assertParseSuccess(parser, STALL_INDEX_DESC + DATE_DESC_BOB + CONTENT_DESC_BOB + RATING_DESC_BOB","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"jamietan2002"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, expectedCommandMultipleTags);","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"jamietan2002"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"jamietan2002"},"content":"        // zero tags","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"jamietan2002"},"content":"        Review expectedReview \u003d new ReviewBuilder(TypicalReviews.AMY).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"jamietan2002"},"content":"        RAddCommand expectedCommand \u003d new RAddCommand(INDEX_FIRST_STALL, expectedReview.getDate(),","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"jamietan2002"},"content":"                expectedReview.getContent(), expectedReview.getRating(), expectedReview.getTags());","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"jamietan2002"},"content":"        assertParseSuccess(parser, STALL_INDEX_DESC","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"jamietan2002"},"content":"                        + DATE_DESC_AMY + CONTENT_DESC_AMY + RATING_DESC_AMY,","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"jamietan2002"},"content":"                expectedCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"Hikoya"},"content":"    public void parse_stallIndexFieldMissing_failure() {","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"Hikoya"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_MISSING_INDEX, RAddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"jamietan2002"},"content":"        // missing name prefix","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"jamietan2002"},"content":"        assertParseFailure(parser, INDEX_FIRST_STALL","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"jamietan2002"},"content":"                        + DATE_DESC_AMY + CONTENT_DESC_AMY + RATING_DESC_AMY,","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"jamietan2002"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"Hikoya"},"content":"    public void parse_dateFieldMissing_failure() {","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"Hikoya"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_MISSING_DATE, RAddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"Hikoya"},"content":"        // missing date prefix","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"jamietan2002"},"content":"        assertParseFailure(parser, STALL_INDEX_DESC + VALID_DATE_BOB + CONTENT_DESC_BOB + RATING_DESC_BOB,","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"jamietan2002"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"Hikoya"},"content":"    public void parse_contentFieldMissing_failure() {","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"Hikoya"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_MISSING_CONTENT, RAddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"Hikoya"},"content":"        // missing content prefix","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"Hikoya"},"content":"        assertParseFailure(parser, STALL_INDEX_DESC","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"Hikoya"},"content":"                        + DATE_DESC_BOB + VALID_CONTENT_BOB + RATING_DESC_AMY,","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"Hikoya"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"Hikoya"},"content":"    public void parse_ratingFieldMissing_failure() {","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"Hikoya"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_MISSING_RATING, RAddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"Hikoya"},"content":"        // missing rating prefix","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"Hikoya"},"content":"        assertParseFailure(parser, STALL_INDEX_DESC","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"Hikoya"},"content":"                        + DATE_DESC_BOB + CONTENT_DESC_BOB + VALID_RATING_AMY,","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"jamietan2002"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"jamietan2002"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"jamietan2002"},"content":"        // invalid date","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"jamietan2002"},"content":"        assertParseFailure(parser, STALL_INDEX_DESC + INVALID_DATE_DESC","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"jamietan2002"},"content":"                + CONTENT_DESC_AMY + RATING_DESC_AMY, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"jamietan2002"},"content":"        // invalid tag","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"jamietan2002"},"content":"        assertParseFailure(parser, STALL_INDEX_DESC + DATE_DESC_AMY + CONTENT_DESC_AMY + RATING_DESC_AMY","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"jamietan2002"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"jamietan2002"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"jamietan2002"},"content":"        assertParseFailure(parser, STALL_INDEX_DESC + INVALID_DATE_DESC + CONTENT_DESC_AMY","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"jamietan2002"},"content":"                + RATING_DESC_AMY + INVALID_TAG_DESC, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"jamietan2002"},"content":"        // non-empty preamble","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"Hikoya"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + STALL_INDEX_DESC","lastModifiedDate":"2022-10-21"},{"lineNumber":125,"author":{"gitId":"jamietan2002"},"content":"                + DATE_DESC_AMY + CONTENT_DESC_AMY + RATING_DESC_AMY,","lastModifiedDate":"2022-10-15"},{"lineNumber":126,"author":{"gitId":"jamietan2002"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, RAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"jamietan2002"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"clarence-chew":1,"Hikoya":29,"jamietan2002":98}},{"path":"src/test/java/foodwhere/logic/parser/RDeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jamietan2002"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.RDeleteCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.testutil.TypicalIndexes;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"jamietan2002"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"jamietan2002"},"content":" * outside of the RDeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":" * same path through the RDeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"public class RDeleteCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":"    private RDeleteCommandParser parser \u003d new RDeleteCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"jamietan2002"},"content":"        assertParseSuccess(parser, \"1\", new RDeleteCommand(TypicalIndexes.INDEX_FIRST_REVIEW));","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"        assertParseSuccess(parser, WHITESPACE + \"1\" + WHITESPACE,","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"                new RDeleteCommand(TypicalIndexes.INDEX_FIRST_REVIEW));","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"jamietan2002"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"jamietan2002"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"jamietan2002"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INVALID_INDEX)","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"                        + RDeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"jamietan2002"},"content":"    public void parse_extraIndex_throwsParseException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"jamietan2002"},"content":"        assertParseFailure(parser, \"1 2\",","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INVALID_INDEX) + RDeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"jamietan2002"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jamietan2002":45}},{"path":"src/test/java/foodwhere/logic/parser/RFindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jamietan2002"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"jamietan2002"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.commons.core.Messages;","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.RFindCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.review.ReviewContainsKeywordsPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":"public class RFindCommandParserTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"    private RFindCommandParser parser \u003d new RFindCommandParser();","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"    public void parse_validArgs_returnsSFindCommand() {","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"        //both name and tag","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"jamietan2002"},"content":"        RFindCommand expectedRFindCommand \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"jamietan2002"},"content":"                new RFindCommand(new ReviewContainsKeywordsPredicate(Arrays.asList(new Name(\"Amy Bee\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"jamietan2002"},"content":"                        Arrays.asList(new Tag(\"friend\"))));","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + TAG_DESC_FRIEND , expectedRFindCommand);","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"jamietan2002"},"content":"        //only name","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"jamietan2002"},"content":"        expectedRFindCommand \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"jamietan2002"},"content":"                new RFindCommand(new ReviewContainsKeywordsPredicate(Arrays.asList(new Name(\"Amy Bee\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"jamietan2002"},"content":"                        Collections.emptyList()));","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY , expectedRFindCommand);","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"jamietan2002"},"content":"        //only tag","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"jamietan2002"},"content":"        expectedRFindCommand \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"jamietan2002"},"content":"                new RFindCommand(new ReviewContainsKeywordsPredicate(Collections.emptyList(),","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"jamietan2002"},"content":"                        Arrays.asList(new Tag(\"friend\"))));","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"jamietan2002"},"content":"        assertParseSuccess(parser, TAG_DESC_FRIEND , expectedRFindCommand);","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"jamietan2002"},"content":"    public void parse_fieldMissing_failure() {","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"jamietan2002"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, RFindCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":56,"author":{"gitId":"jamietan2002"},"content":"        // missing prefix","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"jamietan2002"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"jamietan2002"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"jamietan2002"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"jamietan2002"},"content":"        // invalid name","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"jamietan2002"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"jamietan2002"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"jamietan2002"},"content":"        // invalid tag","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"jamietan2002"},"content":"        assertParseFailure(parser, NAME_DESC_BOB","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"jamietan2002"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"jamietan2002"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"jamietan2002"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_TAG_DESC,","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"jamietan2002"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"jamietan2002"},"content":"        // non-empty preamble","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"jamietan2002"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"jamietan2002"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"jamietan2002"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, RFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"jamietan2002"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"jamietan2002":81}},{"path":"src/test/java/foodwhere/logic/parser/SAddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.Messages;","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.SAddCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Address;","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.stall.StallBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.testutil.TypicalStalls;","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"public class SAddCommandParserTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"jamietan2002"},"content":"    private SAddCommandParser parser \u003d new SAddCommandParser();","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"        Stall expectedStall \u003d new StallBuilder(TypicalStalls.BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"MinHeinA"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new SAddCommand(expectedStall));","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"MinHeinA"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new SAddCommand(expectedStall));","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"MinHeinA"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new SAddCommand(expectedStall));","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"        Stall expectedStallMultipleTags \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"                new StallBuilder(TypicalStalls.BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":55,"author":{"gitId":"MinHeinA"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new SAddCommand(expectedStallMultipleTags));","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"        // zero tags","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"        Stall expectedStall \u003d new StallBuilder(TypicalStalls.AMY).withTags().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"MinHeinA"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"jamietan2002"},"content":"                new SAddCommand(expectedStall));","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"Hikoya"},"content":"    public void parse_nameFieldMissing_failure() {","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"Hikoya"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_MISSING_NAME, SAddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"MinHeinA"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"Hikoya"},"content":"    public void parse_addressFieldMissing_failure() {","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"Hikoya"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_MISSING_ADDRESS, SAddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"MinHeinA"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"MinHeinA"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"Hikoya"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"MinHeinA"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"Hikoya"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"Hikoya"},"content":"        // invalid tag","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"MinHeinA"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"Hikoya"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"MinHeinA"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_ADDRESS_DESC,","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"MinHeinA"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"Hikoya"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"jamietan2002"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, SAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"MinHeinA":14,"clarence-chew":1,"Hikoya":46,"-":42,"jamietan2002":5}},{"path":"src/test/java/foodwhere/logic/parser/SDeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.commons.core.Messages.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.SDeleteCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.testutil.TypicalIndexes;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"jamietan2002"},"content":" * outside of the SDeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":" * same path through the SDeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"public class SDeleteCommandParserTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":"    private SDeleteCommandParser parser \u003d new SDeleteCommandParser();","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"        assertParseSuccess(parser, \"1\", new SDeleteCommand(TypicalIndexes.INDEX_FIRST_STALL));","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"        assertParseSuccess(parser, WHITESPACE + \"1\" + WHITESPACE,","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"jamietan2002"},"content":"                new SDeleteCommand(TypicalIndexes.INDEX_FIRST_STALL));","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"jamietan2002"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INVALID_INDEX) + SDeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"jamietan2002"},"content":"    public void parse_extraIndex_throwsParseException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"        assertParseFailure(parser, \"1 2\",","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"jamietan2002"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INVALID_INDEX)","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"jamietan2002"},"content":"                        + SDeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Hikoya":7,"-":18,"jamietan2002":21}},{"path":"src/test/java/foodwhere/logic/parser/SEditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.Messages;","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.index.Index;","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.commands.SEditCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Address;","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.testutil.EditStallDescriptorBuilder;","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"import foodwhere.testutil.TypicalIndexes;","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"MinHeinA"},"content":"public class SEditCommandParserTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"    private static final String TAG_EMPTY \u003d \" \" + CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"MinHeinA"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, SEditCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"MinHeinA"},"content":"    private SEditCommandParser parser \u003d new SEditCommandParser();","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"MinHeinA"},"content":"        assertParseFailure(parser, \"1\", SEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":72,"author":{"gitId":"Hikoya"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Stall} being edited,","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"Hikoya"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"Hikoya"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"Hikoya"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"Hikoya"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND,","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"Hikoya"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"Hikoya"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"Hikoya"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"MinHeinA"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_ADDRESS_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"MinHeinA"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_SECOND_STALL;","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"Hikoya"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"Hikoya"},"content":"                + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand.EditStallDescriptor descriptor \u003d new EditStallDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"MinHeinA"},"content":"                .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"Hikoya"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand expectedCommand \u003d new SEditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"MinHeinA"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_STALL;","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"MinHeinA"},"content":"        String userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand.EditStallDescriptor descriptor \u003d new EditStallDescriptorBuilder()","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"MinHeinA"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand expectedCommand \u003d new SEditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"MinHeinA"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_THIRD_STALL;","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":118,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand.EditStallDescriptor descriptor \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"MinHeinA"},"content":"                new EditStallDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand expectedCommand \u003d new SEditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"MinHeinA"},"content":"        descriptor \u003d new EditStallDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"MinHeinA"},"content":"        expectedCommand \u003d new SEditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"MinHeinA"},"content":"        // details","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"Hikoya"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"Hikoya"},"content":"        descriptor \u003d new EditStallDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"MinHeinA"},"content":"        expectedCommand \u003d new SEditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"MinHeinA"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_STALL;","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"MinHeinA"},"content":"        String userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"Hikoya"},"content":"                + TAG_DESC_FRIEND + ADDRESS_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"Hikoya"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand.EditStallDescriptor descriptor \u003d new EditStallDescriptorBuilder()","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"Hikoya"},"content":"                .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-09-26"},{"lineNumber":145,"author":{"gitId":"Hikoya"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand expectedCommand \u003d new SEditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"MinHeinA"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_STALL;","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"MinHeinA"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_ADDRESS_DESC + ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":157,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand.EditStallDescriptor descriptor \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"MinHeinA"},"content":"                new EditStallDescriptorBuilder().withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":159,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand expectedCommand \u003d new SEditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"MinHeinA"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_NAME_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"MinHeinA"},"content":"                + NAME_DESC_BOB;","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"MinHeinA"},"content":"        descriptor \u003d new EditStallDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"MinHeinA"},"content":"        expectedCommand \u003d new SEditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"MinHeinA"},"content":"    public void parse_resetDetails_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"MinHeinA"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_THIRD_STALL;","lastModifiedDate":"2022-10-05"},{"lineNumber":174,"author":{"gitId":"Hikoya"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand.EditStallDescriptor descriptor \u003d new EditStallDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-10-16"},{"lineNumber":177,"author":{"gitId":"MinHeinA"},"content":"        SEditCommand expectedCommand \u003d new SEditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"MinHeinA":51,"Hikoya":38,"-":92}},{"path":"src/test/java/foodwhere/logic/parser/SFindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.logic.parser;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.Messages;","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.SFindCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.stall.StallContainsKeywordsPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":"public class SFindCommandParserTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"    private SFindCommandParser parser \u003d new SFindCommandParser();","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"    public void parse_validArgs_returnsSFindCommand() {","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"        //both name and tag","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"jamietan2002"},"content":"        SFindCommand expectedSFindCommand \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"jamietan2002"},"content":"                new SFindCommand(new StallContainsKeywordsPredicate(Arrays.asList(new Name(\"Amy Bee\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"jamietan2002"},"content":"                        Arrays.asList(new Tag(\"friend\"))));","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + TAG_DESC_FRIEND , expectedSFindCommand);","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"jamietan2002"},"content":"        //only name","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"jamietan2002"},"content":"        expectedSFindCommand \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"jamietan2002"},"content":"                new SFindCommand(new StallContainsKeywordsPredicate(Arrays.asList(new Name(\"Amy Bee\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"jamietan2002"},"content":"                        Collections.emptyList()));","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY , expectedSFindCommand);","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"jamietan2002"},"content":"        //only tag","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"jamietan2002"},"content":"        expectedSFindCommand \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"jamietan2002"},"content":"                new SFindCommand(new StallContainsKeywordsPredicate(Collections.emptyList(),","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"jamietan2002"},"content":"                        Arrays.asList(new Tag(\"friend\"))));","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"jamietan2002"},"content":"        assertParseSuccess(parser, TAG_DESC_FRIEND , expectedSFindCommand);","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"jamietan2002"},"content":"    public void parse_fieldMissing_failure() {","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"jamietan2002"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, SFindCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"jamietan2002"},"content":"        // missing prefix","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"jamietan2002"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"jamietan2002"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"jamietan2002"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"jamietan2002"},"content":"        // invalid name","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"jamietan2002"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"jamietan2002"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"jamietan2002"},"content":"        // invalid tag","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"jamietan2002"},"content":"        assertParseFailure(parser, NAME_DESC_BOB","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"jamietan2002"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"jamietan2002"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"jamietan2002"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_TAG_DESC,","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"jamietan2002"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"jamietan2002"},"content":"        // non-empty preamble","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"jamietan2002"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"jamietan2002"},"content":"                         + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"jamietan2002"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, SFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Hikoya":6,"-":15,"jamietan2002":61}},{"path":"src/test/java/foodwhere/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.model;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.testutil.TypicalStalls.ALICE;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.testutil.TypicalStalls.getTypicalAddressBook;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.ReviewBuilder;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.stall.StallBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.exceptions.DuplicateStallException;","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"MinHeinA"},"content":"        assertEquals(Collections.emptyList(), addressBook.getStallList());","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"MinHeinA"},"content":"    public void resetData_withDuplicateStalls_throwsDuplicateStallException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"MinHeinA"},"content":"        // Two stalls with the same identity fields","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"        Stall editedAlice \u003d new StallBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"MinHeinA"},"content":"        List\u003cStall\u003e newStalls \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"MinHeinA"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newStalls);","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(DuplicateStallException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"MinHeinA"},"content":"    public void hasStall_nullStall_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasStall(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"MinHeinA"},"content":"    public void hasStall_stallNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"MinHeinA"},"content":"        assertFalse(addressBook.hasStall(ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"MinHeinA"},"content":"    public void hasStall_stallInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"MinHeinA"},"content":"        addressBook.addStall(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"MinHeinA"},"content":"        assertTrue(addressBook.hasStall(ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"MinHeinA"},"content":"    public void hasStall_stallWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"MinHeinA"},"content":"        addressBook.addStall(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"clarence-chew"},"content":"        Stall editedAlice \u003d new StallBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"MinHeinA"},"content":"        assertTrue(addressBook.hasStall(editedAlice));","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"MinHeinA"},"content":"    public void getStallList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getStallList().remove(0));","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"clarence-chew"},"content":"    public void addStallAddReview_generalTesting_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"clarence-chew"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"clarence-chew"},"content":"        String testName \u003d \"test stall\";","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"clarence-chew"},"content":"        Stall testStall \u003d new StallBuilder().withName(testName).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"clarence-chew"},"content":"        Review testReview \u003d new ReviewBuilder().withName(testName).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"clarence-chew"},"content":"        addressBook.addStall(testStall);","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"clarence-chew"},"content":"        addressBook.addReview(testReview);","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"clarence-chew"},"content":"        Set\u003cReview\u003e reviews \u003d addressBook.getStallList().get(0).getReviews();","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(1, reviews.size());","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"clarence-chew"},"content":"        for (Review review : reviews) {","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"clarence-chew"},"content":"            assertTrue(testReview.equals(review));","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"MinHeinA"},"content":"     * A stub ReadOnlyAddressBook whose stalls list can violate interface constraints.","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"MinHeinA"},"content":"        private final ObservableList\u003cStall\u003e stalls \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"clarence-chew"},"content":"        private final ObservableList\u003cReview\u003e reviews \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"MinHeinA"},"content":"        AddressBookStub(Collection\u003cStall\u003e stalls) {","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"MinHeinA"},"content":"            this.stalls.setAll(stalls);","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"MinHeinA"},"content":"        public ObservableList\u003cStall\u003e getStallList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"MinHeinA"},"content":"            return stalls;","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"clarence-chew"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"clarence-chew"},"content":"        public ObservableList\u003cReview\u003e getReviewList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"clarence-chew"},"content":"            return reviews;","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"MinHeinA":28,"clarence-chew":27,"Hikoya":6,"-":64}},{"path":"src/test/java/foodwhere/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.model;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.model.Model.PREDICATE_SHOW_ALL_STALLS;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.testutil.TypicalStalls.ALICE;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.testutil.TypicalStalls.BENSON;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.GuiSettings;","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.stall.StallContainsKeywordsPredicate;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"import foodwhere.testutil.AddressBookBuilder;","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"MinHeinA"},"content":"    public void hasStall_nullStall_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasStall(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"MinHeinA"},"content":"    public void hasStall_stallNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"MinHeinA"},"content":"        assertFalse(modelManager.hasStall(ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"MinHeinA"},"content":"    public void hasStall_stallInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"MinHeinA"},"content":"        modelManager.addStall(ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"MinHeinA"},"content":"        assertTrue(modelManager.hasStall(ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"MinHeinA"},"content":"    public void getFilteredStallList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredStallList().remove(0));","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"MinHeinA"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withStall(ALICE).withStall(BENSON).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"jamietan2002"},"content":"        String name \u003d ALICE.getName().toString().split(\" \")[0];","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"jamietan2002"},"content":"        modelManager.updateFilteredStallList(new StallContainsKeywordsPredicate(Arrays.asList(new Name(name)),","lastModifiedDate":"2022-10-21"},{"lineNumber":124,"author":{"gitId":"jamietan2002"},"content":"                Collections.emptyList()));","lastModifiedDate":"2022-10-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"MinHeinA"},"content":"        modelManager.updateFilteredStallList(PREDICATE_SHOW_ALL_STALLS);","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"MinHeinA":14,"Hikoya":4,"-":111,"jamietan2002":6}},{"path":"src/test/java/foodwhere/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.model;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Hikoya":2,"-":19}},{"path":"src/test/java/foodwhere/model/common/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.model.common;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Address;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Hikoya":4,"-":34}},{"path":"src/test/java/foodwhere/model/common/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.model.common;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"jamietan2002"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"        // null tag","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTag(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"jamietan2002"},"content":"    public void equals() {","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(new Tag(\"Bob\").equals(new Tag(\"Bob\"))); //same name and capitalisation","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(new Tag(\"BOB\").equals(new Tag(\"bob\"))); //case insensitive","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"Hikoya":8,"-":22,"jamietan2002":5}},{"path":"src/test/java/foodwhere/model/review/ContentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package foodwhere.model.review;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"public class ContentTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Content(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"    public void constructor_invalidContent_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"        String invalidContent \u003d \"\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Content(invalidContent));","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"    public void isValidContent() {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"        // null content","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"        assertThrows(NullPointerException.class, () -\u003e Content.isValidContent(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"        // invalid contents","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"        assertFalse(Content.isValidContent(\"\")); // empty string","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"        assertFalse(Content.isValidContent(\" \")); // spaces only","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"LikHern"},"content":"        // valid contents","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"        assertTrue(Content.isValidContent(\"Good, 4/5\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"LikHern"},"content":"        assertTrue(Content.isValidContent(\"-\")); // one character","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"LikHern"},"content":"        // long content","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"LikHern"},"content":"        assertTrue(Content.isValidContent(\"The owner is friendly, the food is good. 100% will visit again.\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"LikHern":37}},{"path":"src/test/java/foodwhere/model/review/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package foodwhere.model.review;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"public class DateTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"    public void isValidDate_generalTests_returnsExpectedValues() {","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"        // null date","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"        // invalid dates","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"        assertFalse(Date.isValidDate(\"\")); // empty string","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"        assertFalse(Date.isValidDate(\" \")); // spaces only","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"        assertFalse(Date.isValidDate(\"001-01-2020\")); // wrong digits in day","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"        assertFalse(Date.isValidDate(\"01-001-2020\")); // wrong digits in month","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"        assertFalse(Date.isValidDate(\"01-01-20000\")); // wrong digits in year","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"        assertFalse(Date.isValidDate(\"01-01-202\")); // wrong digits in year","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"        assertFalse(Date.isValidDate(\"01/01-2020\")); // mix slash and dash","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"        assertFalse(Date.isValidDate(\"29-02/2000\")); // mix slash and dash","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"        assertFalse(Date.isValidDate(\"32/01/2000\")); // invalid day","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"        assertFalse(Date.isValidDate(\"29/02/2100\")); // no leap year","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"        assertFalse(Date.isValidDate(\"00/01/2100\")); // invalid day","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"        assertFalse(Date.isValidDate(\"01/00/2100\")); // invalid month","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"        assertFalse(Date.isValidDate(\"01-01-0000\")); // year 0","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"LikHern"},"content":"        // valid dates","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"        assertTrue(Date.isValidDate(\"01/01/2020\")); // normal date","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"        assertTrue(Date.isValidDate(\"29/02/2000\")); // leap year","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"        assertTrue(Date.isValidDate(\"01-01-2020\")); // normal date","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"        assertTrue(Date.isValidDate(\"29-02-2000\")); // leap year","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"        assertTrue(Date.isValidDate(\"01-01-0001\")); // normal date","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"        assertTrue(Date.isValidDate(\"01-1-2020\")); // normal date","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"        assertTrue(Date.isValidDate(\"1-01-2020\")); // normal date","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"        assertTrue(Date.isValidDate(\"1-1-2020\")); // normal date","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"    public void constructor_invalidDates_throwIllegalArgumentException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"        // short edge cases","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalArgumentException.class, Date.MESSAGE_CONSTRAINTS, () -\u003e new Date(\"\")); // empty string","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalArgumentException.class, Date.MESSAGE_CONSTRAINTS, () -\u003e new Date(\" \")); // spaces only","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"        // wrong number of digits","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalArgumentException.class, Date.MESSAGE_CONSTRAINTS, () -\u003e new Date(\"001-01-2020\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalArgumentException.class, Date.MESSAGE_CONSTRAINTS, () -\u003e new Date(\"01-001-2020\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalArgumentException.class, Date.MESSAGE_CONSTRAINTS, () -\u003e new Date(\"01-01-20000\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalArgumentException.class, Date.MESSAGE_CONSTRAINTS, () -\u003e new Date(\"01-01-202\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"clarence-chew"},"content":"        // mix slash and dash","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalArgumentException.class, Date.MESSAGE_CONSTRAINTS, () -\u003e new Date(\"01/01-2020\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalArgumentException.class, Date.MESSAGE_CONSTRAINTS, () -\u003e new Date(\"29-02/2000\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"clarence-chew"},"content":"        // invalid day","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalArgumentException.class, Date.VALID_DATE_CONSTRAINTS, () -\u003e new Date(\"32/01/2000\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalArgumentException.class, Date.VALID_DATE_CONSTRAINTS, () -\u003e new Date(\"29/02/2100\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalArgumentException.class, Date.VALID_DATE_CONSTRAINTS, () -\u003e new Date(\"00/01/2100\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalArgumentException.class, Date.VALID_DATE_CONSTRAINTS, () -\u003e new Date(\"01/00/2100\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalArgumentException.class, Date.VALID_DATE_CONSTRAINTS, () -\u003e new Date(\"01-01-0000\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"clarence-chew"},"content":"    public void constructor_validDates_success() {","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"clarence-chew"},"content":"        // valid dates","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"01/01/2020\", new Date(\"01/01/2020\").toString()); // normal date","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"29/02/2000\", new Date(\"29/02/2000\").toString()); // leap year","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"01/01/2020\", new Date(\"01-01-2020\").toString()); // normal date","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"29/02/2000\", new Date(\"29-02-2000\").toString()); // leap year","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"01/01/0001\", new Date(\"01-01-0001\").toString()); // normal date","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"clarence-chew"},"content":"        // 1 digit in day/month","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"01/01/2020\", new Date(\"01-1-2020\").toString()); // normal date","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"01/01/2020\", new Date(\"1-01-2020\").toString()); // normal date","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(\"01/01/2020\", new Date(\"1-1-2020\").toString()); // normal date","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"clarence-chew"},"content":"    public void compareTo_generalTests_returnsExpectedValues() {","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"clarence-chew"},"content":"        // dates that make sense","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(1, new Date(\"1/1/2000\").compareTo(new Date(\"1/1/1999\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(1, new Date(\"1/2/2000\").compareTo(new Date(\"1/1/2000\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(1, new Date(\"2/1/2000\").compareTo(new Date(\"1/1/2000\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(-1, new Date(\"1/1/1999\").compareTo(new Date(\"1/1/2000\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(-1, new Date(\"1/1/2000\").compareTo(new Date(\"1/2/2000\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(-1, new Date(\"1/1/2000\").compareTo(new Date(\"2/1/2000\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(0, new Date(\"29/2/2000\").compareTo(new Date(\"29-02-2000\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"clarence-chew"},"content":"        // throws","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(\"1/1/2000\").compareTo(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"LikHern":32,"clarence-chew":79}},{"path":"src/test/java/foodwhere/model/review/RatingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.model.review;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"public class RatingTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Rating(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"    public void constructor_invalidRating_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"        Integer invalidRating \u003d 6;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Rating(String.valueOf(invalidRating)));","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"    public void isValidRating() {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"        // null content","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"        assertThrows(NullPointerException.class, () -\u003e Rating.isValidRating(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"        // invalid contents","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(\"asdf\")); // invalid number","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(\"7\")); // invalid number","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(\"8\")); // invalid number","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(\"\")); // invalid number","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(\"abcd\")); // invalid number","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(\"   \")); // invalid number","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(\"3.\")); // invalid number","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(\"5.\")); // invalid number","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(\"3.0\")); // invalid number","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(\"4.0\")); // invalid number","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(\"4.2\")); // invalid number","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(\"1.0\")); // invalid number","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(\"4a\")); // invalid number","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(\"a3\")); // invalid number","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(\"-3\")); // invalid number","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(String.format(\"%s\", Integer.MAX_VALUE)));","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(String.format(\"%s\", Integer.MAX_VALUE + 1)));","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(String.format(\"%s\", Integer.MIN_VALUE)));","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(String.format(\"%s\", Integer.MIN_VALUE - 1)));","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(\"-10000000000000000000\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(\"10000000000000000000\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(\"1180591620717411303427\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(String.valueOf(Double.MAX_VALUE)));","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"        assertFalse(Rating.isValidRating(String.valueOf(Double.MIN_VALUE)));","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"        // valid contents","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"        assertTrue(Rating.isValidRating(\"0\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"        assertTrue(Rating.isValidRating(\"3\")); // one character","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"        assertTrue(Rating.isValidRating(\"03\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"        assertTrue(Rating.isValidRating(\"04\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"Hikoya"},"content":"        assertTrue(Rating.isValidRating(\"004\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"        assertTrue(Rating.isValidRating(\"00004\"));","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"Hikoya":61}},{"path":"src/test/java/foodwhere/model/review/ReviewContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jamietan2002"},"content":"package foodwhere.model.review;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"jamietan2002"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"jamietan2002"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"jamietan2002"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"jamietan2002"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"jamietan2002"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":"public class ReviewContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":"    public void equals() {","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"        ReviewContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":"                new ReviewContainsKeywordsPredicate(Collections.singleton(new Name(\"first\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"first\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"jamietan2002"},"content":"        ReviewContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"                new ReviewContainsKeywordsPredicate(Collections.singleton(new Name(\"second\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"first\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"jamietan2002"},"content":"        ReviewContainsKeywordsPredicate thirdPredicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":"                new ReviewContainsKeywordsPredicate(Collections.singleton(new Name(\"first\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"second\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"        ReviewContainsKeywordsPredicate fourthPredicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"                new ReviewContainsKeywordsPredicate(Collections.singleton(new Name(\"second\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"second\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"jamietan2002"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"        ReviewContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"jamietan2002"},"content":"                new ReviewContainsKeywordsPredicate(Collections.singleton(new Name(\"first\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"first\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"jamietan2002"},"content":"        ;","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"jamietan2002"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"jamietan2002"},"content":"        // different reviews -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"jamietan2002"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"jamietan2002"},"content":"        // One keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"jamietan2002"},"content":"        ReviewContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"jamietan2002"},"content":"                new ReviewContainsKeywordsPredicate(Arrays.asList(new Name(\"Alice\")), Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(predicate.test(new ReviewBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"jamietan2002"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"jamietan2002"},"content":"        predicate \u003d new ReviewContainsKeywordsPredicate(Arrays.asList(new Name(\"Alice\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"jamietan2002"},"content":"                new Name(\"Bob\")), Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(predicate.test(new ReviewBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"jamietan2002"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"jamietan2002"},"content":"        predicate \u003d new ReviewContainsKeywordsPredicate(Arrays.asList(new Name(\"Carol\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"jamietan2002"},"content":"                new Name(\"Bob\")), Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(predicate.test(new ReviewBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"jamietan2002"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"jamietan2002"},"content":"        predicate \u003d new ReviewContainsKeywordsPredicate(Arrays.asList(new Name(\"aLIce\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"jamietan2002"},"content":"                new Name(\"boB\")), Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(predicate.test(new ReviewBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"jamietan2002"},"content":"    public void test_nameAndTagsContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"jamietan2002"},"content":"        //contains name and tag keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"jamietan2002"},"content":"        ReviewContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"jamietan2002"},"content":"                new ReviewContainsKeywordsPredicate(Collections.singleton(new Name(\"Alice\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"Bob\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(predicate.test(new ReviewBuilder().withName(\"Alice\").withTags(\"Bob\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"jamietan2002"},"content":"        //contains only name keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"jamietan2002"},"content":"        predicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"jamietan2002"},"content":"                new ReviewContainsKeywordsPredicate(Collections.singleton(new Name(\"Alice\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"Bob\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(predicate.test(new ReviewBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"jamietan2002"},"content":"        //contains only tag keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"jamietan2002"},"content":"        predicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"jamietan2002"},"content":"                new ReviewContainsKeywordsPredicate(Collections.singleton(new Name(\"Alice\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"Bob\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(predicate.test(new ReviewBuilder().withTags(\"Bob\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"jamietan2002"},"content":"    public void test_nameAndTagsDoNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"jamietan2002"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"jamietan2002"},"content":"        ReviewContainsKeywordsPredicate predicate \u003d new ReviewContainsKeywordsPredicate(Collections.emptyList(),","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"jamietan2002"},"content":"                Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(predicate.test(new ReviewBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"jamietan2002"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"jamietan2002"},"content":"        predicate \u003d new ReviewContainsKeywordsPredicate(Arrays.asList(new Name(\"Carol\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"jamietan2002"},"content":"                Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(predicate.test(new ReviewBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"jamietan2002"},"content":"        // name_keywords match content, but does not match name","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"jamietan2002"},"content":"        predicate \u003d new ReviewContainsKeywordsPredicate(Arrays.asList(new Name(\"Main\"), new Name(\"Street\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":115,"author":{"gitId":"jamietan2002"},"content":"                Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":116,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(predicate.test(new ReviewBuilder().withName(\"Alice\")","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"jamietan2002"},"content":"                .withContent(\"Main Street\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"jamietan2002"},"content":"        // name_keywords match tag, but does not match name","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"jamietan2002"},"content":"        predicate \u003d new ReviewContainsKeywordsPredicate(Arrays.asList(new Name(\"Main\"), new Name(\"Street\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"jamietan2002"},"content":"                Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(predicate.test(new ReviewBuilder().withName(\"Alice\")","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"jamietan2002"},"content":"                .withTags(\"Main\", \"Street\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":124,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":125,"author":{"gitId":"jamietan2002"},"content":"        //tag_keyword match name, but does not match tag","lastModifiedDate":"2022-10-21"},{"lineNumber":126,"author":{"gitId":"jamietan2002"},"content":"        predicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":127,"author":{"gitId":"jamietan2002"},"content":"                new ReviewContainsKeywordsPredicate(Collections.singleton(new Name(\"Alice\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":128,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"Bob\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":129,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(predicate.test(new ReviewBuilder().withName(\"Bob\")","lastModifiedDate":"2022-10-21"},{"lineNumber":130,"author":{"gitId":"jamietan2002"},"content":"                .withTags(\"Alice\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":131,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":132,"author":{"gitId":"jamietan2002"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jamietan2002":132}},{"path":"src/test/java/foodwhere/model/review/ReviewTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package foodwhere.model.review;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"import foodwhere.logic.commands.CommandTestUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"import foodwhere.testutil.TypicalReviews;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"public class ReviewTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"        Review review \u003d new ReviewBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e review.getTags().remove(0));","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"    public void isSameReview() {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"        assertTrue(TypicalReviews.ALICE.isSameReview(TypicalReviews.ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"        assertFalse(TypicalReviews.ALICE.isSameReview(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"        Review editedAlice \u003d new ReviewBuilder(TypicalReviews.ALICE).withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"        assertFalse(TypicalReviews.ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"LikHern"},"content":"        editedAlice \u003d new ReviewBuilder(TypicalReviews.ALICE).withDate(CommandTestUtil.VALID_DATE_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"LikHern"},"content":"        assertFalse(TypicalReviews.ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"LikHern"},"content":"        // different content -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"LikHern"},"content":"        editedAlice \u003d new ReviewBuilder(TypicalReviews.ALICE).withContent(CommandTestUtil.VALID_CONTENT_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"LikHern"},"content":"        assertFalse(TypicalReviews.ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"        editedAlice \u003d new ReviewBuilder(TypicalReviews.ALICE).withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"LikHern"},"content":"        assertFalse(TypicalReviews.ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"LikHern"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"LikHern"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"LikHern"},"content":"        Review aliceCopy \u003d new ReviewBuilder(TypicalReviews.ALICE).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"LikHern"},"content":"        assertTrue(TypicalReviews.ALICE.equals(aliceCopy));","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"LikHern"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"LikHern"},"content":"        assertTrue(TypicalReviews.ALICE.equals(TypicalReviews.ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"LikHern"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"LikHern"},"content":"        assertFalse(TypicalReviews.ALICE.equals(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"LikHern"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"LikHern"},"content":"        assertFalse(TypicalReviews.ALICE.equals(5));","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"LikHern"},"content":"        // different review -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"LikHern"},"content":"        assertFalse(TypicalReviews.ALICE.equals(TypicalReviews.BOB));","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"LikHern"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"LikHern"},"content":"        Review editedAlice \u003d new ReviewBuilder(TypicalReviews.ALICE).withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"LikHern"},"content":"        assertFalse(TypicalReviews.ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"LikHern"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"LikHern"},"content":"        editedAlice \u003d new ReviewBuilder(TypicalReviews.ALICE).withDate(CommandTestUtil.VALID_DATE_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"LikHern"},"content":"        assertFalse(TypicalReviews.ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"LikHern"},"content":"        // different content -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"LikHern"},"content":"        editedAlice \u003d new ReviewBuilder(TypicalReviews.ALICE).withContent(CommandTestUtil.VALID_CONTENT_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"LikHern"},"content":"        assertFalse(TypicalReviews.ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"Hikoya"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"Hikoya"},"content":"        editedAlice \u003d new ReviewBuilder(TypicalReviews.ALICE).withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"LikHern"},"content":"        assertFalse(TypicalReviews.ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"LikHern":74,"Hikoya":5}},{"path":"src/test/java/foodwhere/model/review/UniqueReviewListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LikHern"},"content":"package foodwhere.model.review;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"LikHern"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"LikHern"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"LikHern"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"LikHern"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"LikHern"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"LikHern"},"content":"import foodwhere.logic.commands.CommandTestUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"LikHern"},"content":"import foodwhere.model.review.exceptions.DuplicateReviewException;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"LikHern"},"content":"import foodwhere.model.review.exceptions.ReviewNotFoundException;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"LikHern"},"content":"import foodwhere.testutil.TypicalReviews;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"LikHern"},"content":"public class UniqueReviewListTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"LikHern"},"content":"    private final UniqueReviewList uniqueReviewList \u003d new UniqueReviewList();","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"LikHern"},"content":"    public void contains_nullReview_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"LikHern"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueReviewList.contains(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"LikHern"},"content":"    public void contains_reviewNotInList_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"LikHern"},"content":"        assertFalse(uniqueReviewList.contains(TypicalReviews.ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"LikHern"},"content":"    public void contains_reviewInList_returnsTrue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"LikHern"},"content":"        uniqueReviewList.add(TypicalReviews.ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"LikHern"},"content":"        assertTrue(uniqueReviewList.contains(TypicalReviews.ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"LikHern"},"content":"    public void contains_reviewWithSameIdentityFieldsInList_returnsFalse() {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"LikHern"},"content":"        uniqueReviewList.add(TypicalReviews.ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"LikHern"},"content":"        Review editedAlice \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"LikHern"},"content":"                new ReviewBuilder(TypicalReviews.ALICE)","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"LikHern"},"content":"                        .withDate(CommandTestUtil.VALID_DATE_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"LikHern"},"content":"                        .withContent(CommandTestUtil.VALID_CONTENT_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"                        .withTags(CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"LikHern"},"content":"                        .build();","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"LikHern"},"content":"        assertFalse(uniqueReviewList.contains(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"LikHern"},"content":"    public void add_nullReview_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"LikHern"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueReviewList.add(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"LikHern"},"content":"    public void add_duplicateReview_throwsDuplicateReviewException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"LikHern"},"content":"        uniqueReviewList.add(TypicalReviews.ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"LikHern"},"content":"        assertThrows(DuplicateReviewException.class, () -\u003e uniqueReviewList.add(TypicalReviews.ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"LikHern"},"content":"    public void setReview_nullTargetReview_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"LikHern"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueReviewList.setReview(null, TypicalReviews.ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"LikHern"},"content":"    public void setReview_nullEditedReview_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"LikHern"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"LikHern"},"content":"                uniqueReviewList.setReview(TypicalReviews.ALICE, null));","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"LikHern"},"content":"    public void setReview_targetReviewNotInList_throwsReviewNotFoundException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"LikHern"},"content":"        assertThrows(ReviewNotFoundException.class, () -\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"LikHern"},"content":"                uniqueReviewList.setReview(TypicalReviews.ALICE, TypicalReviews.ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"LikHern"},"content":"    public void setReview_editedReviewIsSameReview_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"LikHern"},"content":"        uniqueReviewList.add(TypicalReviews.ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"LikHern"},"content":"        uniqueReviewList.setReview(TypicalReviews.ALICE, TypicalReviews.ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"LikHern"},"content":"        UniqueReviewList expectedUniqueReviewList \u003d new UniqueReviewList();","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"LikHern"},"content":"        expectedUniqueReviewList.add(TypicalReviews.ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"LikHern"},"content":"        assertEquals(expectedUniqueReviewList, uniqueReviewList);","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"LikHern"},"content":"    public void setReview_editedReviewHasSameIdentity_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"LikHern"},"content":"        uniqueReviewList.add(TypicalReviews.ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"LikHern"},"content":"        Review editedAlice \u003d new ReviewBuilder(TypicalReviews.ALICE)","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"LikHern"},"content":"                .withDate(CommandTestUtil.VALID_DATE_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"LikHern"},"content":"                .withContent(CommandTestUtil.VALID_CONTENT_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"Hikoya"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"LikHern"},"content":"                .build();","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"LikHern"},"content":"        uniqueReviewList.setReview(TypicalReviews.ALICE, editedAlice);","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"LikHern"},"content":"        UniqueReviewList expectedUniqueReviewList \u003d new UniqueReviewList();","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"LikHern"},"content":"        expectedUniqueReviewList.add(editedAlice);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"LikHern"},"content":"        assertEquals(expectedUniqueReviewList, uniqueReviewList);","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"LikHern"},"content":"    public void setReview_editedReviewHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"LikHern"},"content":"        uniqueReviewList.add(TypicalReviews.ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"LikHern"},"content":"        uniqueReviewList.setReview(TypicalReviews.ALICE, TypicalReviews.BOB);","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"LikHern"},"content":"        UniqueReviewList expectedUniqueReviewList \u003d new UniqueReviewList();","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"LikHern"},"content":"        expectedUniqueReviewList.add(TypicalReviews.BOB);","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"LikHern"},"content":"        assertEquals(expectedUniqueReviewList, uniqueReviewList);","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"LikHern"},"content":"    public void setReview_editedReviewHasNonUniqueIdentity_throwsDuplicateReviewException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"LikHern"},"content":"        uniqueReviewList.add(TypicalReviews.ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"LikHern"},"content":"        uniqueReviewList.add(TypicalReviews.BOB);","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"LikHern"},"content":"        assertThrows(DuplicateReviewException.class, () -\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"LikHern"},"content":"                uniqueReviewList.setReview(TypicalReviews.ALICE, TypicalReviews.BOB));","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"LikHern"},"content":"    public void remove_nullReview_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"LikHern"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueReviewList.remove(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"LikHern"},"content":"    public void remove_reviewDoesNotExist_throwsReviewNotFoundException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"LikHern"},"content":"        assertThrows(ReviewNotFoundException.class, () -\u003e uniqueReviewList.remove(TypicalReviews.ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"LikHern"},"content":"    public void remove_existingReview_removesReview() {","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"LikHern"},"content":"        uniqueReviewList.add(TypicalReviews.ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"LikHern"},"content":"        uniqueReviewList.remove(TypicalReviews.ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"LikHern"},"content":"        UniqueReviewList expectedUniqueReviewList \u003d new UniqueReviewList();","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"LikHern"},"content":"        assertEquals(expectedUniqueReviewList, uniqueReviewList);","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"LikHern"},"content":"    public void setStalls_nullUniqueReviewList_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"LikHern"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueReviewList.setStalls((UniqueReviewList) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"LikHern"},"content":"    public void setStalls_uniqueReviewList_replacesOwnListWithProvidedUniqueReviewList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"LikHern"},"content":"        uniqueReviewList.add(TypicalReviews.ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"LikHern"},"content":"        UniqueReviewList expectedUniqueReviewList \u003d new UniqueReviewList();","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"LikHern"},"content":"        expectedUniqueReviewList.add(TypicalReviews.BOB);","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"LikHern"},"content":"        uniqueReviewList.setStalls(expectedUniqueReviewList);","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"LikHern"},"content":"        assertEquals(expectedUniqueReviewList, uniqueReviewList);","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"LikHern"},"content":"    public void setReviews_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"LikHern"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueReviewList.setReviews((List\u003cReview\u003e) null));","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"LikHern"},"content":"    public void setReviews_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"LikHern"},"content":"        uniqueReviewList.add(TypicalReviews.ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"LikHern"},"content":"        List\u003cReview\u003e reviewList \u003d Collections.singletonList(TypicalReviews.BOB);","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"LikHern"},"content":"        uniqueReviewList.setReviews(reviewList);","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"LikHern"},"content":"        UniqueReviewList expectedUniqueReviewList \u003d new UniqueReviewList();","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"LikHern"},"content":"        expectedUniqueReviewList.add(TypicalReviews.BOB);","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"LikHern"},"content":"        assertEquals(expectedUniqueReviewList, uniqueReviewList);","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"LikHern"},"content":"    public void setReviews_listWithDuplicateReviews_throwsDuplicateReviewException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"LikHern"},"content":"        List\u003cReview\u003e listWithDuplicateReviews \u003d Arrays.asList(TypicalReviews.ALICE, TypicalReviews.ALICE);","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"LikHern"},"content":"        assertThrows(DuplicateReviewException.class, () -\u003e uniqueReviewList.setReviews(listWithDuplicateReviews));","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"LikHern"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"LikHern"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"LikHern"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"LikHern"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"LikHern"},"content":"                uniqueReviewList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"LikHern"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"LikHern"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"LikHern":175,"Hikoya":2}},{"path":"src/test/java/foodwhere/model/stall/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MinHeinA"},"content":"package foodwhere.model.stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"jamietan2002"},"content":"    public void equals() {","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"jamietan2002"},"content":"        //equal names","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(new Name(\"Bob\").equals(new Name(\"Bob\"))); //same name and capitalisation","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(new Name(\"BOB\").equals(new Name(\"bob\"))); //case insensitive","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"MinHeinA":1,"Hikoya":3,"-":38,"jamietan2002":8}},{"path":"src/test/java/foodwhere/model/stall/StallBuilderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package foodwhere.model.stall;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.exceptions.ReviewNotFoundException;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.testutil.TypicalReviews;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.testutil.TypicalStalls;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"public class StallBuilderTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"    public void addReview_normalBehavior_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"        StallBuilder stall \u003d new StallBuilder(TypicalStalls.ALICE);","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"        stall.addReview(TypicalReviews.BOB);","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"        stall.removeReview(TypicalReviews.BOB);","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(TypicalStalls.ALICE, stall.build());","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"    public void removeReview_removeNotPresent_throwsError() {","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"        StallBuilder stall \u003d new StallBuilder(TypicalStalls.ALICE);","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(ReviewNotFoundException.class, () -\u003e stall.removeReview(TypicalReviews.BOB));","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"clarence-chew"},"content":"    public void withName_withReview_renamesReviews() {","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"clarence-chew"},"content":"        String newName \u003d \"Another Food Place\";","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"        Stall stall \u003d new StallBuilder(TypicalStalls.ALICE)","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"                .addReview(TypicalReviews.ALICE)","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"                .withName(newName).build();","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"        for (Review review : stall.getReviews()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"            assertEquals(newName, review.getName().fullName);","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"clarence-chew":39}},{"path":"src/test/java/foodwhere/model/stall/StallContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jamietan2002"},"content":"package foodwhere.model.stall;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"jamietan2002"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"jamietan2002"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"jamietan2002"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"jamietan2002"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"jamietan2002"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"jamietan2002"},"content":"public class StallContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":"    public void equals() {","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"        StallContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":"                new StallContainsKeywordsPredicate(Collections.singleton(new Name(\"first\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"first\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"jamietan2002"},"content":"        StallContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"jamietan2002"},"content":"                new StallContainsKeywordsPredicate(Collections.singleton(new Name(\"second\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"first\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"jamietan2002"},"content":"        StallContainsKeywordsPredicate thirdPredicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"jamietan2002"},"content":"                new StallContainsKeywordsPredicate(Collections.singleton(new Name(\"first\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"second\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"jamietan2002"},"content":"        StallContainsKeywordsPredicate fourthPredicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"jamietan2002"},"content":"                new StallContainsKeywordsPredicate(Collections.singleton(new Name(\"second\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"second\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"jamietan2002"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"jamietan2002"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"jamietan2002"},"content":"        StallContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"jamietan2002"},"content":"                new StallContainsKeywordsPredicate(Collections.singleton(new Name(\"first\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"first\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"jamietan2002"},"content":"        ;","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"jamietan2002"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"jamietan2002"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"jamietan2002"},"content":"        // different stall -\u003e returns false","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"jamietan2002"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"jamietan2002"},"content":"        // One keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"jamietan2002"},"content":"        StallContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"jamietan2002"},"content":"                new StallContainsKeywordsPredicate(Arrays.asList(new Name(\"Alice\")), Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(predicate.test(new StallBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"jamietan2002"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"jamietan2002"},"content":"        predicate \u003d new StallContainsKeywordsPredicate(Arrays.asList(new Name(\"Alice\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"jamietan2002"},"content":"                new Name(\"Bob\")), Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(predicate.test(new StallBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"jamietan2002"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"jamietan2002"},"content":"        predicate \u003d new StallContainsKeywordsPredicate(Arrays.asList(new Name(\"Carol\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"jamietan2002"},"content":"                new Name(\"Bob\")), Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(predicate.test(new StallBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"jamietan2002"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"jamietan2002"},"content":"        predicate \u003d new StallContainsKeywordsPredicate(Arrays.asList(new Name(\"aLIce\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"jamietan2002"},"content":"                new Name(\"boB\")), Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(predicate.test(new StallBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"jamietan2002"},"content":"    public void test_nameAndTagsContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"jamietan2002"},"content":"        //contains name and tag keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"jamietan2002"},"content":"        StallContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"jamietan2002"},"content":"                new StallContainsKeywordsPredicate(Collections.singleton(new Name(\"Alice\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"Bob\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(predicate.test(new StallBuilder().withName(\"Alice\").withTags(\"Bob\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"jamietan2002"},"content":"        //contains only name keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"jamietan2002"},"content":"        predicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"jamietan2002"},"content":"                new StallContainsKeywordsPredicate(Collections.singleton(new Name(\"Alice\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"Bob\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(predicate.test(new StallBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"jamietan2002"},"content":"        //contains only tag keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"jamietan2002"},"content":"        predicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"jamietan2002"},"content":"                new StallContainsKeywordsPredicate(Collections.singleton(new Name(\"Alice\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"Bob\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"jamietan2002"},"content":"        assertTrue(predicate.test(new StallBuilder().withTags(\"Bob\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"jamietan2002"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"jamietan2002"},"content":"    public void test_nameAndTagsDoNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"jamietan2002"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"jamietan2002"},"content":"        StallContainsKeywordsPredicate predicate \u003d new StallContainsKeywordsPredicate(Collections.emptyList(),","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"jamietan2002"},"content":"                Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(predicate.test(new StallBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"jamietan2002"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"jamietan2002"},"content":"        predicate \u003d new StallContainsKeywordsPredicate(Arrays.asList(new Name(\"Carol\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"jamietan2002"},"content":"                Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(predicate.test(new StallBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"jamietan2002"},"content":"        // name_keywords match address, but does not match name","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"jamietan2002"},"content":"        predicate \u003d new StallContainsKeywordsPredicate(Arrays.asList(new Name(\"Main\"), new Name(\"Street\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":115,"author":{"gitId":"jamietan2002"},"content":"                Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":116,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(predicate.test(new StallBuilder().withName(\"Alice\")","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"jamietan2002"},"content":"                .withAddress(\"Main Street\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"jamietan2002"},"content":"        // name_keywords match tag, but does not match name","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"jamietan2002"},"content":"        predicate \u003d new StallContainsKeywordsPredicate(Arrays.asList(new Name(\"Main\"), new Name(\"Street\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"jamietan2002"},"content":"                Collections.emptyList());","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(predicate.test(new StallBuilder().withName(\"Alice\")","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"jamietan2002"},"content":"                .withTags(\"Main\", \"Street\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":124,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":125,"author":{"gitId":"jamietan2002"},"content":"        //tag_keyword match name, but does not match tag","lastModifiedDate":"2022-10-21"},{"lineNumber":126,"author":{"gitId":"jamietan2002"},"content":"        predicate \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":127,"author":{"gitId":"jamietan2002"},"content":"                new StallContainsKeywordsPredicate(Collections.singleton(new Name(\"Alice\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":128,"author":{"gitId":"jamietan2002"},"content":"                        Collections.singleton(new Tag(\"Bob\")));","lastModifiedDate":"2022-10-21"},{"lineNumber":129,"author":{"gitId":"jamietan2002"},"content":"        assertFalse(predicate.test(new StallBuilder().withName(\"Bob\")","lastModifiedDate":"2022-10-21"},{"lineNumber":130,"author":{"gitId":"jamietan2002"},"content":"                .withTags(\"Alice\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":131,"author":{"gitId":"jamietan2002"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":132,"author":{"gitId":"jamietan2002"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"jamietan2002":132}},{"path":"src/test/java/foodwhere/model/stall/StallTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MinHeinA"},"content":"package foodwhere.model.stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.CommandTestUtil;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.testutil.TypicalReviews;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.testutil.TypicalStalls;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"MinHeinA"},"content":"public class StallTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"MinHeinA"},"content":"        Stall stall \u003d new StallBuilder().build();","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e stall.getTags().remove(0));","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"MinHeinA"},"content":"    public void isSameStall() {","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"MinHeinA"},"content":"        assertTrue(TypicalStalls.ALICE.isSameStall(TypicalStalls.ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"MinHeinA"},"content":"        assertFalse(TypicalStalls.ALICE.isSameStall(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"MinHeinA"},"content":"        Stall editedAlice \u003d new StallBuilder(TypicalStalls.ALICE)","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"MinHeinA"},"content":"                .withAddress(CommandTestUtil.VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"                .withReviews(TypicalReviews.BOB)","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"MinHeinA"},"content":"                .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"        assertFalse(TypicalStalls.ALICE.isSameStall(editedAlice));","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"        // same address, all other attributes different -\u003e returns false","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"        editedAlice \u003d new StallBuilder(TypicalStalls.ALICE)","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"                .withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"                .withReviews(TypicalReviews.BOB)","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"                .build();","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"        assertFalse(TypicalStalls.ALICE.isSameStall(editedAlice));","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"        // same address and name, all other attributes different -\u003e returns true","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"        editedAlice \u003d new StallBuilder(TypicalStalls.ALICE)","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"                .withReviews(TypicalReviews.BOB)","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"                .build();","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"MinHeinA"},"content":"        assertTrue(TypicalStalls.ALICE.isSameStall(editedAlice));","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2022-09-26"},{"lineNumber":53,"author":{"gitId":"MinHeinA"},"content":"        editedAlice \u003d new StallBuilder(TypicalStalls.ALICE).withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"MinHeinA"},"content":"        assertFalse(TypicalStalls.ALICE.isSameStall(editedAlice));","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-09-26"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"        String nameWithTrailingSpaces \u003d CommandTestUtil.VALID_NAME_BOB + \" \";","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"jamietan2002"},"content":"        Stall editedBob \u003d new StallBuilder(TypicalStalls.BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"MinHeinA"},"content":"        assertFalse(TypicalStalls.BOB.isSameStall(editedBob));","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":62,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-09-26"},{"lineNumber":63,"author":{"gitId":"Hikoya"},"content":"    public void equals() {","lastModifiedDate":"2022-09-26"},{"lineNumber":64,"author":{"gitId":"Hikoya"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-09-26"},{"lineNumber":65,"author":{"gitId":"MinHeinA"},"content":"        Stall aliceCopy \u003d new StallBuilder(TypicalStalls.ALICE).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"MinHeinA"},"content":"        assertTrue(TypicalStalls.ALICE.equals(aliceCopy));","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":68,"author":{"gitId":"Hikoya"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-09-26"},{"lineNumber":69,"author":{"gitId":"MinHeinA"},"content":"        assertTrue(TypicalStalls.ALICE.equals(TypicalStalls.ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":71,"author":{"gitId":"Hikoya"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-09-26"},{"lineNumber":72,"author":{"gitId":"MinHeinA"},"content":"        assertFalse(TypicalStalls.ALICE.equals(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-09-26"},{"lineNumber":75,"author":{"gitId":"MinHeinA"},"content":"        assertFalse(TypicalStalls.ALICE.equals(5));","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":77,"author":{"gitId":"MinHeinA"},"content":"        // different stall -\u003e returns false","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"MinHeinA"},"content":"        assertFalse(TypicalStalls.ALICE.equals(TypicalStalls.BOB));","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":80,"author":{"gitId":"Hikoya"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-09-26"},{"lineNumber":81,"author":{"gitId":"MinHeinA"},"content":"        Stall editedAlice \u003d new StallBuilder(TypicalStalls.ALICE).withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"MinHeinA"},"content":"        assertFalse(TypicalStalls.ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":84,"author":{"gitId":"Hikoya"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2022-09-26"},{"lineNumber":85,"author":{"gitId":"MinHeinA"},"content":"        editedAlice \u003d new StallBuilder(TypicalStalls.ALICE).withAddress(CommandTestUtil.VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"MinHeinA"},"content":"        assertFalse(TypicalStalls.ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":88,"author":{"gitId":"Hikoya"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"Hikoya"},"content":"        editedAlice \u003d new StallBuilder(TypicalStalls.ALICE).withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"MinHeinA"},"content":"        assertFalse(TypicalStalls.ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"MinHeinA"},"content":"        // different reviews -\u003e returns false","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"clarence-chew"},"content":"        Stall alice \u003d new StallBuilder(TypicalStalls.ALICE).withReviews(TypicalReviews.ALICE).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"clarence-chew"},"content":"        editedAlice \u003d new StallBuilder(TypicalStalls.ALICE).withReviews(TypicalReviews.BOB).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"MinHeinA"},"content":"        assertFalse(alice.equals(editedAlice));","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":97,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"MinHeinA":30,"clarence-chew":19,"Hikoya":47,"jamietan2002":1}},{"path":"src/test/java/foodwhere/model/stall/UniqueStallListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MinHeinA"},"content":"package foodwhere.model.stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.commands.CommandTestUtil;","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.exceptions.DuplicateStallException;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.exceptions.StallNotFoundException;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.testutil.TypicalStalls;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"MinHeinA"},"content":"public class UniqueStallListTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"MinHeinA"},"content":"    private final UniqueStallList uniqueStallList \u003d new UniqueStallList();","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"MinHeinA"},"content":"    public void contains_nullStall_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStallList.contains(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"MinHeinA"},"content":"    public void contains_stallNotInList_returnsFalse() {","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"MinHeinA"},"content":"        assertFalse(uniqueStallList.contains(TypicalStalls.ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"MinHeinA"},"content":"    public void contains_stallInList_returnsTrue() {","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"MinHeinA"},"content":"        uniqueStallList.add(TypicalStalls.ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"MinHeinA"},"content":"        assertTrue(uniqueStallList.contains(TypicalStalls.ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"MinHeinA"},"content":"    public void contains_stallWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"MinHeinA"},"content":"        uniqueStallList.add(TypicalStalls.ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"MinHeinA"},"content":"        Stall editedAlice \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"MinHeinA"},"content":"                new StallBuilder(TypicalStalls.ALICE)","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"                        .withTags(CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"MinHeinA"},"content":"        assertTrue(uniqueStallList.contains(editedAlice));","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"MinHeinA"},"content":"    public void add_nullStall_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStallList.add(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"MinHeinA"},"content":"    public void add_duplicateStall_throwsDuplicateStallException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"MinHeinA"},"content":"        uniqueStallList.add(TypicalStalls.ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(DuplicateStallException.class, () -\u003e uniqueStallList.add(TypicalStalls.ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"MinHeinA"},"content":"    public void setStall_nullTargetStall_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStallList.setStall(null, TypicalStalls.ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"MinHeinA"},"content":"    public void setStall_nullEditedStall_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"Hikoya"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":68,"author":{"gitId":"MinHeinA"},"content":"                uniqueStallList.setStall(TypicalStalls.ALICE, null));","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"MinHeinA"},"content":"    public void setStall_targetStallNotInList_throwsStallNotFoundException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(StallNotFoundException.class, () -\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"MinHeinA"},"content":"                uniqueStallList.setStall(TypicalStalls.ALICE, TypicalStalls.ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"MinHeinA"},"content":"    public void setStall_editedStallIsSameStall_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"MinHeinA"},"content":"        uniqueStallList.add(TypicalStalls.ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"MinHeinA"},"content":"        uniqueStallList.setStall(TypicalStalls.ALICE, TypicalStalls.ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"MinHeinA"},"content":"        UniqueStallList expectedUniqueStallList \u003d new UniqueStallList();","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"MinHeinA"},"content":"        expectedUniqueStallList.add(TypicalStalls.ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"MinHeinA"},"content":"        assertEquals(expectedUniqueStallList, uniqueStallList);","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"MinHeinA"},"content":"    public void setStall_editedStallHasSameIdentity_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"MinHeinA"},"content":"        uniqueStallList.add(TypicalStalls.ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"MinHeinA"},"content":"        Stall editedAlice \u003d new StallBuilder(TypicalStalls.ALICE)","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"Hikoya"},"content":"                .withAddress(CommandTestUtil.VALID_ADDRESS_BOB)","lastModifiedDate":"2022-09-26"},{"lineNumber":91,"author":{"gitId":"Hikoya"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"MinHeinA"},"content":"        uniqueStallList.setStall(TypicalStalls.ALICE, editedAlice);","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"MinHeinA"},"content":"        UniqueStallList expectedUniqueStallList \u003d new UniqueStallList();","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"MinHeinA"},"content":"        expectedUniqueStallList.add(editedAlice);","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"MinHeinA"},"content":"        assertEquals(expectedUniqueStallList, uniqueStallList);","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"MinHeinA"},"content":"    public void setStall_editedStallHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"MinHeinA"},"content":"        uniqueStallList.add(TypicalStalls.ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"MinHeinA"},"content":"        uniqueStallList.setStall(TypicalStalls.ALICE, TypicalStalls.BOB);","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"MinHeinA"},"content":"        UniqueStallList expectedUniqueStallList \u003d new UniqueStallList();","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"MinHeinA"},"content":"        expectedUniqueStallList.add(TypicalStalls.BOB);","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"MinHeinA"},"content":"        assertEquals(expectedUniqueStallList, uniqueStallList);","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"MinHeinA"},"content":"    public void setStall_editedStallHasNonUniqueIdentity_throwsDuplicateStallException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"MinHeinA"},"content":"        uniqueStallList.add(TypicalStalls.ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"MinHeinA"},"content":"        uniqueStallList.add(TypicalStalls.BOB);","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(DuplicateStallException.class, () -\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"MinHeinA"},"content":"                uniqueStallList.setStall(TypicalStalls.ALICE, TypicalStalls.BOB));","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"MinHeinA"},"content":"    public void remove_nullStall_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStallList.remove(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"MinHeinA"},"content":"    public void remove_stallDoesNotExist_throwsStallNotFoundException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(StallNotFoundException.class, () -\u003e uniqueStallList.remove(TypicalStalls.ALICE));","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"MinHeinA"},"content":"    public void remove_existingStall_removesStall() {","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"MinHeinA"},"content":"        uniqueStallList.add(TypicalStalls.ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"MinHeinA"},"content":"        uniqueStallList.remove(TypicalStalls.ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"MinHeinA"},"content":"        UniqueStallList expectedUniqueStallList \u003d new UniqueStallList();","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"MinHeinA"},"content":"        assertEquals(expectedUniqueStallList, uniqueStallList);","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"MinHeinA"},"content":"    public void setStalls_nullUniqueStallList_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStallList.setStalls((UniqueStallList) null));","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"MinHeinA"},"content":"    public void setStalls_uniqueStallList_replacesOwnListWithProvidedUniqueStallList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"MinHeinA"},"content":"        uniqueStallList.add(TypicalStalls.ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"MinHeinA"},"content":"        UniqueStallList expectedUniqueStallList \u003d new UniqueStallList();","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"MinHeinA"},"content":"        expectedUniqueStallList.add(TypicalStalls.BOB);","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"MinHeinA"},"content":"        uniqueStallList.setStalls(expectedUniqueStallList);","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"MinHeinA"},"content":"        assertEquals(expectedUniqueStallList, uniqueStallList);","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"MinHeinA"},"content":"    public void setStalls_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStallList.setStalls((List\u003cStall\u003e) null));","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"MinHeinA"},"content":"    public void setStalls_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-05"},{"lineNumber":155,"author":{"gitId":"MinHeinA"},"content":"        uniqueStallList.add(TypicalStalls.ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"MinHeinA"},"content":"        List\u003cStall\u003e stallList \u003d Collections.singletonList(TypicalStalls.BOB);","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"MinHeinA"},"content":"        uniqueStallList.setStalls(stallList);","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"MinHeinA"},"content":"        UniqueStallList expectedUniqueStallList \u003d new UniqueStallList();","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"MinHeinA"},"content":"        expectedUniqueStallList.add(TypicalStalls.BOB);","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"MinHeinA"},"content":"        assertEquals(expectedUniqueStallList, uniqueStallList);","lastModifiedDate":"2022-10-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"MinHeinA"},"content":"    public void setStalls_listWithDuplicateStalls_throwsDuplicateStallException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":165,"author":{"gitId":"MinHeinA"},"content":"        List\u003cStall\u003e listWithDuplicateStalls \u003d Arrays.asList(TypicalStalls.ALICE, TypicalStalls.ALICE);","lastModifiedDate":"2022-10-05"},{"lineNumber":166,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(DuplicateStallException.class, () -\u003e uniqueStallList.setStalls(listWithDuplicateStalls));","lastModifiedDate":"2022-10-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":171,"author":{"gitId":"Hikoya"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":172,"author":{"gitId":"MinHeinA"},"content":"                uniqueStallList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"MinHeinA":84,"Hikoya":9,"-":81}},{"path":"src/test/java/foodwhere/storage/JsonAdaptedReviewTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package foodwhere.storage;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import static foodwhere.testutil.TypicalReviews.BENSON;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"clarence-chew"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"clarence-chew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"clarence-chew"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"clarence-chew"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Address;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.Content;","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.Date;","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.Rating;","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"public class JsonAdaptedReviewTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"    private static final Name VALID_NAME \u003d new Name(BENSON.getName().fullName);","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"    private static final Address VALID_ADDRESS \u003d new Address(BENSON.getAddress().value);","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"    private static final String VALID_DATE \u003d \"1/1/2000\";","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"    private static final String INVALID_DATE \u003d \"1/1/1\";","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"    private static final String VALID_CONTENT \u003d BENSON.getContent().toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"    private static final String INVALID_CONTENT \u003d \"\";","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"    private static final Integer VALID_RATING \u003d BENSON.getRating().value;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"    public void toModelType_validReviewTags_returnsReview() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"        JsonAdaptedReview review \u003d new JsonAdaptedReview(BENSON);","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(BENSON, review.toModelType(VALID_NAME, VALID_ADDRESS));","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"        JsonAdaptedReview review \u003d new JsonAdaptedReview(VALID_DATE, VALID_CONTENT, VALID_RATING, new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"                String.format(JsonAdaptedReview.MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"                review.toModelType(null, VALID_ADDRESS));","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"        JsonAdaptedReview review \u003d new JsonAdaptedReview(VALID_DATE, VALID_CONTENT, VALID_RATING, new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"                String.format(JsonAdaptedReview.MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"                review.toModelType(VALID_NAME, null));","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"    public void toModelType_nullRating_throwsIllegalValueException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"        JsonAdaptedReview review \u003d new JsonAdaptedReview(VALID_DATE, VALID_CONTENT, null, new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"clarence-chew"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"                String.format(JsonAdaptedReview.MISSING_FIELD_MESSAGE_FORMAT, Rating.class.getSimpleName());","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"                review.toModelType(VALID_NAME, VALID_ADDRESS));","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"clarence-chew"},"content":"    public void toModelType_invalidRating_throwsIllegalValueException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"clarence-chew"},"content":"        JsonAdaptedReview review \u003d new JsonAdaptedReview(VALID_DATE, VALID_CONTENT, -1, new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"clarence-chew"},"content":"        String expectedMessage \u003d Rating.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"clarence-chew"},"content":"                review.toModelType(VALID_NAME, VALID_ADDRESS));","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"clarence-chew"},"content":"        JsonAdaptedReview review2 \u003d new JsonAdaptedReview(VALID_DATE, VALID_CONTENT, 6, new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"clarence-chew"},"content":"                review2.toModelType(VALID_NAME, VALID_ADDRESS));","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"clarence-chew"},"content":"    public void toModelType_nullContent_throwsIllegalValueException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"clarence-chew"},"content":"        JsonAdaptedReview review \u003d new JsonAdaptedReview(VALID_DATE, null, VALID_RATING, new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"clarence-chew"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"clarence-chew"},"content":"                String.format(JsonAdaptedReview.MISSING_FIELD_MESSAGE_FORMAT, Content.class.getSimpleName());","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"clarence-chew"},"content":"                review.toModelType(VALID_NAME, VALID_ADDRESS));","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"clarence-chew"},"content":"    public void toModelType_invalidContent_throwsIllegalValueException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"clarence-chew"},"content":"        JsonAdaptedReview review \u003d new JsonAdaptedReview(VALID_DATE, INVALID_CONTENT, VALID_RATING, new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"clarence-chew"},"content":"        String expectedMessage \u003d Content.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"clarence-chew"},"content":"                review.toModelType(VALID_NAME, VALID_ADDRESS));","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"clarence-chew"},"content":"    public void toModelType_nullDate_throwsIllegalValueException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"clarence-chew"},"content":"        JsonAdaptedReview review \u003d new JsonAdaptedReview(null, VALID_CONTENT, VALID_RATING, new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"clarence-chew"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"clarence-chew"},"content":"                String.format(JsonAdaptedReview.MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName());","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"clarence-chew"},"content":"                review.toModelType(VALID_NAME, VALID_ADDRESS));","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":105,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"clarence-chew"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":107,"author":{"gitId":"clarence-chew"},"content":"        JsonAdaptedReview review \u003d new JsonAdaptedReview(INVALID_DATE, VALID_CONTENT, VALID_RATING, new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"clarence-chew"},"content":"        String expectedMessage \u003d Date.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-19"},{"lineNumber":109,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":110,"author":{"gitId":"clarence-chew"},"content":"                review.toModelType(VALID_NAME, VALID_ADDRESS));","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":112,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"Hikoya"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"Hikoya"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"Hikoya"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"Hikoya"},"content":"        JsonAdaptedReview review \u003d new JsonAdaptedReview(VALID_DATE, VALID_CONTENT, VALID_RATING,","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"Hikoya"},"content":"                invalidTags);","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"clarence-chew"},"content":"        String expectedMessage \u003d Tag.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-23"},{"lineNumber":120,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":121,"author":{"gitId":"clarence-chew"},"content":"                review.toModelType(VALID_NAME, VALID_ADDRESS));","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"clarence-chew":110,"Hikoya":14}},{"path":"src/test/java/foodwhere/storage/JsonAdaptedStallTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.storage;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import static foodwhere.storage.JsonAdaptedStall.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.testutil.TypicalStalls.BENSON;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Address;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.stall.StallBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.testutil.TypicalReviews;","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"MinHeinA"},"content":"public class JsonAdaptedStallTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Hikoya"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Hikoya"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"    public void isReviewOfStall_nullName_throwsException() throws Exception {","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"clarence-chew"},"content":"        JsonAdaptedStall jsonAdaptedStall \u003d new JsonAdaptedStall(null, VALID_ADDRESS,","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"                VALID_TAGS, new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"clarence-chew"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e jsonAdaptedStall","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"                .isReviewOfStall(TypicalReviews.ALICE));","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"    public void toModelType_validStallTags_returnsStall() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"MinHeinA"},"content":"        JsonAdaptedStall stall \u003d new JsonAdaptedStall(BENSON);","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"MinHeinA"},"content":"        assertEquals(BENSON, stall.toModelType());","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"    public void toModelType_withReview_returnsStall() throws Exception {","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"        Stall testStall \u003d new StallBuilder(BENSON).addReview(TypicalReviews.BENSON).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"        JsonAdaptedStall stall \u003d new JsonAdaptedStall(testStall);","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"        assertEquals(testStall, stall.toModelType());","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"clarence-chew"},"content":"        JsonAdaptedStall stall \u003d new JsonAdaptedStall(INVALID_NAME, VALID_ADDRESS,","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"Hikoya"},"content":"                VALID_TAGS, new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, stall::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"    public void getModelReviews_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"clarence-chew"},"content":"        JsonAdaptedStall stall \u003d new JsonAdaptedStall(INVALID_NAME, VALID_ADDRESS,","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"                VALID_TAGS, new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, stall::getModelReviews);","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"clarence-chew"},"content":"        JsonAdaptedStall stall \u003d new JsonAdaptedStall(null, VALID_ADDRESS,","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"Hikoya"},"content":"                VALID_TAGS, new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"Hikoya"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-09-26"},{"lineNumber":76,"author":{"gitId":"clarence-chew"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, stall::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"clarence-chew"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"clarence-chew"},"content":"    public void getModelReviews_nullName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"clarence-chew"},"content":"        JsonAdaptedStall stall \u003d new JsonAdaptedStall(null, VALID_ADDRESS,","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"clarence-chew"},"content":"                VALID_TAGS, new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"clarence-chew"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"clarence-chew"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"clarence-chew"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, stall::getModelReviews);","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"clarence-chew"},"content":"        JsonAdaptedStall stall \u003d new JsonAdaptedStall(VALID_NAME, INVALID_ADDRESS,","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"Hikoya"},"content":"                VALID_TAGS, new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, stall::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"clarence-chew"},"content":"        JsonAdaptedStall stall \u003d new JsonAdaptedStall(VALID_NAME, null,","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"Hikoya"},"content":"                VALID_TAGS, new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"clarence-chew"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"clarence-chew"},"content":"                Address.class.getSimpleName());","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, stall::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"Hikoya"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"Hikoya"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"Hikoya"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"clarence-chew"},"content":"        JsonAdaptedStall stall \u003d new JsonAdaptedStall(VALID_NAME, VALID_ADDRESS,","lastModifiedDate":"2022-10-07"},{"lineNumber":111,"author":{"gitId":"Hikoya"},"content":"                invalidTags, new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(IllegalValueException.class, stall::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"MinHeinA":9,"clarence-chew":47,"Hikoya":19,"-":40}},{"path":"src/test/java/foodwhere/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.storage;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.testutil.TypicalStalls.ALICE;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.testutil.TypicalStalls.HOON;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.testutil.TypicalStalls.IDA;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.testutil.TypicalStalls.getTypicalAddressBook;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.AddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"MinHeinA"},"content":"    public void readAddressBook_invalidStallAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidStallAddressBook.json\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"MinHeinA"},"content":"    public void readAddressBook_invalidAndValidStallAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidStallAddressBook.json\"));","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"MinHeinA"},"content":"        original.addStall(HOON);","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"clarence-chew"},"content":"        Stall toRemove \u003d original.getStallList().stream()","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"clarence-chew"},"content":"                .filter(stall -\u003e stall.getName().equals(ALICE.getName()))","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"clarence-chew"},"content":"                .findFirst().get();","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"clarence-chew"},"content":"        original.removeStall(toRemove);","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"MinHeinA"},"content":"        original.addStall(IDA);","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"MinHeinA":10,"clarence-chew":5,"Hikoya":5,"-":94}},{"path":"src/test/java/foodwhere/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.storage;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.util.JsonUtil;","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.AddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.testutil.TypicalStalls;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"MinHeinA"},"content":"    private static final Path TYPICAL_STALLS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalStallsAddressBook.json\");","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"MinHeinA"},"content":"    private static final Path INVALID_STALL_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidStallAddressBook.json\");","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"MinHeinA"},"content":"    private static final Path DUPLICATE_STALL_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateStallAddressBook.json\");","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"MinHeinA"},"content":"    public void toModelType_typicalStallsFile_success() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"MinHeinA"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_STALLS_FILE,","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"MinHeinA"},"content":"        AddressBook typicalStallsAddressBook \u003d TypicalStalls.getTypicalAddressBook();","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"MinHeinA"},"content":"        assertEquals(addressBookFromFile, typicalStallsAddressBook);","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"MinHeinA"},"content":"    public void toModelType_invalidStallFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"MinHeinA"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_STALL_FILE,","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"MinHeinA"},"content":"    public void toModelType_duplicateStalls_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"MinHeinA"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_STALL_FILE,","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"MinHeinA"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_STALL,","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"MinHeinA":13,"Hikoya":6,"-":28}},{"path":"src/test/java/foodwhere/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.storage;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.GuiSettings;","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.UserPrefs;","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Hikoya":5,"-":118}},{"path":"src/test/java/foodwhere/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.storage;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.testutil.TypicalStalls.getTypicalAddressBook;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.GuiSettings;","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.AddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.UserPrefs;","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"MinHeinA":1,"Hikoya":5,"-":62}},{"path":"src/test/java/foodwhere/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.testutil;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.AddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"MinHeinA"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withStall(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"MinHeinA"},"content":"     * Adds a new {@code Stall} to the {@code AddressBook} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"MinHeinA"},"content":"    public AddressBookBuilder withStall(Stall stall) {","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"MinHeinA"},"content":"        addressBook.addStall(stall);","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"MinHeinA":5,"Hikoya":2,"-":27}},{"path":"src/test/java/foodwhere/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.testutil;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"Hikoya":1,"-":33}},{"path":"src/test/java/foodwhere/testutil/EditStallDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MinHeinA"},"content":"package foodwhere.testutil;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"MinHeinA"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"MinHeinA"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"MinHeinA"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.commands.SEditCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Address;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Name;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"MinHeinA"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"MinHeinA"},"content":" * A utility class to help with building EditStallDescriptor objects.","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"MinHeinA"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"MinHeinA"},"content":"public class EditStallDescriptorBuilder {","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"MinHeinA"},"content":"    private SEditCommand.EditStallDescriptor descriptor;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"MinHeinA"},"content":"    public EditStallDescriptorBuilder() {","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"MinHeinA"},"content":"        descriptor \u003d new SEditCommand.EditStallDescriptor();","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"MinHeinA"},"content":"    public EditStallDescriptorBuilder(SEditCommand.EditStallDescriptor descriptor) {","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"MinHeinA"},"content":"        this.descriptor \u003d new SEditCommand.EditStallDescriptor(descriptor);","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"MinHeinA"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"MinHeinA"},"content":"     * Returns an {@code EditStallDescriptor} with fields containing {@code stall}\u0027s details","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"MinHeinA"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"MinHeinA"},"content":"    public EditStallDescriptorBuilder(Stall stall) {","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"MinHeinA"},"content":"        descriptor \u003d new SEditCommand.EditStallDescriptor();","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"MinHeinA"},"content":"        descriptor.setName(stall.getName());","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"MinHeinA"},"content":"        descriptor.setAddress(stall.getAddress());","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"        descriptor.setTags(stall.getTags());","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"clarence-chew"},"content":"        descriptor.setReviews(stall.getReviews());","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"MinHeinA"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"MinHeinA"},"content":"     * Sets the {@code Name} of the {@code EditStallDescriptor} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"MinHeinA"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"MinHeinA"},"content":"    public EditStallDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"MinHeinA"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"MinHeinA"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"MinHeinA"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"MinHeinA"},"content":"     * Sets the {@code Address} of the {@code EditStallDescriptor} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"MinHeinA"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"MinHeinA"},"content":"    public EditStallDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"MinHeinA"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"MinHeinA"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"MinHeinA"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"Hikoya"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditStallDescriptor}","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"MinHeinA"},"content":"     * that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"MinHeinA"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"Hikoya"},"content":"    public EditStallDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"Hikoya"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Hikoya"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"MinHeinA"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"MinHeinA"},"content":"    public SEditCommand.EditStallDescriptor build() {","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"MinHeinA"},"content":"        return descriptor;","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"MinHeinA"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"MinHeinA"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"MinHeinA":59,"clarence-chew":1,"Hikoya":8}},{"path":"src/test/java/foodwhere/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.testutil;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Hikoya":1,"-":71}},{"path":"src/test/java/foodwhere/testutil/StallUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.testutil;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"jamietan2002"},"content":"import foodwhere.logic.commands.SAddCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.logic.commands.SEditCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import foodwhere.logic.parser.CliSyntax;","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.commons.Tag;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"MinHeinA"},"content":" * A utility class for Stall.","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"MinHeinA"},"content":"public class StallUtil {","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"jamietan2002"},"content":"     * Returns an sadd command string for adding the {@code stall}.","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"jamietan2002"},"content":"    public static String getSAddCommand(Stall stall) {","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"jamietan2002"},"content":"        return SAddCommand.COMMAND_WORD + \" \" + getStallDetails(stall);","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"MinHeinA"},"content":"     * Returns the part of command string for the given {@code stall}\u0027s details.","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"MinHeinA"},"content":"    public static String getStallDetails(Stall stall) {","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"Hikoya"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"MinHeinA"},"content":"        sb.append(CliSyntax.PREFIX_NAME + stall.getName().fullName + \" \");","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"MinHeinA"},"content":"        sb.append(CliSyntax.PREFIX_ADDRESS + stall.getAddress().value + \" \");","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"        stall.getTags().stream().forEach(","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"            s -\u003e sb.append(CliSyntax.PREFIX_TAG + s.tag + \" \")","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Hikoya"},"content":"        );","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"        return sb.toString();","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"Hikoya"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"MinHeinA"},"content":"     * Returns the part of command string for the given {@code EditStallDescriptor}\u0027s details.","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"Hikoya"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"MinHeinA"},"content":"    public static String getEditStallDescriptorDetails(SEditCommand.EditStallDescriptor descriptor) {","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"Hikoya"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-09-26"},{"lineNumber":41,"author":{"gitId":"Hikoya"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(CliSyntax.PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-09-26"},{"lineNumber":42,"author":{"gitId":"Hikoya"},"content":"        descriptor.getAddress().ifPresent(address -\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":43,"author":{"gitId":"Hikoya"},"content":"                sb.append(CliSyntax.PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"Hikoya"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Hikoya"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Hikoya"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"Hikoya"},"content":"                sb.append(CliSyntax.PREFIX_TAG);","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Hikoya"},"content":"            } else {","lastModifiedDate":"2022-09-26"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"                tags.forEach(s -\u003e sb.append(CliSyntax.PREFIX_TAG).append(s.tag).append(\" \"));","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"Hikoya"},"content":"            }","lastModifiedDate":"2022-09-26"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"Hikoya"},"content":"        return sb.toString();","lastModifiedDate":"2022-09-26"},{"lineNumber":53,"author":{"gitId":"Hikoya"},"content":"    }","lastModifiedDate":"2022-09-26"},{"lineNumber":54,"author":{"gitId":"Hikoya"},"content":"}","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"MinHeinA":10,"Hikoya":40,"jamietan2002":4}},{"path":"src/test/java/foodwhere/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.testutil;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.index.Index;","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.Model;","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":35,"author":{"gitId":"MinHeinA"},"content":"     * Returns the middle index of the stall in the {@code model}\u0027s stall list.","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"MinHeinA"},"content":"        return Index.fromOneBased(model.getFilteredStallList().size() / 2);","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"MinHeinA"},"content":"     * Returns the last index of the stall in the {@code model}\u0027s stall list.","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"MinHeinA"},"content":"        return Index.fromOneBased(model.getFilteredStallList().size());","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"MinHeinA"},"content":"     * Returns the stall in the {@code model}\u0027s stall list at {@code index}.","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"MinHeinA"},"content":"    public static Stall getStall(Model model, Index index) {","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"MinHeinA"},"content":"        return model.getFilteredStallList().get(index.getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"MinHeinA":8,"Hikoya":3,"-":43}},{"path":"src/test/java/foodwhere/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.testutil;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import foodwhere.commons.core.index.Index;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"MinHeinA"},"content":"    public static final Index INDEX_FIRST_STALL \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"MinHeinA"},"content":"    public static final Index INDEX_SECOND_STALL \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"MinHeinA"},"content":"    public static final Index INDEX_THIRD_STALL \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"jamietan2002"},"content":"    public static final Index INDEX_FIRST_REVIEW \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"jamietan2002"},"content":"    public static final Index INDEX_SECOND_REVIEW \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"MinHeinA":3,"Hikoya":2,"-":7,"jamietan2002":2}},{"path":"src/test/java/foodwhere/testutil/TypicalReviews.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"clarence-chew"},"content":"package foodwhere.testutil;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"clarence-chew"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"clarence-chew"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"LikHern"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_CONTENT_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"LikHern"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_CONTENT_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"LikHern"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_DATE_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"LikHern"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"clarence-chew"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"clarence-chew"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"clarence-chew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"clarence-chew"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.ReviewBuilder;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"clarence-chew"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"clarence-chew"},"content":" * A utility class containing a list of {@code Review} objects to be used in tests.","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"clarence-chew"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"clarence-chew"},"content":"public class TypicalReviews {","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"clarence-chew"},"content":"    public static final Review ALICE \u003d new ReviewBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"clarence-chew"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"clarence-chew"},"content":"            .withDate(\"01/01/2020\")","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"clarence-chew"},"content":"            .withContent(\"Great view and decor!\")","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"Hikoya"},"content":"            .withRating(3)","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Hikoya"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"clarence-chew"},"content":"    public static final Review BENSON \u003d new ReviewBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"clarence-chew"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"LikHern"},"content":"            .withDate(\"31/12/2021\")","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"clarence-chew"},"content":"            .withContent(\"The food is warm and nourishing.\")","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"Hikoya"},"content":"            .withRating(3)","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Hikoya"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"clarence-chew"},"content":"    public static final Review CARL \u003d new ReviewBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"clarence-chew"},"content":"            .withAddress(\"wall street\")","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"clarence-chew"},"content":"            .withDate(\"01/04/2020\").withRating(3).withContent(\"wall street\").build();","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"clarence-chew"},"content":"    public static final Review DANIEL \u003d new ReviewBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"clarence-chew"},"content":"            .withAddress(\"10th street\")","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"clarence-chew"},"content":"            .withDate(\"29/02/2020\").withRating(3).withContent(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"clarence-chew"},"content":"    public static final Review ELLE \u003d new ReviewBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"clarence-chew"},"content":"            .withAddress(\"michegan ave\")","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"clarence-chew"},"content":"            .withDate(\"29/09/2003\").withRating(3).withContent(\"michegan ave\").build();","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"clarence-chew"},"content":"    public static final Review FIONA \u003d new ReviewBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"clarence-chew"},"content":"            .withAddress(\"little tokyo\")","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"clarence-chew"},"content":"            .withDate(\"06/06/2007\").withRating(3).withContent(\"little tokyo\").build();","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"clarence-chew"},"content":"    public static final Review GEORGE \u003d new ReviewBuilder().withName(\"George Best\")","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"clarence-chew"},"content":"            .withAddress(\"4th street\")","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"clarence-chew"},"content":"            .withDate(\"20/07/2017\").withRating(3).withContent(\"4th street\").build();","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"clarence-chew"},"content":"    // Manually added","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"clarence-chew"},"content":"    public static final Review HOON \u003d new ReviewBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"clarence-chew"},"content":"            .withAddress(\"little india\")","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"Hikoya"},"content":"            .withDate(\"25/12/2020\").withRating(3).withContent(\"little india\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"clarence-chew"},"content":"    public static final Review IDA \u003d new ReviewBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"clarence-chew"},"content":"            .withAddress(\"chicago ave\")","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"clarence-chew"},"content":"            .withDate(\"09/09/2022\").withRating(3).withContent(\"chicago ave\").build();","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"LikHern"},"content":"    // Manually added - Review\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"clarence-chew"},"content":"    public static final Review AMY \u003d new ReviewBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"clarence-chew"},"content":"            .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"LikHern"},"content":"            .withDate(VALID_DATE_AMY).withContent(VALID_CONTENT_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"Hikoya"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"    public static final Review BOB \u003d new ReviewBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"            .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"LikHern"},"content":"            .withDate(VALID_DATE_BOB).withContent(VALID_CONTENT_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"Hikoya"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"clarence-chew"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"clarence-chew"},"content":"    private TypicalReviews() {} // prevents instantiation","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"clarence-chew"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"clarence-chew"},"content":"    public static List\u003cReview\u003e getTypicalReviews() {","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"clarence-chew"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"clarence-chew"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":80,"author":{"gitId":"clarence-chew"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"LikHern":8,"clarence-chew":62,"Hikoya":9,"jamietan2002":1}},{"path":"src/test/java/foodwhere/testutil/TypicalStalls.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.testutil;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"MinHeinA"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"MinHeinA"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"Hikoya"},"content":"import foodwhere.model.AddressBook;","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.review.Review;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"MinHeinA"},"content":"import foodwhere.model.stall.Stall;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"clarence-chew"},"content":"import foodwhere.model.stall.StallBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"MinHeinA"},"content":" * A utility class containing a list of {@code Stall} objects to be used in tests.","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"MinHeinA"},"content":"public class TypicalStalls {","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"MinHeinA"},"content":"    public static final Stall ALICE \u003d new StallBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"MinHeinA"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"Hikoya"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"MinHeinA"},"content":"    public static final Stall BENSON \u003d new StallBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"MinHeinA"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"Hikoya"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"MinHeinA"},"content":"    public static final Stall CARL \u003d new StallBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"MinHeinA"},"content":"            .withAddress(\"wall street\").build();","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"MinHeinA"},"content":"    public static final Stall DANIEL \u003d new StallBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"Hikoya"},"content":"            .withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"MinHeinA"},"content":"    public static final Stall ELLE \u003d new StallBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"MinHeinA"},"content":"            .withAddress(\"michegan ave\").build();","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"MinHeinA"},"content":"    public static final Stall FIONA \u003d new StallBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"MinHeinA"},"content":"            .withAddress(\"little tokyo\").build();","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"MinHeinA"},"content":"    public static final Stall GEORGE \u003d new StallBuilder().withName(\"George Best\")","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"MinHeinA"},"content":"            .withAddress(\"4th street\").build();","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":42,"author":{"gitId":"MinHeinA"},"content":"    public static final Stall HOON \u003d new StallBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"MinHeinA"},"content":"            .withAddress(\"little india\").build();","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"MinHeinA"},"content":"    public static final Stall IDA \u003d new StallBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"MinHeinA"},"content":"            .withAddress(\"chicago ave\").build();","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":47,"author":{"gitId":"MinHeinA"},"content":"    // Manually added - Stall\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"MinHeinA"},"content":"    public static final Stall AMY \u003d new StallBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"Hikoya"},"content":"            .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"MinHeinA"},"content":"    public static final Stall BOB \u003d new StallBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"Hikoya"},"content":"            .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":56,"author":{"gitId":"MinHeinA"},"content":"    private TypicalStalls() {} // prevents instantiation","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"MinHeinA"},"content":"     * Returns an {@code AddressBook} with all the typical stalls.","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":63,"author":{"gitId":"MinHeinA"},"content":"        for (Stall stall : getTypicalStalls()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"MinHeinA"},"content":"            ab.addStall(stall);","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":66,"author":{"gitId":"clarence-chew"},"content":"        for (Review review : TypicalReviews.getTypicalReviews()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"clarence-chew"},"content":"            ab.addReview(review);","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"clarence-chew"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":72,"author":{"gitId":"MinHeinA"},"content":"    public static List\u003cStall\u003e getTypicalStalls() {","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":75,"author":{"gitId":"jamietan2002"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"MinHeinA":33,"clarence-chew":5,"Hikoya":9,"-":27,"jamietan2002":2}},{"path":"src/test/java/foodwhere/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.ui;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Hikoya":1,"-":34}},{"path":"src/test/java/foodwhere/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hikoya"},"content":"package foodwhere.ui;","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"import static foodwhere.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"Hikoya"},"content":"import foodwhere.MainApp;","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Hikoya":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"\u003c?import foodwhere.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"Hikoya":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"Hikoya"},"content":"\u003cfx:root type\u003d\"foodwhere.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Hikoya":1,"-":5}}]
