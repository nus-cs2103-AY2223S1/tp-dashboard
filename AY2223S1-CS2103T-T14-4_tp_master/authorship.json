[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rjkoh"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-T14-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-T14-4/tp/actions)","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"SilasTSL"},"content":"### NUSConnect","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"SilasTSL"},"content":"* ConnectNUS is a desktop address book application used for NUS CS students to keep track of their own modules, and their friend\u0027s modules and contacts as well. This is to facilitate NUS CS students to keep track of their friends to work with so that they can easily find friends to collaborate with.","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"SilasTSL"},"content":"* It is optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"SilasTSL"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"rjkoh":1,"SilasTSL":5,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"ConnectNUS","lastModifiedDate":"2022-09-12"},{"lineNumber":12,"author":{"gitId":"SilasTSL"},"content":"### Silas Tay","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"rjkoh"},"content":"\u003cimg src\u003d\"images/silastsl.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"SilasTSL"},"content":"[[github](https://github.com/silastsl)]","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"SilasTSL"},"content":"[[portfolio](team/silastsl.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"SilasTSL"},"content":"* Role: Developer","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"SilasTSL"},"content":"* Responsibilities: To be decided","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"SilasTSL"},"content":"### Koh Rui Jie","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"rjkoh"},"content":"\u003cimg src\u003d\"images/rjkoh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"SilasTSL"},"content":"[[github](http://github.com/rjkoh)]","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"SilasTSL"},"content":"[[portfolio](team/rjkoh.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"SilasTSL"},"content":"* Role: Developer","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"SilasTSL"},"content":"* Responsibilities: To be decided","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"SilasTSL"},"content":"### Laura Lee","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"rjkoh"},"content":"\u003cimg src\u003d\"images/leehuiyulaura.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"SilasTSL"},"content":"[[github](http://github.com/leehuiyulaura)]","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"SilasTSL"},"content":"[[portfolio](team/leehuiyulaura.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"SilasTSL"},"content":"* Responsibilities: To be decided","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"SilasTSL"},"content":"### Shamus Tan","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"rjkoh"},"content":"\u003cimg src\u003d\"images/shamooose.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"SilasTSL"},"content":"[[github](http://github.com/shamooose)]","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"SilasTSL"},"content":"[[portfolio](team/shamooose.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"SilasTSL"},"content":"* Responsibilities: To be decided","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"SilasTSL"},"content":"### Linus Chui","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"rjkoh"},"content":"\u003cimg src\u003d\"images/linuschui.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"SilasTSL"},"content":"[[github](http://github.com/linuschui)]","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"SilasTSL"},"content":"[[portfolio](team/linuschui.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"SilasTSL"},"content":"* Responsibilities: To be decided","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"rjkoh":5,"SilasTSL":22,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"rjkoh"},"content":"NUS CS Students who wish to keep track of their friends to work with","lastModifiedDate":"2022-10-01"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"rjkoh"},"content":"**Value proposition**: ","lastModifiedDate":"2022-10-01"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"rjkoh"},"content":"We help NUS CS Students to have a collection of fellow NUS CS Students to find people to collaborate with for CS work and projects","lastModifiedDate":"2022-10-01"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"rjkoh"},"content":"|--------| ------------------------------------------ |--------------------------------------------------| ---------------------------------------------------------------------- |","lastModifiedDate":"2022-10-01"},{"lineNumber":272,"author":{"gitId":"-"},"content":"| `* * *` | new user                                   | see usage instructions                           | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"rjkoh"},"content":"| `* * *` | user                                       | save a new contact                               | contact them if i wish to collaborate with them                                                                       |","lastModifiedDate":"2022-10-01"},{"lineNumber":274,"author":{"gitId":"-"},"content":"| `* * *` | user                                       | delete a person                                  | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"rjkoh"},"content":"| `* * *` | user                                       | list out all my friend\u0027s contact/ info           | look through all my contacts at once |","lastModifiedDate":"2022-10-01"},{"lineNumber":276,"author":{"gitId":"rjkoh"},"content":"| `* * *` | user                                       | keep track of the modules I have taken           | plan my modules easily                |","lastModifiedDate":"2022-10-01"},{"lineNumber":277,"author":{"gitId":"rjkoh"},"content":"| `* * *` | user                                       | keep track of my friend\u0027s current modules        | so that i know which modules i can collaborate with them for                |","lastModifiedDate":"2022-10-01"},{"lineNumber":278,"author":{"gitId":"rjkoh"},"content":"| `* * *` | user                                       | keep track of my friend\u0027s previous modules       | consult my friends on those modules, if i am currently taking them                |","lastModifiedDate":"2022-10-01"},{"lineNumber":279,"author":{"gitId":"rjkoh"},"content":"| `* * *` | user                                       | see what modules my friends are planning to take | plan my modules together with them                |","lastModifiedDate":"2022-10-01"},{"lineNumber":280,"author":{"gitId":"rjkoh"},"content":"| `* *`  | user                                       | edit my friends\u0027 contact information             | change and update the contacts in my friend\u0027s list to make sure it is always up to date                |","lastModifiedDate":"2022-10-01"},{"lineNumber":281,"author":{"gitId":"rjkoh"},"content":"| `*`    | user                                       | view my own exam schedule                        | be clear on which exams are coming up                |","lastModifiedDate":"2022-10-01"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"rjkoh"},"content":"**System: ConnectNUS**","lastModifiedDate":"2022-10-01"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"rjkoh"},"content":"**Use case: UC1 - See usage instructions**","lastModifiedDate":"2022-10-01"},{"lineNumber":290,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":291,"author":{"gitId":"rjkoh"},"content":"**Actor: CS Students**","lastModifiedDate":"2022-10-01"},{"lineNumber":292,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":293,"author":{"gitId":"rjkoh"},"content":"**MSS**","lastModifiedDate":"2022-10-01"},{"lineNumber":294,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":295,"author":{"gitId":"rjkoh"},"content":"1. CS Student chooses to see usage instructions. ","lastModifiedDate":"2022-10-01"},{"lineNumber":296,"author":{"gitId":"rjkoh"},"content":"2. ConnectNUS displays the usage instructions. ","lastModifiedDate":"2022-10-01"},{"lineNumber":297,"author":{"gitId":"rjkoh"},"content":"3. Use case ends. ","lastModifiedDate":"2022-10-01"},{"lineNumber":298,"author":{"gitId":"rjkoh"},"content":"4. Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":299,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":300,"author":{"gitId":"rjkoh"},"content":"**System: ConnectNUS**","lastModifiedDate":"2022-10-01"},{"lineNumber":301,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":302,"author":{"gitId":"rjkoh"},"content":"**Use case: UC2 - Save a new contact**","lastModifiedDate":"2022-10-01"},{"lineNumber":303,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":304,"author":{"gitId":"rjkoh"},"content":"**Actor: CS Students**","lastModifiedDate":"2022-10-01"},{"lineNumber":305,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":306,"author":{"gitId":"rjkoh"},"content":"**MSS**","lastModifiedDate":"2022-10-01"},{"lineNumber":307,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":308,"author":{"gitId":"rjkoh"},"content":"1. CS Student chooses to save a new contact. ","lastModifiedDate":"2022-10-01"},{"lineNumber":309,"author":{"gitId":"rjkoh"},"content":"2. ConnectNUS requests for details of the contact to be saved. ","lastModifiedDate":"2022-10-01"},{"lineNumber":310,"author":{"gitId":"rjkoh"},"content":"3. CS Student enters the requested details. ","lastModifiedDate":"2022-10-01"},{"lineNumber":311,"author":{"gitId":"rjkoh"},"content":"4. ConnectNUS saves the contact and updates the data file. ","lastModifiedDate":"2022-10-01"},{"lineNumber":312,"author":{"gitId":"rjkoh"},"content":"5. Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":313,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":314,"author":{"gitId":"rjkoh"},"content":"**Extensions**","lastModifiedDate":"2022-10-01"},{"lineNumber":315,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":316,"author":{"gitId":"rjkoh"},"content":"* 3a. ConnectNUS detects an error in the entered data","lastModifiedDate":"2022-10-01"},{"lineNumber":317,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":318,"author":{"gitId":"rjkoh"},"content":"    * 3a1. ConnectNUS requests for the correct data.","lastModifiedDate":"2022-10-01"},{"lineNumber":319,"author":{"gitId":"rjkoh"},"content":"    * 3a2. CS Student enters new data.","lastModifiedDate":"2022-10-01"},{"lineNumber":320,"author":{"gitId":"rjkoh"},"content":"    * Steps 3a-3b are repeated until the data entered are correct.","lastModifiedDate":"2022-10-01"},{"lineNumber":321,"author":{"gitId":"rjkoh"},"content":"    Use case resumes at step 4.","lastModifiedDate":"2022-10-01"},{"lineNumber":322,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":323,"author":{"gitId":"rjkoh"},"content":"**System: ConnectNUS**","lastModifiedDate":"2022-10-01"},{"lineNumber":324,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":325,"author":{"gitId":"rjkoh"},"content":"**Use case: UC3 - Delete a person**","lastModifiedDate":"2022-10-01"},{"lineNumber":326,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":327,"author":{"gitId":"rjkoh"},"content":"**Actor: CS Students**","lastModifiedDate":"2022-10-01"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-10-01"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":331,"author":{"gitId":"rjkoh"},"content":"1. CS Student requests to delete a specific index of contact. ","lastModifiedDate":"2022-10-01"},{"lineNumber":332,"author":{"gitId":"rjkoh"},"content":"2. ConnectNUS deletes the contact and updates data file. ","lastModifiedDate":"2022-10-01"},{"lineNumber":333,"author":{"gitId":"rjkoh"},"content":"3. Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":335,"author":{"gitId":"rjkoh"},"content":"**Extensions**","lastModifiedDate":"2022-10-01"},{"lineNumber":336,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":337,"author":{"gitId":"rjkoh"},"content":"* 1a. ConnectNUS detects an error in the command format or invalid index.","lastModifiedDate":"2022-10-01"},{"lineNumber":338,"author":{"gitId":"rjkoh"},"content":"    * 1a1. ConnectNUS requests for the correct format or index.","lastModifiedDate":"2022-10-01"},{"lineNumber":339,"author":{"gitId":"rjkoh"},"content":"    * User enters a new command in the correct format or index.","lastModifiedDate":"2022-10-01"},{"lineNumber":340,"author":{"gitId":"rjkoh"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2022-10-01"},{"lineNumber":341,"author":{"gitId":"rjkoh"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-10-01"},{"lineNumber":342,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":343,"author":{"gitId":"rjkoh"},"content":"**System: ConnectNUS**","lastModifiedDate":"2022-10-01"},{"lineNumber":344,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":345,"author":{"gitId":"rjkoh"},"content":"**Use case: UC4 - List out all my friend’s contact/information**","lastModifiedDate":"2022-10-01"},{"lineNumber":346,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":347,"author":{"gitId":"rjkoh"},"content":"**Actor: CS Students**","lastModifiedDate":"2022-10-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"rjkoh"},"content":"1. CS Student requests to list all contact information. ","lastModifiedDate":"2022-10-01"},{"lineNumber":352,"author":{"gitId":"rjkoh"},"content":"2. ConnectNUS shows a list of contacts based on the order that the contacts are added. ","lastModifiedDate":"2022-10-01"},{"lineNumber":353,"author":{"gitId":"rjkoh"},"content":"3. Use case ends","lastModifiedDate":"2022-10-01"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"rjkoh"},"content":"**Extensions**","lastModifiedDate":"2022-10-01"},{"lineNumber":356,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":357,"author":{"gitId":"rjkoh"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-10-01"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"rjkoh"},"content":"**System: ConnectNUS**","lastModifiedDate":"2022-10-01"},{"lineNumber":361,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":362,"author":{"gitId":"rjkoh"},"content":"**Use case: UC5 - Keep track of modules taken by user**","lastModifiedDate":"2022-10-01"},{"lineNumber":363,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":364,"author":{"gitId":"rjkoh"},"content":"**Actor: CS Students**","lastModifiedDate":"2022-10-01"},{"lineNumber":365,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":366,"author":{"gitId":"rjkoh"},"content":"**MSS**","lastModifiedDate":"2022-10-01"},{"lineNumber":367,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":368,"author":{"gitId":"rjkoh"},"content":"1. CS Student requests to list all modules. ","lastModifiedDate":"2022-10-01"},{"lineNumber":369,"author":{"gitId":"rjkoh"},"content":"2. ConnectNUS shows a list of modules the CS Student has taken. ","lastModifiedDate":"2022-10-01"},{"lineNumber":370,"author":{"gitId":"rjkoh"},"content":"3. Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":371,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":372,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"rjkoh"},"content":"  Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":376,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":377,"author":{"gitId":"rjkoh"},"content":"**System: ConnectNUS**","lastModifiedDate":"2022-10-01"},{"lineNumber":378,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":379,"author":{"gitId":"rjkoh"},"content":"**Use case: UC6 - Keep track of friend’s current modules**","lastModifiedDate":"2022-10-01"},{"lineNumber":380,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":381,"author":{"gitId":"rjkoh"},"content":"**Actor: CS Students**","lastModifiedDate":"2022-10-01"},{"lineNumber":382,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":383,"author":{"gitId":"rjkoh"},"content":"**MSS**","lastModifiedDate":"2022-10-01"},{"lineNumber":384,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":385,"author":{"gitId":"rjkoh"},"content":"1. CS Student requests to list all modules of a specific index of contact. ","lastModifiedDate":"2022-10-01"},{"lineNumber":386,"author":{"gitId":"rjkoh"},"content":"2. ConnectNUS shows a list of modules the specified friend has taken. ","lastModifiedDate":"2022-10-01"},{"lineNumber":387,"author":{"gitId":"rjkoh"},"content":"3. Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":388,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":389,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":390,"author":{"gitId":"rjkoh"},"content":"**Extensions**","lastModifiedDate":"2022-10-01"},{"lineNumber":391,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":392,"author":{"gitId":"rjkoh"},"content":"* 1a. ConnectNUS detects an error in the command format.","lastModifiedDate":"2022-10-01"},{"lineNumber":393,"author":{"gitId":"rjkoh"},"content":"    * 1a1. ConnectNUS requests for the correct format.","lastModifiedDate":"2022-10-01"},{"lineNumber":394,"author":{"gitId":"rjkoh"},"content":"    * User enters a new command in the correct format.","lastModifiedDate":"2022-10-01"},{"lineNumber":395,"author":{"gitId":"rjkoh"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2022-10-01"},{"lineNumber":396,"author":{"gitId":"rjkoh"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-10-01"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"rjkoh"},"content":"* 2a. The list is empty. ","lastModifiedDate":"2022-10-01"},{"lineNumber":399,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"rjkoh"},"content":"**System: ConnectNUS**","lastModifiedDate":"2022-10-01"},{"lineNumber":402,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":403,"author":{"gitId":"rjkoh"},"content":"**Use case: UC7 - Keep track of friend’s previous modules**","lastModifiedDate":"2022-10-01"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"rjkoh"},"content":"**Actor: CS Students**","lastModifiedDate":"2022-10-01"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"rjkoh"},"content":"**MSS**","lastModifiedDate":"2022-10-01"},{"lineNumber":408,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":409,"author":{"gitId":"rjkoh"},"content":"1. User requests to list all previous modules of a specific index of contact ","lastModifiedDate":"2022-10-01"},{"lineNumber":410,"author":{"gitId":"rjkoh"},"content":"2. ConnectNUS shows a list of modules the specified friend has taken previously. ","lastModifiedDate":"2022-10-01"},{"lineNumber":411,"author":{"gitId":"rjkoh"},"content":"3. Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":412,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":413,"author":{"gitId":"rjkoh"},"content":"**Extensions**","lastModifiedDate":"2022-10-01"},{"lineNumber":414,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":415,"author":{"gitId":"rjkoh"},"content":"* 1a. ConnectNUS detects an error in the command format.","lastModifiedDate":"2022-10-01"},{"lineNumber":416,"author":{"gitId":"rjkoh"},"content":"    * 1a1. ConnectNUS requests for the correct format.","lastModifiedDate":"2022-10-01"},{"lineNumber":417,"author":{"gitId":"rjkoh"},"content":"    * User enters a new command in the correct format.","lastModifiedDate":"2022-10-01"},{"lineNumber":418,"author":{"gitId":"rjkoh"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2022-10-01"},{"lineNumber":419,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"rjkoh"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-10-01"},{"lineNumber":422,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":424,"author":{"gitId":"rjkoh"},"content":"**System: ConnectNUS**","lastModifiedDate":"2022-10-01"},{"lineNumber":425,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":426,"author":{"gitId":"rjkoh"},"content":"**Use case: UC8 - Keep track of friend’s module plan**","lastModifiedDate":"2022-10-01"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":428,"author":{"gitId":"rjkoh"},"content":"**Actor: CS Students**","lastModifiedDate":"2022-10-01"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":430,"author":{"gitId":"rjkoh"},"content":"**MSS**","lastModifiedDate":"2022-10-01"},{"lineNumber":431,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":432,"author":{"gitId":"rjkoh"},"content":"1. CS Student requests to list a friend’s module plan of a specific index of contact ","lastModifiedDate":"2022-10-01"},{"lineNumber":433,"author":{"gitId":"rjkoh"},"content":"2. ConnectNUS shows a list of modules the specified friend has taken previously. ","lastModifiedDate":"2022-10-01"},{"lineNumber":434,"author":{"gitId":"rjkoh"},"content":"3. Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":435,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":436,"author":{"gitId":"rjkoh"},"content":"**Extensions**","lastModifiedDate":"2022-10-01"},{"lineNumber":437,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":438,"author":{"gitId":"rjkoh"},"content":"* 1a. ConnectNUS detects an error in the command format.","lastModifiedDate":"2022-10-01"},{"lineNumber":439,"author":{"gitId":"rjkoh"},"content":"    * 1a1. ConnectNUS requests for the correct format.","lastModifiedDate":"2022-10-01"},{"lineNumber":440,"author":{"gitId":"rjkoh"},"content":"    * User enters a new command in the correct format.","lastModifiedDate":"2022-10-01"},{"lineNumber":441,"author":{"gitId":"rjkoh"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2022-10-01"},{"lineNumber":442,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-10-01"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":444,"author":{"gitId":"rjkoh"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-10-01"},{"lineNumber":445,"author":{"gitId":"rjkoh"},"content":"  Use case ends.","lastModifiedDate":"2022-10-01"},{"lineNumber":446,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":447,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"rjkoh"},"content":"4. Should be a result of evolving AB3 code base ","lastModifiedDate":"2022-10-01"},{"lineNumber":455,"author":{"gitId":"rjkoh"},"content":"5. Should be for a single user ","lastModifiedDate":"2022-10-01"},{"lineNumber":456,"author":{"gitId":"rjkoh"},"content":"6. Should not use any Database Management System ","lastModifiedDate":"2022-10-01"},{"lineNumber":457,"author":{"gitId":"rjkoh"},"content":"7. Should be platform independent and work on Windows, Linus and OS-X. ","lastModifiedDate":"2022-10-01"},{"lineNumber":458,"author":{"gitId":"rjkoh"},"content":"8. Should work without an installer and without approved third-party frameworks/libraries/services. ","lastModifiedDate":"2022-10-01"},{"lineNumber":459,"author":{"gitId":"rjkoh"},"content":"9. Should be able to package into a single JAR file. ","lastModifiedDate":"2022-10-01"},{"lineNumber":460,"author":{"gitId":"rjkoh"},"content":"10. JAR file size should not exceed 100MB and Documents should not exceed 15 MB per file.","lastModifiedDate":"2022-10-01"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"rjkoh"},"content":"* **PlantUML**: A tool for specifying various diagrams in a textual form","lastModifiedDate":"2022-10-01"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"rjkoh":153,"-":368}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"rjkoh"},"content":"# ConnectNUS User Guide","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"rjkoh"},"content":"ConnectNUS is a **desktop app for managing contacts, optimised for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, ConnectNUS can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"rjkoh"},"content":"## Table of Contents","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"rjkoh"},"content":"- [Features](#features)","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"rjkoh"},"content":"  - [Saving the data](#saving-the-data)","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"rjkoh"},"content":"  - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"rjkoh"},"content":"  - [Adding current modules](#adding-current-modules)","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"rjkoh"},"content":"  - [Adding previous modules](#adding-previous-modules)","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"rjkoh"},"content":"  - [Adding future modules](#adding-future-modules)","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"rjkoh"},"content":"  - [Listing modules](#listing-modules)","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"rjkoh"},"content":"  - [Deleting modules](#deleting-modules)","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"rjkoh"},"content":"  - [Deleting plans](#deleting-plans)","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"shamooose"},"content":"  - [Adding user](#adding-user)","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"shamooose"},"content":"  - [Deleting user](#deleting-user)","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"rjkoh"},"content":"  - [Adding contacts](#adding-contacts)","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"rjkoh"},"content":"  - [Listing contacts](#listing-contacts)","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"rjkoh"},"content":"  - [Deleting contacts](#deleting-contacts)","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"rjkoh"},"content":"  - [Exiting the program](#exiting-the-program--exit)","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"rjkoh"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"rjkoh"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"rjkoh"},"content":"## Features","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"rjkoh"},"content":"** Notes about the command format:**","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"rjkoh"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user. \\","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"rjkoh"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"rjkoh"},"content":"* Items in square brackets are optional. \\","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"rjkoh"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"rjkoh"},"content":"* Items with `…`​ after them can be used multiple times including zero times. \\","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"rjkoh"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"rjkoh"},"content":"* Parameters can be in any order. \\","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"rjkoh"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"rjkoh"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken. \\","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"rjkoh"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"rjkoh"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored. \\","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"rjkoh"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"rjkoh"},"content":"### Saving the data","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"rjkoh"},"content":"ConnectNUS data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"rjkoh"},"content":"### Editing the data file","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"rjkoh"},"content":"ConnectNUS data is saved as a JSON file `[JAR file location]/data/connectnus.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"rjkoh"},"content":"**Caution:** If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"rjkoh"},"content":"### Adding current modules","lastModifiedDate":"2022-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"rjkoh"},"content":"Add a specified module that you are currently taking to your work plan.","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"rjkoh"},"content":"Format: `add curr mod [module code]`","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"rjkoh"},"content":"* Add a module with module code [module code] to the list of mods you are taking this semester.","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"rjkoh"},"content":"* The module code refers to the module code of the module the user is planning to take (E.g. CS2103T)","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"rjkoh"},"content":"* The module code must be a registered module in NUS.","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"rjkoh"},"content":"### Adding previous modules","lastModifiedDate":"2022-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"rjkoh"},"content":"Add a module to the list of modules that you have taken previously in earlier semesters.","lastModifiedDate":"2022-09-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":79,"author":{"gitId":"rjkoh"},"content":"Format: `add prev mod [module code]`","lastModifiedDate":"2022-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"rjkoh"},"content":"* Add a module with module code [module code] to the list of mods you have taken in previous semesters.","lastModifiedDate":"2022-09-28"},{"lineNumber":84,"author":{"gitId":"rjkoh"},"content":"* The module code refers to the module code of the module the user has taken (E.g. CS2103T)","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"rjkoh"},"content":"* The module code must be a registered module in NUS or was registered in the semester the user was enrolled in the module.","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"rjkoh"},"content":"### Adding future modules","lastModifiedDate":"2022-09-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"rjkoh"},"content":"Add a module to the list of modules you are thinking of taking next semester.","lastModifiedDate":"2022-09-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"rjkoh"},"content":"Format: `add plan mod [module code]`","lastModifiedDate":"2022-09-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"rjkoh"},"content":"* Adds module with module code `[module code]` to list of modules you are planning to take.","lastModifiedDate":"2022-09-28"},{"lineNumber":97,"author":{"gitId":"rjkoh"},"content":"* The module code refers to the module code of the module the user is planning to take (E.g. CS2103T)","lastModifiedDate":"2022-09-28"},{"lineNumber":98,"author":{"gitId":"rjkoh"},"content":"* The module code must be a registered module in NUS.","lastModifiedDate":"2022-09-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"rjkoh"},"content":"* `add planning module CS2103T `adds module CS2103T to list of modules you are planning to take.","lastModifiedDate":"2022-09-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"rjkoh"},"content":"### Listing modules","lastModifiedDate":"2022-09-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"rjkoh"},"content":"Shows the list of modules your friends or yourself have taken, are taking and are planning on taking","lastModifiedDate":"2022-09-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"rjkoh"},"content":"Format: `list all mod [INDEX]/list all mod/list prev mod [INDEX]/list prev mod/list curr mod [INDEX]/list curr mod/list plan mod [INDEX]/list plan mod`","lastModifiedDate":"2022-09-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"rjkoh"},"content":"* Can list all the modules you/your friend have taken or will ever take","lastModifiedDate":"2022-09-28"},{"lineNumber":116,"author":{"gitId":"rjkoh"},"content":"* The index refers to the index number shown in the displayed friend list.","lastModifiedDate":"2022-09-28"},{"lineNumber":117,"author":{"gitId":"rjkoh"},"content":"* If no index is provided after the command then it will list your modules","lastModifiedDate":"2022-09-28"},{"lineNumber":118,"author":{"gitId":"rjkoh"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-09-28"},{"lineNumber":119,"author":{"gitId":"rjkoh"},"content":"* `list all mod` lists all the modules the user/their friend has previously taken, are currently taking and are planning to take","lastModifiedDate":"2022-09-28"},{"lineNumber":120,"author":{"gitId":"rjkoh"},"content":"* `list prev mod` lists all the modules the user/their friend has previously taken","lastModifiedDate":"2022-09-28"},{"lineNumber":121,"author":{"gitId":"rjkoh"},"content":"* `list curr mod` lists all the modules the user/their friend are currently taking","lastModifiedDate":"2022-09-28"},{"lineNumber":122,"author":{"gitId":"rjkoh"},"content":"* `list plan mod` lists all the modules the user/their friend are planning to take","lastModifiedDate":"2022-09-28"},{"lineNumber":123,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":124,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":125,"author":{"gitId":"rjkoh"},"content":"### Deleting modules","lastModifiedDate":"2022-09-28"},{"lineNumber":126,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":127,"author":{"gitId":"rjkoh"},"content":"Deletes a specified module user is taking currently or has taken previously.","lastModifiedDate":"2022-09-28"},{"lineNumber":128,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":129,"author":{"gitId":"rjkoh"},"content":"Format: `delete mod [INDEX]/delete prev mod [INDEX]/delete curr mod [INDEX]`","lastModifiedDate":"2022-09-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":133,"author":{"gitId":"rjkoh"},"content":"* Deletes the module at the specified `INDEX`.","lastModifiedDate":"2022-09-28"},{"lineNumber":134,"author":{"gitId":"rjkoh"},"content":"* The index refers to the index number shown in the displayed module list.","lastModifiedDate":"2022-09-28"},{"lineNumber":135,"author":{"gitId":"rjkoh"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-09-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"rjkoh"},"content":"* `list all mod `followed by  `delete mod 1` deletes the first module in the list of all modules the user has taken and is currently taking.","lastModifiedDate":"2022-09-28"},{"lineNumber":142,"author":{"gitId":"rjkoh"},"content":"* `list prev mod `followed by  `delete prev mod 2` deletes the 2nd module in the list of modules have previously taken.","lastModifiedDate":"2022-09-28"},{"lineNumber":143,"author":{"gitId":"rjkoh"},"content":"* `list curr mod followed by delete curr mod 3 `deletes the 3rd module in the list of modules the user is currently taking.","lastModifiedDate":"2022-09-28"},{"lineNumber":144,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":145,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":146,"author":{"gitId":"rjkoh"},"content":"### Deleting plans","lastModifiedDate":"2022-09-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"rjkoh"},"content":"Deletes a specified plan of modules the user is intending to take.","lastModifiedDate":"2022-09-28"},{"lineNumber":149,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":150,"author":{"gitId":"rjkoh"},"content":"Format: `delete plan INDEX`","lastModifiedDate":"2022-09-28"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":152,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":153,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":154,"author":{"gitId":"rjkoh"},"content":"* Deletes the plan at the specified `INDEX`.","lastModifiedDate":"2022-09-28"},{"lineNumber":155,"author":{"gitId":"rjkoh"},"content":"* The index refers to the index number shown in the displayed plan list.","lastModifiedDate":"2022-09-28"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"rjkoh"},"content":"* `list mod plan `followed by  `delete plan 1` deletes the first plan in the list of all plans the user has added.","lastModifiedDate":"2022-09-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":166,"author":{"gitId":"shamooose"},"content":"### Adding user","lastModifiedDate":"2022-10-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":168,"author":{"gitId":"shamooose"},"content":"Add your own user profile into the contact list.","lastModifiedDate":"2022-10-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":170,"author":{"gitId":"shamooose"},"content":"Format: `user n/[contact name] p/[contact phone number] e/[contact email] a/[contact address] curr/[current module] prev/[previous module] plan/[future module]`","lastModifiedDate":"2022-10-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":174,"author":{"gitId":"shamooose"},"content":"* Adds your own user profile with specified details into your contact list.","lastModifiedDate":"2022-10-06"},{"lineNumber":175,"author":{"gitId":"shamooose"},"content":"* You are able to specify the modules you are taking currently, have taken in the past, and are planning to take in the future.","lastModifiedDate":"2022-10-06"},{"lineNumber":176,"author":{"gitId":"shamooose"},"content":"* Each module list should consist of module codes separated by commas. (E.g. `CS2103T, CS2101`)","lastModifiedDate":"2022-10-06"},{"lineNumber":177,"author":{"gitId":"shamooose"},"content":"* Each of these module codes must be registered modules in NUS.","lastModifiedDate":"2022-10-06"},{"lineNumber":178,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":179,"author":{"gitId":"shamooose"},"content":"Examples:","lastModifiedDate":"2022-10-06"},{"lineNumber":180,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":181,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":182,"author":{"gitId":"shamooose"},"content":"* `user n/Silas p/98765432 e/silastay@gmail.com a/Kent Ridge Drive curr/CS2100 prev/CS1101S plan/CS2109`adds your own user profile to your contact list with all the details specified.","lastModifiedDate":"2022-10-06"},{"lineNumber":183,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":184,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":185,"author":{"gitId":"shamooose"},"content":"### Deleting user","lastModifiedDate":"2022-10-06"},{"lineNumber":186,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":187,"author":{"gitId":"shamooose"},"content":"Deletes the current user profile from the contacts list","lastModifiedDate":"2022-10-06"},{"lineNumber":188,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":189,"author":{"gitId":"shamooose"},"content":"Format: `delete user`","lastModifiedDate":"2022-10-06"},{"lineNumber":190,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":193,"author":{"gitId":"shamooose"},"content":"* Deletes the current user profile stored in the contact list.","lastModifiedDate":"2022-10-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":196,"author":{"gitId":"rjkoh"},"content":"### Adding contacts","lastModifiedDate":"2022-09-28"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"rjkoh"},"content":"Add a contact to your contact list.","lastModifiedDate":"2022-09-28"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"SilasTSL"},"content":"Format: `add n/[contact name] p/[contact phone number] e/[contact email] a/[contact address] t/[contact tag] curr/[current module] prev/[previous module] plan/[future module]`","lastModifiedDate":"2022-10-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":204,"author":{"gitId":"rjkoh"},"content":"* Adds contact with specified details into your contact list.","lastModifiedDate":"2022-09-28"},{"lineNumber":205,"author":{"gitId":"rjkoh"},"content":"* You are able to specify the modules the contact is taking currently, taken in the past, and is planning to take in the future.","lastModifiedDate":"2022-09-28"},{"lineNumber":206,"author":{"gitId":"rjkoh"},"content":"* Each module list should consist of module codes separated by commas. (E.g. `CS2103T, CS2101`)","lastModifiedDate":"2022-09-28"},{"lineNumber":207,"author":{"gitId":"rjkoh"},"content":"* Each of these module codes must be registered modules in NUS.","lastModifiedDate":"2022-09-28"},{"lineNumber":208,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":209,"author":{"gitId":"rjkoh"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":210,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":211,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":212,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":213,"author":{"gitId":"SilasTSL"},"content":"* `add n/Ruijie p/91234567 e/kohrj@gmail.com a/Kent Ridge Avenue t/Classmate curr/CS2100 prev/CS1101S plan/CS2109`adds module contact Ruijie to your contact list with all the details specified.","lastModifiedDate":"2022-10-04"},{"lineNumber":214,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":215,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":216,"author":{"gitId":"rjkoh"},"content":"### Listing contacts","lastModifiedDate":"2022-09-28"},{"lineNumber":217,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":218,"author":{"gitId":"rjkoh"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2022-09-28"},{"lineNumber":219,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":220,"author":{"gitId":"rjkoh"},"content":"Format: `list`","lastModifiedDate":"2022-09-28"},{"lineNumber":221,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":222,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":224,"author":{"gitId":"rjkoh"},"content":"* The list of contacts is numbered based on the order that the contacts are added","lastModifiedDate":"2022-09-28"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"rjkoh"},"content":"### Deleting contacts","lastModifiedDate":"2022-09-28"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"rjkoh"},"content":"Deletes a specified contact from the user’s contacts list","lastModifiedDate":"2022-09-28"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"rjkoh"},"content":"Format: `delete contact INDEX`","lastModifiedDate":"2022-09-28"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":235,"author":{"gitId":"rjkoh"},"content":"* Deletes the contact at the specified `INDEX`.","lastModifiedDate":"2022-09-28"},{"lineNumber":236,"author":{"gitId":"rjkoh"},"content":"* The index refers to the index number shown in the displayed module list.","lastModifiedDate":"2022-09-28"},{"lineNumber":237,"author":{"gitId":"rjkoh"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-09-28"},{"lineNumber":238,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":239,"author":{"gitId":"rjkoh"},"content":"Examples:","lastModifiedDate":"2022-09-28"},{"lineNumber":240,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":241,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":242,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":243,"author":{"gitId":"rjkoh"},"content":"* `list `followed by  `delete contact 1` deletes the first contact in the list of all contacts the user has added.","lastModifiedDate":"2022-09-28"},{"lineNumber":244,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":245,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":246,"author":{"gitId":"rjkoh"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2022-09-28"},{"lineNumber":247,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":248,"author":{"gitId":"rjkoh"},"content":"Exits the program.","lastModifiedDate":"2022-09-28"},{"lineNumber":249,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":250,"author":{"gitId":"rjkoh"},"content":"Format: `exit`","lastModifiedDate":"2022-09-28"},{"lineNumber":251,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":252,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":253,"author":{"gitId":"rjkoh"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":259,"author":{"gitId":"rjkoh"},"content":"\u003ctable\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":260,"author":{"gitId":"rjkoh"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":261,"author":{"gitId":"rjkoh"},"content":"   \u003ctd\u003e\u003cstrong\u003eAction\u003c/strong\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":262,"author":{"gitId":"rjkoh"},"content":"   \u003c/td\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":263,"author":{"gitId":"rjkoh"},"content":"   \u003ctd\u003e\u003cstrong\u003eFormat, Examples\u003c/strong\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":264,"author":{"gitId":"rjkoh"},"content":"   \u003c/td\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":265,"author":{"gitId":"rjkoh"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":266,"author":{"gitId":"rjkoh"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":267,"author":{"gitId":"rjkoh"},"content":"   \u003ctd\u003e\u003cstrong\u003eAdd Current Module\u003c/strong\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":268,"author":{"gitId":"rjkoh"},"content":"   \u003c/td\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":269,"author":{"gitId":"rjkoh"},"content":"   \u003ctd\u003e\u003ccode\u003eadd curr mod [module code]\u003c/code\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":270,"author":{"gitId":"rjkoh"},"content":"\u003cp\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":271,"author":{"gitId":"rjkoh"},"content":"\u003ccode\u003eEg. add curr mod CS2103t\u003c/code\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":272,"author":{"gitId":"rjkoh"},"content":"   \u003c/td\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":273,"author":{"gitId":"rjkoh"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":274,"author":{"gitId":"rjkoh"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":275,"author":{"gitId":"rjkoh"},"content":"   \u003ctd\u003e\u003cstrong\u003eAdd Previous Module\u003c/strong\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":276,"author":{"gitId":"rjkoh"},"content":"   \u003c/td\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":277,"author":{"gitId":"rjkoh"},"content":"   \u003ctd\u003e\u003ccode\u003eadd prev mod [module code]\u003c/code\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":278,"author":{"gitId":"rjkoh"},"content":"\u003cp\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":279,"author":{"gitId":"rjkoh"},"content":"\u003ccode\u003eEg. add prev mod CS2103t\u003c/code\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":280,"author":{"gitId":"rjkoh"},"content":"   \u003c/td\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":281,"author":{"gitId":"rjkoh"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":282,"author":{"gitId":"rjkoh"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":283,"author":{"gitId":"rjkoh"},"content":"   \u003ctd\u003e\u003cstrong\u003eAdding Future Module\u003c/strong\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":284,"author":{"gitId":"rjkoh"},"content":"   \u003c/td\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":285,"author":{"gitId":"rjkoh"},"content":"   \u003ctd\u003e\u003ccode\u003eadd plan mod [module code]\u003c/code\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":286,"author":{"gitId":"rjkoh"},"content":"\u003cp\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":287,"author":{"gitId":"rjkoh"},"content":"\u003ccode\u003eEg. add plan mod CS2103t\u003c/code\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":288,"author":{"gitId":"rjkoh"},"content":"   \u003c/td\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":289,"author":{"gitId":"rjkoh"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":290,"author":{"gitId":"rjkoh"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":291,"author":{"gitId":"rjkoh"},"content":"   \u003ctd\u003e\u003cstrong\u003eList Modules\u003c/strong\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":292,"author":{"gitId":"rjkoh"},"content":"   \u003c/td\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":293,"author":{"gitId":"rjkoh"},"content":"   \u003ctd\u003e\u003ccode\u003elist all mod [INDEX]/list all mod/list prev mod [INDEX]/list prev mod/list curr mod [INDEX]/list curr mod/list plan mod [INDEX]/list plan mod\u003c/code\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":294,"author":{"gitId":"rjkoh"},"content":"\u003cp\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":295,"author":{"gitId":"rjkoh"},"content":"\u003ccode\u003eEg. list all mod 1\u003c/code\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":296,"author":{"gitId":"rjkoh"},"content":"   \u003c/td\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":297,"author":{"gitId":"rjkoh"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":298,"author":{"gitId":"rjkoh"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":299,"author":{"gitId":"rjkoh"},"content":"   \u003ctd\u003e\u003cstrong\u003eDelete Module\u003c/strong\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":300,"author":{"gitId":"rjkoh"},"content":"   \u003c/td\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":301,"author":{"gitId":"rjkoh"},"content":"   \u003ctd\u003e\u003ccode\u003edelete mod [INDEX]/delete prev mod [INDEX]/delete curr mod [INDEX]\u003c/code\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":302,"author":{"gitId":"rjkoh"},"content":"\u003cp\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":303,"author":{"gitId":"rjkoh"},"content":"\u003ccode\u003eEg. delete mod 1\u003c/code\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":304,"author":{"gitId":"rjkoh"},"content":"   \u003c/td\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":305,"author":{"gitId":"rjkoh"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":306,"author":{"gitId":"rjkoh"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":307,"author":{"gitId":"rjkoh"},"content":"   \u003ctd\u003e\u003cstrong\u003eDelete Plan\u003c/strong\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":308,"author":{"gitId":"rjkoh"},"content":"   \u003c/td\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":309,"author":{"gitId":"rjkoh"},"content":"   \u003ctd\u003e\u003ccode\u003edelete plan INDEX\u003c/code\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":310,"author":{"gitId":"rjkoh"},"content":"\u003cp\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":311,"author":{"gitId":"rjkoh"},"content":"\u003ccode\u003eEg. delete plan 2\u003c/code\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":312,"author":{"gitId":"rjkoh"},"content":"   \u003c/td\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":313,"author":{"gitId":"rjkoh"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":314,"author":{"gitId":"shamooose"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":315,"author":{"gitId":"shamooose"},"content":"   \u003ctd\u003e\u003cstrong\u003eAdding User\u003c/strong\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":316,"author":{"gitId":"shamooose"},"content":"   \u003c/td\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":317,"author":{"gitId":"shamooose"},"content":"   \u003ctd\u003e\u003ccode\u003euser n/[contact name] p/[contact phone number] e/[contact email] a/[contact address] curr/[current module] prev/[previous module] plan/[future module]\u003c/code\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":318,"author":{"gitId":"shamooose"},"content":"\u003cp\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":319,"author":{"gitId":"shamooose"},"content":"\u003ccode\u003eEg. user n/Silas p/98765432 e/silastay@gmail.com a/Kent Ridge Drive curr/CS2100 prev/CS1101S plan/CS2109\u003c/code\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":320,"author":{"gitId":"shamooose"},"content":"   \u003c/td\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":321,"author":{"gitId":"shamooose"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":322,"author":{"gitId":"shamooose"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":323,"author":{"gitId":"shamooose"},"content":"   \u003ctd\u003e\u003cstrong\u003eDelete User\u003c/strong\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":324,"author":{"gitId":"shamooose"},"content":"   \u003c/td\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":325,"author":{"gitId":"shamooose"},"content":"   \u003ctd\u003e\u003ccode\u003edelete user \u003c/code\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":326,"author":{"gitId":"shamooose"},"content":"   \u003c/td\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":327,"author":{"gitId":"shamooose"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":328,"author":{"gitId":"rjkoh"},"content":"\u003ctr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":329,"author":{"gitId":"rjkoh"},"content":"   \u003ctd\u003e\u003cstrong\u003eAdding Contact\u003c/strong\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":330,"author":{"gitId":"rjkoh"},"content":"   \u003c/td\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":331,"author":{"gitId":"SilasTSL"},"content":"   \u003ctd\u003e\u003ccode\u003eadd n/[contact name] p/[contact phone number] e/[contact email] a/[contact address] t/[contact tag] curr/[current module] prev/[previous module] plan/[future module]\u003c/code\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":332,"author":{"gitId":"rjkoh"},"content":"\u003cp\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":333,"author":{"gitId":"SilasTSL"},"content":"\u003ccode\u003eEg. add n/Ruijie p/91234567 e/kohrj@gmail.com a/Kent Ridge Avenue t/Classmate curr/CS2100 prev/CS1101S plan/CS2109\u003c/code\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":334,"author":{"gitId":"rjkoh"},"content":"   \u003c/td\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":335,"author":{"gitId":"rjkoh"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":336,"author":{"gitId":"rjkoh"},"content":"  \u003ctr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":337,"author":{"gitId":"rjkoh"},"content":"   \u003ctd\u003e\u003cstrong\u003eDelete Contact\u003c/strong\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":338,"author":{"gitId":"rjkoh"},"content":"   \u003c/td\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":339,"author":{"gitId":"rjkoh"},"content":"   \u003ctd\u003e\u003ccode\u003edelete contact INDEX \u003c/code\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":340,"author":{"gitId":"rjkoh"},"content":"\u003cp\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":341,"author":{"gitId":"rjkoh"},"content":"\u003ccode\u003eEg. delete contact 2\u003c/code\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":342,"author":{"gitId":"rjkoh"},"content":"   \u003c/td\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":343,"author":{"gitId":"rjkoh"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":344,"author":{"gitId":"rjkoh"},"content":"\u003c/table\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":345,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":346,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"rjkoh":211,"shamooose":37,"SilasTSL":4,"-":94}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"rjkoh"},"content":"title: ConnectNUS","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"rjkoh"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-T14-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-T14-4/tp/actions)","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"rjkoh"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-T14-4/tp/branch/master/graph/badge.svg?token\u003dR6EB4QPCU9)](https://codecov.io/gh/AY2223S1-CS2103T-T14-4/tp)","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"rjkoh"},"content":"**ConnectNUS is a desktop address book application used for NUS CS students to keep track of their own modules, and their friend\u0027s modules and contacts as well. This is to facilitate NUS CS students to keep track of their friends to work with so that they can easily find friends to collaborate with.**","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"rjkoh"},"content":"* It is optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"rjkoh"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"rjkoh":6,"-":15}},{"path":"docs/team/leehuiyulaura.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"leehuiyulaura"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"leehuiyulaura"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"leehuiyulaura"},"content":"title: Laura Lee\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"leehuiyulaura"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"leehuiyulaura"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"leehuiyulaura"},"content":"# Project: ConnectNUS","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"leehuiyulaura"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"leehuiyulaura"},"content":"## Overview","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"leehuiyulaura"},"content":"ConnectNUS is a desktop address book application used for NUS CS students to keep track of their own modules,","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"leehuiyulaura"},"content":"and their friend\u0027s modules and contacts as well.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"leehuiyulaura"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"leehuiyulaura"},"content":"* Find friends to collaborate with for team projects.","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"leehuiyulaura"},"content":"* Bid for modules and tutorials with your friends.","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"leehuiyulaura"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"leehuiyulaura"},"content":"## Contributions","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"leehuiyulaura"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"leehuiyulaura"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"leehuiyulaura"},"content":"* **New Feature**: To Be Added","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"leehuiyulaura"},"content":"  * What it does: To Be Added","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"leehuiyulaura"},"content":"  * Justification: To Be Added","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"leehuiyulaura"},"content":"  * Highlights: To Be Added","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"leehuiyulaura"},"content":"  * Credits: To Be Added","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"leehuiyulaura"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"leehuiyulaura"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dleehuiyulaura\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"leehuiyulaura"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"leehuiyulaura"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"leehuiyulaura"},"content":"  * To Be Added","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"leehuiyulaura"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"leehuiyulaura"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"leehuiyulaura"},"content":"  * To Be Added","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"leehuiyulaura"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"leehuiyulaura"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"leehuiyulaura"},"content":"  * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"leehuiyulaura"},"content":"    * To Be Added","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"leehuiyulaura"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"leehuiyulaura"},"content":"    * To Be Added","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"leehuiyulaura"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"leehuiyulaura"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"leehuiyulaura"},"content":"  * To Be Added","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"leehuiyulaura"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"leehuiyulaura"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"leehuiyulaura"},"content":"  * To Be Added","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"leehuiyulaura"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"leehuiyulaura"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"leehuiyulaura":44}},{"path":"docs/team/linuschui.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"linuschui"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"linuschui"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"linuschui"},"content":"title: Linus Chui\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"linuschui"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"linuschui"},"content":"# Project: ConnectNUS","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"linuschui"},"content":"## Overview","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"linuschui"},"content":"ConnectNUS is a desktop address book application used for NUS CS students to keep track of their own modules, and their friend\u0027s modules and contacts as well. This is to facilitate NUS CS students to keep track of their friends to work with so that they can easily find friends to collaborate with.","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"linuschui"},"content":"## Contributions","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"linuschui"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"linuschui"},"content":"* **New Feature**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"linuschui"},"content":"    * What it does:","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"linuschui"},"content":"    * Justification:","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"linuschui"},"content":"    * Highlights:","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"linuschui"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"linuschui"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003drjkoh\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"linuschui"},"content":"* **Project management**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"linuschui"},"content":"* **Enhancements to existing features**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"linuschui"},"content":"* **Documentation**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"linuschui"},"content":"    * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"linuschui"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"linuschui"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"linuschui"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"linuschui"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"linuschui"},"content":"* **Community**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"linuschui"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#x](), [\\#y](),","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"linuschui"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"linuschui"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"linuschui"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"linuschui"},"content":"* **Tools**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"linuschui"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"linuschui"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"linuschui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"linuschui"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"linuschui":43}},{"path":"docs/team/rjkoh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rjkoh"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"rjkoh"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"rjkoh"},"content":"title: Koh Rui Jie\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"rjkoh"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"rjkoh"},"content":"# Project: ConnectNUS","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"rjkoh"},"content":"## Overview","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"rjkoh"},"content":"ConnectNUS is a desktop address book application used for NUS CS students to keep track of their own modules, and their friend\u0027s modules and contacts as well. This is to facilitate NUS CS students to keep track of their friends to work with so that they can easily find friends to collaborate with.","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"rjkoh"},"content":"## Contributions","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"rjkoh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"rjkoh"},"content":"* **New Feature**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"rjkoh"},"content":"  * What it does:","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"rjkoh"},"content":"  * Justification:","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"rjkoh"},"content":"  * Highlights:","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"rjkoh"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"rjkoh"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003drjkoh\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"rjkoh"},"content":"* **Project management**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"rjkoh"},"content":"* **Enhancements to existing features**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"rjkoh"},"content":"* **Documentation**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"rjkoh"},"content":"  * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"rjkoh"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"rjkoh"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"rjkoh"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"rjkoh"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"rjkoh"},"content":"* **Community**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"rjkoh"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#x](), [\\#y](),","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"rjkoh"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"rjkoh"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"rjkoh"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"rjkoh"},"content":"* **Tools**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"rjkoh"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"rjkoh"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"rjkoh"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"rjkoh":43}},{"path":"docs/team/shamooose.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"title: Shamus Tan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":"# Project: ConnectNUS","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":"## Overview","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":"ConnectNUS is a desktop address book application used for NUS CS students to keep track of their own modules, and their friend\u0027s modules and contacts as well. This is to facilitate NUS CS students to keep track of their friends to work with so that they can easily find friends to collaborate with.","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"## Contributions","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"shamooose"},"content":"* **New Feature**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"shamooose"},"content":"  * What it does:","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"shamooose"},"content":"  * Justification:","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"shamooose"},"content":"  * Highlights:","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"shamooose"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"shamooose"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dshamooose\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"shamooose"},"content":"* **Project management**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"shamooose"},"content":"* **Enhancements to existing features**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"shamooose"},"content":"* **Documentation**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"shamooose"},"content":"  * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"shamooose"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"shamooose"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"shamooose"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"shamooose"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"shamooose"},"content":"* **Community**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"shamooose"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#x](), [\\#y](),","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"shamooose"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"shamooose"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"shamooose"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"shamooose"},"content":"* **Tools**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"shamooose"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"shamooose"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"shamooose"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"shamooose":43}},{"path":"docs/team/silastsl.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SilasTSL"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"SilasTSL"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"SilasTSL"},"content":"title: Silas Tay\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"SilasTSL"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"SilasTSL"},"content":"# Project: ConnectNUS","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"SilasTSL"},"content":"## Overview","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"SilasTSL"},"content":"ConnectNUS is a desktop address book application used for NUS CS students to keep track of their own modules, and their friend\u0027s modules and contacts as well. This is to facilitate NUS CS students to keep track of their friends to work with so that they can easily find friends to collaborate with.","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"SilasTSL"},"content":"## Contributions","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"SilasTSL"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"SilasTSL"},"content":"* **New Feature**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"SilasTSL"},"content":"  * What it does:","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"SilasTSL"},"content":"  * Justification:","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"SilasTSL"},"content":"  * Highlights:","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"SilasTSL"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"SilasTSL"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003drjkoh\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"SilasTSL"},"content":"* **Project management**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"SilasTSL"},"content":"* **Enhancements to existing features**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"SilasTSL"},"content":"* **Documentation**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"SilasTSL"},"content":"  * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"SilasTSL"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"SilasTSL"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"SilasTSL"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"SilasTSL"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"SilasTSL"},"content":"* **Community**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"SilasTSL"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#x](), [\\#y](),","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"SilasTSL"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"SilasTSL"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"SilasTSL"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"SilasTSL"},"content":"* **Tools**: to be added","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"SilasTSL"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"SilasTSL"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"SilasTSL"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"SilasTSL":43}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"SilasTSL"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CURRENTMOD;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"SilasTSL"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLANNEDMOD;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"SilasTSL"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREVIOUSMOD;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"rjkoh"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\"","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"rjkoh"},"content":"            + \"[\" + PREFIX_CURRENTMOD + \"MOD]...\"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"rjkoh"},"content":"            + \"[\" + PREFIX_PREVIOUSMOD + \"MOD]...\"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"rjkoh"},"content":"            + \"[\" + PREFIX_PLANNEDMOD + \"MOD]...\\n\"","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"rjkoh"},"content":"            + PREFIX_TAG + \"owesMoney\"","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"rjkoh"},"content":"            + PREFIX_CURRENTMOD + \"CS2103T\"","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"rjkoh"},"content":"            + PREFIX_CURRENTMOD + \"CS2101\"","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"rjkoh"},"content":"            + PREFIX_PREVIOUSMOD + \"CS1101S\"","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"rjkoh"},"content":"            + PREFIX_PLANNEDMOD + \"CS2109S\";","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rjkoh":10,"SilasTSL":3,"-":65}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":" * Deletes a person or the user from the address book.","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"shamooose"},"content":"            + \": Deletes the user or the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"shamooose"},"content":"            + \"Parameters: user / INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"shamooose"},"content":"            + \"Example: \" + COMMAND_WORD + \" user / \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"shamooose"},"content":"    public DeleteCommand() {}","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"shamooose"},"content":"        return new CommandResult(\"\");","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"shamooose":6,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/DeleteIndexCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":"import java.util.List;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"shamooose"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"shamooose"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"shamooose"},"content":"public class DeleteIndexCommand extends DeleteCommand {","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"shamooose"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"shamooose"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"shamooose"},"content":"     * @param targetIndex of the person in the filtered person list to delete","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"shamooose"},"content":"    public DeleteIndexCommand(Index targetIndex) {","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"shamooose"},"content":"        super();","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"shamooose"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"shamooose"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"shamooose"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"shamooose"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"shamooose"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"shamooose"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"shamooose"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"shamooose"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"shamooose"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"shamooose"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"shamooose"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"shamooose"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"shamooose"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"shamooose"},"content":"                || (other instanceof DeleteIndexCommand // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"shamooose"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteIndexCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"shamooose"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"shamooose":50}},{"path":"src/main/java/seedu/address/logic/commands/DeleteUserCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.user.User;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":" * Deletes the user from the address book.","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"public class DeleteUserCommand extends DeleteCommand {","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"shamooose"},"content":"    public static final String MESSAGE_DELETE_USER_SUCCESS \u003d \"Deleted User: %1$s\";","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"shamooose"},"content":"    public static final String MESSAGE_NO_USER_TO_DELETE \u003d \"No user to be deleted!\";","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"shamooose"},"content":"    public DeleteUserCommand() {","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"shamooose"},"content":"        super();","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"shamooose"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"shamooose"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"shamooose"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"shamooose"},"content":"        if (!model.hasUser()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"shamooose"},"content":"            throw new CommandException(MESSAGE_NO_USER_TO_DELETE);","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"shamooose"},"content":"        User userToDelete \u003d model.getUser();","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"shamooose"},"content":"        model.deleteUser();","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"shamooose"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_USER_SUCCESS, userToDelete));","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"shamooose"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"shamooose"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"shamooose"},"content":"        return other \u003d\u003d this; // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"shamooose"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"shamooose":38}},{"path":"src/main/java/seedu/address/logic/commands/UserCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CURRENTMOD;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLANNEDMOD;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREVIOUSMOD;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.user.User;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"shamooose"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"shamooose"},"content":" * Adds a user to the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"shamooose"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"shamooose"},"content":"public class UserCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"shamooose"},"content":"    public static final String COMMAND_WORD \u003d \"user\";","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"shamooose"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a user to the address book. \"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"shamooose"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"shamooose"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"shamooose"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"shamooose"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"shamooose"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"shamooose"},"content":"            + \"[\" + PREFIX_CURRENTMOD + \"MOD]...\"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"shamooose"},"content":"            + \"[\" + PREFIX_PREVIOUSMOD + \"MOD]...\"","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"shamooose"},"content":"            + \"[\" + PREFIX_PLANNEDMOD + \"MOD]...\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"shamooose"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"shamooose"},"content":"            + PREFIX_NAME + \"User Tan \"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"shamooose"},"content":"            + PREFIX_PHONE + \"92345678 \"","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"shamooose"},"content":"            + PREFIX_EMAIL + \"usertan@example.com \"","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"shamooose"},"content":"            + PREFIX_ADDRESS + \"888, Woodlands Ave 4, #05-06 \"","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"shamooose"},"content":"            + PREFIX_CURRENTMOD + \"CS2103T\"","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"shamooose"},"content":"            + PREFIX_CURRENTMOD + \"CS2100\"","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"shamooose"},"content":"            + PREFIX_PREVIOUSMOD + \"CS1231S\"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"shamooose"},"content":"            + PREFIX_PLANNEDMOD + \"CS3230\";","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"shamooose"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New user added: %1$s\";","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"shamooose"},"content":"    public static final String MESSAGE_USER_EXISTS \u003d \"There is already a user in the address book\";","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"shamooose"},"content":"    private final User toAdd;","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"shamooose"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"shamooose"},"content":"    public UserCommand(User user) {","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"shamooose"},"content":"        requireNonNull(user);","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"shamooose"},"content":"        toAdd \u003d user;","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"shamooose"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"shamooose"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"shamooose"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"shamooose"},"content":"        if (model.hasUser()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"shamooose"},"content":"            throw new CommandException(MESSAGE_USER_EXISTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"shamooose"},"content":"        model.addUser(toAdd);","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"shamooose"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"shamooose"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"shamooose"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"shamooose"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"shamooose"},"content":"                || (other instanceof UserCommand // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"shamooose"},"content":"                \u0026\u0026 toAdd.equals(((UserCommand) other).toAdd));","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"shamooose"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"shamooose":74}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"rjkoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CURRENTMOD;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"rjkoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLANNEDMOD;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"rjkoh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREVIOUSMOD;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"rjkoh"},"content":"import seedu.address.model.module.CurrentModule;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"rjkoh"},"content":"import seedu.address.model.module.PlannedModule;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"rjkoh"},"content":"import seedu.address.model.module.PreviousModule;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"rjkoh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"rjkoh"},"content":"                        PREFIX_CURRENTMOD, PREFIX_PREVIOUSMOD, PREFIX_PLANNEDMOD);","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"rjkoh"},"content":"        Set\u003cCurrentModule\u003e currList \u003d ParserUtil.parseCurrentModules(argMultimap.getAllValues(PREFIX_CURRENTMOD));","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"rjkoh"},"content":"        Set\u003cPreviousModule\u003e prevList \u003d ParserUtil.parsePreviousModules(argMultimap.getAllValues(PREFIX_PREVIOUSMOD));","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"rjkoh"},"content":"        Set\u003cPlannedModule\u003e plannedList \u003d ParserUtil.parsePlannedModules(argMultimap.getAllValues(PREFIX_PLANNEDMOD));","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"rjkoh"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, currList, prevList, plannedList);","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"rjkoh":13,"-":58}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"shamooose"},"content":"import seedu.address.logic.commands.UserCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"shamooose"},"content":"        case UserCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"shamooose"},"content":"            return new UserCommandParser().parse(arguments);","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"shamooose":4,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"rjkoh"},"content":"    public static final Prefix PREFIX_CURRENTMOD \u003d new Prefix(\"curr/\");","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"rjkoh"},"content":"    public static final Prefix PREFIX_PREVIOUSMOD \u003d new Prefix(\"prev/\");","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"rjkoh"},"content":"    public static final Prefix PREFIX_PLANNEDMOD \u003d new Prefix(\"plan/\");","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"rjkoh":3,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":"import seedu.address.logic.commands.DeleteIndexCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":"import seedu.address.logic.commands.DeleteUserCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"shamooose"},"content":"            String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"shamooose"},"content":"            if (trimmedArgs.equals(\"user\")) {","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"shamooose"},"content":"                return new DeleteUserCommand();","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"shamooose"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"shamooose"},"content":"            return new DeleteIndexCommand(index);","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"shamooose":7,"-":27}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"rjkoh"},"content":"import seedu.address.model.module.CurrentModule;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"rjkoh"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"rjkoh"},"content":"import seedu.address.model.module.PlannedModule;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"rjkoh"},"content":"import seedu.address.model.module.PreviousModule;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"rjkoh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"rjkoh"},"content":"     * Parses a {@code String mod} into a {@code CurrentModule}.","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"rjkoh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"rjkoh"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"rjkoh"},"content":"     * @throws ParseException if the given {@code mod} is invalid.","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"rjkoh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"rjkoh"},"content":"    public static CurrentModule parseCurrentModule(String mod) throws ParseException {","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"rjkoh"},"content":"        requireNonNull(mod);","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"rjkoh"},"content":"        String trimmedMod \u003d mod.trim();","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"rjkoh"},"content":"        if (!Module.isValidModuleName(trimmedMod)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"rjkoh"},"content":"            throw new ParseException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"rjkoh"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":141,"author":{"gitId":"rjkoh"},"content":"        return new CurrentModule(trimmedMod);","lastModifiedDate":"2022-10-04"},{"lineNumber":142,"author":{"gitId":"rjkoh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":143,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":144,"author":{"gitId":"rjkoh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":145,"author":{"gitId":"rjkoh"},"content":"     * Parses {@code Collection\u003cString\u003e mods} into a {@code Set\u003cCurrentModule\u003e}.","lastModifiedDate":"2022-10-04"},{"lineNumber":146,"author":{"gitId":"rjkoh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":147,"author":{"gitId":"rjkoh"},"content":"    public static Set\u003cCurrentModule\u003e parseCurrentModules(Collection\u003cString\u003e mods) throws ParseException {","lastModifiedDate":"2022-10-04"},{"lineNumber":148,"author":{"gitId":"rjkoh"},"content":"        requireNonNull(mods);","lastModifiedDate":"2022-10-04"},{"lineNumber":149,"author":{"gitId":"rjkoh"},"content":"        final Set\u003cCurrentModule\u003e modSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":150,"author":{"gitId":"rjkoh"},"content":"        for (String modCode : mods) {","lastModifiedDate":"2022-10-04"},{"lineNumber":151,"author":{"gitId":"rjkoh"},"content":"            modSet.add(parseCurrentModule(modCode));","lastModifiedDate":"2022-10-04"},{"lineNumber":152,"author":{"gitId":"rjkoh"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":153,"author":{"gitId":"rjkoh"},"content":"        return modSet;","lastModifiedDate":"2022-10-04"},{"lineNumber":154,"author":{"gitId":"rjkoh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":155,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":156,"author":{"gitId":"rjkoh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":157,"author":{"gitId":"rjkoh"},"content":"     * Parses a {@code String mod} into a {@code PreviousModule}.","lastModifiedDate":"2022-10-04"},{"lineNumber":158,"author":{"gitId":"rjkoh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-04"},{"lineNumber":159,"author":{"gitId":"rjkoh"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"rjkoh"},"content":"     * @throws ParseException if the given {@code mod} is invalid.","lastModifiedDate":"2022-10-04"},{"lineNumber":161,"author":{"gitId":"rjkoh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":162,"author":{"gitId":"rjkoh"},"content":"    public static PreviousModule parsePreviousModule(String mod) throws ParseException {","lastModifiedDate":"2022-10-04"},{"lineNumber":163,"author":{"gitId":"rjkoh"},"content":"        requireNonNull(mod);","lastModifiedDate":"2022-10-04"},{"lineNumber":164,"author":{"gitId":"rjkoh"},"content":"        String trimmedMod \u003d mod.trim();","lastModifiedDate":"2022-10-04"},{"lineNumber":165,"author":{"gitId":"rjkoh"},"content":"        if (!Module.isValidModuleName(trimmedMod)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":166,"author":{"gitId":"rjkoh"},"content":"            throw new ParseException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":167,"author":{"gitId":"rjkoh"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":168,"author":{"gitId":"rjkoh"},"content":"        return new PreviousModule(trimmedMod);","lastModifiedDate":"2022-10-04"},{"lineNumber":169,"author":{"gitId":"rjkoh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":170,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":171,"author":{"gitId":"rjkoh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":172,"author":{"gitId":"rjkoh"},"content":"     * Parses {@code Collection\u003cString\u003e mods} into a {@code Set\u003cPreviousModule\u003e}.","lastModifiedDate":"2022-10-04"},{"lineNumber":173,"author":{"gitId":"rjkoh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":174,"author":{"gitId":"rjkoh"},"content":"    public static Set\u003cPreviousModule\u003e parsePreviousModules(Collection\u003cString\u003e mods) throws ParseException {","lastModifiedDate":"2022-10-04"},{"lineNumber":175,"author":{"gitId":"rjkoh"},"content":"        requireNonNull(mods);","lastModifiedDate":"2022-10-04"},{"lineNumber":176,"author":{"gitId":"rjkoh"},"content":"        final Set\u003cPreviousModule\u003e modSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":177,"author":{"gitId":"rjkoh"},"content":"        for (String modCode : mods) {","lastModifiedDate":"2022-10-04"},{"lineNumber":178,"author":{"gitId":"rjkoh"},"content":"            modSet.add(parsePreviousModule(modCode));","lastModifiedDate":"2022-10-04"},{"lineNumber":179,"author":{"gitId":"rjkoh"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":180,"author":{"gitId":"rjkoh"},"content":"        return modSet;","lastModifiedDate":"2022-10-04"},{"lineNumber":181,"author":{"gitId":"rjkoh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":182,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":183,"author":{"gitId":"rjkoh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":184,"author":{"gitId":"rjkoh"},"content":"     * Parses a {@code String mod} into a {@code PlannedModule}.","lastModifiedDate":"2022-10-04"},{"lineNumber":185,"author":{"gitId":"rjkoh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-04"},{"lineNumber":186,"author":{"gitId":"rjkoh"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":187,"author":{"gitId":"rjkoh"},"content":"     * @throws ParseException if the given {@code mod} is invalid.","lastModifiedDate":"2022-10-04"},{"lineNumber":188,"author":{"gitId":"rjkoh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":189,"author":{"gitId":"rjkoh"},"content":"    public static PlannedModule parsePlannedModule(String mod) throws ParseException {","lastModifiedDate":"2022-10-04"},{"lineNumber":190,"author":{"gitId":"rjkoh"},"content":"        requireNonNull(mod);","lastModifiedDate":"2022-10-04"},{"lineNumber":191,"author":{"gitId":"rjkoh"},"content":"        String trimmedMod \u003d mod.trim();","lastModifiedDate":"2022-10-04"},{"lineNumber":192,"author":{"gitId":"rjkoh"},"content":"        if (!Module.isValidModuleName(trimmedMod)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":193,"author":{"gitId":"rjkoh"},"content":"            throw new ParseException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":194,"author":{"gitId":"rjkoh"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":195,"author":{"gitId":"rjkoh"},"content":"        return new PlannedModule(trimmedMod);","lastModifiedDate":"2022-10-04"},{"lineNumber":196,"author":{"gitId":"rjkoh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":197,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":198,"author":{"gitId":"rjkoh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":199,"author":{"gitId":"rjkoh"},"content":"     * Parses {@code Collection\u003cString\u003e mods} into a {@code Set\u003cPlannedModule\u003e}.","lastModifiedDate":"2022-10-04"},{"lineNumber":200,"author":{"gitId":"rjkoh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":201,"author":{"gitId":"rjkoh"},"content":"    public static Set\u003cPlannedModule\u003e parsePlannedModules(Collection\u003cString\u003e mods) throws ParseException {","lastModifiedDate":"2022-10-04"},{"lineNumber":202,"author":{"gitId":"rjkoh"},"content":"        requireNonNull(mods);","lastModifiedDate":"2022-10-04"},{"lineNumber":203,"author":{"gitId":"rjkoh"},"content":"        final Set\u003cPlannedModule\u003e modSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":204,"author":{"gitId":"rjkoh"},"content":"        for (String modCode : mods) {","lastModifiedDate":"2022-10-04"},{"lineNumber":205,"author":{"gitId":"rjkoh"},"content":"            modSet.add(parsePlannedModule(modCode));","lastModifiedDate":"2022-10-04"},{"lineNumber":206,"author":{"gitId":"rjkoh"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":207,"author":{"gitId":"rjkoh"},"content":"        return modSet;","lastModifiedDate":"2022-10-04"},{"lineNumber":208,"author":{"gitId":"rjkoh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"rjkoh":85,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/UserCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CURRENTMOD;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PLANNEDMOD;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PREVIOUSMOD;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"shamooose"},"content":"import seedu.address.logic.commands.UserCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"shamooose"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.module.CurrentModule;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.module.PlannedModule;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.module.PreviousModule;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.user.ExistingUser;","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.user.User;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"shamooose"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"shamooose"},"content":" * Parses input arguments and creates a new UserCommand object","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"shamooose"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"shamooose"},"content":"public class UserCommandParser implements Parser\u003cUserCommand\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"shamooose"},"content":"     * Parses the given {@code String} of arguments in the context of the UserCommand","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"shamooose"},"content":"     * and returns an UserCommand object for execution.","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"shamooose"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"shamooose"},"content":"    public UserCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"shamooose"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"shamooose"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"shamooose"},"content":"                        PREFIX_CURRENTMOD, PREFIX_PREVIOUSMOD, PREFIX_PLANNEDMOD);","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"shamooose"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"shamooose"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"shamooose"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UserCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"shamooose"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"shamooose"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"shamooose"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"shamooose"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"shamooose"},"content":"        Set\u003cCurrentModule\u003e currList \u003d ParserUtil.parseCurrentModules(argMultimap.getAllValues(PREFIX_CURRENTMOD));","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"shamooose"},"content":"        Set\u003cPreviousModule\u003e prevList \u003d ParserUtil.parsePreviousModules(argMultimap.getAllValues(PREFIX_PREVIOUSMOD));","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"shamooose"},"content":"        Set\u003cPlannedModule\u003e plannedList \u003d ParserUtil.parsePlannedModules(argMultimap.getAllValues(PREFIX_PLANNEDMOD));","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"shamooose"},"content":"        User user \u003d new ExistingUser(name, phone, email, address, currList, prevList, plannedList);","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"shamooose"},"content":"        return new UserCommand(user);","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"shamooose"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"shamooose"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"shamooose"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"shamooose"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"shamooose"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"shamooose":69}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.user.EmptyUser;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.user.User;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"shamooose"},"content":"    private User user \u003d new EmptyUser();","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"shamooose"},"content":"    private final EmptyUser emptyUser \u003d new EmptyUser();","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"shamooose"},"content":"    //// user operations","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"shamooose"},"content":"     * Returns true if a user is already saved in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"shamooose"},"content":"    public boolean hasUser() {","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"shamooose"},"content":"        return !(user.equals(emptyUser));","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"shamooose"},"content":"     * Adds user to the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"shamooose"},"content":"    public void addUser(User u) {","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"shamooose"},"content":"        user \u003d u;","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"shamooose"},"content":"     * Deletes the current user from the address book and replaces it with an EmptyUser.","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"shamooose"},"content":"    public void deleteUser() {","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"shamooose"},"content":"        user \u003d new EmptyUser();","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":136,"author":{"gitId":"shamooose"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"shamooose"},"content":"    public User getUser() {","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"shamooose"},"content":"        return user;","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"shamooose":32,"-":120}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.user.User;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"shamooose"},"content":"     * Returns true if a user already exists in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"shamooose"},"content":"    boolean hasUser();","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"shamooose"},"content":"     * Adds the user to the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"shamooose"},"content":"    void addUser(User user);","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"shamooose"},"content":"     * Returns the current user of the address book or EmptyUser is there is no user.","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"shamooose"},"content":"    User getUser();","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"shamooose"},"content":"     * Deletes the current user from the address book and replaces it with an EmptyUser.","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"shamooose"},"content":"    void deleteUser();","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"shamooose":21,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.user.User;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"shamooose"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"shamooose"},"content":"    public boolean hasUser() {","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"shamooose"},"content":"        return addressBook.hasUser();","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"shamooose"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"shamooose"},"content":"    public void addUser(User user) {","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"shamooose"},"content":"        addressBook.addUser(user);","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"shamooose"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"shamooose"},"content":"    public User getUser() {","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"shamooose"},"content":"        return addressBook.getUser();","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"shamooose"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"shamooose"},"content":"    public void deleteUser() {","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"shamooose"},"content":"        addressBook.deleteUser();","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"shamooose":21,"-":150}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.user.User;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"shamooose"},"content":"     * Returns an unmodifiable view of the user.","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"shamooose"},"content":"    User getUser();","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"shamooose":6,"-":17}},{"path":"src/main/java/seedu/address/model/module/CurrentModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rjkoh"},"content":"package seedu.address.model.module;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"rjkoh"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"rjkoh"},"content":" * Module that CS student is currently taking.","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"rjkoh"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"SilasTSL"},"content":"public class CurrentModule extends Module {","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"SilasTSL"},"content":"    public CurrentModule(String moduleName) {","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"SilasTSL"},"content":"        super(moduleName);","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"rjkoh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"rjkoh"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"rjkoh":7,"SilasTSL":3}},{"path":"src/main/java/seedu/address/model/module/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rjkoh"},"content":"package seedu.address.model.module;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"SilasTSL"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"SilasTSL"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"SilasTSL"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"SilasTSL"},"content":" * Represents a Module in the address book.","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"SilasTSL"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidModuleName(String)}","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"SilasTSL"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"SilasTSL"},"content":"public abstract class Module {","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"SilasTSL"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Module names should be alphanumeric\";","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"SilasTSL"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"SilasTSL"},"content":"    public final String moduleName;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"SilasTSL"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"SilasTSL"},"content":"     * Constructs a {@code Module}.","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"SilasTSL"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"SilasTSL"},"content":"     * @param moduleName A valid module name.","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"SilasTSL"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"SilasTSL"},"content":"    public Module(String moduleName) {","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"SilasTSL"},"content":"        requireNonNull(moduleName);","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"SilasTSL"},"content":"        checkArgument(isValidModuleName(moduleName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"SilasTSL"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"SilasTSL"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"SilasTSL"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"SilasTSL"},"content":"     * Returns true if a given string is a valid module name.","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"SilasTSL"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"SilasTSL"},"content":"    public static boolean isValidModuleName(String test) {","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"SilasTSL"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"SilasTSL"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"SilasTSL"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"SilasTSL"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"SilasTSL"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"SilasTSL"},"content":"                || (other instanceof Module // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"SilasTSL"},"content":"                \u0026\u0026 moduleName.equals(((Module) other).moduleName)); // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"SilasTSL"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"SilasTSL"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"SilasTSL"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"SilasTSL"},"content":"        return moduleName.hashCode();","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"SilasTSL"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"SilasTSL"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"SilasTSL"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"SilasTSL"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"SilasTSL"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"SilasTSL"},"content":"        return \u0027[\u0027 + moduleName + \u0027]\u0027;","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"SilasTSL"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"rjkoh"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"rjkoh":3,"SilasTSL":50}},{"path":"src/main/java/seedu/address/model/module/PlannedModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rjkoh"},"content":"package seedu.address.model.module;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"rjkoh"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"rjkoh"},"content":" * Modules CS student plans to take.","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"rjkoh"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"SilasTSL"},"content":"public class PlannedModule extends Module {","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"SilasTSL"},"content":"    public PlannedModule(String moduleName) {","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"SilasTSL"},"content":"        super(moduleName);","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"rjkoh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"rjkoh"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"rjkoh":7,"SilasTSL":3}},{"path":"src/main/java/seedu/address/model/module/PreviousModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rjkoh"},"content":"package seedu.address.model.module;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"rjkoh"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"rjkoh"},"content":" * Module that CS student has taken.","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"rjkoh"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"SilasTSL"},"content":"public class PreviousModule extends Module {","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"SilasTSL"},"content":"    public PreviousModule(String moduleName) {","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"SilasTSL"},"content":"        super(moduleName);","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"rjkoh"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"rjkoh"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"rjkoh":7,"SilasTSL":3}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"SilasTSL"},"content":"import seedu.address.model.module.CurrentModule;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"SilasTSL"},"content":"import seedu.address.model.module.PlannedModule;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"SilasTSL"},"content":"import seedu.address.model.module.PreviousModule;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"SilasTSL"},"content":"    private final Set\u003cCurrentModule\u003e currModules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"SilasTSL"},"content":"    private final Set\u003cPreviousModule\u003e prevModules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"SilasTSL"},"content":"    private final Set\u003cPlannedModule\u003e planModules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"SilasTSL"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"SilasTSL"},"content":"                  Set\u003cCurrentModule\u003e currModules, Set\u003cPreviousModule\u003e prevModules, Set\u003cPlannedModule\u003e planModules) {","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"SilasTSL"},"content":"        this.currModules.addAll(currModules);","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"SilasTSL"},"content":"        this.prevModules.addAll(prevModules);","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"SilasTSL"},"content":"        this.planModules.addAll(planModules);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"SilasTSL"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"SilasTSL"},"content":"     * Returns an immutable current module set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"SilasTSL"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"SilasTSL"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"SilasTSL"},"content":"    public Set\u003cCurrentModule\u003e getCurrModules() {","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"SilasTSL"},"content":"        return Collections.unmodifiableSet(currModules);","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"SilasTSL"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"SilasTSL"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"SilasTSL"},"content":"     * Returns an immutable previous module set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"SilasTSL"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"SilasTSL"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"SilasTSL"},"content":"    public Set\u003cPreviousModule\u003e getPrevModules() {","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"SilasTSL"},"content":"        return Collections.unmodifiableSet(prevModules);","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"SilasTSL"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"SilasTSL"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"SilasTSL"},"content":"     * Returns an immutable planned module set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"SilasTSL"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"SilasTSL"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"SilasTSL"},"content":"    public Set\u003cPlannedModule\u003e getPlanModules() {","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"SilasTSL"},"content":"        return Collections.unmodifiableSet(planModules);","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"SilasTSL"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"SilasTSL"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2022-10-04"},{"lineNumber":142,"author":{"gitId":"SilasTSL"},"content":"                \u0026\u0026 otherPerson.getCurrModules().equals(getCurrModules())","lastModifiedDate":"2022-10-04"},{"lineNumber":143,"author":{"gitId":"SilasTSL"},"content":"                \u0026\u0026 otherPerson.getPrevModules().equals(getPrevModules())","lastModifiedDate":"2022-10-04"},{"lineNumber":144,"author":{"gitId":"SilasTSL"},"content":"                \u0026\u0026 otherPerson.getPlanModules().equals(getPlanModules());","lastModifiedDate":"2022-10-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"SilasTSL"},"content":"        return Objects.hash(name, phone, email, address, tags, currModules, prevModules, planModules);","lastModifiedDate":"2022-10-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":169,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":170,"author":{"gitId":"SilasTSL"},"content":"        Set\u003cCurrentModule\u003e currModules \u003d getCurrModules();","lastModifiedDate":"2022-10-04"},{"lineNumber":171,"author":{"gitId":"SilasTSL"},"content":"        if (!currModules.isEmpty()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":172,"author":{"gitId":"SilasTSL"},"content":"            builder.append(\"; Current Modules: \");","lastModifiedDate":"2022-10-04"},{"lineNumber":173,"author":{"gitId":"SilasTSL"},"content":"            currModules.forEach(builder::append);","lastModifiedDate":"2022-10-04"},{"lineNumber":174,"author":{"gitId":"SilasTSL"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":175,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":176,"author":{"gitId":"SilasTSL"},"content":"        Set\u003cPreviousModule\u003e prevModules \u003d getPrevModules();","lastModifiedDate":"2022-10-04"},{"lineNumber":177,"author":{"gitId":"SilasTSL"},"content":"        if (!prevModules.isEmpty()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":178,"author":{"gitId":"SilasTSL"},"content":"            builder.append(\"; Previous Modules: \");","lastModifiedDate":"2022-10-04"},{"lineNumber":179,"author":{"gitId":"SilasTSL"},"content":"            prevModules.forEach(builder::append);","lastModifiedDate":"2022-10-04"},{"lineNumber":180,"author":{"gitId":"SilasTSL"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":181,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":182,"author":{"gitId":"SilasTSL"},"content":"        Set\u003cPlannedModule\u003e planModules \u003d getPlanModules();","lastModifiedDate":"2022-10-04"},{"lineNumber":183,"author":{"gitId":"SilasTSL"},"content":"        if (!currModules.isEmpty()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":184,"author":{"gitId":"SilasTSL"},"content":"            builder.append(\"; Planned Modules: \");","lastModifiedDate":"2022-10-04"},{"lineNumber":185,"author":{"gitId":"SilasTSL"},"content":"            planModules.forEach(builder::append);","lastModifiedDate":"2022-10-04"},{"lineNumber":186,"author":{"gitId":"SilasTSL"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":187,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SilasTSL":59,"-":132}},{"path":"src/main/java/seedu/address/model/person/user/EmptyUser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package seedu.address.model.person.user;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":" * Represents an Empty User field, which is present in the address book when ConnectNUS is first opened or when the","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":" * User has been deleted.","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":"public class EmptyUser extends User {","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":"     * EmptyUser does not contain any fields as it is empty","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"    public EmptyUser() {","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"        super();","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"shamooose"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"shamooose"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"shamooose"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"shamooose"},"content":"            return true;","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"shamooose"},"content":"        if (other instanceof EmptyUser) {","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"shamooose"},"content":"            return true;","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"shamooose"},"content":"        return false;","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"shamooose"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"shamooose"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"shamooose"},"content":"        return \"no user exists\";","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"shamooose"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"shamooose":34}},{"path":"src/main/java/seedu/address/model/person/user/ExistingUser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package seedu.address.model.person.user;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.module.CurrentModule;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.module.PlannedModule;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.module.PreviousModule;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"shamooose"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"shamooose"},"content":" * Represents the User of the address book.","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"shamooose"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"shamooose"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"shamooose"},"content":"public class ExistingUser extends User {","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"shamooose"},"content":"    // Identity fields","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"shamooose"},"content":"    private final Name name;","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"shamooose"},"content":"    private final Phone phone;","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"shamooose"},"content":"    private final Email email;","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"shamooose"},"content":"    // Data fields","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"shamooose"},"content":"    private final Address address;","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"shamooose"},"content":"    private final Set\u003cCurrentModule\u003e currModules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"shamooose"},"content":"    private final Set\u003cPreviousModule\u003e prevModules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"shamooose"},"content":"    private final Set\u003cPlannedModule\u003e planModules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"shamooose"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"shamooose"},"content":"    public ExistingUser(Name name, Phone phone, Email email, Address address, Set\u003cCurrentModule\u003e currModules,","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"shamooose"},"content":"                Set\u003cPreviousModule\u003e prevModules, Set\u003cPlannedModule\u003e planModules) {","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"shamooose"},"content":"        requireAllNonNull(name, phone, email, address);","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"shamooose"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"shamooose"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"shamooose"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"shamooose"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"shamooose"},"content":"        this.currModules.addAll(currModules);","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"shamooose"},"content":"        this.prevModules.addAll(prevModules);","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"shamooose"},"content":"        this.planModules.addAll(planModules);","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"shamooose"},"content":"    public Name getName() {","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"shamooose"},"content":"        return name;","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"shamooose"},"content":"    public Phone getPhone() {","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"shamooose"},"content":"        return phone;","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"shamooose"},"content":"    public Email getEmail() {","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"shamooose"},"content":"        return email;","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"shamooose"},"content":"    public Address getAddress() {","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"shamooose"},"content":"        return address;","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"shamooose"},"content":"     * Returns an immutable current module set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"shamooose"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"shamooose"},"content":"    public Set\u003cCurrentModule\u003e getCurrModules() {","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"shamooose"},"content":"        return Collections.unmodifiableSet(currModules);","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"shamooose"},"content":"     * Returns an immutable previous module set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"shamooose"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"shamooose"},"content":"    public Set\u003cPreviousModule\u003e getPrevModules() {","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"shamooose"},"content":"        return Collections.unmodifiableSet(prevModules);","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"shamooose"},"content":"     * Returns an immutable planned module set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"shamooose"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"shamooose"},"content":"    public Set\u003cPlannedModule\u003e getPlanModules() {","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"shamooose"},"content":"        return Collections.unmodifiableSet(planModules);","lastModifiedDate":"2022-10-07"},{"lineNumber":88,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":89,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":90,"author":{"gitId":"shamooose"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":91,"author":{"gitId":"shamooose"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"shamooose"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"shamooose"},"content":"        return Objects.hash(name, phone, email, address);","lastModifiedDate":"2022-10-07"},{"lineNumber":94,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":95,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"shamooose"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":97,"author":{"gitId":"shamooose"},"content":"    public String toString() {","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"shamooose"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"shamooose"},"content":"        builder.append(getName())","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"shamooose"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2022-10-07"},{"lineNumber":101,"author":{"gitId":"shamooose"},"content":"                .append(getPhone())","lastModifiedDate":"2022-10-07"},{"lineNumber":102,"author":{"gitId":"shamooose"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2022-10-07"},{"lineNumber":103,"author":{"gitId":"shamooose"},"content":"                .append(getEmail())","lastModifiedDate":"2022-10-07"},{"lineNumber":104,"author":{"gitId":"shamooose"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2022-10-07"},{"lineNumber":105,"author":{"gitId":"shamooose"},"content":"                .append(getAddress());","lastModifiedDate":"2022-10-07"},{"lineNumber":106,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":107,"author":{"gitId":"shamooose"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-07"},{"lineNumber":108,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":109,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":110,"author":{"gitId":"shamooose"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"shamooose":110}},{"path":"src/main/java/seedu/address/model/person/user/User.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package seedu.address.model.person.user;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":" * Represents the User of the address book. User can never be null.","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":"public abstract class User { }","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"shamooose":6}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedCurrentModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rjkoh"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"rjkoh"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"rjkoh"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"rjkoh"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"rjkoh"},"content":"import seedu.address.model.module.CurrentModule;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"rjkoh"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"rjkoh"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"rjkoh"},"content":" * Jackson-friendly version of {@link CurrentModule}.","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"rjkoh"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"rjkoh"},"content":"class JsonAdaptedCurrentModule {","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"rjkoh"},"content":"    private final String modCode;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"rjkoh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"rjkoh"},"content":"     * Constructs a {@code JsonAdaptedCurrentModule} with the given {@code modCode}.","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"rjkoh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"rjkoh"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"rjkoh"},"content":"    public JsonAdaptedCurrentModule(String modCode) {","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"rjkoh"},"content":"        this.modCode \u003d modCode;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"rjkoh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"rjkoh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"rjkoh"},"content":"     * Converts a given {@code CurrentModule} into this class for Jackson use.","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"rjkoh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"rjkoh"},"content":"    public JsonAdaptedCurrentModule(CurrentModule source) {","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"rjkoh"},"content":"        modCode \u003d source.moduleName;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"rjkoh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"rjkoh"},"content":"    @JsonValue","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"rjkoh"},"content":"    public String getModName() {","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"rjkoh"},"content":"        return modCode;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"rjkoh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"rjkoh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"rjkoh"},"content":"     * Converts this Jackson-friendly adapted current module object into the model\u0027s {@code CurrentModule} object.","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"rjkoh"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"rjkoh"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"rjkoh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"rjkoh"},"content":"    public CurrentModule toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"rjkoh"},"content":"        if (!Module.isValidModuleName(modCode)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"rjkoh"},"content":"            throw new IllegalValueException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"rjkoh"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"rjkoh"},"content":"        return new CurrentModule(modCode);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"rjkoh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"rjkoh"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"rjkoh":49}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"SilasTSL"},"content":"import seedu.address.model.module.CurrentModule;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"SilasTSL"},"content":"import seedu.address.model.module.PlannedModule;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"SilasTSL"},"content":"import seedu.address.model.module.PreviousModule;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"SilasTSL"},"content":"    private final List\u003cJsonAdaptedCurrentModule\u003e currModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"SilasTSL"},"content":"    private final List\u003cJsonAdaptedPreviousModule\u003e prevModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"SilasTSL"},"content":"    private final List\u003cJsonAdaptedPlannedModule\u003e planModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"SilasTSL"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"SilasTSL"},"content":"            @JsonProperty(\"currModules\") List\u003cJsonAdaptedCurrentModule\u003e currModules,","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"SilasTSL"},"content":"            @JsonProperty(\"prevModules\") List\u003cJsonAdaptedPreviousModule\u003e prevModules,","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"SilasTSL"},"content":"            @JsonProperty(\"planModules\") List\u003cJsonAdaptedPlannedModule\u003e planModules) {","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"SilasTSL"},"content":"        if (currModules !\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"SilasTSL"},"content":"            this.currModules.addAll(currModules);","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"SilasTSL"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"SilasTSL"},"content":"        if (prevModules !\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"SilasTSL"},"content":"            this.prevModules.addAll(prevModules);","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"SilasTSL"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"SilasTSL"},"content":"        if (planModules !\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"SilasTSL"},"content":"            this.planModules.addAll(planModules);","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"SilasTSL"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"rjkoh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"rjkoh"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"rjkoh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"rjkoh"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"rjkoh"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"rjkoh"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"rjkoh"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"SilasTSL"},"content":"        currModules.addAll(source.getCurrModules().stream()","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"SilasTSL"},"content":"                .map(JsonAdaptedCurrentModule::new)","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"SilasTSL"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"SilasTSL"},"content":"        prevModules.addAll(source.getPrevModules().stream()","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"SilasTSL"},"content":"                .map(JsonAdaptedPreviousModule::new)","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"SilasTSL"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"SilasTSL"},"content":"        planModules.addAll(source.getPlanModules().stream()","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"SilasTSL"},"content":"                .map(JsonAdaptedPlannedModule::new)","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"SilasTSL"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"SilasTSL"},"content":"        final List\u003cCurrentModule\u003e personCurrModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"SilasTSL"},"content":"        for (JsonAdaptedCurrentModule currModule : currModules) {","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"SilasTSL"},"content":"            personCurrModules.add(currModule.toModelType());","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"SilasTSL"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":122,"author":{"gitId":"SilasTSL"},"content":"        final List\u003cPreviousModule\u003e personPrevModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":123,"author":{"gitId":"SilasTSL"},"content":"        for (JsonAdaptedPreviousModule prevModule : prevModules) {","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"SilasTSL"},"content":"            personPrevModules.add(prevModule.toModelType());","lastModifiedDate":"2022-10-04"},{"lineNumber":125,"author":{"gitId":"SilasTSL"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"SilasTSL"},"content":"        final List\u003cPlannedModule\u003e personPlanModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"SilasTSL"},"content":"        for (JsonAdaptedPlannedModule planModule : planModules) {","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"rjkoh"},"content":"            personPlanModules.add(planModule.toModelType());","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"SilasTSL"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":166,"author":{"gitId":"SilasTSL"},"content":"        final Set\u003cCurrentModule\u003e modelCurrModules \u003d new HashSet\u003c\u003e(personCurrModules);","lastModifiedDate":"2022-10-04"},{"lineNumber":167,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":168,"author":{"gitId":"SilasTSL"},"content":"        final Set\u003cPreviousModule\u003e modelPrevModules \u003d new HashSet\u003c\u003e(personPrevModules);","lastModifiedDate":"2022-10-04"},{"lineNumber":169,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":170,"author":{"gitId":"SilasTSL"},"content":"        final Set\u003cPlannedModule\u003e modelPlanModules \u003d new HashSet\u003c\u003e(personPlanModules);","lastModifiedDate":"2022-10-04"},{"lineNumber":171,"author":{"gitId":"SilasTSL"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":172,"author":{"gitId":"SilasTSL"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress,","lastModifiedDate":"2022-10-04"},{"lineNumber":173,"author":{"gitId":"SilasTSL"},"content":"                modelTags, modelCurrModules, modelPrevModules, modelPlanModules);","lastModifiedDate":"2022-10-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"rjkoh":8,"SilasTSL":52,"-":116}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPlannedModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rjkoh"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"rjkoh"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"rjkoh"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"rjkoh"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"rjkoh"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"rjkoh"},"content":"import seedu.address.model.module.PlannedModule;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"rjkoh"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"rjkoh"},"content":" * Jackson-friendly version of {@link PlannedModule}.","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"rjkoh"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"rjkoh"},"content":"class JsonAdaptedPlannedModule {","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"rjkoh"},"content":"    private final String modCode;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"rjkoh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"rjkoh"},"content":"     * Constructs a {@code JsonAdaptedPlannedModule} with the given {@code modCode}.","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"rjkoh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"rjkoh"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"rjkoh"},"content":"    public JsonAdaptedPlannedModule(String modCode) {","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"rjkoh"},"content":"        this.modCode \u003d modCode;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"rjkoh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"rjkoh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"rjkoh"},"content":"     * Converts a given {@code PlannedModule} into this class for Jackson use.","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"rjkoh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"rjkoh"},"content":"    public JsonAdaptedPlannedModule(PlannedModule source) {","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"rjkoh"},"content":"        modCode \u003d source.moduleName;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"rjkoh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"rjkoh"},"content":"    @JsonValue","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"rjkoh"},"content":"    public String getModName() {","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"rjkoh"},"content":"        return modCode;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"rjkoh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"rjkoh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"rjkoh"},"content":"     * Converts this Jackson-friendly adapted previous module object into the model\u0027s {@code PlannedModule} object.","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"rjkoh"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"rjkoh"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"rjkoh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"rjkoh"},"content":"    public PlannedModule toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"rjkoh"},"content":"        if (!Module.isValidModuleName(modCode)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"rjkoh"},"content":"            throw new IllegalValueException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"rjkoh"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"rjkoh"},"content":"        return new PlannedModule(modCode);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"rjkoh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"rjkoh"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"rjkoh":49}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPreviousModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rjkoh"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"rjkoh"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"rjkoh"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"rjkoh"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"rjkoh"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"rjkoh"},"content":"import seedu.address.model.module.PreviousModule;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"rjkoh"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"rjkoh"},"content":" * Jackson-friendly version of {@link PreviousModule}.","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"rjkoh"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"rjkoh"},"content":"class JsonAdaptedPreviousModule {","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"rjkoh"},"content":"    private final String modCode;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"rjkoh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"rjkoh"},"content":"     * Constructs a {@code JsonAdaptedPreviousModule} with the given {@code modCode}.","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"rjkoh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"rjkoh"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"rjkoh"},"content":"    public JsonAdaptedPreviousModule(String modCode) {","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"rjkoh"},"content":"        this.modCode \u003d modCode;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"rjkoh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"rjkoh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"rjkoh"},"content":"     * Converts a given {@code PreviousModule} into this class for Jackson use.","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"rjkoh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"rjkoh"},"content":"    public JsonAdaptedPreviousModule(PreviousModule source) {","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"rjkoh"},"content":"        modCode \u003d source.moduleName;","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"rjkoh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"rjkoh"},"content":"    @JsonValue","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"rjkoh"},"content":"    public String getModName() {","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"rjkoh"},"content":"        return modCode;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"rjkoh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"rjkoh"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"rjkoh"},"content":"     * Converts this Jackson-friendly adapted previous module object into the model\u0027s {@code PreviousModule} object.","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"rjkoh"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"rjkoh"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"rjkoh"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"rjkoh"},"content":"    public PreviousModule toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"rjkoh"},"content":"        if (!Module.isValidModuleName(modCode)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"rjkoh"},"content":"            throw new IllegalValueException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"rjkoh"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"rjkoh"},"content":"        return new PreviousModule(modCode);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"rjkoh"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"rjkoh"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"rjkoh"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"rjkoh":49}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedUser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shamooose"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"shamooose"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"shamooose"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"shamooose"},"content":"import java.util.List;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"shamooose"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"shamooose"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"shamooose"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"shamooose"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"shamooose"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.module.CurrentModule;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.module.PlannedModule;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.module.PreviousModule;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.user.EmptyUser;","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.user.ExistingUser;","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.user.User;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"shamooose"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"shamooose"},"content":" * Jackson-friendly version of {@link User}.","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"shamooose"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"shamooose"},"content":"class JsonAdaptedUser {","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"shamooose"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"User\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"shamooose"},"content":"    private final EmptyUser emptyUser \u003d new EmptyUser();","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"shamooose"},"content":"    private final String name;","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"shamooose"},"content":"    private final String phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"shamooose"},"content":"    private final String email;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"shamooose"},"content":"    private final String address;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"shamooose"},"content":"    private final List\u003cJsonAdaptedCurrentModule\u003e currModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"shamooose"},"content":"    private final List\u003cJsonAdaptedPreviousModule\u003e prevModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"shamooose"},"content":"    private final List\u003cJsonAdaptedPlannedModule\u003e planModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"shamooose"},"content":"     * Constructs a {@code JsonAdaptedUser} with the given person details.","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"shamooose"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"shamooose"},"content":"    public JsonAdaptedUser(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"shamooose"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"shamooose"},"content":"                             @JsonProperty(\"currModules\") List\u003cJsonAdaptedCurrentModule\u003e currModules,","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"shamooose"},"content":"                             @JsonProperty(\"prevModules\") List\u003cJsonAdaptedPreviousModule\u003e prevModules,","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"shamooose"},"content":"                             @JsonProperty(\"planModules\") List\u003cJsonAdaptedPlannedModule\u003e planModules) {","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"shamooose"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"shamooose"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"shamooose"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"shamooose"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"shamooose"},"content":"        if (currModules !\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"shamooose"},"content":"            this.currModules.addAll(currModules);","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"shamooose"},"content":"        if (prevModules !\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"shamooose"},"content":"            this.prevModules.addAll(prevModules);","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"shamooose"},"content":"        if (planModules !\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"shamooose"},"content":"            this.planModules.addAll(planModules);","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"shamooose"},"content":"     * Converts a given {@code User} into this class for Jackson use.","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"shamooose"},"content":"    public JsonAdaptedUser(User source) {","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"shamooose"},"content":"        if (source.equals(emptyUser)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"shamooose"},"content":"            name \u003d \"\";","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"shamooose"},"content":"            phone \u003d \"empty\";","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"shamooose"},"content":"            email \u003d \"\";","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"shamooose"},"content":"            address \u003d \"\";","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"shamooose"},"content":"        } else {","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"shamooose"},"content":"            assert source instanceof ExistingUser : \"User cannot be any other type\";","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"shamooose"},"content":"            ExistingUser user \u003d (ExistingUser) source;","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"shamooose"},"content":"            name \u003d user.getName().fullName;","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"shamooose"},"content":"            phone \u003d user.getPhone().value;","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"shamooose"},"content":"            email \u003d user.getEmail().value;","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"shamooose"},"content":"            address \u003d user.getAddress().value;","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"shamooose"},"content":"            currModules.addAll(user.getCurrModules().stream()","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"shamooose"},"content":"                    .map(JsonAdaptedCurrentModule::new)","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"shamooose"},"content":"                    .collect(Collectors.toList()));","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"shamooose"},"content":"            prevModules.addAll(user.getPrevModules().stream()","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"shamooose"},"content":"                    .map(JsonAdaptedPreviousModule::new)","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"shamooose"},"content":"                    .collect(Collectors.toList()));","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"shamooose"},"content":"            planModules.addAll(user.getPlanModules().stream()","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"shamooose"},"content":"                    .map(JsonAdaptedPlannedModule::new)","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"shamooose"},"content":"                    .collect(Collectors.toList()));","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":91,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"shamooose"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"shamooose"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code User} object.","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"shamooose"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"shamooose"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"shamooose"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"shamooose"},"content":"    public User toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"shamooose"},"content":"        if (phone.equals(\"empty\")) {","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"shamooose"},"content":"            return new EmptyUser();","lastModifiedDate":"2022-10-07"},{"lineNumber":101,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":102,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":103,"author":{"gitId":"shamooose"},"content":"        final List\u003cCurrentModule\u003e personCurrModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"shamooose"},"content":"        for (JsonAdaptedCurrentModule currModule : currModules) {","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"shamooose"},"content":"            personCurrModules.add(currModule.toModelType());","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"shamooose"},"content":"        final List\u003cPreviousModule\u003e personPrevModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"shamooose"},"content":"        for (JsonAdaptedPreviousModule prevModule : prevModules) {","lastModifiedDate":"2022-10-04"},{"lineNumber":110,"author":{"gitId":"shamooose"},"content":"            personPrevModules.add(prevModule.toModelType());","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"shamooose"},"content":"        final List\u003cPlannedModule\u003e personPlanModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"shamooose"},"content":"        for (JsonAdaptedPlannedModule planModule : planModules) {","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"shamooose"},"content":"            personPlanModules.add(planModule.toModelType());","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"shamooose"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"shamooose"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"shamooose"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":122,"author":{"gitId":"shamooose"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":123,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":124,"author":{"gitId":"shamooose"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2022-10-04"},{"lineNumber":125,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"shamooose"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"shamooose"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"shamooose"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":130,"author":{"gitId":"shamooose"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":131,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"shamooose"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"shamooose"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"shamooose"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"shamooose"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"shamooose"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"shamooose"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2022-10-04"},{"lineNumber":141,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":142,"author":{"gitId":"shamooose"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":143,"author":{"gitId":"shamooose"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2022-10-04"},{"lineNumber":144,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":145,"author":{"gitId":"shamooose"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":146,"author":{"gitId":"shamooose"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":147,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":148,"author":{"gitId":"shamooose"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2022-10-04"},{"lineNumber":149,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":150,"author":{"gitId":"shamooose"},"content":"        final Set\u003cCurrentModule\u003e modelCurrModules \u003d new HashSet\u003c\u003e(personCurrModules);","lastModifiedDate":"2022-10-04"},{"lineNumber":151,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":152,"author":{"gitId":"shamooose"},"content":"        final Set\u003cPreviousModule\u003e modelPrevModules \u003d new HashSet\u003c\u003e(personPrevModules);","lastModifiedDate":"2022-10-04"},{"lineNumber":153,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":154,"author":{"gitId":"shamooose"},"content":"        final Set\u003cPlannedModule\u003e modelPlanModules \u003d new HashSet\u003c\u003e(personPlanModules);","lastModifiedDate":"2022-10-04"},{"lineNumber":155,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":156,"author":{"gitId":"shamooose"},"content":"        return new ExistingUser(modelName, modelPhone, modelEmail, modelAddress,","lastModifiedDate":"2022-10-07"},{"lineNumber":157,"author":{"gitId":"shamooose"},"content":"                modelCurrModules, modelPrevModules, modelPlanModules);","lastModifiedDate":"2022-10-04"},{"lineNumber":158,"author":{"gitId":"shamooose"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":159,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":160,"author":{"gitId":"shamooose"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"shamooose":160}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.user.User;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"shamooose"},"content":"    private final JsonAdaptedUser jsonAdaptedUser;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"shamooose"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"shamooose"},"content":"                                       @JsonProperty(\"user\") JsonAdaptedUser user) {","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"shamooose"},"content":"        this.jsonAdaptedUser \u003d user;","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"shamooose"},"content":"        jsonAdaptedUser \u003d new JsonAdaptedUser(source.getUser());","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"shamooose"},"content":"        User user \u003d jsonAdaptedUser.toModelType();","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"shamooose"},"content":"        addressBook.addUser(user);","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"shamooose":9,"-":59}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.user.User;","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":126,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":127,"author":{"gitId":"shamooose"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":128,"author":{"gitId":"shamooose"},"content":"        public boolean hasUser() {","lastModifiedDate":"2022-10-07"},{"lineNumber":129,"author":{"gitId":"shamooose"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":130,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":131,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":132,"author":{"gitId":"shamooose"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":133,"author":{"gitId":"shamooose"},"content":"        public void addUser(User user) {","lastModifiedDate":"2022-10-07"},{"lineNumber":134,"author":{"gitId":"shamooose"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":135,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":136,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":137,"author":{"gitId":"shamooose"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":138,"author":{"gitId":"shamooose"},"content":"        public User getUser() {","lastModifiedDate":"2022-10-07"},{"lineNumber":139,"author":{"gitId":"shamooose"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":140,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":141,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":142,"author":{"gitId":"shamooose"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":143,"author":{"gitId":"shamooose"},"content":"        public void deleteUser() {","lastModifiedDate":"2022-10-07"},{"lineNumber":144,"author":{"gitId":"shamooose"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"shamooose":21,"-":194}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"shamooose"},"content":"        DeleteCommand deleteCommand \u003d new DeleteIndexCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"shamooose"},"content":"        String expectedMessage \u003d String.format(DeleteIndexCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"shamooose"},"content":"        DeleteCommand deleteCommand \u003d new DeleteIndexCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"shamooose"},"content":"        DeleteCommand deleteCommand \u003d new DeleteIndexCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"shamooose"},"content":"        String expectedMessage \u003d String.format(DeleteIndexCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"shamooose"},"content":"        DeleteCommand deleteCommand \u003d new DeleteIndexCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"shamooose"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteIndexCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"shamooose"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteIndexCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"shamooose"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteIndexCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"shamooose":9,"-":100}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"shamooose"},"content":"import seedu.address.logic.commands.DeleteIndexCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"shamooose"},"content":"        assertEquals(new DeleteIndexCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"shamooose":2,"-":100}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"shamooose"},"content":"import seedu.address.logic.commands.DeleteIndexCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"shamooose"},"content":"        assertParseSuccess(parser, \"1\", new DeleteIndexCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"shamooose":2,"-":31}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"shamooose"},"content":"import seedu.address.model.person.user.User;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"shamooose"},"content":"        private User user;","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"shamooose"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"shamooose"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"shamooose"},"content":"        public User getUser() {","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"shamooose"},"content":"            return user;","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"shamooose"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"shamooose":7,"-":102}}]
