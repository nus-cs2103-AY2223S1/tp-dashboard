[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W08-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-W08-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W08-3/tp/branch/master/graphs/badge.svg)](https://app.codecov.io/gh/AY2223S1-CS2103T-W08-3/tp)","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"* This is a **brownfield team project** done by Software Engineering (SE) students.","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"* The project simulates an ongoing software project for a desktop application (called _SoConnect_) used for managing contact details of peers in NUS School of Computing.","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"* For the detailed documentation of this project, see the **[SoConnect Product Website](https://ay2223s1-cs2103t-w08-3.github.io/tp/)**.","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org/).","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"Jonaspng":6,"-":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"nitant-p"},"content":"### Nitant Panicker","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"nitant-p"},"content":"\u003cimg src\u003d\"images/nitant-p.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"nitant-p"},"content":"[[github](https://github.com/nitant-p)]","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"nitant-p"},"content":"[[portfolio](team/nitant-p.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"nitant-p"},"content":"### Png Yi Wei Jonas","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"nitant-p"},"content":"\u003cimg src\u003d\"images/jonaspng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"nitant-p"},"content":"[[github](http://github.com/jonaspng)]","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"nitant-p"},"content":"[[portfolio](team/jonaspng.md)]","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"nitant-p"},"content":"### Joe Yi","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"nitant-p"},"content":"\u003cimg src\u003d\"images/jjoeyi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"nitant-p"},"content":"[[github](http://github.com/jjoeyi)]","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"nitant-p"},"content":"[[portfolio](team/jjoeyi.md)]","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"nitant-p"},"content":"### Norman Koh","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"nitant-p"},"content":"\u003cimg src\u003d\"images/normkoh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"nitant-p"},"content":"[[github](http://github.com/normkoh)]","lastModifiedDate":"2022-09-26"},{"lineNumber":49,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"nitant-p"},"content":"[[portfolio](team/normkoh.md)]","lastModifiedDate":"2022-09-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"nitant-p"},"content":"### Gareth Ong","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":57,"author":{"gitId":"nitant-p"},"content":"\u003cimg src\u003d\"images/garethong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"nitant-p"},"content":"[[github](http://github.com/GarethOng)]","lastModifiedDate":"2022-09-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"nitant-p"},"content":"[[portfolio](team/garethong.md)]","lastModifiedDate":"2022-09-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":39,"nitant-p":25}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"normkoh"},"content":"* has a need to manage a significant number of TA, professor, and other students\u0027 contact information","lastModifiedDate":"2022-09-19"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"normkoh"},"content":"**Value proposition**: For students to manage Professor/TA /Students based on information provided allowing them to save time.","lastModifiedDate":"2022-09-19"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                                     | So that I can…​                                       |","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"normkoh"},"content":"|----------|--------------------------------------------|--------------------------------------------------|-------------------------------------------------------|","lastModifiedDate":"2022-09-19"},{"lineNumber":275,"author":{"gitId":"normkoh"},"content":"| `* * *`  | Student                                    | Add contacts of my tutors/professor/ friends     | I can keep track of my social network                 |","lastModifiedDate":"2022-09-19"},{"lineNumber":276,"author":{"gitId":"normkoh"},"content":"| `* * *`  | Student                                    | Remove unnecessary contacts from my address book | I can manage my social network                        |","lastModifiedDate":"2022-09-19"},{"lineNumber":277,"author":{"gitId":"normkoh"},"content":"| `* * *`  | Student                                    | Find contacts based on name                      | I can look up a person’s contact easily               |","lastModifiedDate":"2022-09-19"},{"lineNumber":278,"author":{"gitId":"normkoh"},"content":"| `* * *`  | Student                                    | Edit contacts in  address book                   | I can make changes if that a person’s contact changed |","lastModifiedDate":"2022-09-19"},{"lineNumber":279,"author":{"gitId":"normkoh"},"content":"| `* * *`  | Student                                    | Display all the contacts in my list              | I can see all the contacts that I have added so far   |","lastModifiedDate":"2022-09-19"},{"lineNumber":280,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"normkoh"},"content":"(For all use cases below, the **System** is the `SoConnect` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-19"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"normkoh"},"content":"4.  User has to have a basic grasp of English as other languages are currently not supported.","lastModifiedDate":"2022-09-22"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"normkoh":11,"-":367}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"SOConnect is a **desktop application for SOC students to easily find their peers, TAs and profs**.","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"Since it is designed for SOC students, it is **optimized for use via a Command Line Interface (CLI)**","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"but it also has a Graphical User Interface for simpler and quicker task.","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"## Table of Contents \u003ca id\u003d\"toc\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"1. [About the User Guide](#1-about)","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"   - [1.1. Parameters](#11-parameters)","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"   - [1.2. Format](#12-format)","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"2. [Quick Start](#2-quick-start)","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"3. [Features](#3-features)","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"   - [3.1 Add-Related Commands](#31-add-commands)","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"       * [3.1.1 Add new Student Contact](#311-add-student)","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"       * [3.1.2 Add new Prof Contact](#312-add-prof)","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"       * [3.1.3 Add new Teaching Assistant (TA)](#313-add-ta)","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"   - [3.2 Editing-Related Commands](#32-edit-commands)","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"       * [3.2.1 Delete a person](#321-delete-person)","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"       * [3.2.2 Editing contact](#322-edit-contact)","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"   - [3.3 Searching-Related Commands](#33-search-commands)","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"       * [3.3.1 Locate contact](#331-locate-contact)","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"       * [3.3.2 List contact](#332-list-contact)","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"# 1. About the User Guide \u003ca id\u003d\"1-doubt\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"This section will explain the parameters and the format of commands.","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"## 1.1 Parameters \u003ca id\u003d\"11-parameters\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"| Prefix | Parameter    | Meaning                                         |","lastModifiedDate":"2022-09-25"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"|--------|--------------|-------------------------------------------------|","lastModifiedDate":"2022-09-25"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"| n/     | NAME         | Name of person                                  |","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"| p/     | PHONE NUMBER | Phone number of person                          |","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"| g/     | GENDER       | Gender of person (STRICTLY FEMALE OR MALE)      |","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"| e/     | EMAIL        | Email address of person                         |","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"| m/     | MODULE       | Module that person is participating in          |","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"GarethOng"},"content":"| t/     | TAG          | Tag person (i.e tag as friend)                  |","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"GarethOng"},"content":"| []()   | INDEX        | Index of item in the recent displayed item list |","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"GarethOng"},"content":"## 1.2 Format \u003ca id\u003d\"12-format\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"GarethOng"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info show-whitespaces\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":46,"author":{"gitId":"GarethOng"},"content":"* All prefixes must be preceded by a space.\u003cbr\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"GarethOng"},"content":"  e.g \u003ccode\u003e t/\u003c/code\u003e, \u003ccode\u003e g/\u003c/code\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":48,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":49,"author":{"gitId":"GarethOng"},"content":"* All commands are **lower-sensitive**.\u003cbr\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":50,"author":{"gitId":"GarethOng"},"content":"  e.g. `Add` will **not** be recognised as a valid syntax.","lastModifiedDate":"2022-09-25"},{"lineNumber":51,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":52,"author":{"gitId":"GarethOng"},"content":"* Words in `UPPER_CASE` are the parameters to be **supplied by you**.\u003cbr\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":53,"author":{"gitId":"GarethOng"},"content":"  e.g. in `student e/EMAIL`, `EMAIL` is a parameter which can be used as `student e/e123@u.nus.edu` to create a student with email e123@u.nus.edu","lastModifiedDate":"2022-09-25"},{"lineNumber":54,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":55,"author":{"gitId":"GarethOng"},"content":"* Items in **square brackets are optional**.\u003cbr\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":56,"author":{"gitId":"GarethOng"},"content":"  e.g `student n/NAME [t/TAG]` can be used as `student n/John` or as `student n/John t/friend`.","lastModifiedDate":"2022-09-25"},{"lineNumber":57,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":58,"author":{"gitId":"GarethOng"},"content":"* `INDEX` **must be a positive integer** e.g. 1, 2, 3...\u003cbr\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":59,"author":{"gitId":"GarethOng"},"content":"  e.g. the `INDEX` in `delete INDEX` and `edit INDEX` must be a positive integer that is present in the","lastModifiedDate":"2022-09-25"},{"lineNumber":60,"author":{"gitId":"GarethOng"},"content":"  corresponding lists e.g. `delete 1` `edit 2`.","lastModifiedDate":"2022-09-25"},{"lineNumber":61,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":62,"author":{"gitId":"GarethOng"},"content":"* Parameters can be in **any order**. The only exception is if one of the parameter is an INDEX, in this case","lastModifiedDate":"2022-09-25"},{"lineNumber":63,"author":{"gitId":"GarethOng"},"content":"  , **INDEX must be the second parameter**. \u003cbr\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":64,"author":{"gitId":"GarethOng"},"content":"  e.g. if the command specifies `student n/NAME e/EMAIL`, then `student e/EMAIL n/NAME` is also acceptable.","lastModifiedDate":"2022-09-25"},{"lineNumber":65,"author":{"gitId":"GarethOng"},"content":"  e.g. if the command specifies `edit INDEX n/NAME`, then `edit n/NAME INDEX` is not acceptable.","lastModifiedDate":"2022-09-25"},{"lineNumber":66,"author":{"gitId":"GarethOng"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":67,"author":{"gitId":"GarethOng"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"GarethOng"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"GarethOng"},"content":"# 2. Quick Start \u003ca id\u003d\"2-quick-start\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"GarethOng"},"content":"1. Download the latest `SOConnect.jar` from [here](https://github.com/AY2223S1-CS2103T-W08-3/tp).","lastModifiedDate":"2022-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"GarethOng"},"content":"   1. **Double-click** the file to start the app or  using **CLI** and type `java -jar SOConnect.jar`. The GUI similar to the below should appear in a few seconds. Below is an UI mockup.","lastModifiedDate":"2022-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"GarethOng"},"content":"1. Refer to the [Features](#2-features) below for details of each command.","lastModifiedDate":"2022-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"GarethOng"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"GarethOng"},"content":"# 3. Features \u003ca id\u003d\"3-features\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"GarethOng"},"content":"## 3.1 Add-Related Commands \u003ca id\u003d\"31-add-commands\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":89,"author":{"gitId":"GarethOng"},"content":"The Add-Related commands include `student`, `prof` and `ta`. These are the commands related to adding new person to the database.","lastModifiedDate":"2022-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"GarethOng"},"content":"### 3.1.1 Adding a new Student Contact: `student`\u003ca id\u003d\"311-add-student\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":92,"author":{"gitId":"GarethOng"},"content":"[coming soon]","lastModifiedDate":"2022-09-25"},{"lineNumber":93,"author":{"gitId":"GarethOng"},"content":"### 3.1.2 Add a new Prof Contact: `prof`\u003ca id\u003d\"312-add-prof\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":94,"author":{"gitId":"GarethOng"},"content":"[coming soon]","lastModifiedDate":"2022-09-25"},{"lineNumber":95,"author":{"gitId":"GarethOng"},"content":"### 3.1.3 Add a new TA Contact: `ta`\u003ca id\u003d\"313-add-ta\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":96,"author":{"gitId":"GarethOng"},"content":"[coming soon]","lastModifiedDate":"2022-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"GarethOng"},"content":"## 3.2 Editing-Related Commands \u003ca id\u003d\"32-edit-commands\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":99,"author":{"gitId":"GarethOng"},"content":"### 3.2.1 Delete a person\u003ca id\u003d\"321-delete-person\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":100,"author":{"gitId":"GarethOng"},"content":"[coming soon]","lastModifiedDate":"2022-09-25"},{"lineNumber":101,"author":{"gitId":"GarethOng"},"content":"### 3.2.2 Edit contact\u003ca id\u003d\"322-edit-contact\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":102,"author":{"gitId":"GarethOng"},"content":"[coming soon]","lastModifiedDate":"2022-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"GarethOng"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"GarethOng"},"content":"## 3.3 Searching-Related Commands\u003ca id\u003d\"33-search-commands\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":108,"author":{"gitId":"GarethOng"},"content":"### 3.3.1 Locate contact\u003ca id\u003d\"331-locate-contact\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":109,"author":{"gitId":"GarethOng"},"content":"[coming soon]","lastModifiedDate":"2022-09-25"},{"lineNumber":110,"author":{"gitId":"GarethOng"},"content":"### 3.3.2 List contact\u003ca id\u003d\"332-list-contact\"\u003e\u003c/a\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":111,"author":{"gitId":"GarethOng"},"content":"[coming soon]","lastModifiedDate":"2022-09-25"},{"lineNumber":112,"author":{"gitId":"GarethOng"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"GarethOng"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"GarethOng":90,"-":24}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"title: SoConnect","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W08-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-W08-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W08-3/tp/branch/master/graphs/badge.svg)](https://app.codecov.io/gh/AY2223S1-CS2103T-W08-3/tp)","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"**SoConnect is a desktop application for NUS School of Computing Students to manage their contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"* If you are interested in using SoConnect, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Jonaspng":6,"-":14}},{"path":"docs/team/garethong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"GarethOng"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"GarethOng"},"content":"layout: page","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"GarethOng"},"content":"title: Gareth Ong\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"GarethOng"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"GarethOng"},"content":"### Project: SoConnect","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"GarethOng"},"content":"SoConnect is a desktop address book application designed for National University of Singapore (NUS) Computer Science Undergraduates. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"GarethOng"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"GarethOng"},"content":"to be added soon...","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"GarethOng"},"content":"[//]: # ()","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"GarethOng"},"content":"[//]: # (* **New Feature**: Added the ability to undo/redo previous commands.)","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"GarethOng"},"content":"[//]: # (  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.)","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"GarethOng"},"content":"[//]: # (  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.)","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"GarethOng"},"content":"[//]: # (  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.)","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"GarethOng"},"content":"[//]: # (  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*)","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"GarethOng"},"content":"[//]: # ()","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"GarethOng"},"content":"[//]: # (* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.)","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"GarethOng"},"content":"[//]: # ()","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"GarethOng"},"content":"[//]: # (* **Code contributed**: [RepoSense link]\u0026#40;\u0026#41;)","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"GarethOng"},"content":"[//]: # ()","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"GarethOng"},"content":"[//]: # (* **Project management**:)","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"GarethOng"},"content":"[//]: # (  * Managed releases `v1.3` - `v1.5rc` \u0026#40;3 releases\u0026#41; on GitHub)","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"GarethOng"},"content":"[//]: # ()","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"GarethOng"},"content":"[//]: # (* **Enhancements to existing features**:)","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":38,"author":{"gitId":"GarethOng"},"content":"[//]: # (  * Updated the GUI color scheme \u0026#40;Pull requests [\\#33]\u0026#40;\u0026#41;, [\\#34]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"GarethOng"},"content":"[//]: # (  * Wrote additional tests for existing features to increase coverage from 88% to 92% \u0026#40;Pull requests [\\#36]\u0026#40;\u0026#41;, [\\#38]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-26"},{"lineNumber":41,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":42,"author":{"gitId":"GarethOng"},"content":"[//]: # ()","lastModifiedDate":"2022-09-26"},{"lineNumber":43,"author":{"gitId":"GarethOng"},"content":"[//]: # (* **Documentation**:)","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"GarethOng"},"content":"[//]: # (  * User Guide:)","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":47,"author":{"gitId":"GarethOng"},"content":"[//]: # (    * Added documentation for the features `delete` and `find` [\\#72]\u0026#40;\u0026#41;)","lastModifiedDate":"2022-09-26"},{"lineNumber":48,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":49,"author":{"gitId":"GarethOng"},"content":"[//]: # (    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]\u0026#40;\u0026#41;)","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":51,"author":{"gitId":"GarethOng"},"content":"[//]: # (  * Developer Guide:)","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":53,"author":{"gitId":"GarethOng"},"content":"[//]: # (    * Added implementation details of the `delete` feature.)","lastModifiedDate":"2022-09-26"},{"lineNumber":54,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":55,"author":{"gitId":"GarethOng"},"content":"[//]: # ()","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"GarethOng"},"content":"[//]: # (* **Community**:)","lastModifiedDate":"2022-09-26"},{"lineNumber":57,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"GarethOng"},"content":"[//]: # (  * PRs reviewed \u0026#40;with non-trivial review comments\u0026#41;: [\\#12]\u0026#40;\u0026#41;, [\\#32]\u0026#40;\u0026#41;, [\\#19]\u0026#40;\u0026#41;, [\\#42]\u0026#40;\u0026#41;)","lastModifiedDate":"2022-09-26"},{"lineNumber":59,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":60,"author":{"gitId":"GarethOng"},"content":"[//]: # (  * Contributed to forum discussions \u0026#40;examples: [1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;, [3]\u0026#40;\u0026#41;, [4]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-26"},{"lineNumber":61,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":62,"author":{"gitId":"GarethOng"},"content":"[//]: # (  * Reported bugs and suggestions for other teams in the class \u0026#40;examples: [1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;, [3]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-26"},{"lineNumber":63,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":64,"author":{"gitId":"GarethOng"},"content":"[//]: # (  * Some parts of the history feature I added was adopted by several other class mates \u0026#40;[1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-26"},{"lineNumber":65,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":66,"author":{"gitId":"GarethOng"},"content":"[//]: # ()","lastModifiedDate":"2022-09-26"},{"lineNumber":67,"author":{"gitId":"GarethOng"},"content":"[//]: # (* **Tools**:)","lastModifiedDate":"2022-09-26"},{"lineNumber":68,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":69,"author":{"gitId":"GarethOng"},"content":"[//]: # (  * Integrated a third party library \u0026#40;Natty\u0026#41; to the project \u0026#40;[\\#42]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-26"},{"lineNumber":70,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":71,"author":{"gitId":"GarethOng"},"content":"[//]: # (  * Integrated a new Github plugin \u0026#40;CircleCI\u0026#41; to the team repo)","lastModifiedDate":"2022-09-26"},{"lineNumber":72,"author":{"gitId":"GarethOng"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":73,"author":{"gitId":"GarethOng"},"content":"[//]: # ()","lastModifiedDate":"2022-09-26"},{"lineNumber":74,"author":{"gitId":"GarethOng"},"content":"[//]: # (* _{you can add/remove categories in the list above}_)","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"GarethOng":74}},{"path":"docs/team/jjoeyi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JJoeYi"},"content":"---","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"JJoeYi"},"content":"layout: page","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"JJoeYi"},"content":"title: Low Joe Yi\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"JJoeYi"},"content":"---","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"JJoeYi"},"content":"### Project: SoConnect","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"JJoeYi"},"content":"SoConnect is a desktop address book application designed for National University of Singapore (NUS) Computer Science Undergraduates. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"JJoeYi"},"content":"#### Overview : to be added soon","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"JJoeYi"},"content":"#### Summary of contributions :","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"JJoeYi"},"content":"- Code Contributed: To be added soon","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"JJoeYi"},"content":"- Enhancements implemented: To be added soon","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"JJoeYi"},"content":"- Contributions to the UG: To be added soon","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"JJoeYi"},"content":"- Contributions to the DG: To be added soon","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"JJoeYi"},"content":"- Contributions to team-based tasks: To be added soon","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"JJoeYi"},"content":"- Review/Mentoring Contributions: To be added soon","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"JJoeYi"},"content":"- Contributions beyond the team project: To be added soon","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":21,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"JJoeYi"},"content":"[//]: # (* **New Feature**: Added the ability to undo/redo previous commands.)","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"JJoeYi"},"content":"[//]: # (  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.)","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"JJoeYi"},"content":"[//]: # (  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.)","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"JJoeYi"},"content":"[//]: # (  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.)","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"JJoeYi"},"content":"[//]: # (  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*)","lastModifiedDate":"2022-09-20"},{"lineNumber":31,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"JJoeYi"},"content":"[//]: # ()","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"JJoeYi"},"content":"[//]: # (* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.)","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"JJoeYi"},"content":"[//]: # ()","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"JJoeYi"},"content":"[//]: # (* **Code contributed**: [RepoSense link]\u0026#40;\u0026#41;)","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"JJoeYi"},"content":"[//]: # ()","lastModifiedDate":"2022-09-20"},{"lineNumber":39,"author":{"gitId":"JJoeYi"},"content":"[//]: # (* **Project management**:)","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":41,"author":{"gitId":"JJoeYi"},"content":"[//]: # (  * Managed releases `v1.3` - `v1.5rc` \u0026#40;3 releases\u0026#41; on GitHub)","lastModifiedDate":"2022-09-20"},{"lineNumber":42,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":43,"author":{"gitId":"JJoeYi"},"content":"[//]: # ()","lastModifiedDate":"2022-09-20"},{"lineNumber":44,"author":{"gitId":"JJoeYi"},"content":"[//]: # (* **Enhancements to existing features**:)","lastModifiedDate":"2022-09-20"},{"lineNumber":45,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"JJoeYi"},"content":"[//]: # (  * Updated the GUI color scheme \u0026#40;Pull requests [\\#33]\u0026#40;\u0026#41;, [\\#34]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-20"},{"lineNumber":47,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":48,"author":{"gitId":"JJoeYi"},"content":"[//]: # (  * Wrote additional tests for existing features to increase coverage from 88% to 92% \u0026#40;Pull requests [\\#36]\u0026#40;\u0026#41;, [\\#38]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-20"},{"lineNumber":49,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":50,"author":{"gitId":"JJoeYi"},"content":"[//]: # ()","lastModifiedDate":"2022-09-20"},{"lineNumber":51,"author":{"gitId":"JJoeYi"},"content":"[//]: # (* **Documentation**:)","lastModifiedDate":"2022-09-20"},{"lineNumber":52,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":53,"author":{"gitId":"JJoeYi"},"content":"[//]: # (  * User Guide:)","lastModifiedDate":"2022-09-20"},{"lineNumber":54,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":55,"author":{"gitId":"JJoeYi"},"content":"[//]: # (    * Added documentation for the features `delete` and `find` [\\#72]\u0026#40;\u0026#41;)","lastModifiedDate":"2022-09-20"},{"lineNumber":56,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":57,"author":{"gitId":"JJoeYi"},"content":"[//]: # (    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]\u0026#40;\u0026#41;)","lastModifiedDate":"2022-09-20"},{"lineNumber":58,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":59,"author":{"gitId":"JJoeYi"},"content":"[//]: # (  * Developer Guide:)","lastModifiedDate":"2022-09-20"},{"lineNumber":60,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":61,"author":{"gitId":"JJoeYi"},"content":"[//]: # (    * Added implementation details of the `delete` feature.)","lastModifiedDate":"2022-09-20"},{"lineNumber":62,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":63,"author":{"gitId":"JJoeYi"},"content":"[//]: # ()","lastModifiedDate":"2022-09-20"},{"lineNumber":64,"author":{"gitId":"JJoeYi"},"content":"[//]: # (* **Community**:)","lastModifiedDate":"2022-09-20"},{"lineNumber":65,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":66,"author":{"gitId":"JJoeYi"},"content":"[//]: # (  * PRs reviewed \u0026#40;with non-trivial review comments\u0026#41;: [\\#12]\u0026#40;\u0026#41;, [\\#32]\u0026#40;\u0026#41;, [\\#19]\u0026#40;\u0026#41;, [\\#42]\u0026#40;\u0026#41;)","lastModifiedDate":"2022-09-20"},{"lineNumber":67,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":68,"author":{"gitId":"JJoeYi"},"content":"[//]: # (  * Contributed to forum discussions \u0026#40;examples: [1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;, [3]\u0026#40;\u0026#41;, [4]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-20"},{"lineNumber":69,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":70,"author":{"gitId":"JJoeYi"},"content":"[//]: # (  * Reported bugs and suggestions for other teams in the class \u0026#40;examples: [1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;, [3]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-20"},{"lineNumber":71,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":72,"author":{"gitId":"JJoeYi"},"content":"[//]: # (  * Some parts of the history feature I added was adopted by several other class mates \u0026#40;[1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-20"},{"lineNumber":73,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":74,"author":{"gitId":"JJoeYi"},"content":"[//]: # ()","lastModifiedDate":"2022-09-20"},{"lineNumber":75,"author":{"gitId":"JJoeYi"},"content":"[//]: # (* **Tools**:)","lastModifiedDate":"2022-09-20"},{"lineNumber":76,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":77,"author":{"gitId":"JJoeYi"},"content":"[//]: # (  * Integrated a third party library \u0026#40;Natty\u0026#41; to the project \u0026#40;[\\#42]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-20"},{"lineNumber":78,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":79,"author":{"gitId":"JJoeYi"},"content":"[//]: # (  * Integrated a new Github plugin \u0026#40;CircleCI\u0026#41; to the team repo)","lastModifiedDate":"2022-09-20"},{"lineNumber":80,"author":{"gitId":"JJoeYi"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":81,"author":{"gitId":"JJoeYi"},"content":"[//]: # ()","lastModifiedDate":"2022-09-20"},{"lineNumber":82,"author":{"gitId":"JJoeYi"},"content":"[//]: # (* _{you can add/remove categories in the list above}_)","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"JJoeYi":82}},{"path":"docs/team/jonaspng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"layout: page","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"title: Png Yi Wei Jonas\u0027 Project Portfolio Page","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"### Project: SoConnect","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"SoConnect is a desktop address book application designed for National University of Singapore (NUS) Computer Science Undergraduates. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"to be added soon...","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"[//]: # ()","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"[//]: # (* **New Feature**: Added the ability to undo/redo previous commands.)","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"[//]: # (  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.)","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"[//]: # (  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.)","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"[//]: # (  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.)","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"[//]: # (  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*)","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"[//]: # ()","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"[//]: # (* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.)","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"[//]: # ()","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"[//]: # (* **Code contributed**: [RepoSense link]\u0026#40;\u0026#41;)","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"[//]: # ()","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"[//]: # (* **Project management**:)","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"[//]: # (  * Managed releases `v1.3` - `v1.5rc` \u0026#40;3 releases\u0026#41; on GitHub)","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"[//]: # ()","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"[//]: # (* **Enhancements to existing features**:)","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"[//]: # (  * Updated the GUI color scheme \u0026#40;Pull requests [\\#33]\u0026#40;\u0026#41;, [\\#34]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"[//]: # (  * Wrote additional tests for existing features to increase coverage from 88% to 92% \u0026#40;Pull requests [\\#36]\u0026#40;\u0026#41;, [\\#38]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"[//]: # ()","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"[//]: # (* **Documentation**:)","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"[//]: # (  * User Guide:)","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"[//]: # (    * Added documentation for the features `delete` and `find` [\\#72]\u0026#40;\u0026#41;)","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"[//]: # (    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]\u0026#40;\u0026#41;)","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"[//]: # (  * Developer Guide:)","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"[//]: # (    * Added implementation details of the `delete` feature.)","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"[//]: # ()","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"[//]: # (* **Community**:)","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"[//]: # (  * PRs reviewed \u0026#40;with non-trivial review comments\u0026#41;: [\\#12]\u0026#40;\u0026#41;, [\\#32]\u0026#40;\u0026#41;, [\\#19]\u0026#40;\u0026#41;, [\\#42]\u0026#40;\u0026#41;)","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"[//]: # (  * Contributed to forum discussions \u0026#40;examples: [1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;, [3]\u0026#40;\u0026#41;, [4]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"[//]: # (  * Reported bugs and suggestions for other teams in the class \u0026#40;examples: [1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;, [3]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"[//]: # (  * Some parts of the history feature I added was adopted by several other class mates \u0026#40;[1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"[//]: # ()","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"[//]: # (* **Tools**:)","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"Jonaspng"},"content":"[//]: # (  * Integrated a third party library \u0026#40;Natty\u0026#41; to the project \u0026#40;[\\#42]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"Jonaspng"},"content":"[//]: # (  * Integrated a new Github plugin \u0026#40;CircleCI\u0026#41; to the team repo)","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"Jonaspng"},"content":"[//]: # ()","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"Jonaspng"},"content":"[//]: # (* _{you can add/remove categories in the list above}_)","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Jonaspng":75}},{"path":"docs/team/nitant-p.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nitant-p"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"nitant-p"},"content":"layout: page","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"nitant-p"},"content":"title: Nitant Panicker\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"nitant-p"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"nitant-p"},"content":"### Project: SoConnect","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"nitant-p"},"content":"SoConnect is a desktop address book application designed for National University of Singapore (NUS) Computer Science Undergraduates. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"nitant-p"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"nitant-p"},"content":"to be added soon...","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"nitant-p"},"content":"[//]: # ()","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"nitant-p"},"content":"[//]: # (* **New Feature**: Added the ability to undo/redo previous commands.)","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"nitant-p"},"content":"[//]: # (  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.)","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"nitant-p"},"content":"[//]: # (  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.)","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"nitant-p"},"content":"[//]: # (  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.)","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"nitant-p"},"content":"[//]: # (  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*)","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"nitant-p"},"content":"[//]: # ()","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"nitant-p"},"content":"[//]: # (* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.)","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"nitant-p"},"content":"[//]: # ()","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"nitant-p"},"content":"[//]: # (* **Code contributed**: [RepoSense link]\u0026#40;\u0026#41;)","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"nitant-p"},"content":"[//]: # ()","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"nitant-p"},"content":"[//]: # (* **Project management**:)","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"nitant-p"},"content":"[//]: # (  * Managed releases `v1.3` - `v1.5rc` \u0026#40;3 releases\u0026#41; on GitHub)","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"nitant-p"},"content":"[//]: # ()","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"nitant-p"},"content":"[//]: # (* **Enhancements to existing features**:)","lastModifiedDate":"2022-09-26"},{"lineNumber":38,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"nitant-p"},"content":"[//]: # (  * Updated the GUI color scheme \u0026#40;Pull requests [\\#33]\u0026#40;\u0026#41;, [\\#34]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":41,"author":{"gitId":"nitant-p"},"content":"[//]: # (  * Wrote additional tests for existing features to increase coverage from 88% to 92% \u0026#40;Pull requests [\\#36]\u0026#40;\u0026#41;, [\\#38]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-26"},{"lineNumber":42,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":43,"author":{"gitId":"nitant-p"},"content":"[//]: # ()","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"nitant-p"},"content":"[//]: # (* **Documentation**:)","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"nitant-p"},"content":"[//]: # (  * User Guide:)","lastModifiedDate":"2022-09-26"},{"lineNumber":47,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":48,"author":{"gitId":"nitant-p"},"content":"[//]: # (    * Added documentation for the features `delete` and `find` [\\#72]\u0026#40;\u0026#41;)","lastModifiedDate":"2022-09-26"},{"lineNumber":49,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"nitant-p"},"content":"[//]: # (    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]\u0026#40;\u0026#41;)","lastModifiedDate":"2022-09-26"},{"lineNumber":51,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"nitant-p"},"content":"[//]: # (  * Developer Guide:)","lastModifiedDate":"2022-09-26"},{"lineNumber":53,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":54,"author":{"gitId":"nitant-p"},"content":"[//]: # (    * Added implementation details of the `delete` feature.)","lastModifiedDate":"2022-09-26"},{"lineNumber":55,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"nitant-p"},"content":"[//]: # ()","lastModifiedDate":"2022-09-26"},{"lineNumber":57,"author":{"gitId":"nitant-p"},"content":"[//]: # (* **Community**:)","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":59,"author":{"gitId":"nitant-p"},"content":"[//]: # (  * PRs reviewed \u0026#40;with non-trivial review comments\u0026#41;: [\\#12]\u0026#40;\u0026#41;, [\\#32]\u0026#40;\u0026#41;, [\\#19]\u0026#40;\u0026#41;, [\\#42]\u0026#40;\u0026#41;)","lastModifiedDate":"2022-09-26"},{"lineNumber":60,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":61,"author":{"gitId":"nitant-p"},"content":"[//]: # (  * Contributed to forum discussions \u0026#40;examples: [1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;, [3]\u0026#40;\u0026#41;, [4]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-26"},{"lineNumber":62,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":63,"author":{"gitId":"nitant-p"},"content":"[//]: # (  * Reported bugs and suggestions for other teams in the class \u0026#40;examples: [1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;, [3]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-26"},{"lineNumber":64,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":65,"author":{"gitId":"nitant-p"},"content":"[//]: # (  * Some parts of the history feature I added was adopted by several other class mates \u0026#40;[1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-26"},{"lineNumber":66,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":67,"author":{"gitId":"nitant-p"},"content":"[//]: # ()","lastModifiedDate":"2022-09-26"},{"lineNumber":68,"author":{"gitId":"nitant-p"},"content":"[//]: # (* **Tools**:)","lastModifiedDate":"2022-09-26"},{"lineNumber":69,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":70,"author":{"gitId":"nitant-p"},"content":"[//]: # (  * Integrated a third party library \u0026#40;Natty\u0026#41; to the project \u0026#40;[\\#42]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-26"},{"lineNumber":71,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":72,"author":{"gitId":"nitant-p"},"content":"[//]: # (  * Integrated a new Github plugin \u0026#40;CircleCI\u0026#41; to the team repo)","lastModifiedDate":"2022-09-26"},{"lineNumber":73,"author":{"gitId":"nitant-p"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":74,"author":{"gitId":"nitant-p"},"content":"[//]: # ()","lastModifiedDate":"2022-09-26"},{"lineNumber":75,"author":{"gitId":"nitant-p"},"content":"[//]: # (* _{you can add/remove categories in the list above}_)","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"nitant-p":75}},{"path":"docs/team/normkoh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"normkoh"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"normkoh"},"content":"layout: page","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"normkoh"},"content":"title: Koh Wei Quan Norman\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"normkoh"},"content":"---","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"normkoh"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"normkoh"},"content":"#### Overview : to be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"normkoh"},"content":"#### Summary of contributions :","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"normkoh"},"content":"- Code Contributed: To be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"normkoh"},"content":"- Enhancements implemented: To be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"normkoh"},"content":"- Contributions to the UG: To be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"normkoh"},"content":"- Contributions to the DG: To be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"normkoh"},"content":"- Contributions to team-based tasks: To be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"normkoh"},"content":"- Review/Mentoring Contributions: To be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"normkoh"},"content":"- Contributions beyond the team project: To be added soon","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"normkoh"},"content":"[//]: # (* **New Feature**: Added the ability to undo/redo previous commands.)","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"normkoh"},"content":"[//]: # (  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.)","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"normkoh"},"content":"[//]: # (  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.)","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"normkoh"},"content":"[//]: # (  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.)","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"normkoh"},"content":"[//]: # (  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*)","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"normkoh"},"content":"[//]: # ()","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"normkoh"},"content":"[//]: # (* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.)","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"normkoh"},"content":"[//]: # ()","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"normkoh"},"content":"[//]: # (* **Code contributed**: [RepoSense link]\u0026#40;\u0026#41;)","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"normkoh"},"content":"[//]: # ()","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"normkoh"},"content":"[//]: # (* **Project management**:)","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"normkoh"},"content":"[//]: # (  * Managed releases `v1.3` - `v1.5rc` \u0026#40;3 releases\u0026#41; on GitHub)","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"normkoh"},"content":"[//]: # ()","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"normkoh"},"content":"[//]: # (* **Enhancements to existing features**:)","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"normkoh"},"content":"[//]: # (  * Updated the GUI color scheme \u0026#40;Pull requests [\\#33]\u0026#40;\u0026#41;, [\\#34]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"normkoh"},"content":"[//]: # (  * Wrote additional tests for existing features to increase coverage from 88% to 92% \u0026#40;Pull requests [\\#36]\u0026#40;\u0026#41;, [\\#38]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"normkoh"},"content":"[//]: # ()","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"normkoh"},"content":"[//]: # (* **Documentation**:)","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"normkoh"},"content":"[//]: # (  * User Guide:)","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"normkoh"},"content":"[//]: # (    * Added documentation for the features `delete` and `find` [\\#72]\u0026#40;\u0026#41;)","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"normkoh"},"content":"[//]: # (    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]\u0026#40;\u0026#41;)","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"normkoh"},"content":"[//]: # (  * Developer Guide:)","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"normkoh"},"content":"[//]: # (    * Added implementation details of the `delete` feature.)","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"normkoh"},"content":"[//]: # ()","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"normkoh"},"content":"[//]: # (* **Community**:)","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"normkoh"},"content":"[//]: # (  * PRs reviewed \u0026#40;with non-trivial review comments\u0026#41;: [\\#12]\u0026#40;\u0026#41;, [\\#32]\u0026#40;\u0026#41;, [\\#19]\u0026#40;\u0026#41;, [\\#42]\u0026#40;\u0026#41;)","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"normkoh"},"content":"[//]: # (  * Contributed to forum discussions \u0026#40;examples: [1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;, [3]\u0026#40;\u0026#41;, [4]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"normkoh"},"content":"[//]: # (  * Reported bugs and suggestions for other teams in the class \u0026#40;examples: [1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;, [3]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"normkoh"},"content":"[//]: # (  * Some parts of the history feature I added was adopted by several other class mates \u0026#40;[1]\u0026#40;\u0026#41;, [2]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"normkoh"},"content":"[//]: # ()","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"normkoh"},"content":"[//]: # (* **Tools**:)","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"normkoh"},"content":"[//]: # (  * Integrated a third party library \u0026#40;Natty\u0026#41; to the project \u0026#40;[\\#42]\u0026#40;\u0026#41;\u0026#41;)","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"normkoh"},"content":"[//]: # (  * Integrated a new Github plugin \u0026#40;CircleCI\u0026#41; to the team repo)","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"normkoh"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"normkoh"},"content":"[//]: # ()","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"normkoh"},"content":"[//]: # (* _{you can add/remove categories in the list above}_)","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"normkoh":80}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"     * Returns true if {@code path} can be converted into a {@code Path},","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jonaspng":1,"-":82}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Professor;","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.TeachingAssistant;","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"     * @param editPersonDescriptor details to edit the Student with","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"Jonaspng"},"content":"        Person editedPerson \u003d null;","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"Jonaspng"},"content":"        if (personToEdit instanceof Student) {","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"Jonaspng"},"content":"            Student studentToEdit \u003d (Student) personToEdit;","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"Jonaspng"},"content":"            editedPerson \u003d createEditedPerson(studentToEdit, editPersonDescriptor);","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"Jonaspng"},"content":"        } else if (personToEdit instanceof Professor) {","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"Jonaspng"},"content":"            Professor professorToEdit \u003d (Professor) personToEdit;","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"Jonaspng"},"content":"            editedPerson \u003d createEditedPerson(professorToEdit, editPersonDescriptor);","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"Jonaspng"},"content":"        } else if (personToEdit instanceof TeachingAssistant) {","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"Jonaspng"},"content":"            TeachingAssistant taToEdit \u003d (TeachingAssistant) personToEdit;","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"Jonaspng"},"content":"            editedPerson \u003d createEditedPerson(taToEdit, editPersonDescriptor);","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"Jonaspng"},"content":"    private static Person createEditedPerson(Student personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-09-19"},{"lineNumber":109,"author":{"gitId":"Jonaspng"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-09-19"},{"lineNumber":110,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":111,"author":{"gitId":"Jonaspng"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2022-09-19"},{"lineNumber":112,"author":{"gitId":"Jonaspng"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2022-09-19"},{"lineNumber":113,"author":{"gitId":"Jonaspng"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2022-09-19"},{"lineNumber":114,"author":{"gitId":"Jonaspng"},"content":"        Gender updatedGender \u003d editPersonDescriptor.getGender().orElse(personToEdit.getGender());","lastModifiedDate":"2022-09-19"},{"lineNumber":115,"author":{"gitId":"Jonaspng"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2022-09-19"},{"lineNumber":116,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":117,"author":{"gitId":"Jonaspng"},"content":"        return new Student(updatedName, updatedPhone, updatedEmail, updatedGender, updatedTags);","lastModifiedDate":"2022-09-19"},{"lineNumber":118,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":119,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":120,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":121,"author":{"gitId":"Jonaspng"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-09-19"},{"lineNumber":122,"author":{"gitId":"Jonaspng"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-09-19"},{"lineNumber":123,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":124,"author":{"gitId":"Jonaspng"},"content":"    private static Person createEditedPerson(Professor personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-09-19"},{"lineNumber":125,"author":{"gitId":"Jonaspng"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-09-19"},{"lineNumber":126,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":127,"author":{"gitId":"Jonaspng"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2022-09-19"},{"lineNumber":128,"author":{"gitId":"Jonaspng"},"content":"        ModuleCode updatedModuleCode \u003d editPersonDescriptor.getModuleCode().orElse(personToEdit.getModuleCode());","lastModifiedDate":"2022-09-19"},{"lineNumber":129,"author":{"gitId":"Jonaspng"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2022-09-19"},{"lineNumber":130,"author":{"gitId":"Jonaspng"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2022-09-19"},{"lineNumber":131,"author":{"gitId":"Jonaspng"},"content":"        Gender updatedGender \u003d editPersonDescriptor.getGender().orElse(personToEdit.getGender());","lastModifiedDate":"2022-09-19"},{"lineNumber":132,"author":{"gitId":"Jonaspng"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2022-09-19"},{"lineNumber":133,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":134,"author":{"gitId":"Jonaspng"},"content":"        return new Professor(updatedName, updatedModuleCode, updatedPhone, updatedEmail, updatedGender, updatedTags);","lastModifiedDate":"2022-09-19"},{"lineNumber":135,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":136,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":137,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":138,"author":{"gitId":"Jonaspng"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-09-19"},{"lineNumber":139,"author":{"gitId":"Jonaspng"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-09-19"},{"lineNumber":140,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":141,"author":{"gitId":"Jonaspng"},"content":"    private static Person createEditedPerson(TeachingAssistant personToEdit,","lastModifiedDate":"2022-09-19"},{"lineNumber":142,"author":{"gitId":"Jonaspng"},"content":"                                             EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-09-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"Jonaspng"},"content":"        ModuleCode updatedModuleCode \u003d editPersonDescriptor.getModuleCode().orElse(personToEdit.getModuleCode());","lastModifiedDate":"2022-09-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"Jonaspng"},"content":"        Gender updatedGender \u003d editPersonDescriptor.getGender().orElse(personToEdit.getGender());","lastModifiedDate":"2022-09-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"Jonaspng"},"content":"        return new TeachingAssistant(updatedName, updatedModuleCode, updatedPhone,","lastModifiedDate":"2022-09-19"},{"lineNumber":153,"author":{"gitId":"Jonaspng"},"content":"                updatedEmail, updatedGender, updatedTags);","lastModifiedDate":"2022-09-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":157,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"Jonaspng"},"content":"        private ModuleCode moduleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"Jonaspng"},"content":"        private Gender gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":196,"author":{"gitId":"Jonaspng"},"content":"            setModuleCode(toCopy.moduleCode);","lastModifiedDate":"2022-09-19"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":199,"author":{"gitId":"Jonaspng"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2022-09-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"Jonaspng"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, gender, tags);","lastModifiedDate":"2022-09-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"Jonaspng"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2022-09-19"},{"lineNumber":235,"author":{"gitId":"Jonaspng"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":236,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":237,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":238,"author":{"gitId":"Jonaspng"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2022-09-19"},{"lineNumber":239,"author":{"gitId":"Jonaspng"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2022-09-19"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"Jonaspng"},"content":"        public void setModuleCode(ModuleCode moduleCode) {","lastModifiedDate":"2022-09-19"},{"lineNumber":243,"author":{"gitId":"Jonaspng"},"content":"            this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":244,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":245,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":246,"author":{"gitId":"Jonaspng"},"content":"        public Optional\u003cModuleCode\u003e getModuleCode() {","lastModifiedDate":"2022-09-19"},{"lineNumber":247,"author":{"gitId":"Jonaspng"},"content":"            return Optional.ofNullable(moduleCode);","lastModifiedDate":"2022-09-19"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":253,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":285,"author":{"gitId":"Jonaspng"},"content":"                    \u0026\u0026 getGender().equals(e.getGender())","lastModifiedDate":"2022-09-19"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":288,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":290,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Jonaspng":79,"-":212}},{"path":"src/main/java/seedu/address/logic/commands/ProfCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":" * Adds a Professor to the address book.","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"public class ProfCommand extends Command {","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"    public static final String COMMAND_WORD \u003d \"prof\";","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_MODULE_CODE + \"MODULE_CODE\"","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_NAME + \"Wong Tin Lok \"","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_MODULE_CODE + \"CS1231S \"","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_EMAIL + \"wongTK@example.com \"","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_GENDER + \"Male \"","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This Professor already exists in the address book\";","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New professor added: %1$s\";","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"    private final Person toAdd;","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"     * Creates a ProfCommand to add the specified {@code Professor}","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"    public ProfCommand(Person toAdd) {","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"        this.toAdd \u003d toAdd;","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"                || (other instanceof ProfCommand // instanceof handles nulls","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"                \u0026\u0026 toAdd.equals(((ProfCommand) other).toAdd));","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Jonaspng":70}},{"path":"src/main/java/seedu/address/logic/commands/StudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":" * Adds a Student to the address book.","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"public class StudentCommand extends Command {","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"    public static final String COMMAND_WORD \u003d \"student\";","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to the address book. \"","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_EMAIL + \"JohnD@example.com \"","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_GENDER + \"Male \"","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Student added: %1$s\";","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This Student already exists in the address book\";","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"     * Creates a ProfCommand to add the specified {@code Student}","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"    public StudentCommand(Student toAdd) {","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"        this.toAdd \u003d toAdd;","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"                || (other instanceof StudentCommand // instanceof handles nulls","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"                \u0026\u0026 toAdd.equals(((StudentCommand) other).toAdd));","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Jonaspng":18,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/TaCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.TeachingAssistant;","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":" * Adds a Teaching Assistant to the address book.","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"public class TaCommand extends Command {","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"    public static final String COMMAND_WORD \u003d \"ta\";","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_MODULE_CODE + \"MODULE_CODE\"","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_NAME + \"Alic Doe \"","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_MODULE_CODE + \"CS2100 \"","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_EMAIL + \"AliceD@example.com \"","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_GENDER + \"Female \"","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This Teaching Assistant already exists in the address book\";","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Teaching Assistant added: %1$s\";","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"    private final Person toAdd;","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"     * Creates a ProfCommand to add the specified {@code person}","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"    public TaCommand(TeachingAssistant toAdd) {","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"        this.toAdd \u003d toAdd;","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"Jonaspng"},"content":"                || (other instanceof TaCommand // instanceof handles nulls","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"Jonaspng"},"content":"                \u0026\u0026 toAdd.equals(((TaCommand) other).toAdd));","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Jonaspng":72}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.logic.commands.ProfCommand;","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.logic.commands.StudentCommand;","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.logic.commands.TaCommand;","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"        case ProfCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"            return new ProfCommandParser().parse(arguments);","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"        case StudentCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"            return new StudentCommandParser().parse(arguments);","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"        case TaCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"            return new TaCommandParser().parse(arguments);","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jonaspng":11,"-":73}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"    public static final Prefix PREFIX_MODULE_CODE \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"g/\");","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Jonaspng":2,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_MODULE_CODE, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"                        PREFIX_GENDER, PREFIX_TAG);","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"        if (argMultimap.getValue(PREFIX_MODULE_CODE).isPresent()) {","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"            editPersonDescriptor.setModuleCode(ParserUtil.parseModuleCode(argMultimap","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"                    .getValue(PREFIX_MODULE_CODE).get()));","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"            editPersonDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Jonaspng":11,"-":78}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"Jonaspng"},"content":"     * Parses a {@code String gender} into an {@code Gender}.","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"Jonaspng"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"Jonaspng"},"content":"     * @throws ParseException if the given {@code gender} is invalid.","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"Jonaspng"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"Jonaspng"},"content":"        requireNonNull(gender);","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"Jonaspng"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"Jonaspng"},"content":"        if (!Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"Jonaspng"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"Jonaspng"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"Jonaspng"},"content":"     * Parses a {@code String moduleCode} into an {@code ModuleCode}.","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"Jonaspng"},"content":"     * @throws ParseException if the given {@code moduleCode} is invalid.","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"Jonaspng"},"content":"    public static ModuleCode parseModuleCode(String moduleCode) throws ParseException {","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"Jonaspng"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"Jonaspng"},"content":"        String trimmedModuleCode \u003d moduleCode.trim();","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"Jonaspng"},"content":"        if (!ModuleCode.isValidModuleCode(trimmedModuleCode)) {","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"Jonaspng"},"content":"            throw new ParseException(ModuleCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"Jonaspng"},"content":"        return new ModuleCode(trimmedModuleCode);","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Jonaspng":26,"-":115}},{"path":"src/main/java/seedu/address/logic/parser/ProfCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.logic.commands.ProfCommand;","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Professor;","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":" * Parses input arguments and creates a new ProfCommand object","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"public class ProfCommandParser implements Parser\u003cProfCommand\u003e {","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"     * Parses the given {@code String} of arguments in the context of the ProfCommand","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"     * and returns an ProfCommand object for execution.","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"    public ProfCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_MODULE_CODE, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"                        PREFIX_GENDER, PREFIX_TAG);","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_MODULE_CODE, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"                PREFIX_GENDER)","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ProfCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"        ModuleCode moduleCode \u003d ParserUtil.parseModuleCode(argMultimap.getValue(PREFIX_MODULE_CODE).get());","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"        Person person \u003d new Professor(name, moduleCode, phone, email, gender, tagList);","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"        return new ProfCommand(person);","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Jonaspng":20,"-":44}},{"path":"src/main/java/seedu/address/logic/parser/StudentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.logic.commands.StudentCommand;","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":" * Parses input arguments and creates a new StudentCommand object","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"public class StudentCommandParser implements Parser\u003cStudentCommand\u003e {","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"     * Parses the given {@code String} of arguments in the context of the StudentCommand","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"     * and returns an StudentCommand object for execution.","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"    public StudentCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GENDER, PREFIX_TAG);","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GENDER)","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, StudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"        Student person \u003d new Student(name, phone, email, gender, tagList);","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"        return new StudentCommand(person);","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Jonaspng":15,"-":44}},{"path":"src/main/java/seedu/address/logic/parser/TaCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.logic.commands.TaCommand;","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.TeachingAssistant;","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":" * Parses input arguments and creates a new TaCommand object","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"public class TaCommandParser implements Parser\u003cTaCommand\u003e {","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"     * Parses the given {@code String} of arguments in the context of the TaCommand","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"     * and returns an TaCommand object for execution.","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"    public TaCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_MODULE_CODE, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"                        PREFIX_GENDER, PREFIX_TAG);","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_MODULE_CODE, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"                PREFIX_GENDER)","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TaCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"        ModuleCode moduleCode \u003d ParserUtil.parseModuleCode(argMultimap.getValue(PREFIX_MODULE_CODE).get());","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"        TeachingAssistant person \u003d new TeachingAssistant(name, moduleCode, phone, email, gender, tagList);","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"        return new TaCommand(person);","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Jonaspng":20,"-":44}},{"path":"src/main/java/seedu/address/model/person/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":" * Represents a Person\u0027s Gender in the address book.","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGender(String)}","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"public class Gender {","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Gender can take any values, and it should not be blank\";","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"    /*","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"    public final String value;","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"     * @param gender A valid gender.","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"    public Gender(String gender) {","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"        requireNonNull(gender);","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"        value \u003d gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"    public static boolean isValidGender(String test) {","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"    public String toString() {","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"        return value;","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"                || (other instanceof Gender // instanceof handles nulls","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"                \u0026\u0026 value.equals(((Gender) other).value)); // state check","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"        return value.hashCode();","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Jonaspng":57}},{"path":"src/main/java/seedu/address/model/person/ModuleCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":" * Represents a Professor/Teaching Assistant\u0027s module code in the address book.","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidModuleCode(String)}","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"public class ModuleCode {","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Module Code can take any values, and it should not be blank\";","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"    /*","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"    public final String value;","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"     * Constructs an {@code ModuleCode}.","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"     * @param moduleCode A valid module code.","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"    public ModuleCode(String moduleCode) {","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"        checkArgument(isValidModuleCode(moduleCode), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"        value \u003d moduleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"     * Returns true if a given string is a valid module code.","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"    public static boolean isValidModuleCode(String test) {","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"    public String toString() {","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"        return value;","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"                || (other instanceof ModuleCode // instanceof handles nulls","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"                \u0026\u0026 value.equals(((ModuleCode) other).value)); // state check","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"        return value.hashCode();","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Jonaspng":57}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"public abstract class Person {","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"    private final Gender gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"    public Person(Name name, Phone phone, Email email, Gender gender, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"        requireAllNonNull(name, phone, email, gender, tags);","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"    public Gender getGender() {","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"        return gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"Jonaspng"},"content":"                \u0026\u0026 otherPerson.getGender().equals(getGender())","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"Jonaspng"},"content":"        return Objects.hash(name, phone, email, gender, tags);","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jonaspng":10,"-":92}},{"path":"src/main/java/seedu/address/model/person/Professor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":" * Represents a Professor which is-a Person in the address book.","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"public class Professor extends Person {","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"    private final ModuleCode moduleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"    public Professor(Name name, ModuleCode moduleCode, Phone phone, Email email, Gender gender, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"        super(name, phone, email, gender, tags);","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"    public ModuleCode getModuleCode() {","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"        return this.moduleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"            return true;","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"        if (!(other instanceof Professor)) {","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"            return false;","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"        Professor otherPerson \u003d (Professor) other;","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"        return super.equals(other) \u0026\u0026 otherPerson.getModuleCode().equals(getModuleCode());","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"        return Objects.hash(moduleCode, super.hashCode());","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"    public String toString() {","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"        builder.append(getName())","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"                .append(\"; Name: \")","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"                .append(getName())","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"                .append(\"; Module Code: \")","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"                .append(getModuleCode())","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"                .append(getPhone())","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"                .append(getEmail())","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"                .append(\"; Gender: \")","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"                .append(getGender());","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"        return builder.toString();","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Jonaspng":70}},{"path":"src/main/java/seedu/address/model/person/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":" * Represents a Student which is-a Person in the address book.","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"public class Student extends Person {","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"    public Student(Name name, Phone phone, Email email, Gender gender, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"        super(name, phone, email, gender, tags);","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"    public String toString() {","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"        builder.append(getName())","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"                .append(\"; Name: \")","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"                .append(getName())","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"                .append(getPhone())","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"                .append(getEmail())","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"                .append(\"; Gender: \")","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"                .append(getGender());","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"        return builder.toString();","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Jonaspng":40}},{"path":"src/main/java/seedu/address/model/person/TeachingAssistant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":" * Represents a Teaching Assistant which is-a Person in the address book.","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"public class TeachingAssistant extends Person {","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"    private final ModuleCode moduleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"    public TeachingAssistant(Name name, ModuleCode moduleCode, Phone phone, Email email, Gender gender, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"        super(name, phone, email, gender, tags);","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"    public ModuleCode getModuleCode() {","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"        return moduleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"            return true;","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"        if (!(other instanceof TeachingAssistant)) {","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"            return false;","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"        TeachingAssistant otherPerson \u003d (TeachingAssistant) other;","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"        return super.equals(other) \u0026\u0026 otherPerson.getModuleCode().equals(getModuleCode());","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"        return Objects.hash(moduleCode, super.hashCode());","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"    public String toString() {","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"        builder.append(getName())","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"                .append(\"; Name: \")","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"                .append(getName())","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"                .append(\"; Module Code: \")","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"                .append(getModuleCode())","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"                .append(getPhone())","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"                .append(getEmail())","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"                .append(\"; Gender: \")","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"                .append(getGender());","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"        return builder.toString();","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Jonaspng":71}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Professor;","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.TeachingAssistant;","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"            new Student(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"                new Gender(\"Male\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"            new Student(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"                new Gender(\"Male\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"            new Student(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"                new Gender(\"Female\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"            new Professor(new Name(\"Wong Tin Lok\"), new ModuleCode(\"CS1231S\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"                new Phone(\"91031282\"), new Email(\"wongtk@example.com\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"                new Gender(\"Male\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"            new TeachingAssistant(new Name(\"Irfan Ibrahim\"), new ModuleCode(\"CS2100\"), new Phone(\"92492021\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"                new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"                new Gender(\"Male\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"                getTagSet(\"testing\")),","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"            new Student(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"                new Gender(\"Male\"),","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Jonaspng":20,"-":46}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"import com.fasterxml.jackson.databind.annotation.JsonDeserialize;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Professor;","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.TeachingAssistant;","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"@JsonDeserialize(using \u003d JsonAdaptedPersonDeserializer.class)","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"abstract class JsonAdaptedPerson {","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"    private final String type;","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"    private final String moduleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"    private final String gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"type\") String type, @JsonProperty(\"name\") String name,","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"                             @JsonProperty(\"moduleCode\") String moduleCode, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"        this.type \u003d type;","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"        if (source instanceof Student) {","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"            type \u003d \"s\";","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"            moduleCode \u003d \"\";","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"        } else if (source instanceof Professor) {","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"            type \u003d \"p\";","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"            Professor prof \u003d (Professor) source;","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"            moduleCode \u003d prof.getModuleCode().value;","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"        } else if (source instanceof TeachingAssistant) {","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"            type \u003d \"t\";","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"            TeachingAssistant ta \u003d (TeachingAssistant) source;","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"            moduleCode \u003d ta.getModuleCode().value;","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"        } else {","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"            type \u003d \"invalid\";","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"Jonaspng"},"content":"            moduleCode \u003d \"invalid\";","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"Jonaspng"},"content":"        gender \u003d source.getGender().value;","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"Jonaspng"},"content":"    public String getType() {","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"Jonaspng"},"content":"        return this.type;","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"Jonaspng"},"content":"    public String getName() {","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"Jonaspng"},"content":"        return this.name;","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"Jonaspng"},"content":"    public String getPhone() {","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"Jonaspng"},"content":"        return this.phone;","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"Jonaspng"},"content":"    public String getEmail() {","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"Jonaspng"},"content":"        return this.email;","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"Jonaspng"},"content":"    public String getGender() {","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"Jonaspng"},"content":"        return this.gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"Jonaspng"},"content":"    public String getModuleCode() {","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"Jonaspng"},"content":"        return this.moduleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"Jonaspng"},"content":"    public List\u003cJsonAdaptedTag\u003e getTagged() {","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"Jonaspng"},"content":"        return this.tagged;","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"Jonaspng"},"content":"    public abstract Person toModelType() throws IllegalValueException;","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Jonaspng":46,"-":59}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPersonDeserializer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"import java.util.List;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"import com.fasterxml.jackson.core.JsonParser;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"import com.fasterxml.jackson.databind.JsonDeserializer;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":" * Custom Deserializer that deserialize person into Student or Professor or Teaching Assistant.","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"public class JsonAdaptedPersonDeserializer extends JsonDeserializer\u003cJsonAdaptedPerson\u003e {","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"    public JsonAdaptedPerson deserialize(JsonParser p, DeserializationContext ctxt) throws IOException,","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"            JsonProcessingException {","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"        Root root \u003d p.readValueAs(Root.class);","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"        if (root.type.equals(\"p\")) {","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"            return new JsonAdaptedProfessor(root.type, root.name, root.moduleCode, root.phone,","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"                    root.email, root.gender, root.tagged);","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"        } else if (root.type.equals(\"s\")) {","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"            return new JsonAdaptedStudent(root.type, root.name, \"\", root.phone,","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"                    root.email, root.gender, root.tagged);","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"        } else if (root.type.equals(\"t\")) {","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"            return new JsonAdaptedTeachingAssistant(root.type, root.name, root.moduleCode, root.phone,","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"                    root.email, root.gender, root.tagged);","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"        } else {","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"            throw new IOException(\"Invalid type\");","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"    private static class Root {","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"        private String type;","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"        private String moduleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"        private String name;","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"        private String phone;","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"        private String email;","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"        private String gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"        private List\u003cJsonAdaptedTag\u003e tagged;","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Jonaspng":44}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedProfessor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"import java.util.List;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Professor;","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":" * Jackson-friendly version of {@link Professor}.","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"class JsonAdaptedProfessor extends JsonAdaptedPerson {","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"     * Constructs a {@code JsonAdaptedProfessor} with the given person details.","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"    @JsonCreator","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"    public JsonAdaptedProfessor(@JsonProperty(\"type\") String type, @JsonProperty(\"name\") String name,","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"                                @JsonProperty(\"moduleCode\") String moduleCode, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"                                @JsonProperty(\"email\") String email, @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"                                @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"        super(type, name, moduleCode, phone, email, gender, tagged);","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"     * Converts a given {@code Professor} into this class for Jackson use.","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"    public JsonAdaptedProfessor(Professor source) {","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"        super(source);","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Professor} object.","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted Professor.","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"        for (JsonAdaptedTag tag : getTagged()) {","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"        if (getName() \u003d\u003d null) {","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"        if (!Name.isValidName(getName())) {","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"        final Name modelName \u003d new Name(getName());","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"        if (getPhone() \u003d\u003d null) {","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"        if (!Phone.isValidPhone(getPhone())) {","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"Jonaspng"},"content":"        final Phone modelPhone \u003d new Phone(getPhone());","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"Jonaspng"},"content":"        if (getEmail() \u003d\u003d null) {","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"Jonaspng"},"content":"        if (!Email.isValidEmail(getEmail())) {","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"Jonaspng"},"content":"        final Email modelEmail \u003d new Email(getEmail());","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"Jonaspng"},"content":"        if (getGender() \u003d\u003d null) {","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"Jonaspng"},"content":"        if (!Gender.isValidGender(getGender())) {","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"Jonaspng"},"content":"        final Gender modelGender \u003d new Gender(getGender());","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"Jonaspng"},"content":"        if (getModuleCode() \u003d\u003d null) {","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"Jonaspng"},"content":"                    ModuleCode.class.getSimpleName()));","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"Jonaspng"},"content":"        if (!ModuleCode.isValidModuleCode(getModuleCode())) {","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"Jonaspng"},"content":"        final ModuleCode modelModuleCode \u003d new ModuleCode(getModuleCode());","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"Jonaspng"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"Jonaspng"},"content":"        return new Professor(modelName, modelModuleCode, modelPhone, modelEmail, modelGender, modelTags);","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Jonaspng":100}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"import java.util.List;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"class JsonAdaptedStudent extends JsonAdaptedPerson {","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given person details.","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"    @JsonCreator","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"type\") String type, @JsonProperty(\"name\") String name,","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"                              @JsonProperty(\"module code\") String moduleCode,","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"                              @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"                              @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"                              @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"        super(type, name, moduleCode, phone, email, gender, tagged);","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"        super(source);","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Student} object.","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"        for (JsonAdaptedTag tag : getTagged()) {","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"        if (getName() \u003d\u003d null) {","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"        if (!Name.isValidName(getName())) {","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"        final Name modelName \u003d new Name(getName());","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"        if (getPhone() \u003d\u003d null) {","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"        if (!Phone.isValidPhone(getPhone())) {","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"Jonaspng"},"content":"        final Phone modelPhone \u003d new Phone(getPhone());","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"Jonaspng"},"content":"        if (getEmail() \u003d\u003d null) {","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"Jonaspng"},"content":"        if (!Email.isValidEmail(getEmail())) {","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"Jonaspng"},"content":"        final Email modelEmail \u003d new Email(getEmail());","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"Jonaspng"},"content":"        if (getGender() \u003d\u003d null) {","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"Jonaspng"},"content":"        if (!Gender.isValidGender(getGender())) {","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"Jonaspng"},"content":"        final Gender modelGender \u003d new Gender(getGender());","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"Jonaspng"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"Jonaspng"},"content":"        return new Student(modelName, modelPhone, modelEmail, modelGender, modelTags);","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Jonaspng":92}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTeachingAssistant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"import java.util.List;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.TeachingAssistant;","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":" * Jackson-friendly version of {@link TeachingAssistant}.","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"class JsonAdaptedTeachingAssistant extends JsonAdaptedPerson {","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"     * Constructs a {@code JsonAdaptedTeachingAssistant} with the given person details.","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"    @JsonCreator","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"    public JsonAdaptedTeachingAssistant(@JsonProperty(\"type\") String type, @JsonProperty(\"name\") String name,","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"                                        @JsonProperty(\"moduleCode\") String moduleCode,","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"                                        @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"                                        @JsonProperty(\"email\") String email, @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"                                        @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"        super(type, name, moduleCode, phone, email, gender, tagged);","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"     * Converts a given {@code TeachingAssistant} into this class for Jackson use.","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"    public JsonAdaptedTeachingAssistant(TeachingAssistant source) {","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"        super(source);","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code TeachingAssistant} object.","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted TeachingAssistant.","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"        for (JsonAdaptedTag tag : getTagged()) {","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"        if (getName() \u003d\u003d null) {","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"        if (!Name.isValidName(getName())) {","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"        final Name modelName \u003d new Name(getName());","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"        if (getPhone() \u003d\u003d null) {","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"        if (!Phone.isValidPhone(getPhone())) {","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"Jonaspng"},"content":"        final Phone modelPhone \u003d new Phone(getPhone());","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"Jonaspng"},"content":"        if (getEmail() \u003d\u003d null) {","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"Jonaspng"},"content":"        if (!Email.isValidEmail(getEmail())) {","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"Jonaspng"},"content":"        final Email modelEmail \u003d new Email(getEmail());","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"Jonaspng"},"content":"        if (getGender() \u003d\u003d null) {","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"Jonaspng"},"content":"        if (!Gender.isValidGender(getGender())) {","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"Jonaspng"},"content":"        final Gender modelGender \u003d new Gender(getGender());","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"Jonaspng"},"content":"        if (getModuleCode() \u003d\u003d null) {","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"Jonaspng"},"content":"                    ModuleCode.class.getSimpleName()));","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"Jonaspng"},"content":"        if (!ModuleCode.isValidModuleCode(getModuleCode())) {","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"Jonaspng"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"Jonaspng"},"content":"        final ModuleCode modelModuleCode \u003d new ModuleCode(getModuleCode());","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"Jonaspng"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"Jonaspng"},"content":"        return new TeachingAssistant(modelName, modelModuleCode, modelPhone, modelEmail, modelGender, modelTags);","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":102,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Jonaspng":102}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Professor;","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.TeachingAssistant;","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"        persons.addAll(source.getPersonList().stream().map(this::checkPerson).collect(Collectors.toList()));","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"    public JsonAdaptedPerson checkPerson(Person person) {","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"        if (person instanceof Professor) {","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"            Professor prof \u003d (Professor) person;","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"            return new JsonAdaptedProfessor(prof);","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"        } else if (person instanceof Student) {","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"            Student student \u003d (Student) person;","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"            return new JsonAdaptedStudent(student);","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"        } else if (person instanceof TeachingAssistant) {","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"            TeachingAssistant ta \u003d (TeachingAssistant) person;","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"            return new JsonAdaptedTeachingAssistant(ta);","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"        } else {","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"            return null;","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Jonaspng":19,"-":59}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"    private Label gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"        gender.setText(person.getGender().value);","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Jonaspng":2,"-":75}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"      \u003cLabel fx:id\u003d\"gender\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gender\" /\u003e","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jonaspng":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"    //todo test fail idk why","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"    /*","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"Jonaspng"},"content":"        String addCommand \u003d StudentCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"Jonaspng"},"content":"                + GENDER_DESC_AMY;","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"Jonaspng"},"content":"        Person expectedPerson \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Jonaspng":6,"-":151}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.TeachingAssistant;","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.testutil.ProfessorBuilder;","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.testutil.TeachingAssistantBuilder;","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"    public void execute_newStudent_success() {","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"        Student validPerson \u003d new StudentBuilder().build();","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"        assertCommandSuccess(new StudentCommand(validPerson), model,","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"                String.format(StudentCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"    public void execute_newProfessor_success() {","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"        Person validPerson \u003d new ProfessorBuilder().build();","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"        assertCommandSuccess(new ProfCommand(validPerson), model,","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"                String.format(ProfCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"    public void execute_newTeachingAssistant_success() {","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"        TeachingAssistant validPerson \u003d new TeachingAssistantBuilder().build();","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"        assertCommandSuccess(new TaCommand(validPerson), model,","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"                String.format(TaCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"        assertCommandFailure(new StudentCommand((Student) personInList), model,","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"                StudentCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Jonaspng":32,"-":39}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"    public static final String VALID_MODULE_CODE_BOB \u003d \"CS1231S\";","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"    public static final String VALID_MODULE_CODE_CABE \u003d \"CS2100\";","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"    public static final String VALID_NAME_CABE \u003d \"Cabe Tan\";","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"    public static final String VALID_PHONE_CABE \u003d \"33333333\";","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"    public static final String VALID_EMAIL_CABE \u003d \"cabe@example.com\";","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"    public static final String VALID_GENDER_AMY \u003d \"Female\";","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"    public static final String VALID_GENDER_BOB \u003d \"Male\";","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"    public static final String VALID_GENDER_CABE \u003d \"Male\";","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"    public static final String NAME_DESC_CABE \u003d \" \" + PREFIX_NAME + VALID_NAME_CABE;","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"    public static final String MODULE_CODE_DESC_BOB \u003d \" \" + PREFIX_MODULE_CODE + VALID_MODULE_CODE_BOB;","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"    public static final String MODULE_CODE_DESC_CABE \u003d \" \" + PREFIX_MODULE_CODE + VALID_MODULE_CODE_CABE;","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"    public static final String PHONE_DESC_CABE \u003d \" \" + PREFIX_PHONE + VALID_PHONE_CABE;","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"    public static final String EMAIL_DESC_CABE \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_CABE;","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"    public static final String GENDER_DESC_AMY \u003d \" \" + PREFIX_GENDER + VALID_GENDER_AMY;","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"    public static final String GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER + VALID_GENDER_BOB;","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"    public static final String GENDER_DESC_CABE \u003d \" \" + PREFIX_GENDER + VALID_GENDER_CABE;","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"    public static final String INVALID_GENDER_DESC \u003d \" \" + PREFIX_GENDER; // empty string not allowed for gender","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"    public static final String INVALID_MODULE_CODE \u003d \" \" + PREFIX_MODULE_CODE + \" \"; // empty string not allowed","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"Jonaspng"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_CABE;","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"Jonaspng"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withGender(VALID_GENDER_AMY)","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"Jonaspng"},"content":"                .withModuleCode(VALID_MODULE_CODE_BOB)","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"Jonaspng"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withGender(VALID_GENDER_BOB)","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"Jonaspng"},"content":"        DESC_CABE \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_CABE)","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"Jonaspng"},"content":"                .withModuleCode(VALID_MODULE_CODE_CABE)","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"Jonaspng"},"content":"                .withPhone(VALID_PHONE_CABE).withEmail(VALID_EMAIL_CABE).withGender(VALID_GENDER_CABE)","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"Jonaspng"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Jonaspng":28,"-":120}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"//import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"    // Todo for whoever is doing edit commmand. Have Fun :)","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"//    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"//    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"//    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"//        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"//        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"//    }","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"//    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"//    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"//        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"//        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"//        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"//        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"//                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"//                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"//        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"Jonaspng"},"content":"//        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"Jonaspng"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"Jonaspng"},"content":"//    }","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"Jonaspng"},"content":"//    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"Jonaspng"},"content":"//    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"Jonaspng"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"Jonaspng"},"content":"//        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"Jonaspng"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"Jonaspng"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"Jonaspng"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"Jonaspng"},"content":"//    }","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"Jonaspng"},"content":"//    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"Jonaspng"},"content":"//    public void execute_filteredList_success() {","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"Jonaspng"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"Jonaspng"},"content":"//        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"Jonaspng"},"content":"//        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"Jonaspng"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"Jonaspng"},"content":"//                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"Jonaspng"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"Jonaspng"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"Jonaspng"},"content":"//        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"Jonaspng"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"Jonaspng"},"content":"//    }","lastModifiedDate":"2022-09-19"},{"lineNumber":102,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":103,"author":{"gitId":"Jonaspng"},"content":"//    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"Jonaspng"},"content":"//    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2022-09-19"},{"lineNumber":105,"author":{"gitId":"Jonaspng"},"content":"//        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-09-19"},{"lineNumber":106,"author":{"gitId":"Jonaspng"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":107,"author":{"gitId":"Jonaspng"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-09-19"},{"lineNumber":108,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":109,"author":{"gitId":"Jonaspng"},"content":"//        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-09-19"},{"lineNumber":110,"author":{"gitId":"Jonaspng"},"content":"//    }","lastModifiedDate":"2022-09-19"},{"lineNumber":111,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":112,"author":{"gitId":"Jonaspng"},"content":"//    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":113,"author":{"gitId":"Jonaspng"},"content":"//    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2022-09-19"},{"lineNumber":114,"author":{"gitId":"Jonaspng"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-09-19"},{"lineNumber":115,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":116,"author":{"gitId":"Jonaspng"},"content":"//        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2022-09-19"},{"lineNumber":117,"author":{"gitId":"Jonaspng"},"content":"//        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-09-19"},{"lineNumber":118,"author":{"gitId":"Jonaspng"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-09-19"},{"lineNumber":119,"author":{"gitId":"Jonaspng"},"content":"//                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2022-09-19"},{"lineNumber":120,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":121,"author":{"gitId":"Jonaspng"},"content":"//        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-09-19"},{"lineNumber":122,"author":{"gitId":"Jonaspng"},"content":"//    }","lastModifiedDate":"2022-09-19"},{"lineNumber":123,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":124,"author":{"gitId":"Jonaspng"},"content":"//    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":125,"author":{"gitId":"Jonaspng"},"content":"//    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-09-19"},{"lineNumber":126,"author":{"gitId":"Jonaspng"},"content":"//        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-09-19"},{"lineNumber":127,"author":{"gitId":"Jonaspng"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":128,"author":{"gitId":"Jonaspng"},"content":"//        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-09-19"},{"lineNumber":129,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":130,"author":{"gitId":"Jonaspng"},"content":"//        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-09-19"},{"lineNumber":131,"author":{"gitId":"Jonaspng"},"content":"//    }","lastModifiedDate":"2022-09-19"},{"lineNumber":132,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":133,"author":{"gitId":"Jonaspng"},"content":"//    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":134,"author":{"gitId":"Jonaspng"},"content":"//     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-09-19"},{"lineNumber":135,"author":{"gitId":"Jonaspng"},"content":"//     * but smaller than size of address book","lastModifiedDate":"2022-09-19"},{"lineNumber":136,"author":{"gitId":"Jonaspng"},"content":"//     */","lastModifiedDate":"2022-09-19"},{"lineNumber":137,"author":{"gitId":"Jonaspng"},"content":"//    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":138,"author":{"gitId":"Jonaspng"},"content":"//    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-09-19"},{"lineNumber":139,"author":{"gitId":"Jonaspng"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-09-19"},{"lineNumber":140,"author":{"gitId":"Jonaspng"},"content":"//        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-09-19"},{"lineNumber":141,"author":{"gitId":"Jonaspng"},"content":"//        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-09-19"},{"lineNumber":142,"author":{"gitId":"Jonaspng"},"content":"//        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-09-19"},{"lineNumber":143,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":144,"author":{"gitId":"Jonaspng"},"content":"//        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2022-09-19"},{"lineNumber":145,"author":{"gitId":"Jonaspng"},"content":"//                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-09-19"},{"lineNumber":146,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":147,"author":{"gitId":"Jonaspng"},"content":"//        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-09-19"},{"lineNumber":148,"author":{"gitId":"Jonaspng"},"content":"//    }","lastModifiedDate":"2022-09-19"},{"lineNumber":149,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":150,"author":{"gitId":"Jonaspng"},"content":"//    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":151,"author":{"gitId":"Jonaspng"},"content":"//    public void equals() {","lastModifiedDate":"2022-09-19"},{"lineNumber":152,"author":{"gitId":"Jonaspng"},"content":"//        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2022-09-19"},{"lineNumber":153,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":154,"author":{"gitId":"Jonaspng"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2022-09-19"},{"lineNumber":155,"author":{"gitId":"Jonaspng"},"content":"//        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2022-09-19"},{"lineNumber":156,"author":{"gitId":"Jonaspng"},"content":"//        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-09-19"},{"lineNumber":157,"author":{"gitId":"Jonaspng"},"content":"//        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-09-19"},{"lineNumber":158,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":159,"author":{"gitId":"Jonaspng"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2022-09-19"},{"lineNumber":160,"author":{"gitId":"Jonaspng"},"content":"//        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-09-19"},{"lineNumber":161,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":162,"author":{"gitId":"Jonaspng"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2022-09-19"},{"lineNumber":163,"author":{"gitId":"Jonaspng"},"content":"//        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-09-19"},{"lineNumber":164,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":165,"author":{"gitId":"Jonaspng"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2022-09-19"},{"lineNumber":166,"author":{"gitId":"Jonaspng"},"content":"//        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-09-19"},{"lineNumber":167,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":168,"author":{"gitId":"Jonaspng"},"content":"//        // different index -\u003e returns false","lastModifiedDate":"2022-09-19"},{"lineNumber":169,"author":{"gitId":"Jonaspng"},"content":"//        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2022-09-19"},{"lineNumber":170,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":171,"author":{"gitId":"Jonaspng"},"content":"//        // different descriptor -\u003e returns false","lastModifiedDate":"2022-09-19"},{"lineNumber":172,"author":{"gitId":"Jonaspng"},"content":"//        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2022-09-19"},{"lineNumber":173,"author":{"gitId":"Jonaspng"},"content":"//    }","lastModifiedDate":"2022-09-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Jonaspng":165,"-":10}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"        // different gender -\u003e returns false","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withGender(VALID_GENDER_BOB).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Jonaspng":3,"-":55}},{"path":"src/test/java/seedu/address/logic/commands/StudentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"public class StudentCommandTest {","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"        assertThrows(NullPointerException.class, () -\u003e new StudentCommand(null));","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"        Student validPerson \u003d new StudentBuilder().build();","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"        CommandResult commandResult \u003d new StudentCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"        assertEquals(String.format(StudentCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"        Student validPerson \u003d new StudentBuilder().build();","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"        StudentCommand studentCommand \u003d new StudentCommand(validPerson);","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"                StudentCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e studentCommand.execute(modelStub));","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"        Person alice \u003d new StudentBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"        Person bob \u003d new StudentBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"        StudentCommand addAliceCommand \u003d new StudentCommand((Student) alice);","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"        StudentCommand addBobCommand \u003d new StudentCommand((Student) bob);","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"        StudentCommand addAliceCommandCopy \u003d new StudentCommand((Student) alice);","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Jonaspng":16,"-":180}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_CABE;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MODULE_CODE;","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MODULE_CODE_DESC_BOB;","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MODULE_CODE_DESC_CABE;","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_CABE;","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_CABE;","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_CABE;","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_CODE_BOB;","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.testutil.TypicalPersons.CABE;","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.logic.commands.ProfCommand;","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.logic.commands.StudentCommand;","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.logic.commands.TaCommand;","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.TeachingAssistant;","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.testutil.ProfessorBuilder;","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.testutil.TeachingAssistantBuilder;","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"    private final ProfCommandParser profParser \u003d new ProfCommandParser();","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"    private final StudentCommandParser studentParser \u003d new StudentCommandParser();","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"    private final TaCommandParser taParser \u003d new TaCommandParser();","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"Jonaspng"},"content":"    public void studentParse_allFieldsPresent_success() {","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"Jonaspng"},"content":"        Person expectedPerson \u003d new StudentBuilder(AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"Jonaspng"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"Jonaspng"},"content":"        assertParseSuccess(studentParser, PREAMBLE_WHITESPACE + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"Jonaspng"},"content":"                + EMAIL_DESC_AMY + GENDER_DESC_AMY + TAG_DESC_FRIEND, new StudentCommand((Student) expectedPerson));","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"Jonaspng"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"Jonaspng"},"content":"        assertParseSuccess(studentParser, NAME_DESC_BOB + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"Jonaspng"},"content":"                + GENDER_DESC_AMY + TAG_DESC_FRIEND, new StudentCommand((Student) expectedPerson));","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"Jonaspng"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"Jonaspng"},"content":"        assertParseSuccess(studentParser, NAME_DESC_BOB + NAME_DESC_AMY + PHONE_DESC_BOB + PHONE_DESC_AMY","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"Jonaspng"},"content":"                + EMAIL_DESC_AMY + GENDER_DESC_AMY + TAG_DESC_FRIEND, new StudentCommand((Student) expectedPerson));","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"Jonaspng"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"Jonaspng"},"content":"        assertParseSuccess(studentParser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_BOB + EMAIL_DESC_AMY","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"Jonaspng"},"content":"                + GENDER_DESC_AMY + TAG_DESC_FRIEND, new StudentCommand((Student) expectedPerson));","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"Jonaspng"},"content":"        // multiple addresses - last gender accepted","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"Jonaspng"},"content":"        assertParseSuccess(studentParser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"Jonaspng"},"content":"                + GENDER_DESC_BOB + GENDER_DESC_AMY + TAG_DESC_FRIEND, new StudentCommand((Student) expectedPerson));","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"Jonaspng"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"Jonaspng"},"content":"        Person expectedPersonMultipleTags \u003d new StudentBuilder(AMY).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"Jonaspng"},"content":"                .build();","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"Jonaspng"},"content":"        assertParseSuccess(studentParser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + GENDER_DESC_AMY","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"Jonaspng"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new StudentCommand((Student) expectedPersonMultipleTags));","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"Jonaspng"},"content":"    public void profParse_allFieldsPresent_success() {","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"Jonaspng"},"content":"        Person expectedPerson \u003d new ProfessorBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"Jonaspng"},"content":"        assertParseSuccess(profParser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + MODULE_CODE_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"Jonaspng"},"content":"                + PHONE_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":105,"author":{"gitId":"Jonaspng"},"content":"                + EMAIL_DESC_BOB + VALID_GENDER_BOB + TAG_DESC_FRIEND, new ProfCommand(expectedPerson));","lastModifiedDate":"2022-09-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"Jonaspng"},"content":"        assertParseSuccess(profParser, NAME_DESC_AMY + NAME_DESC_BOB + MODULE_CODE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":109,"author":{"gitId":"Jonaspng"},"content":"                        + EMAIL_DESC_BOB + VALID_GENDER_BOB + TAG_DESC_FRIEND, new ProfCommand(expectedPerson));","lastModifiedDate":"2022-09-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"Jonaspng"},"content":"        assertParseSuccess(profParser, NAME_DESC_BOB + MODULE_CODE_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":113,"author":{"gitId":"Jonaspng"},"content":"                + EMAIL_DESC_BOB + VALID_GENDER_BOB + TAG_DESC_FRIEND, new ProfCommand(expectedPerson));","lastModifiedDate":"2022-09-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"Jonaspng"},"content":"        assertParseSuccess(profParser, NAME_DESC_BOB + MODULE_CODE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY","lastModifiedDate":"2022-09-19"},{"lineNumber":117,"author":{"gitId":"Jonaspng"},"content":"                + EMAIL_DESC_BOB + VALID_GENDER_BOB + TAG_DESC_FRIEND, new ProfCommand(expectedPerson));","lastModifiedDate":"2022-09-19"},{"lineNumber":118,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":119,"author":{"gitId":"Jonaspng"},"content":"        // multiple addresses - last Gender accepted","lastModifiedDate":"2022-09-19"},{"lineNumber":120,"author":{"gitId":"Jonaspng"},"content":"        assertParseSuccess(profParser, NAME_DESC_BOB + MODULE_CODE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":121,"author":{"gitId":"Jonaspng"},"content":"                + VALID_GENDER_AMY + VALID_GENDER_BOB + TAG_DESC_FRIEND, new ProfCommand(expectedPerson));","lastModifiedDate":"2022-09-19"},{"lineNumber":122,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":123,"author":{"gitId":"Jonaspng"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2022-09-19"},{"lineNumber":124,"author":{"gitId":"Jonaspng"},"content":"        Person expectedPersonMultipleTags \u003d new ProfessorBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-09-19"},{"lineNumber":125,"author":{"gitId":"Jonaspng"},"content":"                .build();","lastModifiedDate":"2022-09-19"},{"lineNumber":126,"author":{"gitId":"Jonaspng"},"content":"        assertParseSuccess(profParser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":127,"author":{"gitId":"Jonaspng"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new ProfCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-09-19"},{"lineNumber":128,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":129,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":130,"author":{"gitId":"Jonaspng"},"content":"    public void taParse_allFieldsPresent_success() {","lastModifiedDate":"2022-09-19"},{"lineNumber":131,"author":{"gitId":"Jonaspng"},"content":"        Person expectedPerson \u003d new TeachingAssistantBuilder(CABE).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":132,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":133,"author":{"gitId":"Jonaspng"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-09-19"},{"lineNumber":134,"author":{"gitId":"Jonaspng"},"content":"        assertParseSuccess(taParser, PREAMBLE_WHITESPACE + NAME_DESC_CABE + MODULE_CODE_DESC_CABE","lastModifiedDate":"2022-09-19"},{"lineNumber":135,"author":{"gitId":"Jonaspng"},"content":"                + PHONE_DESC_CABE","lastModifiedDate":"2022-09-19"},{"lineNumber":136,"author":{"gitId":"Jonaspng"},"content":"                + EMAIL_DESC_CABE + VALID_GENDER_CABE + TAG_DESC_FRIEND,","lastModifiedDate":"2022-09-19"},{"lineNumber":137,"author":{"gitId":"Jonaspng"},"content":"                new TaCommand((TeachingAssistant) expectedPerson));","lastModifiedDate":"2022-09-19"},{"lineNumber":138,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":139,"author":{"gitId":"Jonaspng"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-09-19"},{"lineNumber":140,"author":{"gitId":"Jonaspng"},"content":"        assertParseSuccess(taParser, NAME_DESC_AMY + NAME_DESC_CABE + MODULE_CODE_DESC_CABE + PHONE_DESC_CABE","lastModifiedDate":"2022-09-19"},{"lineNumber":141,"author":{"gitId":"Jonaspng"},"content":"                + EMAIL_DESC_CABE + VALID_GENDER_CABE + TAG_DESC_FRIEND,","lastModifiedDate":"2022-09-19"},{"lineNumber":142,"author":{"gitId":"Jonaspng"},"content":"                new TaCommand((TeachingAssistant) expectedPerson));","lastModifiedDate":"2022-09-19"},{"lineNumber":143,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":144,"author":{"gitId":"Jonaspng"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2022-09-19"},{"lineNumber":145,"author":{"gitId":"Jonaspng"},"content":"        assertParseSuccess(taParser, NAME_DESC_CABE + MODULE_CODE_DESC_CABE + PHONE_DESC_AMY + PHONE_DESC_CABE","lastModifiedDate":"2022-09-19"},{"lineNumber":146,"author":{"gitId":"Jonaspng"},"content":"                + EMAIL_DESC_CABE + VALID_GENDER_CABE + TAG_DESC_FRIEND,","lastModifiedDate":"2022-09-19"},{"lineNumber":147,"author":{"gitId":"Jonaspng"},"content":"                new TaCommand((TeachingAssistant) expectedPerson));","lastModifiedDate":"2022-09-19"},{"lineNumber":148,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":149,"author":{"gitId":"Jonaspng"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2022-09-19"},{"lineNumber":150,"author":{"gitId":"Jonaspng"},"content":"        assertParseSuccess(taParser, NAME_DESC_CABE + MODULE_CODE_DESC_CABE + PHONE_DESC_CABE + EMAIL_DESC_AMY","lastModifiedDate":"2022-09-19"},{"lineNumber":151,"author":{"gitId":"Jonaspng"},"content":"                + EMAIL_DESC_CABE + VALID_GENDER_CABE + TAG_DESC_FRIEND,","lastModifiedDate":"2022-09-19"},{"lineNumber":152,"author":{"gitId":"Jonaspng"},"content":"                new TaCommand((TeachingAssistant) expectedPerson));","lastModifiedDate":"2022-09-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"Jonaspng"},"content":"        assertParseSuccess(taParser, NAME_DESC_BOB + MODULE_CODE_DESC_CABE + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":156,"author":{"gitId":"Jonaspng"},"content":"                + VALID_GENDER_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-09-19"},{"lineNumber":157,"author":{"gitId":"Jonaspng"},"content":"                new TaCommand((TeachingAssistant) expectedPerson));","lastModifiedDate":"2022-09-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"Jonaspng"},"content":"        Person expectedPersonMultipleTags \u003d new TeachingAssistantBuilder(CABE).withTags(VALID_TAG_FRIEND,","lastModifiedDate":"2022-09-19"},{"lineNumber":161,"author":{"gitId":"Jonaspng"},"content":"                        VALID_TAG_HUSBAND)","lastModifiedDate":"2022-09-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":163,"author":{"gitId":"Jonaspng"},"content":"        assertParseSuccess(taParser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":164,"author":{"gitId":"Jonaspng"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-09-19"},{"lineNumber":165,"author":{"gitId":"Jonaspng"},"content":"                new TaCommand((TeachingAssistant) expectedPersonMultipleTags));","lastModifiedDate":"2022-09-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"Jonaspng"},"content":"        Person expectedPerson \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2022-09-19"},{"lineNumber":172,"author":{"gitId":"Jonaspng"},"content":"        assertParseSuccess(studentParser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + GENDER_DESC_AMY,","lastModifiedDate":"2022-09-19"},{"lineNumber":173,"author":{"gitId":"Jonaspng"},"content":"                new StudentCommand((Student) expectedPerson));","lastModifiedDate":"2022-09-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"Jonaspng"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ProfCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-09-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"Jonaspng"},"content":"        assertParseFailure(profParser, VALID_NAME_BOB + MODULE_CODE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":182,"author":{"gitId":"Jonaspng"},"content":"                        + GENDER_DESC_BOB,","lastModifiedDate":"2022-09-19"},{"lineNumber":183,"author":{"gitId":"Jonaspng"},"content":"                expectedMessage);","lastModifiedDate":"2022-09-19"},{"lineNumber":184,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":185,"author":{"gitId":"Jonaspng"},"content":"        // missing Module prefix","lastModifiedDate":"2022-09-19"},{"lineNumber":186,"author":{"gitId":"Jonaspng"},"content":"        assertParseFailure(profParser, NAME_DESC_BOB + VALID_MODULE_CODE_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":187,"author":{"gitId":"Jonaspng"},"content":"                        + GENDER_DESC_BOB,","lastModifiedDate":"2022-09-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"Jonaspng"},"content":"        assertParseFailure(profParser, NAME_DESC_BOB + MODULE_CODE_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":192,"author":{"gitId":"Jonaspng"},"content":"                        + GENDER_DESC_BOB,","lastModifiedDate":"2022-09-19"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"Jonaspng"},"content":"        assertParseFailure(profParser, NAME_DESC_BOB + MODULE_CODE_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":197,"author":{"gitId":"Jonaspng"},"content":"                        + GENDER_DESC_BOB,","lastModifiedDate":"2022-09-19"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"Jonaspng"},"content":"        assertParseFailure(profParser, NAME_DESC_BOB + MODULE_CODE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":202,"author":{"gitId":"Jonaspng"},"content":"                        + VALID_GENDER_BOB,","lastModifiedDate":"2022-09-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"Jonaspng"},"content":"        assertParseFailure(profParser, VALID_NAME_BOB + VALID_GENDER_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":207,"author":{"gitId":"Jonaspng"},"content":"                        + VALID_GENDER_BOB,","lastModifiedDate":"2022-09-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":214,"author":{"gitId":"Jonaspng"},"content":"        assertParseFailure(profParser, INVALID_NAME_DESC + MODULE_CODE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":215,"author":{"gitId":"Jonaspng"},"content":"                + EMAIL_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":218,"author":{"gitId":"Jonaspng"},"content":"        // invalid Module Code","lastModifiedDate":"2022-09-19"},{"lineNumber":219,"author":{"gitId":"Jonaspng"},"content":"        assertParseFailure(profParser, NAME_DESC_BOB + INVALID_MODULE_CODE + PHONE_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":220,"author":{"gitId":"Jonaspng"},"content":"                + EMAIL_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":221,"author":{"gitId":"Jonaspng"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, ModuleCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":222,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":224,"author":{"gitId":"Jonaspng"},"content":"        assertParseFailure(profParser, NAME_DESC_BOB + MODULE_CODE_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2022-09-19"},{"lineNumber":225,"author":{"gitId":"Jonaspng"},"content":"                + EMAIL_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":229,"author":{"gitId":"Jonaspng"},"content":"        assertParseFailure(profParser, NAME_DESC_BOB + MODULE_CODE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":230,"author":{"gitId":"Jonaspng"},"content":"                + INVALID_EMAIL_DESC + GENDER_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":233,"author":{"gitId":"Jonaspng"},"content":"        // invalid gender","lastModifiedDate":"2022-09-19"},{"lineNumber":234,"author":{"gitId":"Jonaspng"},"content":"        assertParseFailure(profParser, NAME_DESC_BOB + MODULE_CODE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":235,"author":{"gitId":"Jonaspng"},"content":"                + EMAIL_DESC_BOB + INVALID_GENDER_DESC","lastModifiedDate":"2022-09-19"},{"lineNumber":236,"author":{"gitId":"Jonaspng"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":239,"author":{"gitId":"Jonaspng"},"content":"        assertParseFailure(profParser, NAME_DESC_BOB + MODULE_CODE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":240,"author":{"gitId":"Jonaspng"},"content":"                + EMAIL_DESC_BOB + GENDER_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":244,"author":{"gitId":"Jonaspng"},"content":"        assertParseFailure(profParser, INVALID_NAME_DESC + MODULE_CODE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":245,"author":{"gitId":"Jonaspng"},"content":"                        + EMAIL_DESC_BOB + INVALID_GENDER_DESC,","lastModifiedDate":"2022-09-19"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":249,"author":{"gitId":"Jonaspng"},"content":"        assertParseFailure(profParser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + MODULE_CODE_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":250,"author":{"gitId":"Jonaspng"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + GENDER_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-09-19"},{"lineNumber":251,"author":{"gitId":"Jonaspng"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ProfCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-09-19"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Jonaspng":155,"-":98}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.logic.commands.ProfCommand;","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.logic.commands.StudentCommand;","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.logic.commands.TaCommand;","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.TeachingAssistant;","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.testutil.ProfessorBuilder;","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.testutil.TeachingAssistantBuilder;","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"    public void parseCommand_addStudent() throws Exception {","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"        Student person \u003d new StudentBuilder().build();","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"        StudentCommand command \u003d (StudentCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"        assertEquals(new StudentCommand(person), command);","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"    public void parseCommand_addProfessor() throws Exception {","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"        Person person \u003d new ProfessorBuilder().build();","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"        ProfCommand command \u003d (ProfCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"        assertEquals(new ProfCommand(person), command);","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"    public void parseCommand_addTeachingAssistant() throws Exception {","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"        TeachingAssistant person \u003d new TeachingAssistantBuilder().build();","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"        System.out.println(person);","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"        TaCommand command \u003d (TaCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"        assertEquals(new TaCommand(person), command);","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"Jonaspng"},"content":"        Student person \u003d new StudentBuilder().build();","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Jonaspng":28,"-":94}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Jonaspng":1,"-":39}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"//import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"    // todo to whoever is doing edit command","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"//    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"//    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"//            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"//    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"//    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"//    public void parse_missingParts_failure() {","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"//        // no index specified","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"//        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"//        // no field specified","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"//        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"//        // no index and no field specified","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"//        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"//    }","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"//    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"//    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"//        // negative index","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"//        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"Jonaspng"},"content":"//        // zero index","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"Jonaspng"},"content":"//        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"Jonaspng"},"content":"//        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"Jonaspng"},"content":"//        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"Jonaspng"},"content":"//        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"Jonaspng"},"content":"//        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"Jonaspng"},"content":"//    }","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"Jonaspng"},"content":"//    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"Jonaspng"},"content":"//    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"Jonaspng"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"Jonaspng"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"Jonaspng"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"Jonaspng"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"Jonaspng"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"Jonaspng"},"content":"//        // invalid phone followed by valid email","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"Jonaspng"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"Jonaspng"},"content":"//        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"Jonaspng"},"content":"//        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"Jonaspng"},"content":"//        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"Jonaspng"},"content":"//        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"Jonaspng"},"content":"//        // parsing it together with a valid tag results in error","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"Jonaspng"},"content":"//        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"Jonaspng"},"content":"//        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"Jonaspng"},"content":"//        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"Jonaspng"},"content":"//        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-09-19"},{"lineNumber":102,"author":{"gitId":"Jonaspng"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-09-19"},{"lineNumber":103,"author":{"gitId":"Jonaspng"},"content":"//                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"Jonaspng"},"content":"//    }","lastModifiedDate":"2022-09-19"},{"lineNumber":105,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":106,"author":{"gitId":"Jonaspng"},"content":"//    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":107,"author":{"gitId":"Jonaspng"},"content":"//    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-09-19"},{"lineNumber":108,"author":{"gitId":"Jonaspng"},"content":"//        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-09-19"},{"lineNumber":109,"author":{"gitId":"Jonaspng"},"content":"//        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-09-19"},{"lineNumber":110,"author":{"gitId":"Jonaspng"},"content":"//                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-09-19"},{"lineNumber":111,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":112,"author":{"gitId":"Jonaspng"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-09-19"},{"lineNumber":113,"author":{"gitId":"Jonaspng"},"content":"//                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-09-19"},{"lineNumber":114,"author":{"gitId":"Jonaspng"},"content":"//                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":115,"author":{"gitId":"Jonaspng"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-09-19"},{"lineNumber":116,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":117,"author":{"gitId":"Jonaspng"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-09-19"},{"lineNumber":118,"author":{"gitId":"Jonaspng"},"content":"//    }","lastModifiedDate":"2022-09-19"},{"lineNumber":119,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":120,"author":{"gitId":"Jonaspng"},"content":"//    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":121,"author":{"gitId":"Jonaspng"},"content":"//    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-09-19"},{"lineNumber":122,"author":{"gitId":"Jonaspng"},"content":"//        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-09-19"},{"lineNumber":123,"author":{"gitId":"Jonaspng"},"content":"//        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2022-09-19"},{"lineNumber":124,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":125,"author":{"gitId":"Jonaspng"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-09-19"},{"lineNumber":126,"author":{"gitId":"Jonaspng"},"content":"//                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":127,"author":{"gitId":"Jonaspng"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-09-19"},{"lineNumber":128,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":129,"author":{"gitId":"Jonaspng"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-09-19"},{"lineNumber":130,"author":{"gitId":"Jonaspng"},"content":"//    }","lastModifiedDate":"2022-09-19"},{"lineNumber":131,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":132,"author":{"gitId":"Jonaspng"},"content":"//    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":133,"author":{"gitId":"Jonaspng"},"content":"//    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-09-19"},{"lineNumber":134,"author":{"gitId":"Jonaspng"},"content":"//        // name","lastModifiedDate":"2022-09-19"},{"lineNumber":135,"author":{"gitId":"Jonaspng"},"content":"//        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2022-09-19"},{"lineNumber":136,"author":{"gitId":"Jonaspng"},"content":"//        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2022-09-19"},{"lineNumber":137,"author":{"gitId":"Jonaspng"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":138,"author":{"gitId":"Jonaspng"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-09-19"},{"lineNumber":139,"author":{"gitId":"Jonaspng"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-09-19"},{"lineNumber":140,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":141,"author":{"gitId":"Jonaspng"},"content":"//        // phone","lastModifiedDate":"2022-09-19"},{"lineNumber":142,"author":{"gitId":"Jonaspng"},"content":"//        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2022-09-19"},{"lineNumber":143,"author":{"gitId":"Jonaspng"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":144,"author":{"gitId":"Jonaspng"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-09-19"},{"lineNumber":145,"author":{"gitId":"Jonaspng"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-09-19"},{"lineNumber":146,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":147,"author":{"gitId":"Jonaspng"},"content":"//        // email","lastModifiedDate":"2022-09-19"},{"lineNumber":148,"author":{"gitId":"Jonaspng"},"content":"//        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2022-09-19"},{"lineNumber":149,"author":{"gitId":"Jonaspng"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":150,"author":{"gitId":"Jonaspng"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-09-19"},{"lineNumber":151,"author":{"gitId":"Jonaspng"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-09-19"},{"lineNumber":152,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":153,"author":{"gitId":"Jonaspng"},"content":"//        // address","lastModifiedDate":"2022-09-19"},{"lineNumber":154,"author":{"gitId":"Jonaspng"},"content":"//        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2022-09-19"},{"lineNumber":155,"author":{"gitId":"Jonaspng"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":156,"author":{"gitId":"Jonaspng"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-09-19"},{"lineNumber":157,"author":{"gitId":"Jonaspng"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-09-19"},{"lineNumber":158,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":159,"author":{"gitId":"Jonaspng"},"content":"//        // tags","lastModifiedDate":"2022-09-19"},{"lineNumber":160,"author":{"gitId":"Jonaspng"},"content":"//        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2022-09-19"},{"lineNumber":161,"author":{"gitId":"Jonaspng"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":162,"author":{"gitId":"Jonaspng"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-09-19"},{"lineNumber":163,"author":{"gitId":"Jonaspng"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-09-19"},{"lineNumber":164,"author":{"gitId":"Jonaspng"},"content":"//    }","lastModifiedDate":"2022-09-19"},{"lineNumber":165,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":166,"author":{"gitId":"Jonaspng"},"content":"//    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":167,"author":{"gitId":"Jonaspng"},"content":"//    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-09-19"},{"lineNumber":168,"author":{"gitId":"Jonaspng"},"content":"//        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-09-19"},{"lineNumber":169,"author":{"gitId":"Jonaspng"},"content":"//        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-09-19"},{"lineNumber":170,"author":{"gitId":"Jonaspng"},"content":"//                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-09-19"},{"lineNumber":171,"author":{"gitId":"Jonaspng"},"content":"//                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-09-19"},{"lineNumber":172,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":173,"author":{"gitId":"Jonaspng"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-09-19"},{"lineNumber":174,"author":{"gitId":"Jonaspng"},"content":"//                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND,","lastModifiedDate":"2022-09-19"},{"lineNumber":175,"author":{"gitId":"Jonaspng"},"content":"//                VALID_TAG_HUSBAND)","lastModifiedDate":"2022-09-19"},{"lineNumber":176,"author":{"gitId":"Jonaspng"},"content":"//                .build();","lastModifiedDate":"2022-09-19"},{"lineNumber":177,"author":{"gitId":"Jonaspng"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-09-19"},{"lineNumber":178,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":179,"author":{"gitId":"Jonaspng"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-09-19"},{"lineNumber":180,"author":{"gitId":"Jonaspng"},"content":"//    }","lastModifiedDate":"2022-09-19"},{"lineNumber":181,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":182,"author":{"gitId":"Jonaspng"},"content":"//    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":183,"author":{"gitId":"Jonaspng"},"content":"//    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-09-19"},{"lineNumber":184,"author":{"gitId":"Jonaspng"},"content":"//        // no other valid values specified","lastModifiedDate":"2022-09-19"},{"lineNumber":185,"author":{"gitId":"Jonaspng"},"content":"//        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-09-19"},{"lineNumber":186,"author":{"gitId":"Jonaspng"},"content":"//        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2022-09-19"},{"lineNumber":187,"author":{"gitId":"Jonaspng"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":188,"author":{"gitId":"Jonaspng"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-09-19"},{"lineNumber":189,"author":{"gitId":"Jonaspng"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-09-19"},{"lineNumber":190,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":191,"author":{"gitId":"Jonaspng"},"content":"//        // other valid values specified","lastModifiedDate":"2022-09-19"},{"lineNumber":192,"author":{"gitId":"Jonaspng"},"content":"//        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2022-09-19"},{"lineNumber":193,"author":{"gitId":"Jonaspng"},"content":"//                + PHONE_DESC_BOB;","lastModifiedDate":"2022-09-19"},{"lineNumber":194,"author":{"gitId":"Jonaspng"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-09-19"},{"lineNumber":195,"author":{"gitId":"Jonaspng"},"content":"//                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":196,"author":{"gitId":"Jonaspng"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-09-19"},{"lineNumber":197,"author":{"gitId":"Jonaspng"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-09-19"},{"lineNumber":198,"author":{"gitId":"Jonaspng"},"content":"//    }","lastModifiedDate":"2022-09-19"},{"lineNumber":199,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":200,"author":{"gitId":"Jonaspng"},"content":"//    @Test","lastModifiedDate":"2022-09-19"},{"lineNumber":201,"author":{"gitId":"Jonaspng"},"content":"//    public void parse_resetTags_success() {","lastModifiedDate":"2022-09-19"},{"lineNumber":202,"author":{"gitId":"Jonaspng"},"content":"//        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2022-09-19"},{"lineNumber":203,"author":{"gitId":"Jonaspng"},"content":"//        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2022-09-19"},{"lineNumber":204,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":205,"author":{"gitId":"Jonaspng"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-09-19"},{"lineNumber":206,"author":{"gitId":"Jonaspng"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-09-19"},{"lineNumber":207,"author":{"gitId":"Jonaspng"},"content":"//","lastModifiedDate":"2022-09-19"},{"lineNumber":208,"author":{"gitId":"Jonaspng"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-09-19"},{"lineNumber":209,"author":{"gitId":"Jonaspng"},"content":"//    }","lastModifiedDate":"2022-09-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Jonaspng":205,"-":5}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"    private static final String INVALID_GENDER \u003d \" \";","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"    private static final String VALID_GENDER \u003d \"Female\";","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"Jonaspng"},"content":"    public void parseGender_null_throwsNullPointerException() {","lastModifiedDate":"2022-09-19"},{"lineNumber":107,"author":{"gitId":"Jonaspng"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGender((String) null));","lastModifiedDate":"2022-09-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"Jonaspng"},"content":"    public void parseGender_invalidValue_throwsParseException() {","lastModifiedDate":"2022-09-19"},{"lineNumber":112,"author":{"gitId":"Jonaspng"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGender(INVALID_GENDER));","lastModifiedDate":"2022-09-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"Jonaspng"},"content":"        Gender expectedGender \u003d new Gender(VALID_GENDER);","lastModifiedDate":"2022-09-19"},{"lineNumber":118,"author":{"gitId":"Jonaspng"},"content":"        assertEquals(expectedGender, ParserUtil.parseGender(VALID_GENDER));","lastModifiedDate":"2022-09-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"Jonaspng"},"content":"        String genderWithWhitespace \u003d WHITESPACE + VALID_GENDER + WHITESPACE;","lastModifiedDate":"2022-09-19"},{"lineNumber":124,"author":{"gitId":"Jonaspng"},"content":"        Gender expectedGender \u003d new Gender(VALID_GENDER);","lastModifiedDate":"2022-09-19"},{"lineNumber":125,"author":{"gitId":"Jonaspng"},"content":"        assertEquals(expectedGender, ParserUtil.parseGender(genderWithWhitespace));","lastModifiedDate":"2022-09-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Jonaspng":12,"-":184}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"        Person editedAlice \u003d new StudentBuilder((Student) ALICE).withGender(VALID_GENDER_BOB)","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"Jonaspng"},"content":"        Person editedAlice \u003d new StudentBuilder((Student) ALICE).withGender(VALID_GENDER_BOB)","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"Jonaspng"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Jonaspng":7,"-":97}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"Jonaspng"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"Jonaspng"},"content":"                .withEmail(\"alice@email.com\").withGender(\"Female\").build()));","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Jonaspng":9,"-":66}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.testutil.ProfessorBuilder;","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"        Person person \u003d new StudentBuilder().build();","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"        Person editedAlice \u003d new StudentBuilder((Student) ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"                .withGender(VALID_GENDER_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"        editedAlice \u003d new StudentBuilder((Student) ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"        Person editedBob \u003d new ProfessorBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"        editedBob \u003d new ProfessorBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"        Person aliceCopy \u003d new StudentBuilder((Student) ALICE).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"Jonaspng"},"content":"        Person editedAlice \u003d new StudentBuilder((Student) ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"Jonaspng"},"content":"        editedAlice \u003d new StudentBuilder((Student) ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"Jonaspng"},"content":"        editedAlice \u003d new StudentBuilder((Student) ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"Jonaspng"},"content":"        editedAlice \u003d new StudentBuilder((Student) ALICE).withGender(VALID_GENDER_BOB).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"Jonaspng"},"content":"        editedAlice \u003d new StudentBuilder((Student) ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Jonaspng":15,"-":77}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"        Person editedAlice \u003d new StudentBuilder((Student) ALICE).withGender(VALID_GENDER_BOB)","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"Jonaspng"},"content":"        Person editedAlice \u003d new StudentBuilder((Student) ALICE).withGender(VALID_GENDER_BOB)","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"Jonaspng"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Jonaspng":6,"-":166}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"    private static final String INVALID_GENDER \u003d \" \";","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"    private static final String VALID_TYPE \u003d \"s\";","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"    private static final String VALID_MODULE_CODE \u003d \"\";","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"    private static final String VALID_GENDER \u003d BENSON.getGender().toString();","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedStudent((Student) BENSON);","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"                new JsonAdaptedStudent(VALID_TYPE, INVALID_NAME, VALID_MODULE_CODE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"                        VALID_GENDER, VALID_TAGS);","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"            new JsonAdaptedStudent(VALID_TYPE, null, VALID_MODULE_CODE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"                VALID_GENDER, VALID_TAGS);","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"                new JsonAdaptedStudent(VALID_TYPE, VALID_NAME, VALID_MODULE_CODE, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"                        VALID_GENDER, VALID_TAGS);","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"Jonaspng"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"Jonaspng"},"content":"                new JsonAdaptedStudent(VALID_TYPE, VALID_NAME, VALID_MODULE_CODE, null, VALID_EMAIL,","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"Jonaspng"},"content":"                        VALID_GENDER, VALID_TAGS);","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"Jonaspng"},"content":"                new JsonAdaptedStudent(VALID_TYPE, VALID_NAME, VALID_MODULE_CODE, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"Jonaspng"},"content":"                        VALID_GENDER, VALID_TAGS);","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"Jonaspng"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"Jonaspng"},"content":"                new JsonAdaptedStudent(VALID_TYPE, VALID_NAME, VALID_MODULE_CODE, VALID_PHONE, null,","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"Jonaspng"},"content":"                        VALID_GENDER, VALID_TAGS);","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"Jonaspng"},"content":"    public void toModelType_invalidGender_throwsIllegalValueException() {","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"Jonaspng"},"content":"                new JsonAdaptedStudent(VALID_TYPE, VALID_NAME, VALID_MODULE_CODE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-09-19"},{"lineNumber":102,"author":{"gitId":"Jonaspng"},"content":"                        INVALID_GENDER, VALID_TAGS);","lastModifiedDate":"2022-09-19"},{"lineNumber":103,"author":{"gitId":"Jonaspng"},"content":"        String expectedMessage \u003d Gender.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"Jonaspng"},"content":"    public void toModelType_nullGender_throwsIllegalValueException() {","lastModifiedDate":"2022-09-19"},{"lineNumber":109,"author":{"gitId":"Jonaspng"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-09-19"},{"lineNumber":110,"author":{"gitId":"Jonaspng"},"content":"                new JsonAdaptedStudent(VALID_TYPE, VALID_NAME, VALID_MODULE_CODE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-09-19"},{"lineNumber":111,"author":{"gitId":"Jonaspng"},"content":"                        null, VALID_TAGS);","lastModifiedDate":"2022-09-19"},{"lineNumber":112,"author":{"gitId":"Jonaspng"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName());","lastModifiedDate":"2022-09-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"Jonaspng"},"content":"                new JsonAdaptedStudent(VALID_TYPE, VALID_NAME, VALID_MODULE_CODE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-09-19"},{"lineNumber":122,"author":{"gitId":"Jonaspng"},"content":"                        null, invalidTags);","lastModifiedDate":"2022-09-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Jonaspng":33,"-":93}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonsAddressBook.json\");","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Jonaspng":1,"-":46}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Professor;","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.TeachingAssistant;","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"    public EditPersonDescriptorBuilder(Student person) {","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"        descriptor.setGender(person.getGender());","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"    public EditPersonDescriptorBuilder(Professor person) {","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"        descriptor.setModuleCode(person.getModuleCode());","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"Jonaspng"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"Jonaspng"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"        descriptor.setGender(person.getGender());","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"    public EditPersonDescriptorBuilder(TeachingAssistant person) {","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"        descriptor.setModuleCode(person.getModuleCode());","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"        descriptor.setGender(person.getGender());","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"Jonaspng"},"content":"     * Sets the {@code Gender} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"Jonaspng"},"content":"    public EditPersonDescriptorBuilder withGender(String gender) {","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"Jonaspng"},"content":"        descriptor.setGender(new Gender(gender));","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":103,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"Jonaspng"},"content":"     * Sets the {@code ModuleCode} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-09-19"},{"lineNumber":105,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":106,"author":{"gitId":"Jonaspng"},"content":"    public EditPersonDescriptorBuilder withModuleCode(String moduleCode) {","lastModifiedDate":"2022-09-19"},{"lineNumber":107,"author":{"gitId":"Jonaspng"},"content":"        descriptor.setModuleCode(new ModuleCode(moduleCode));","lastModifiedDate":"2022-09-19"},{"lineNumber":108,"author":{"gitId":"Jonaspng"},"content":"        return this;","lastModifiedDate":"2022-09-19"},{"lineNumber":109,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":110,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":111,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":125,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Jonaspng":46,"-":80}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"public abstract class PersonBuilder {","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"    public static final String DEFAULT_GENDER \u003d \"Female\";","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"    private Gender gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"        gender \u003d personToCopy.getGender();","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"Jonaspng"},"content":"     * Sets the {@code Gender} of the {@code Person} that we are building.","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"Jonaspng"},"content":"    public PersonBuilder withGender(String gender) {","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"Jonaspng"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"Jonaspng"},"content":"    public Name getName() {","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"Jonaspng"},"content":"        return name;","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"Jonaspng"},"content":"    public Phone getPhone() {","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"Jonaspng"},"content":"        return phone;","lastModifiedDate":"2022-09-19"},{"lineNumber":100,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":102,"author":{"gitId":"Jonaspng"},"content":"    public Email getEmail() {","lastModifiedDate":"2022-09-19"},{"lineNumber":103,"author":{"gitId":"Jonaspng"},"content":"        return email;","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"Jonaspng"},"content":"    public Gender getGender() {","lastModifiedDate":"2022-09-19"},{"lineNumber":107,"author":{"gitId":"Jonaspng"},"content":"        return gender;","lastModifiedDate":"2022-09-19"},{"lineNumber":108,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":109,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":110,"author":{"gitId":"Jonaspng"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-09-19"},{"lineNumber":111,"author":{"gitId":"Jonaspng"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-09-19"},{"lineNumber":112,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":113,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":114,"author":{"gitId":"Jonaspng"},"content":"    public abstract Person build();","lastModifiedDate":"2022-09-19"},{"lineNumber":115,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Jonaspng":31,"-":85}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_CODE;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.logic.commands.ProfCommand;","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.logic.commands.StudentCommand;","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.logic.commands.TaCommand;","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Professor;","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.TeachingAssistant;","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"        if (person instanceof Student) {","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"            return StudentCommand.COMMAND_WORD + \" \" + getPersonDetails((Student) person);","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"        } else if (person instanceof Professor) {","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"            return ProfCommand.COMMAND_WORD + \" \" + getPersonDetails((Professor) person);","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"        } else if (person instanceof TeachingAssistant) {","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"            return TaCommand.COMMAND_WORD + \" \" + getPersonDetails((TeachingAssistant) person);","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"        return null;","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"    public static String getPersonDetails(Student person) {","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"        sb.append(PREFIX_GENDER + person.getGender().value + \" \");","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"    public static String getPersonDetails(TeachingAssistant person) {","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"Jonaspng"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"Jonaspng"},"content":"        sb.append(PREFIX_MODULE_CODE + person.getModuleCode().value + \" \");","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"        sb.append(PREFIX_GENDER + person.getGender().value + \" \");","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"        );","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"        return sb.toString();","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"Jonaspng"},"content":"    public static String getPersonDetails(Professor person) {","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"Jonaspng"},"content":"        sb.append(PREFIX_MODULE_CODE + person.getModuleCode().value + \" \");","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":75,"author":{"gitId":"Jonaspng"},"content":"        sb.append(PREFIX_GENDER + person.getGender().value + \" \");","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":90,"author":{"gitId":"Jonaspng"},"content":"        descriptor.getGender().ifPresent(address -\u003e sb.append(PREFIX_GENDER).append(address.value).append(\" \"));","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Jonaspng":35,"-":66}},{"path":"src/test/java/seedu/address/testutil/ProfessorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Professor;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"public class ProfessorBuilder extends PersonBuilder {","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"    public static final String DEFAULT_MODULE_CODE \u003d \"CS1231S\";","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"    private ModuleCode moduleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"    public ProfessorBuilder() {","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"        super();","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"        this.moduleCode \u003d new ModuleCode(DEFAULT_MODULE_CODE);","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"    public ProfessorBuilder(Professor personToCopy) {","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"        super(personToCopy);","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"        moduleCode \u003d personToCopy.getModuleCode();","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"    public Professor build() {","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"        return new Professor(getName(), moduleCode, getPhone(), getEmail(), getGender(), getTags());","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"     * Sets the {@code ModuleCode} of the {@code Professor} that we are building.","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"    public PersonBuilder withModuleCode(String moduleCode) {","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"        this.moduleCode \u003d new ModuleCode(moduleCode);","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"        return this;","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Jonaspng":42}},{"path":"src/test/java/seedu/address/testutil/StudentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"public class StudentBuilder extends PersonBuilder {","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"    public StudentBuilder() {","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"        super();","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"    public StudentBuilder(Student personToCopy) {","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"        super(personToCopy);","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"    public Student build() {","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"        return new Student(getName(), getPhone(), getEmail(), getGender(), getTags());","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Jonaspng":29}},{"path":"src/test/java/seedu/address/testutil/TeachingAssistantBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonaspng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.ModuleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.TeachingAssistant;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"Jonaspng"},"content":"public class TeachingAssistantBuilder extends PersonBuilder {","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"    public static final String DEFAULT_MODULE_CODE \u003d \"CS1231S\";","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"Jonaspng"},"content":"    private final ModuleCode moduleCode;","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"Jonaspng"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"Jonaspng"},"content":"    public TeachingAssistantBuilder() {","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"Jonaspng"},"content":"        super();","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"Jonaspng"},"content":"        this.moduleCode \u003d new ModuleCode(DEFAULT_MODULE_CODE);","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"Jonaspng"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"    public TeachingAssistantBuilder(TeachingAssistant personToCopy) {","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"        super(personToCopy);","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"        moduleCode \u003d personToCopy.getModuleCode();","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"Jonaspng"},"content":"    public TeachingAssistant build() {","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"Jonaspng"},"content":"        return new TeachingAssistant(getName(), moduleCode, getPhone(), getEmail(), getGender(), getTags());","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"Jonaspng"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"Jonaspng":35}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_CABE;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_CABE;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_CABE;","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"Jonaspng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_CABE;","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Professor;","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.Student;","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"Jonaspng"},"content":"import seedu.address.model.person.TeachingAssistant;","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"Jonaspng"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"Jonaspng"},"content":"    public static final Person ALICE \u003d new StudentBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"Jonaspng"},"content":"            .withEmail(\"alice@example.com\").withGender(\"Female\")","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"Jonaspng"},"content":"            .withPhone(\"94351253\").withTags(\"friends\").build();","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"Jonaspng"},"content":"    public static final Person BENSON \u003d new StudentBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"Jonaspng"},"content":"            .withGender(\"Male\")","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":42,"author":{"gitId":"Jonaspng"},"content":"    public static final Person CARL \u003d new StudentBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"Jonaspng"},"content":"            .withEmail(\"heinz@example.com\").withGender(\"Male\").build();","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"Jonaspng"},"content":"    public static final Person DANIEL \u003d new StudentBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"Jonaspng"},"content":"            .withEmail(\"cornelia@example.com\").withGender(\"Male\").withTags(\"friends\").build();","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"Jonaspng"},"content":"    public static final Person ELLE \u003d new ProfessorBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"Jonaspng"},"content":"            .withEmail(\"werner@example.com\").withGender(\"Female\").build();","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"Jonaspng"},"content":"    public static final Person FIONA \u003d new TeachingAssistantBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"Jonaspng"},"content":"            .withEmail(\"lydia@example.com\").withGender(\"Female\").build();","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"Jonaspng"},"content":"    public static final Person GEORGE \u003d new StudentBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"Jonaspng"},"content":"            .withEmail(\"anna@example.com\").withGender(\"Male\").build();","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"Jonaspng"},"content":"    public static final Person HOON \u003d new StudentBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"Jonaspng"},"content":"            .withEmail(\"stefan@example.com\").withGender(\"Male\").build();","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"Jonaspng"},"content":"    public static final Person IDA \u003d new StudentBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"Jonaspng"},"content":"            .withEmail(\"hans@example.com\").withGender(\"Female\").build();","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":60,"author":{"gitId":"Jonaspng"},"content":"    public static final Student AMY \u003d (Student) new StudentBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"Jonaspng"},"content":"            .withEmail(VALID_EMAIL_AMY).withGender(VALID_GENDER_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"Jonaspng"},"content":"    public static final Professor BOB \u003d (Professor) new ProfessorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"Jonaspng"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"Jonaspng"},"content":"            .withEmail(VALID_EMAIL_BOB).withGender(VALID_GENDER_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"Jonaspng"},"content":"            .build();","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"Jonaspng"},"content":"    public static final TeachingAssistant CABE \u003d (TeachingAssistant) new TeachingAssistantBuilder()","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"Jonaspng"},"content":"            .withName(VALID_NAME_CABE).withPhone(VALID_PHONE_CABE)","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"Jonaspng"},"content":"            .withEmail(VALID_EMAIL_CABE).withGender(VALID_GENDER_CABE).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Jonaspng":39,"-":50}}]
