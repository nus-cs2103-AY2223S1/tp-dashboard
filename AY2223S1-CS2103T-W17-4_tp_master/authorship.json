[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W17-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-W17-4/tp/actions)","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W17-4/tp/branch/master/graph/badge.svg?token\u003d5KEF39JO86)](https://codecov.io/gh/AY2223S1-CS2103T-W17-4/tp)","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"# Please Hire Us","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"Are you a CS student struggling to keep track of your internship?","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"Do you feel tired of using spreadsheets to keep track of your applications?","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"We have just the right tool for you!","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"Introducing PleaseHireUs (PHU), the internship tracking application made just for you!","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"Here are its main features:","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"* View the status of your individual application and assessment dates at a glance","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"* View the overall statistics of the status of all your internship applications in a stacked bar chart","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"Now you will never miss any internship application deadlines or interviews again!","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"PleaseHireUs has been optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, PleaseHireUs can get your internship management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"We hope you find PleaseHireUs to be very useful in your internship hunt!","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"* This is a brownfield project adapted from AddressBook 3(AB3) for **Software Engineering (SE) Students**","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"* The project simulates an ongoing software project for a desktop application used for managing internships details.","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base (around 6 KLoC) .","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"* For the detailed documentation of this project, see the **[PleaseHireUs Website](https://ay2223s1-cs2103t-w17-4.github.io/tp/)**.","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"## Features","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"- [x] Add internship details","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"- [x] Sort internships by categories","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"- [x] Filter relevant internships","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"- [x] Edit internship details","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"- [x] View internship details","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"- [x] Copy internship details to your clipboard easily","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"- [x] View the overall statistic of the application status of all your internships","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"## Quick Start","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"2. Download the latest `PleaseHireUs.jar` from [here](https://github.com/AY2223S1-CS2103T-W17-4/tp/releases).","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your application.","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"4. Double-click the file to start the app. The GUI similar to the above should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"   Some example commands you can try:","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"  * **`list`** : Lists all internships.","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"  * **`add n/Grab p/software engineer pr/ASSESSMENT web/https://www.grab.com/sg/about`** : Adds a new internship to the internship tracker.","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"  * **`delete 3`** : Deletes the 3rd internship shown in the current list.","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"  * **`clear`** : Deletes all internships.","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"  * **`exit`** : Exits the app.","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"JustinS00":54,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"mainClassName \u003d \u0027seedu.phu.Main\u0027","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"    archiveFileName \u003d \u0027pleasehireus.jar\u0027","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"JustinS00":2,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"### Aaron Tan Gui Rong","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":"\u003cimg src\u003d\"images/aarontangr.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"[ [github](https://github.com/aarontangr) ][ [portfolio](team/aarontangr.md) ]","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"* Role: Developer","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"* Responsibilities: UI, Dev Ops","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"### Elbert Benedict","lastModifiedDate":"2022-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Elben85"},"content":"\u003cimg src\u003d\"images/elben85.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Elben85"},"content":"[ [github](http://github.com/Elben85) ]","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"Elben85"},"content":"[ [portfolio](team/elben85.md) ]","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"Elben85"},"content":"* Role: Developer","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"* Responsibilities: Code quality","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"sugiyem"},"content":"### Farrel Dwireswara Salim","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"sugiyem"},"content":"\u003cimg src\u003d\"images/sugiyem.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"sugiyem"},"content":"[ [github](http://github.com/sugiyem) ] [ [portfolio](team/sugiyem.md) ]","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"* Responsibilities: Testing","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"### Rachel Angelyn Gunawan","lastModifiedDate":"2022-09-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"\u003cimg src\u003d\"images/rachel-ag.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"[ [github](https://github.com/Rachel-AG) ]","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"[ [portfolio](team/rachel-ag.md) ]","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"### Justin Siaw","lastModifiedDate":"2022-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"\u003cimg src\u003d\"images/justins00.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"[ [github](http://github.com/justinS00) ]","lastModifiedDate":"2022-09-24"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"[ [portfolio](team/justins00.md) ]","lastModifiedDate":"2022-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"* Responsibilities: Project Management","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Elben85":4,"Rachel-AG":4,"aarontangr":2,"JustinS00":12,"-":33,"sugiyem":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"Rachel-AG"},"content":"* computer science students","lastModifiedDate":"2022-09-26"},{"lineNumber":261,"author":{"gitId":"Rachel-AG"},"content":"* has a need to keep track of the list of internships application and their status","lastModifiedDate":"2022-09-26"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"| Priority | As a …​            | I want to …​                                                              | So that I can…​                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"JustinS00"},"content":"|----------|--------------------|---------------------------------------------------------------------------|-------------------------------------------------|","lastModifiedDate":"2022-09-28"},{"lineNumber":276,"author":{"gitId":"Elben85"},"content":"| `* * *`  | Basic user         | Add an internship                                                         |                                                 |","lastModifiedDate":"2022-09-27"},{"lineNumber":277,"author":{"gitId":"Elben85"},"content":"| `* * *`  | Basic user         | Delete an internship                                                      |                                                 |","lastModifiedDate":"2022-09-27"},{"lineNumber":278,"author":{"gitId":"Elben85"},"content":"| `* * *`  | Basic user         | View an internship details                                                |                                                 |","lastModifiedDate":"2022-09-27"},{"lineNumber":279,"author":{"gitId":"JustinS00"},"content":"| `* * *`  | Basic user         | Update the internship details                                             |                                                 |","lastModifiedDate":"2022-09-28"},{"lineNumber":280,"author":{"gitId":"JustinS00"},"content":"| `* * *`  | Basic user         | Keep track of the list of internships I applied to                        |                                                 |","lastModifiedDate":"2022-09-28"},{"lineNumber":281,"author":{"gitId":"JustinS00"},"content":"| `* * *`  | Basic user         | Add tag to internship                                                     | Find the relevant information easily            |","lastModifiedDate":"2022-09-28"},{"lineNumber":282,"author":{"gitId":"JustinS00"},"content":"| `* * *`  | Basic user         | Filter the internship based on current application process, tagging, etc. | Track my progress                               |","lastModifiedDate":"2022-09-28"},{"lineNumber":283,"author":{"gitId":"JustinS00"},"content":"| `* * *`  | Basic user         | View my interview dates                                                   | Track my interview timings                      |","lastModifiedDate":"2022-09-28"},{"lineNumber":284,"author":{"gitId":"JustinS00"},"content":"| `* * *`  | Basic user         | Know the contact of the HR                                                | Discuss the next step needed to be done         |","lastModifiedDate":"2022-09-28"},{"lineNumber":285,"author":{"gitId":"Elben85"},"content":"| `* * *`  | Basic user         | Sort my internship list by date                                           | View the upcoming internship matters to prepare |","lastModifiedDate":"2022-09-27"},{"lineNumber":286,"author":{"gitId":"JustinS00"},"content":"| `* *  `  | First-time user    | Have a link to the demo video                                             | Learn how to use the app                        |","lastModifiedDate":"2022-09-28"},{"lineNumber":287,"author":{"gitId":"JustinS00"},"content":"| `* *  `  | First-time user    | See a help message explaining which features I should try first           | Learn the basic features of the application     |","lastModifiedDate":"2022-09-28"},{"lineNumber":288,"author":{"gitId":"JustinS00"},"content":"| `* * *`  | First-time user    | See some sample internships when I open the app                           | Understand how the app works                    |","lastModifiedDate":"2022-09-28"},{"lineNumber":289,"author":{"gitId":"JustinS00"},"content":"| `*   `   | Forgetful user     | Get reminder                                                              |                                                 |","lastModifiedDate":"2022-09-28"},{"lineNumber":290,"author":{"gitId":"JustinS00"},"content":"| `*   `   | Advanced user      | Use a shortcut to do commands                                             | Work more efficiently                           |","lastModifiedDate":"2022-09-28"},{"lineNumber":291,"author":{"gitId":"JustinS00"},"content":"| `*   `   | Advanced user      | Copy internship details easily                                            | Quickly share information to other apps         |","lastModifiedDate":"2022-09-28"},{"lineNumber":292,"author":{"gitId":"JustinS00"},"content":"| `*   `   | Advanced user      | Visit internship website fast                                             |                                                 |","lastModifiedDate":"2022-09-28"},{"lineNumber":293,"author":{"gitId":"JustinS00"},"content":"| `* * *`  | Advanced user      | Delete many internships                                                   |                                                 |","lastModifiedDate":"2022-09-28"},{"lineNumber":294,"author":{"gitId":"JustinS00"},"content":"| `* *  `  | Visual user        | View my internship application process tag with color                     | I can easily identify which stage I have reached|","lastModifiedDate":"2022-09-28"},{"lineNumber":295,"author":{"gitId":"JustinS00"},"content":"| `*   `   | Visual user        | View the count of internships application at each stages                  | See the success rate of my applications         |","lastModifiedDate":"2022-09-28"},{"lineNumber":296,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"Rachel-AG"},"content":"(For all use cases below, the **System** is the `InternshipBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-26"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"JustinS00"},"content":"**Use case: List internship(s)**","lastModifiedDate":"2022-09-28"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"sugiyem"},"content":"1. User requests to list internships","lastModifiedDate":"2022-09-26"},{"lineNumber":307,"author":{"gitId":"sugiyem"},"content":"2. PleaseHireUs shows a list of internships","lastModifiedDate":"2022-09-26"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"Rachel-AG"},"content":"**Use case: Add internship**","lastModifiedDate":"2022-09-26"},{"lineNumber":312,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":313,"author":{"gitId":"Rachel-AG"},"content":"**MSS**","lastModifiedDate":"2022-09-26"},{"lineNumber":314,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":315,"author":{"gitId":"Rachel-AG"},"content":"1.  User request to add an internship application","lastModifiedDate":"2022-09-26"},{"lineNumber":316,"author":{"gitId":"Rachel-AG"},"content":"2.  System adds the internship application","lastModifiedDate":"2022-09-26"},{"lineNumber":317,"author":{"gitId":"Rachel-AG"},"content":"3.  System displays the success message","lastModifiedDate":"2022-09-26"},{"lineNumber":318,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":319,"author":{"gitId":"Rachel-AG"},"content":"    Use case ends.","lastModifiedDate":"2022-09-26"},{"lineNumber":320,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":321,"author":{"gitId":"Rachel-AG"},"content":"**Extensions**","lastModifiedDate":"2022-09-26"},{"lineNumber":322,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":323,"author":{"gitId":"Rachel-AG"},"content":"* 1a. The given parameters is invalid.","lastModifiedDate":"2022-09-26"},{"lineNumber":324,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":325,"author":{"gitId":"Rachel-AG"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2022-09-26"},{"lineNumber":326,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":327,"author":{"gitId":"Rachel-AG"},"content":"    Use case ends.","lastModifiedDate":"2022-09-26"},{"lineNumber":328,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":329,"author":{"gitId":"Rachel-AG"},"content":"* 1b. The given parameters does not include all required parameters.","lastModifiedDate":"2022-09-26"},{"lineNumber":330,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":331,"author":{"gitId":"Rachel-AG"},"content":"    * 1b1. System shows an error message.","lastModifiedDate":"2022-09-26"},{"lineNumber":332,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":333,"author":{"gitId":"Rachel-AG"},"content":"  Use case ends.","lastModifiedDate":"2022-09-26"},{"lineNumber":334,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":335,"author":{"gitId":"sugiyem"},"content":"**Use case: Delete internship(s)**","lastModifiedDate":"2022-10-14"},{"lineNumber":336,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":337,"author":{"gitId":"sugiyem"},"content":"**MSS**","lastModifiedDate":"2022-10-14"},{"lineNumber":338,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":339,"author":{"gitId":"sugiyem"},"content":"1. User requests to delete specific internship(s) in the list","lastModifiedDate":"2022-10-14"},{"lineNumber":340,"author":{"gitId":"sugiyem"},"content":"2. PleaseHireUs deletes the internship(s)","lastModifiedDate":"2022-10-14"},{"lineNumber":341,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":342,"author":{"gitId":"sugiyem"},"content":"   Use case ends.","lastModifiedDate":"2022-10-14"},{"lineNumber":343,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":344,"author":{"gitId":"sugiyem"},"content":"**Extensions**","lastModifiedDate":"2022-10-14"},{"lineNumber":345,"author":{"gitId":"sugiyem"},"content":"* 1a. At least one of the given indexes is invalid.","lastModifiedDate":"2022-10-14"},{"lineNumber":346,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":347,"author":{"gitId":"sugiyem"},"content":"    * 1a1. PleaseHireUs shows an error message.","lastModifiedDate":"2022-10-14"},{"lineNumber":348,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":349,"author":{"gitId":"sugiyem"},"content":"  Use case ends.","lastModifiedDate":"2022-10-14"},{"lineNumber":350,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":351,"author":{"gitId":"aarontangr"},"content":"**Use case: View internship(s)**","lastModifiedDate":"2022-09-28"},{"lineNumber":352,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":353,"author":{"gitId":"aarontangr"},"content":"**MSS**","lastModifiedDate":"2022-09-28"},{"lineNumber":354,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":355,"author":{"gitId":"aarontangr"},"content":"1. User wants to view more details of an internship application.","lastModifiedDate":"2022-09-28"},{"lineNumber":356,"author":{"gitId":"aarontangr"},"content":"2. System displays more details of the internship application.","lastModifiedDate":"2022-09-28"},{"lineNumber":357,"author":{"gitId":"aarontangr"},"content":"3. Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":359,"author":{"gitId":"aarontangr"},"content":"**Extensions**","lastModifiedDate":"2022-09-28"},{"lineNumber":360,"author":{"gitId":"aarontangr"},"content":"*{More to be added}*","lastModifiedDate":"2022-09-28"},{"lineNumber":361,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":362,"author":{"gitId":"Elben85"},"content":"**Use case: Filter internship(s)**","lastModifiedDate":"2022-09-27"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":364,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":366,"author":{"gitId":"Elben85"},"content":"1. User requests to filter internships by category and keywords(s)","lastModifiedDate":"2022-09-27"},{"lineNumber":367,"author":{"gitId":"Elben85"},"content":"2. PleaseHireUs shows a list of internships filtered by corresponding categories and keywords","lastModifiedDate":"2022-09-27"},{"lineNumber":368,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":369,"author":{"gitId":"Elben85"},"content":"    Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":370,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":371,"author":{"gitId":"Elben85"},"content":"**Extensions**","lastModifiedDate":"2022-09-27"},{"lineNumber":372,"author":{"gitId":"Elben85"},"content":"* 1a. No keywords is given","lastModifiedDate":"2022-09-27"},{"lineNumber":373,"author":{"gitId":"Elben85"},"content":"    * 1a1. PleaseHireUs shows an error message.","lastModifiedDate":"2022-09-27"},{"lineNumber":374,"author":{"gitId":"Elben85"},"content":"    ","lastModifiedDate":"2022-09-27"},{"lineNumber":375,"author":{"gitId":"Elben85"},"content":"  Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":376,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":377,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":378,"author":{"gitId":"Elben85"},"content":"* 1c. No category is given","lastModifiedDate":"2022-09-27"},{"lineNumber":379,"author":{"gitId":"Elben85"},"content":"  * 1c1. The category is set to default category","lastModifiedDate":"2022-09-27"},{"lineNumber":380,"author":{"gitId":"Elben85"},"content":"  * 1c2. Continue from 2","lastModifiedDate":"2022-09-27"},{"lineNumber":381,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":382,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":383,"author":{"gitId":"Elben85"},"content":"* 1d. category is date with one of the keywords being an invalid date","lastModifiedDate":"2022-10-11"},{"lineNumber":384,"author":{"gitId":"Elben85"},"content":"  * 1d1. PleaseHireUse shows an error message. ","lastModifiedDate":"2022-10-11"},{"lineNumber":385,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":386,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":387,"author":{"gitId":"Elben85"},"content":"* 2a. The list is empty. ","lastModifiedDate":"2022-09-27"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":391,"author":{"gitId":"sugiyem"},"content":"**Use case: Update internship**","lastModifiedDate":"2022-10-14"},{"lineNumber":392,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":393,"author":{"gitId":"sugiyem"},"content":"**MSS**","lastModifiedDate":"2022-10-14"},{"lineNumber":394,"author":{"gitId":"sugiyem"},"content":"1. User requests to edit the internship at specified index and parameters ","lastModifiedDate":"2022-10-14"},{"lineNumber":395,"author":{"gitId":"sugiyem"},"content":"2. System updates the selected internship application details.","lastModifiedDate":"2022-10-14"},{"lineNumber":396,"author":{"gitId":"sugiyem"},"content":"3. System displays the success message","lastModifiedDate":"2022-10-14"},{"lineNumber":397,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":398,"author":{"gitId":"sugiyem"},"content":"   Use case ends","lastModifiedDate":"2022-10-14"},{"lineNumber":399,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":400,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-10-14"},{"lineNumber":401,"author":{"gitId":"sugiyem"},"content":"* 1a. No index is given","lastModifiedDate":"2022-10-14"},{"lineNumber":402,"author":{"gitId":"sugiyem"},"content":"    * 1a1. PleaseHireUs shows an error message. ","lastModifiedDate":"2022-10-14"},{"lineNumber":403,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":404,"author":{"gitId":"sugiyem"},"content":"  Use case ends.","lastModifiedDate":"2022-10-14"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":407,"author":{"gitId":"sugiyem"},"content":"* 1b. The given index is invalid","lastModifiedDate":"2022-10-14"},{"lineNumber":408,"author":{"gitId":"sugiyem"},"content":"  * 1b1. PleaseHireUs shows an error message.","lastModifiedDate":"2022-10-14"},{"lineNumber":409,"author":{"gitId":"sugiyem"},"content":"  ","lastModifiedDate":"2022-10-14"},{"lineNumber":410,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-10-14"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":413,"author":{"gitId":"sugiyem"},"content":"* 1c. No parameter is given.","lastModifiedDate":"2022-10-14"},{"lineNumber":414,"author":{"gitId":"sugiyem"},"content":"  * 1c1. PleaseHireUs shows an error message.","lastModifiedDate":"2022-10-14"},{"lineNumber":415,"author":{"gitId":"sugiyem"},"content":"  ","lastModifiedDate":"2022-10-14"},{"lineNumber":416,"author":{"gitId":"sugiyem"},"content":"  Use case ends.","lastModifiedDate":"2022-10-14"},{"lineNumber":417,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":419,"author":{"gitId":"sugiyem"},"content":"* 1d. The given parameters are invalid.","lastModifiedDate":"2022-10-14"},{"lineNumber":420,"author":{"gitId":"sugiyem"},"content":"  * 1d1. PleaseHireUs shows an error message.","lastModifiedDate":"2022-10-14"},{"lineNumber":421,"author":{"gitId":"sugiyem"},"content":"  ","lastModifiedDate":"2022-10-14"},{"lineNumber":422,"author":{"gitId":"sugiyem"},"content":"  Use case ends.","lastModifiedDate":"2022-10-14"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":424,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"Rachel-AG"},"content":"2.  Should be able to hold up to 500 internships without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-26"},{"lineNumber":430,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"sugiyem"},"content":"### Deleting internship(s)","lastModifiedDate":"2022-09-26"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"sugiyem"},"content":"1. Deleting internship(s) while all internships are being shown","lastModifiedDate":"2022-09-26"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"sugiyem"},"content":"   1. Prerequisites: List all internships using the `list` command. The list is non-empty.","lastModifiedDate":"2022-09-26"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"sugiyem"},"content":"      Expected: First internship is deleted from the list. Details of the deleted internship shown in the status message.","lastModifiedDate":"2022-10-14"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"sugiyem"},"content":"   1. Test case: `delete 0 2`\u003cbr\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":477,"author":{"gitId":"sugiyem"},"content":"      Expected: No internship is deleted. Error details shown in the status message.","lastModifiedDate":"2022-10-14"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"sugiyem"},"content":"1. Deleting internship(s) while only the selected internships are being shown","lastModifiedDate":"2022-09-26"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":481,"author":{"gitId":"sugiyem"},"content":"   1. Prerequisites: List specific internships using the `find` command. The list is non-empty.","lastModifiedDate":"2022-09-26"},{"lineNumber":482,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":483,"author":{"gitId":"sugiyem"},"content":"   1. Test case: `delete 1 2`\u003cbr\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":484,"author":{"gitId":"sugiyem"},"content":"      Expected: If there is less than 2 internships in the list, no internship is deleted and error details will be shown in the status message. Else if there are at least two internships on the list, the first and second internship will be deleted from the list. Details of the deleted internships are shown in the status message.","lastModifiedDate":"2022-10-14"},{"lineNumber":485,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":486,"author":{"gitId":"sugiyem"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":487,"author":{"gitId":"sugiyem"},"content":"      Expected: No internship is deleted. Error details shown in the status message.","lastModifiedDate":"2022-10-14"},{"lineNumber":488,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":489,"author":{"gitId":"Elben85"},"content":"### Finding internship(s)","lastModifiedDate":"2022-10-15"},{"lineNumber":490,"author":{"gitId":"Elben85"},"content":"1. Finding internship(s)","lastModifiedDate":"2022-10-15"},{"lineNumber":491,"author":{"gitId":"Elben85"},"content":"    1. Prerequisites: Add internships using the add command. The list can be empty","lastModifiedDate":"2022-10-15"},{"lineNumber":492,"author":{"gitId":"Elben85"},"content":"    ","lastModifiedDate":"2022-10-15"},{"lineNumber":493,"author":{"gitId":"Elben85"},"content":"    2. Test case: `find Shop`\u003cbr\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":494,"author":{"gitId":"Elben85"},"content":"        Expected: List all internships with company name containing `Shop`.","lastModifiedDate":"2022-10-15"},{"lineNumber":495,"author":{"gitId":"Elben85"},"content":"   ","lastModifiedDate":"2022-10-15"},{"lineNumber":496,"author":{"gitId":"Elben85"},"content":"    3. Test case: `find` \u003cbr\u003e","lastModifiedDate":"2022-10-15"},{"lineNumber":497,"author":{"gitId":"Elben85"},"content":"        Expected: The application shows an error message","lastModifiedDate":"2022-10-15"},{"lineNumber":498,"author":{"gitId":"Elben85"},"content":"   ","lastModifiedDate":"2022-10-15"},{"lineNumber":499,"author":{"gitId":"Elben85"},"content":"    4. Test case: `find c/unknown_category keyword`","lastModifiedDate":"2022-10-15"},{"lineNumber":500,"author":{"gitId":"Elben85"},"content":"        Expected: The application shows an error message","lastModifiedDate":"2022-10-15"},{"lineNumber":501,"author":{"gitId":"Elben85"},"content":"   ","lastModifiedDate":"2022-10-15"},{"lineNumber":502,"author":{"gitId":"Elben85"},"content":"    5. Test case: `find c/p engineer`","lastModifiedDate":"2022-10-15"},{"lineNumber":503,"author":{"gitId":"Elben85"},"content":"        Expected: List all internships with position containing the word `engineer`.","lastModifiedDate":"2022-10-15"},{"lineNumber":504,"author":{"gitId":"Elben85"},"content":"   ","lastModifiedDate":"2022-10-15"},{"lineNumber":505,"author":{"gitId":"Elben85"},"content":"    6. Test case: `find c/t skip`","lastModifiedDate":"2022-10-15"},{"lineNumber":506,"author":{"gitId":"Elben85"},"content":"        Expected: List all internships with at least one tag containing the word `skip`.   ","lastModifiedDate":"2022-10-15"},{"lineNumber":507,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":508,"author":{"gitId":"Elben85"},"content":"    7. Test case: `find c/d 02-02-2022`","lastModifiedDate":"2022-10-15"},{"lineNumber":509,"author":{"gitId":"Elben85"},"content":"        Expected: List all internships with date on `02-02-2022`.","lastModifiedDate":"2022-10-15"},{"lineNumber":510,"author":{"gitId":"Elben85"},"content":"   ","lastModifiedDate":"2022-10-15"},{"lineNumber":511,"author":{"gitId":"Elben85"},"content":"    8. Test case: `find c/d 2022-02-02`","lastModifiedDate":"2022-10-15"},{"lineNumber":512,"author":{"gitId":"Elben85"},"content":"        Expected: The application throws an error message since an invalid date format is given.","lastModifiedDate":"2022-10-15"},{"lineNumber":513,"author":{"gitId":"Elben85"},"content":"   ","lastModifiedDate":"2022-10-15"},{"lineNumber":514,"author":{"gitId":"Elben85"},"content":"    9. Test case: `find c/pr APPLY`","lastModifiedDate":"2022-10-15"},{"lineNumber":515,"author":{"gitId":"Elben85"},"content":"        Expected: The application lists all application process in stage `APPLY`","lastModifiedDate":"2022-10-15"},{"lineNumber":516,"author":{"gitId":"Elben85"},"content":"   ","lastModifiedDate":"2022-10-15"},{"lineNumber":517,"author":{"gitId":"Elben85"},"content":"    10. Test case: `find c/pr Unknown_Process`","lastModifiedDate":"2022-10-15"},{"lineNumber":518,"author":{"gitId":"Elben85"},"content":"        Expected: The applications throws an error message.","lastModifiedDate":"2022-10-15"},{"lineNumber":519,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":520,"author":{"gitId":"sugiyem"},"content":"### Update internship","lastModifiedDate":"2022-10-14"},{"lineNumber":521,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":522,"author":{"gitId":"sugiyem"},"content":"1. Updating internship while all internships are being shown","lastModifiedDate":"2022-10-14"},{"lineNumber":523,"author":{"gitId":"sugiyem"},"content":"    1. Prerequisites: List all internships using the `list` command. The list is non-empty.","lastModifiedDate":"2022-10-14"},{"lineNumber":524,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":525,"author":{"gitId":"sugiyem"},"content":"    2. Test case: `edit 1 pr/OFFER`\u003cbr\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":526,"author":{"gitId":"sugiyem"},"content":"        Expected: The application process of the first internship in the list is updated to `OFFER`. Details of the newly edited internship is shown in the status message.","lastModifiedDate":"2022-10-14"},{"lineNumber":527,"author":{"gitId":"sugiyem"},"content":"   ","lastModifiedDate":"2022-10-14"},{"lineNumber":528,"author":{"gitId":"sugiyem"},"content":"    3. Test case: `edit 1` \u003cbr\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":529,"author":{"gitId":"sugiyem"},"content":"       Expected: No internship is edited. Error details shown in the status message.","lastModifiedDate":"2022-10-14"},{"lineNumber":530,"author":{"gitId":"sugiyem"},"content":"    ","lastModifiedDate":"2022-10-14"},{"lineNumber":531,"author":{"gitId":"sugiyem"},"content":"    4. Test case: `edit 1 cuk/high salary`","lastModifiedDate":"2022-10-14"},{"lineNumber":532,"author":{"gitId":"sugiyem"},"content":"       Expected: No internship is edited. Error details shown in the status message.","lastModifiedDate":"2022-10-14"},{"lineNumber":533,"author":{"gitId":"sugiyem"},"content":"   ","lastModifiedDate":"2022-10-14"},{"lineNumber":534,"author":{"gitId":"sugiyem"},"content":"2. Updating internship while only the selected internships are being shown","lastModifiedDate":"2022-10-14"},{"lineNumber":535,"author":{"gitId":"sugiyem"},"content":"    1. Prerequisites: List specific internships using the `find` command. The list is non-empty.","lastModifiedDate":"2022-10-14"},{"lineNumber":536,"author":{"gitId":"sugiyem"},"content":"   ","lastModifiedDate":"2022-10-14"},{"lineNumber":537,"author":{"gitId":"sugiyem"},"content":"    2. Test case: `edit 2 p/Quant researcher r/get free lunch`\u003cbr\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":538,"author":{"gitId":"sugiyem"},"content":"       Expected: If there is less than 2 internships in the list, no internship is edited and error details will be shown in the status message. Else if there are at least two internships on the list, the position and remark of the second internship will be updated to Quant researcher and \"get free lunch\" respectively. Details of the newly updated internship is shown in the status message.","lastModifiedDate":"2022-10-14"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"sugiyem"},"content":"    3. Test case: `edit 0 n/Citadel Securities`\u003cbr\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":541,"author":{"gitId":"sugiyem"},"content":"        Expected: No internship is edited. Error details shown in the status message.","lastModifiedDate":"2022-10-14"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Elben85":58,"Rachel-AG":28,"aarontangr":10,"JustinS00":18,"-":356,"sugiyem":79}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"   1. Run the `seedu.phu.Main` and try a few commands.","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"JustinS00":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"   e.g. `seedu.phu.commons.StringUtilTest`","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"   e.g. `seedu.phu.storage.StorageManagerTest`","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"   e.g. `seedu.phu.logic.LogicManagerTest`","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"JustinS00":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"Are you a CS student struggling to keep track of your internship? ","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"Do you feel tired of using spreadsheets to keep track of your applications? ","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"We have just the right tool for you! ","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"Introducing PleaseHireUs (PHU), the internship tracking application made just for you!","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"Here are its main features:","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"* View the status of your individual application and assessment dates at a glance","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"* View the overall statistics of the status of all your internship applications in a stacked bar chart","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"Now you will never miss any internship application deadlines or interviews again!","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"PleaseHireUs has been optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, PleaseHireUs can get your internship management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"We hope you find PleaseHireUs to be very useful in your internship hunt!","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"1. Download the latest `PleaseHireUs.jar` from [here](https://github.com/AY2223S1-CS2103T-W17-4/tp/releases).","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your application.","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"   * **`list`** : Lists all internships.","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"   * **`add n/Grab p/software engineer pr/ASSESSMENT web/https://www.grab.com/sg/about`** : Adds a new internship to the internship tracker.","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"   * **`delete 3`** : Deletes the 3rd internship shown in the current list.","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"   * **`clear`** : Deletes all internships.","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"  e.g. in `add n/COMPANY_NAME`, `COMPANY_NAME` is a parameter which can be used as `add n/Grab`.","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"  e.g `n/COMPANY_NAME [t/TAG]` can be used as `n/Jane Street t/$$$` or as `n/Jane Street`.","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/$$$`, `t/free lunch t/transport` etc.","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"  e.g. if the command specifies `n/COMPANY_NAME pr/APPLICATION_PROCESS`, `pr/APPLICATION_PROCESS n/COMPANY_NAME` is also acceptable.","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"  e.g. if you specify `n/Bytedance n/Tiktok`, only `n/Tiktok` will be taken.","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":75,"author":{"gitId":"JustinS00"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"JustinS00"},"content":"### Adding an internship: `add`","lastModifiedDate":"2022-09-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"Rachel-AG"},"content":"Adds an internship into the list.","lastModifiedDate":"2022-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"Rachel-AG"},"content":"Format: `add n/COMPANY_NAME p/POSITION [pr/APPLICATION_PROCESS] [d/DATE] [ph/PHONE] [e/EMAIL] [web/WEBSITE] [r/REMARK]  [t/TAG]…​`","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"Rachel-AG"},"content":"* Possible options for `APPLICATION_PROCESS` : `APPLY`, `ASSESSMENT`, `INTERVIEW`, `OFFER`, `ACCEPTED`, `REJECTED` ","lastModifiedDate":"2022-09-24"},{"lineNumber":96,"author":{"gitId":"Rachel-AG"},"content":"* Case-insensitive: `Apply`, `APPLY`, and `apply` are all acceptable inputs.","lastModifiedDate":"2022-09-24"},{"lineNumber":97,"author":{"gitId":"Rachel-AG"},"content":"* `APPLICATION_PROCESS` will be set to `APPLY` by default.","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"Rachel-AG"},"content":"* `DATE` should be in dd-mm-yyyy format.","lastModifiedDate":"2022-09-24"},{"lineNumber":99,"author":{"gitId":"Rachel-AG"},"content":"* `DATE` will be set to today’s date by default.","lastModifiedDate":"2022-09-24"},{"lineNumber":100,"author":{"gitId":"Rachel-AG"},"content":"* `PHONE` will be set to \"NA\" by default.","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"Rachel-AG"},"content":"* `EMAIL` will be set to \"NA\" by default.","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"Rachel-AG"},"content":"* `WEBSITE` will be set to “NA” by default.","lastModifiedDate":"2022-09-24"},{"lineNumber":103,"author":{"gitId":"Rachel-AG"},"content":"* `REMARK` will be empty by default.","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"Rachel-AG"},"content":"💡 **Tip:** A person can have any number of tags (including 0)","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"Rachel-AG"},"content":"* `add n/Google ph/98765432 e/johnd@example.com r/Y2 summer break p/Backend Intern pr/APPLY d/11-12-2022 web/https://careers.google.com/jobs t/high t/java`","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"Rachel-AG"},"content":"* `add n/Grab p/software engineer pr/ASSESSMENT web/https://www.grab.com/sg/about`","lastModifiedDate":"2022-09-24"},{"lineNumber":110,"author":{"gitId":"Rachel-AG"},"content":"* `add n/Tiktok p/backend engineer`","lastModifiedDate":"2022-09-24"},{"lineNumber":111,"author":{"gitId":"Rachel-AG"},"content":"* `add n/Shopee p/frontend engineer pr/INTERVIEW d/14-09-2022`","lastModifiedDate":"2022-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"JustinS00"},"content":"### Listing all internships : `list`","lastModifiedDate":"2022-09-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"JustinS00"},"content":"Shows a list of all internships. List of internships can be sorted by category in ascending or descending order.","lastModifiedDate":"2022-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":117,"author":{"gitId":"JustinS00"},"content":"Format: `list [c/CATEGORY [DESCENDING]]`","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"JustinS00"},"content":"* List the internships ","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"JustinS00"},"content":"* Internships can be sorted by category and in ascending or descending order","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"JustinS00"},"content":"* The `CATEGORY` is optional. By default, without stating the category, `list` will display all internships in no particular order","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"JustinS00"},"content":"  * Possible options for `CATEGORY` : `company_name`,`n`, `position`,`p`, `application_process`,`pr`, `date`,`d` (case-insensitive)","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"JustinS00"},"content":"  * Case-insensitive: `company_name`, `Company_Name`, and `N` are all acceptable inputs.","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"JustinS00"},"content":"* The `DESCENDING` tag is optional. It can take on the value `true` or `false` (case-insensitive). ","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"JustinS00"},"content":"  * The DESCENDING tag is set to `false` by default if not stated. List of internships will be shown in ascending order.","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"JustinS00"},"content":"  * The `DESCENDING` tag can only be set to `true` if the `CATEGORY` is stated","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"JustinS00"},"content":"  * If `DESCENDING` is set to `true`. List of internships will be displayed in descending order","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":129,"author":{"gitId":"JustinS00"},"content":"Examples:","lastModifiedDate":"2022-09-24"},{"lineNumber":130,"author":{"gitId":"JustinS00"},"content":"* `list c/n true`","lastModifiedDate":"2022-09-24"},{"lineNumber":131,"author":{"gitId":"JustinS00"},"content":"* `list c/date true`","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"JustinS00"},"content":"* `list c/position false`","lastModifiedDate":"2022-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"Elben85"},"content":"### Locating internships by: `find`","lastModifiedDate":"2022-09-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"Elben85"},"content":"Find internships whose data in the target category matched the given keyword/s.","lastModifiedDate":"2022-09-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"Elben85"},"content":"Format: `find [c/CATEGORY] KEYWORDS…`","lastModifiedDate":"2022-09-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"Elben85"},"content":"* The `CATEGORY` tag refers to company_name (or n), position (or p), application_process (or pr), tags (or t), date (or d) (case-insensitive)","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"Elben85"},"content":"* If not specified, the `CATEGORY` tag will be set to company_name as a default","lastModifiedDate":"2022-09-27"},{"lineNumber":145,"author":{"gitId":"Elben85"},"content":"* Only the target category is searched.","lastModifiedDate":"2022-09-27"},{"lineNumber":146,"author":{"gitId":"Elben85"},"content":"* A `KEYWORD` will match any string if the `KEYWORD` is contained in that string e.g. `Han` will match both `Reyhan` and `Handy`","lastModifiedDate":"2022-09-27"},{"lineNumber":147,"author":{"gitId":"Elben85"},"content":"* Internships whose target category match at least one keyword will be returned (i.e. OR search). e.g. `c/company_name Hans Bo` can return internships with company name of `Hans Gruber` or `Bo Yang`","lastModifiedDate":"2022-09-27"},{"lineNumber":148,"author":{"gitId":"Elben85"},"content":"* For the find by date category, all `KEYWORD` must be a valid date in `dd-mm-yyyy` format","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"Elben85"},"content":"* `find c/p engineer` returns a list of internships with a position of Algorithm Engineer and Software Engineer","lastModifiedDate":"2022-09-27"},{"lineNumber":152,"author":{"gitId":"Elben85"},"content":"* `find sea shop` returns a list of internships with company name of Sea Labs, Shopee, and Shopback","lastModifiedDate":"2022-09-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":156,"author":{"gitId":"sugiyem"},"content":"### Deleting internship(s) : `delete`","lastModifiedDate":"2022-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"sugiyem"},"content":"Deletes the specified internship(s) from the list.","lastModifiedDate":"2022-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"sugiyem"},"content":"Format: `delete INDEX...`","lastModifiedDate":"2022-09-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"sugiyem"},"content":"* Deletes the internship at the specified `INDEX`.","lastModifiedDate":"2022-09-22"},{"lineNumber":163,"author":{"gitId":"sugiyem"},"content":"* The index refers to the index number shown in the displayed internship list.","lastModifiedDate":"2022-09-22"},{"lineNumber":164,"author":{"gitId":"aarontangr"},"content":"* The list use 1-based indexing, which means the index **must be a positive integer** such as 1, 2, 3, …","lastModifiedDate":"2022-10-14"},{"lineNumber":165,"author":{"gitId":"sugiyem"},"content":"* Can add multiple `INDEX` to delete multiple internships.","lastModifiedDate":"2022-09-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"sugiyem"},"content":"* `list` followed by `delete 1 3` deletes the 1st and 3rd internship from the list.","lastModifiedDate":"2022-09-22"},{"lineNumber":169,"author":{"gitId":"sugiyem"},"content":"* `find TikTok` followed by `delete 1` deletes the 1st internship in the results of the `find` command.","lastModifiedDate":"2022-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"aarontangr"},"content":"### View details of an internship: `view`","lastModifiedDate":"2022-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"aarontangr"},"content":"View details of list item at index","lastModifiedDate":"2022-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"aarontangr"},"content":"Format: `view INDEX`","lastModifiedDate":"2022-10-14"},{"lineNumber":176,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":177,"author":{"gitId":"aarontangr"},"content":"* Only the index is searched.","lastModifiedDate":"2022-10-14"},{"lineNumber":178,"author":{"gitId":"aarontangr"},"content":"* The list use 1-based indexing, which means the index **must be a positive integer** such as 1, 2, 3, …","lastModifiedDate":"2022-10-14"},{"lineNumber":179,"author":{"gitId":"aarontangr"},"content":"* More details about the company at the index will be displayed. ","lastModifiedDate":"2022-10-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"aarontangr"},"content":"* `list` followed by `view 1` displays more details of the 1st internship in list.","lastModifiedDate":"2022-10-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"sugiyem"},"content":"### Editing internship : `edit`","lastModifiedDate":"2022-10-14"},{"lineNumber":186,"author":{"gitId":"JustinS00"},"content":"Edit details of an internship","lastModifiedDate":"2022-09-28"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":188,"author":{"gitId":"sugiyem"},"content":"Format: `edit INDEX [n/COMPANY_NAME] [p/POSITION] [pr/APPLICATION_PROCESS] [d/ASSESSMENT_DATE] [ph/PHONE] [e/EMAIL] [r/REMARK] [web/WEBSITE] [t/TAG]...`","lastModifiedDate":"2022-10-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":190,"author":{"gitId":"sugiyem"},"content":"* Edit the details of internship at the specified `INDEX`.","lastModifiedDate":"2022-10-14"},{"lineNumber":191,"author":{"gitId":"sugiyem"},"content":"* Similar to `delete`, the index here refers to the index number shown in the displayed internship list.","lastModifiedDate":"2022-10-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-14"},{"lineNumber":194,"author":{"gitId":"sugiyem"},"content":"* `list` followed by `edit 2 p/quant researcher d/01-01-2023` will edit the position and assignment date of the 1st internship in the list to quant researcher and 1 January 2023 respectively.","lastModifiedDate":"2022-10-14"},{"lineNumber":195,"author":{"gitId":"sugiyem"},"content":"* `find hrt` followed by `edit 1 pr/REJECTED` will edit the application process of the 1st internship in the results of the find command to `REJECTED`.","lastModifiedDate":"2022-10-14"},{"lineNumber":196,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":198,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"JustinS00"},"content":"Clears all entries from the internship tracker.","lastModifiedDate":"2022-09-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"JustinS00"},"content":"PleaseHireUs data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-28"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":216,"author":{"gitId":"JustinS00"},"content":"PleaseHireUs data are saved as a JSON file `[JAR file location]/data/pleasehireus.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-09-28"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":222,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":223,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":224,"author":{"gitId":"JustinS00"},"content":"### Archiving data files `[coming in v1.3]`","lastModifiedDate":"2022-09-28"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"JustinS00"},"content":"## 3. FAQ","lastModifiedDate":"2022-09-28"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"JustinS00"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous PleaseHireUs home folder.","lastModifiedDate":"2022-09-28"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"JustinS00"},"content":"## 4. Command summary","lastModifiedDate":"2022-09-28"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"Rachel-AG"},"content":"**Add** | `add n/COMPANY_NAME p/POSITION [pr/APPLICATION_PROCESS] [d/DATE] [ph/PHONE] [e/EMAIL] [web/WEBSITE] [r/REMARK]  [t/TAG]…​` \u003cbr\u003e e.g., `add n/Tiktok p/backend engineer`","lastModifiedDate":"2022-10-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"sugiyem"},"content":"**Delete** | `delete INDEX...`\u003cbr\u003e e.g., `delete 1 3`","lastModifiedDate":"2022-09-22"},{"lineNumber":244,"author":{"gitId":"aarontangr"},"content":"**View** | `view INDEX`\u003cbr\u003e e.g., `view 1`","lastModifiedDate":"2022-10-14"},{"lineNumber":245,"author":{"gitId":"sugiyem"},"content":"**Edit** | `edit INDEX [n/COMPANY_NAME] [p/POSITION] [pr/APPLICATION_PROCESS] [d/ASSESSMENT_DATE] [ph/PHONE] [e/EMAIL] [r/REMARK] [web/WEBSITE] [t/TAG]...​`\u003cbr\u003e e.g.,`edit 2 p/Backend Intern pr/INTERVIEW d/01-11-2022`","lastModifiedDate":"2022-10-14"},{"lineNumber":246,"author":{"gitId":"Elben85"},"content":"**Find** | `find [c/CATEGORY] KEYWORDS...`\u003cbr\u003e e.g., `find c/p engineer`","lastModifiedDate":"2022-09-27"},{"lineNumber":247,"author":{"gitId":"JustinS00"},"content":"**List** | list [c/CATEGORY [DESCENDING]] \u003cbr\u003e e.g, `list c/d true`","lastModifiedDate":"2022-10-14"},{"lineNumber":248,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Elben85":12,"Rachel-AG":18,"aarontangr":9,"JustinS00":55,"-":137,"sugiyem":17}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(internshipBook)","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"JustinS00":1,"-":37}},{"path":"docs/team/aarontangr.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"layout: page","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"title: Aaron Tan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":"### Project: PleaseHireUs","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":"PleaseHireUs (PHU) is a desktop app for managing internships, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, PHU can get your internship management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"aarontangr"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"aarontangr"},"content":"* **New Feature**: Added the ability view more details of selected internship.","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":"    * What it does: allows the user to view contact details and more.","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":"    * Justification: This feature improves the product significantly because a user will want to view detailed information.","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003daarontangr\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"* **Project management**:","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"aarontangr"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"aarontangr"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"aarontangr"},"content":"    * User Guide:","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"aarontangr"},"content":"        * Added documentation for the features `view` [\\#72]()","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"aarontangr"},"content":"* **Community**:","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"aarontangr"},"content":"* **Tools**:","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"aarontangr":24}},{"path":"docs/team/elben85.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Elben85"},"content":"#Elbert Benedict\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"Elben85"},"content":"##\u003cspan style\u003d\"color:orange\"\u003e Project: PleaseHireUs \u003c/span\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"Elben85"},"content":"### Project: PleaseHireUs","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"Elben85"},"content":"PleaseHireUs (PHU) is a **desktop app for managing internships, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"Elben85"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"Elben85"},"content":"* **New Feature**: To be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"Elben85"},"content":"    * What it does:","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"Elben85"},"content":"    * Justification:","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"Elben85"},"content":"    * Highlights:","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"Elben85"},"content":"    * Credits:","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"Elben85"},"content":"* **New Feature**: To be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"Elben85"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dElben85\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"Elben85"},"content":"* **Project management**:","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"Elben85"},"content":"    * To be added soon","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"Elben85"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"Elben85"},"content":"    * Enable find command to filter by several categories (company name, position, tags, date, and application process)","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"Elben85"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"Elben85"},"content":"    * User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"Elben85"},"content":"        * Added documentations for the features `find`","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"Elben85"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"Elben85"},"content":"        * Added documentations for the features `find`","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"Elben85"},"content":"* **Community**:","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"Elben85"},"content":"    * To be added soon","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"Elben85":33}},{"path":"docs/team/justins00.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"#Justin Siaw\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-24"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"##\u003cspan style\u003d\"color:orange\"\u003e Project: PleaseHireUs \u003c/span\u003e","lastModifiedDate":"2022-09-24"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"PleaseHireUs (PHU) is a desktop app for managing internships, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, PHU can get your internship management tasks done faster than traditional GUI apps.Given below are my contributions to the project","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"* **Project management**:","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"  * Managed releases `v1.2`on GitHub","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"  ","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"  * Updated the `list` command to allow users to sort internships by categories","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"  * User Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"    * Added documentation for the features `list`","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"* **Community**:","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"  * Refactor code base to remove traces of AB3","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"  * PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"* **Tools**:","lastModifiedDate":"2022-09-24"}],"authorContributionMap":{"JustinS00":24}},{"path":"docs/team/rachel-ag.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Rachel-AG"},"content":"---","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Rachel-AG"},"content":"layout: page","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"Rachel-AG"},"content":"title: Rachel Angelyn Gunawan\u0027s Project Portfolio Page","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"Rachel-AG"},"content":"---","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"### Project: PleaseHireUs","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Rachel-AG"},"content":"PleaseHireUs (PHU) is a desktop app for managing internships, optimized for use via a Command Line Interface (CLI) while","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Rachel-AG"},"content":"still having the benefits of a Graphical User Interface (GUI). If you can type fast, PHU can get your internship ","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"management tasks done faster than traditional GUI apps. Given below are my contributions to the project.","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":"* **New Feature**: Added the `Position` field","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"    * What it does: allows the user to record an internship position ","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"  (Pull request [\\#26](https://github.com/AY2223S1-CS2103T-W17-4/tp/pull/26)).","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"Rachel-AG"},"content":"    * Justification: Knowing the role one has applied for is important to identify the skills required for the job. ","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"  This feature improves the product significantly as it can easily remind user which role he has applied for during the","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"  internship application. ","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"Rachel-AG"},"content":"    * Highlights: This addition affects existing commands and many test cases needed to be changed too.","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"Rachel-AG"},"content":"* **New Feature**: Added the `Date` field","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Rachel-AG"},"content":"    * What it does: allows the user to record the date of the internship application deadline ","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"Rachel-AG"},"content":"  (Pull request [\\#26](https://github.com/AY2223S1-CS2103T-W17-4/tp/pull/26)).","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"Rachel-AG"},"content":"    * Justification: Important dates (such as interview dates, test dates, etc.) are crucial components of an internship","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"Rachel-AG"},"content":"  application. This feature improves the product significantly not only because it reminds the user about important","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"Rachel-AG"},"content":"  dates, but also because it helps prevent any schedule clashes.","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"Rachel-AG"},"content":"    * Highlights: This addition affects existing commands and many test cases needed to be changed too.","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"* **New Feature**: Added the `ApplicationProcess` field","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"    * What it does: allows the user to record the current state of the internship application process","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"  (Pull request [\\#26](https://github.com/AY2223S1-CS2103T-W17-4/tp/pull/26)).","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"    * Justification: Knowing which stage of application one is currently at is important to prepare accordingly. This","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"Rachel-AG"},"content":"  feature improves the product significantly since it reminds the user which stage of the application they are currently at.","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"    * Highlights: This addition affects existing commands and many test cases needed to be changed too.","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"Rachel-AG"},"content":"* **New Feature**: Added the `Website` field","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Rachel-AG"},"content":"    * What it does: allows the user to record the website containing the details for the internship ","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"  (Pull request [\\#26](https://github.com/AY2223S1-CS2103T-W17-4/tp/pull/26)).","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"    * Justification: To allow user to easily access more details about the internship, if there is any.","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"    * Highlights: This addition affects existing commands and many test cases needed to be changed too.","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"* **Code contributed**: ","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"[RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003drachel-ag\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-24"},{"lineNumber":46,"author":{"gitId":"Rachel-AG"},"content":"    * User Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":47,"author":{"gitId":"Rachel-AG"},"content":"        * Added documentation for the features `add` [\\#29](https://github.com/AY2223S1-CS2103T-W17-4/tp/pull/29), ","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"Rachel-AG"},"content":"      [\\#68](https://github.com/AY2223S1-CS2103T-W17-4/tp/pull/68)","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"Rachel-AG"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":50,"author":{"gitId":"Rachel-AG"},"content":"        * Added use case for add internship [\\#29](https://github.com/AY2223S1-CS2103T-W17-4/tp/pull/29)","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":52,"author":{"gitId":"Rachel-AG"},"content":"* **Community**:","lastModifiedDate":"2022-09-24"},{"lineNumber":53,"author":{"gitId":"Rachel-AG"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#38](https://github.com/AY2223S1-CS2103T-W17-4/tp/pull/38)","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":55,"author":{"gitId":"Rachel-AG"},"content":"* **Tools**: to be added soon","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"Rachel-AG":55}},{"path":"docs/team/sugiyem.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sugiyem"},"content":"---","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"sugiyem"},"content":"layout: page","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"sugiyem"},"content":"title: Farrel Dwireswara Salim\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"sugiyem"},"content":"---","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"sugiyem"},"content":"### Project: PleaseHireUs","lastModifiedDate":"2022-09-23"},{"lineNumber":7,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":8,"author":{"gitId":"sugiyem"},"content":"PleaseHireUs (PHU) is a **desktop app for managing internships, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-09-23"},{"lineNumber":9,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":10,"author":{"gitId":"sugiyem"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-23"},{"lineNumber":11,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"sugiyem"},"content":"* **New Feature**: To be added soon","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"sugiyem"},"content":"  * What it does: ","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"sugiyem"},"content":"  * Justification: ","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"sugiyem"},"content":"  * Highlights: ","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"sugiyem"},"content":"  * Credits: ","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"sugiyem"},"content":"  ","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"sugiyem"},"content":"* **New Feature**: To be added soon","lastModifiedDate":"2022-09-23"},{"lineNumber":19,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"sugiyem"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dsugiyem\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"sugiyem"},"content":"* **Project management**:","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"sugiyem"},"content":"  * To be added soon","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"sugiyem"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"sugiyem"},"content":"  * Enabled multiple deletion in one `delete` command","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"sugiyem"},"content":"  * Updated `delete` command so that it can edit new parameters","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"sugiyem"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-23"},{"lineNumber":30,"author":{"gitId":"sugiyem"},"content":"  * User Guide:","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"sugiyem"},"content":"    * Added documentations for the features `delete` and `edit`","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"sugiyem"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-23"},{"lineNumber":33,"author":{"gitId":"sugiyem"},"content":"    * Added documentations for the features `delete` and `edit`","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":35,"author":{"gitId":"sugiyem"},"content":"* **Community**:","lastModifiedDate":"2022-09-23"},{"lineNumber":36,"author":{"gitId":"sugiyem"},"content":"  * To be added soon","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"sugiyem":36}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"JustinS00"},"content":"Create a `RemarkCommandParser` class in the `seedu.phu.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"JustinS00"},"content":"Create a new `Remark` in `seedu.phu.model.internship`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-10-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"JustinS00"},"content":"Simply add the following to [`seedu.phu.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-10-13"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"JustinS00":6,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"The `address` field in `Person` is actually an instance of the `seedu.phu.model.internship.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"JustinS00":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.phu.logic.Logic`.","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"A quick look at the `seedu.phu.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"JustinS00":2,"-":299}},{"path":"src/main/java/seedu/phu/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.util.FileUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"JustinS00":3,"-":61}},{"path":"src/main/java/seedu/phu/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"JustinS00":1,"-":24}},{"path":"src/main/java/seedu/phu/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.Config;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.Version;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.util.StringUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.Logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.LogicManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.InternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ReadOnlyInternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.storage.InternshipBookStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.storage.JsonInternshipBookStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.storage.Storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.storage.StorageManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.ui.Ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.ui.UiManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing InternshipBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"        InternshipBookStorage internshipBookStorage \u003d new JsonInternshipBookStorage(userPrefs","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"                .getInternshipBookFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"        storage \u003d new StorageManager(internshipBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s internship book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"     * The data from the sample internship book will be used instead if {@code storage}\u0027s internship book is not found,","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"JustinS00"},"content":"     * or an empty internship book will be used instead if errors occur when reading {@code storage}\u0027s internship book.","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"        Optional\u003cReadOnlyInternshipBook\u003e internshipBookOptional;","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"JustinS00"},"content":"        ReadOnlyInternshipBook initialData;","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"JustinS00"},"content":"            internshipBookOptional \u003d storage.readInternshipBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"JustinS00"},"content":"            if (!internshipBookOptional.isPresent()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"JustinS00"},"content":"                logger.info(\"Data file not found. Will be starting with a sample InternshipBook\");","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"JustinS00"},"content":"            initialData \u003d internshipBookOptional.orElseGet(SampleDataUtil::getSampleInternshipBook);","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"JustinS00"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty InternshipBook\");","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"JustinS00"},"content":"            initialData \u003d new InternshipBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":90,"author":{"gitId":"JustinS00"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty InternshipBook\");","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"JustinS00"},"content":"            initialData \u003d new InternshipBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"JustinS00"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty InternshipBook\");","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"JustinS00"},"content":"        logger.info(\"Starting InternshipBook \" + MainApp.VERSION);","lastModifiedDate":"2022-10-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"JustinS00"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Internship Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JustinS00":44,"-":140}},{"path":"src/main/java/seedu/phu/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JustinS00":1,"-":62}},{"path":"src/main/java/seedu/phu/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":"    private static final double DEFAULT_HEIGHT \u003d 1020;","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":"    private static final double DEFAULT_WIDTH \u003d 718;","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"aarontangr":2,"JustinS00":1,"-":76}},{"path":"src/main/java/seedu/phu/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"    private static final String LOG_FILE \u003d \"pleasehireus.log\";","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JustinS00":2,"-":110}},{"path":"src/main/java/seedu/phu/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"    public static final String MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX \u003d \"The internship index provided is invalid\";","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"    public static final String MESSAGE_INTERNSHIPS_LISTED_OVERVIEW \u003d \"%1$d internships listed!\";","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JustinS00":3,"-":10}},{"path":"src/main/java/seedu/phu/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JustinS00":1,"-":115}},{"path":"src/main/java/seedu/phu/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.core.index;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"JustinS00":1,"-":53}},{"path":"src/main/java/seedu/phu/commons/core/index/Indexes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.core.index;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"sugiyem"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"sugiyem"},"content":"import java.util.List;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"sugiyem"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.exceptions.IllegalIndexException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.UniqueInternshipList;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"sugiyem"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"sugiyem"},"content":" * Represents a unique collection of Index objects.","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"sugiyem"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"sugiyem"},"content":"public class Indexes {","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"sugiyem"},"content":"    private Set\u003cIndex\u003e indexes;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"sugiyem"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"sugiyem"},"content":"     * Constructs a new Indexes object given an array of strings.","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"sugiyem"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"sugiyem"},"content":"     * @param unParsedIndexes The array of strings that is going to be parsed.","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"sugiyem"},"content":"     * @throws ParseException If there is a string from unParsedIndexes that can\u0027t be parsed.","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"sugiyem"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"sugiyem"},"content":"    public Indexes(String[] unParsedIndexes) throws ParseException {","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"sugiyem"},"content":"        indexes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"sugiyem"},"content":"        for (String arg : unParsedIndexes) {","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"sugiyem"},"content":"            indexes.add(ParserUtil.parseIndex(arg));","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"sugiyem"},"content":"    public Indexes(Set\u003cIndex\u003e indexes) {","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"sugiyem"},"content":"        this.indexes \u003d indexes;","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"    public UniqueInternshipList getAllInternshipsFromIndexes(List\u003cInternship\u003e internshipList)","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"sugiyem"},"content":"            throws IllegalIndexException {","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"        UniqueInternshipList selectedInternships \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"sugiyem"},"content":"        for (Index selectedIndex : indexes) {","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"            if (selectedIndex.getZeroBased() \u003e\u003d internshipList.size()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"sugiyem"},"content":"                throw new IllegalIndexException();","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"sugiyem"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"            Internship currentInternship \u003d internshipList.get(selectedIndex.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"            selectedInternships.add(currentInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"        return selectedInternships;","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"sugiyem"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"sugiyem"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"sugiyem"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"sugiyem"},"content":"                || (other instanceof Indexes // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"sugiyem"},"content":"                \u0026\u0026 indexes.equals(((Indexes) other).indexes)); // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"sugiyem"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"JustinS00":12,"sugiyem":47}},{"path":"src/main/java/seedu/phu/commons/core/keyword/Keyword.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.core.keyword;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Elben85"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Date;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"Elben85"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Elben85"},"content":" * Represent a String of keyword.","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"Elben85"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Elben85"},"content":"public class Keyword {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Elben85"},"content":"    private String keyword;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"Elben85"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Elben85"},"content":"     * Constructs an instance representing the given keyword.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Elben85"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"Elben85"},"content":"     * @param keyword a string.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Elben85"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"Elben85"},"content":"    public Keyword(String keyword) {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Elben85"},"content":"        requireNonNull(keyword);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"Elben85"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Elben85"},"content":"    public boolean isKeywordFound(String string) {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Elben85"},"content":"        return string.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Elben85"},"content":"    public boolean isDate() {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Elben85"},"content":"        return Date.isValidDate(keyword);","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Elben85"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"Elben85"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Elben85"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Elben85"},"content":"                || (other instanceof Keyword // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Elben85"},"content":"                \u0026\u0026 keyword.equals(((Keyword) other).keyword)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"Elben85"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Elben85"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Elben85"},"content":"        return keyword.hashCode();","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Elben85"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Elben85":42,"JustinS00":3}},{"path":"src/main/java/seedu/phu/commons/core/keyword/KeywordList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.core.keyword;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Elben85"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Elben85"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"Elben85"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"Elben85"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Elben85"},"content":" * Represents a collection of Keywords Object.","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"Elben85"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"Elben85"},"content":"public class KeywordList {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Elben85"},"content":"    private Set\u003cKeyword\u003e keywords;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"Elben85"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"Elben85"},"content":"     * Constructs an empty collection of Keywords.","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Elben85"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"Elben85"},"content":"    public KeywordList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Elben85"},"content":"        keywords \u003d new HashSet\u003cKeyword\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Elben85"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"Elben85"},"content":"     * Add a Keyword to the collection of Keywords.","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"Elben85"},"content":"     * There will be no effect if Keyword already exist.","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"Elben85"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"Elben85"},"content":"     * @param keyword the keyword.","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"Elben85"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"Elben85"},"content":"    public void addKeyword(Keyword keyword) {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Elben85"},"content":"        requireNonNull(keyword);","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Elben85"},"content":"        keywords.add(keyword);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Elben85"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"Elben85"},"content":"     * Test if the string matches with any of the Keywords","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"Elben85"},"content":"     * in the collection.","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"Elben85"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"Elben85"},"content":"     * @param string the string to test","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"Elben85"},"content":"     * @return whether it matches with one of the Keywords.","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"Elben85"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"Elben85"},"content":"    public boolean isAnyKeywordFound(String string) {","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"Elben85"},"content":"        boolean result \u003d false;","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"Elben85"},"content":"        for (Keyword k: keywords) {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"Elben85"},"content":"            result \u003d result || k.isKeywordFound(string);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"Elben85"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"Elben85"},"content":"        return result;","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"Elben85"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"Elben85"},"content":"     * Tests whether there is any Keyword found in the collection","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"Elben85"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"Elben85"},"content":"     * @return whether the collection is empty","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"Elben85"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"Elben85"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"Elben85"},"content":"        return keywords.size() \u003d\u003d 0;","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"Elben85"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"Elben85"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"Elben85"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"Elben85"},"content":"                || (other instanceof KeywordList // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"Elben85"},"content":"                \u0026\u0026 keywords.equals(((KeywordList) other).keywords));","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"Elben85"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"Elben85"},"content":"     * Tests if all the Keyword is a valid date in","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"Elben85"},"content":"     * dd-mm-yyyy format","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"Elben85"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"Elben85"},"content":"     * @return the test result.","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"Elben85"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"Elben85"},"content":"    public boolean isAllKeywordDate() {","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"Elben85"},"content":"        boolean result \u003d true;","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"Elben85"},"content":"        for (Keyword k: keywords) {","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"Elben85"},"content":"            result \u003d result \u0026\u0026 k.isDate();","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"Elben85"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"Elben85"},"content":"        return result;","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"Elben85"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Elben85":79,"JustinS00":1}},{"path":"src/main/java/seedu/phu/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.exceptions;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JustinS00":1,"-":10}},{"path":"src/main/java/seedu/phu/commons/exceptions/IllegalIndexException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.exceptions;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"sugiyem"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"sugiyem"},"content":" * Signals that an Index object doesn\u0027t fulfill the range constraint.","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"sugiyem"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"sugiyem"},"content":"public class IllegalIndexException extends Exception {","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"sugiyem"},"content":"    public IllegalIndexException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"sugiyem"},"content":"        super(\"The given Index object is invalid!\");","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"sugiyem"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"JustinS00":1,"sugiyem":9}},{"path":"src/main/java/seedu/phu/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.exceptions;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JustinS00":1,"-":20}},{"path":"src/main/java/seedu/phu/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.MainApp;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"JustinS00":2,"-":40}},{"path":"src/main/java/seedu/phu/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JustinS00":1,"-":34}},{"path":"src/main/java/seedu/phu/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.Config;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"JustinS00":3,"-":20}},{"path":"src/main/java/seedu/phu/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JustinS00":1,"-":82}},{"path":"src/main/java/seedu/phu/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JustinS00":3,"-":140}},{"path":"src/main/java/seedu/phu/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JustinS00":2,"-":66}},{"path":"src/main/java/seedu/phu/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.CommandResult;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ReadOnlyInternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"     * Returns the InternshipBook.","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"     * @see seedu.phu.model.Model#getInternshipBook()","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"    ReadOnlyInternshipBook getInternshipBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"    /** Returns an unmodifiable view of the filtered list of internships */","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"    ObservableList\u003cInternship\u003e getFilteredInternshipList();","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"aarontangr"},"content":"    /** Returns an unmodifiable view of the internship selected to be viewed */","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"aarontangr"},"content":"    ObservableList\u003cInternship\u003e getViewItem();","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"     * Returns the user prefs\u0027 internship book file path.","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"    Path getInternshipBookFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"aarontangr":3,"JustinS00":14,"-":36}},{"path":"src/main/java/seedu/phu/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.Command;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.CommandResult;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.InternshipBookParser;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ReadOnlyInternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.storage.Storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"    private final InternshipBookParser internshipBookParser;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"        internshipBookParser \u003d new InternshipBookParser();","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"        Command command \u003d internshipBookParser.parseCommand(commandText);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"            storage.saveInternshipBook(model.getInternshipBook());","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"    public ReadOnlyInternshipBook getInternshipBook() {","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"        return model.getInternshipBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"    public ObservableList\u003cInternship\u003e getFilteredInternshipList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"        return model.getFilteredInternshipList();","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"aarontangr"},"content":"    public ObservableList\u003cInternship\u003e getViewItem() {","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"aarontangr"},"content":"        return model.getViewItem();","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"    public Path getInternshipBookFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"        return model.getInternshipBookFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"aarontangr":4,"JustinS00":22,"-":60}},{"path":"src/main/java/seedu/phu/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_APPLICATION_PROCESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_WEBSITE;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":" * Adds a internship to the internship book.","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a internship to the internship book. \"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"Rachel-AG"},"content":"            + PREFIX_POSITION + \"POSITION \"","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"            + \"[\" + PREFIX_APPLICATION_PROCESS + \"APPLICATION PROCESS] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Rachel-AG"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Rachel-AG"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"            + \"[\" + PREFIX_WEBSITE + \"WEBSITE] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"            + PREFIX_NAME + \"Google \"","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"            + PREFIX_REMARK + \"Apply for Y2 summer break \"","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"            + PREFIX_POSITION + \"Backend Intern \"","lastModifiedDate":"2022-09-23"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"            + PREFIX_APPLICATION_PROCESS + \"APPLY \"","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"            + PREFIX_DATE + \"11-12-2022 \"","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"Rachel-AG"},"content":"            + PREFIX_WEBSITE + \"https://careers.google.com/jobs \"","lastModifiedDate":"2022-09-23"},{"lineNumber":47,"author":{"gitId":"Rachel-AG"},"content":"            + PREFIX_TAG + \"high \"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"Rachel-AG"},"content":"            + PREFIX_TAG + \"java\";","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"Rachel-AG"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New internship added: %1$s\";","lastModifiedDate":"2022-09-23"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"    public static final String MESSAGE_DUPLICATE_INTERNSHIP \u003d \"This internship already exists in the list\";","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"    private final Internship toAdd;","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"     * Creates an AddCommand to add the specified {@code Internship}","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"    public AddCommand(Internship internship) {","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"        requireNonNull(internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"        toAdd \u003d internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"        if (model.hasInternship(toAdd)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"        model.addInternship(toAdd);","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Rachel-AG":16,"JustinS00":26,"-":39}},{"path":"src/main/java/seedu/phu/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.InternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":" * Clears the internship book.","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Internship book has been cleared!\";","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"        model.setInternshipBook(new InternshipBook());","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JustinS00":6,"-":17}},{"path":"src/main/java/seedu/phu/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JustinS00":3,"-":17}},{"path":"src/main/java/seedu/phu/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JustinS00":1,"-":70}},{"path":"src/main/java/seedu/phu/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.index.Indexes;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.exceptions.IllegalIndexException;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.UniqueInternshipList;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"sugiyem"},"content":" * Deletes all internships identified using their displayed index from the PleaseHireUs","lastModifiedDate":"2022-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"sugiyem"},"content":"            + \": Deletes the internships identified by the index numbers used in the displayed internship list.\\n\"","lastModifiedDate":"2022-09-22"},{"lineNumber":24,"author":{"gitId":"sugiyem"},"content":"            + \"Parameters: INDEX... (all indexes must be a positive integer)\\n\"","lastModifiedDate":"2022-09-22"},{"lineNumber":25,"author":{"gitId":"sugiyem"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 3\";","lastModifiedDate":"2022-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"    public static final String MESSAGE_DELETE_INTERNSHIP_SUCCESS \u003d \"Deleted Internship(s):\\n%s\";","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"sugiyem"},"content":"    private final Indexes targetIndexes;","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"sugiyem"},"content":"    public DeleteCommand(Indexes targetIndexes) {","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"sugiyem"},"content":"        this.targetIndexes \u003d targetIndexes;","lastModifiedDate":"2022-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"        List\u003cInternship\u003e lastShownList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"        UniqueInternshipList internshipsToRemove;","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"sugiyem"},"content":"        try {","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"            internshipsToRemove \u003d targetIndexes.getAllInternshipsFromIndexes(lastShownList);","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"sugiyem"},"content":"        } catch (IllegalIndexException error) {","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"        for (Internship internshipToDelete : internshipsToRemove) {","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"            model.deleteInternship(internshipToDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-09-22"},{"lineNumber":50,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_INTERNSHIP_SUCCESS, internshipsToRemove));","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"sugiyem"},"content":"                \u0026\u0026 targetIndexes.equals(((DeleteCommand) other).targetIndexes)); // state check","lastModifiedDate":"2022-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JustinS00":16,"-":32,"sugiyem":12}},{"path":"src/main/java/seedu/phu/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_APPLICATION_PROCESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_WEBSITE;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.model.Model.PREDICATE_SHOW_ALL_INTERNSHIPS;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.ApplicationProcess;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Date;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Position;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Remark;","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Website;","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":" * Edits the details of an existing internship in the internship book.","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the internship identified \"","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"            + \"by the index number used in the displayed internship list. \"","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"sugiyem"},"content":"            + \"[\" + PREFIX_POSITION + \"POSITION] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"sugiyem"},"content":"            + \"[\" + PREFIX_APPLICATION_PROCESS + \"APPLICATION PROCESS] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"sugiyem"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"sugiyem"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"sugiyem"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"sugiyem"},"content":"            + \"[\" + PREFIX_WEBSITE + \"WEBSITE] \"","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"sugiyem"},"content":"            + PREFIX_POSITION + \"Quantitative Trader \"","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"sugiyem"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com \"","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"sugiyem"},"content":"            + PREFIX_PHONE + \"12345678 \"","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"sugiyem"},"content":"            + PREFIX_APPLICATION_PROCESS + \"INTERVIEW \"","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"sugiyem"},"content":"            + PREFIX_TAG + \"money \"","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"sugiyem"},"content":"            + PREFIX_TAG + \"trading \";","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"    public static final String MESSAGE_EDIT_INTERNSHIP_SUCCESS \u003d \"Edited Internship: %1$s\";","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"    public static final String MESSAGE_DUPLICATE_INTERNSHIP \u003d \"This internship already exists in the internship book.\";","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"    private final EditInternshipDescriptor editInternshipDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"     * @param index of the internship in the filtered internship list to edit","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"     * @param editInternshipDescriptor details to edit the internship with","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"    public EditCommand(Index index, EditInternshipDescriptor editInternshipDescriptor) {","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"        requireNonNull(editInternshipDescriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":81,"author":{"gitId":"JustinS00"},"content":"        this.editInternshipDescriptor \u003d new EditInternshipDescriptor(editInternshipDescriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"JustinS00"},"content":"        List\u003cInternship\u003e lastShownList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"JustinS00"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"JustinS00"},"content":"        Internship internshipToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"JustinS00"},"content":"        Internship editedInternship \u003d createEditedInternship(internshipToEdit, editInternshipDescriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"JustinS00"},"content":"        if (!internshipToEdit.isSameInternship(editedInternship) \u0026\u0026 model.hasInternship(editedInternship)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"JustinS00"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"JustinS00"},"content":"        model.setInternship(internshipToEdit, editedInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"JustinS00"},"content":"        model.updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"JustinS00"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_INTERNSHIP_SUCCESS, editedInternship));","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"JustinS00"},"content":"     * Creates and returns a {@code Internship} with the details of {@code internshipToEdit}","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"JustinS00"},"content":"     * edited with {@code editInternshipDescriptor}.","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"JustinS00"},"content":"    private static Internship createEditedInternship(Internship internshipToEdit,","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"JustinS00"},"content":"                                                     EditInternshipDescriptor editInternshipDescriptor) {","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"JustinS00"},"content":"        assert internshipToEdit !\u003d null;","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"JustinS00"},"content":"        Name updatedName \u003d editInternshipDescriptor.getName().orElse(internshipToEdit.getName());","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"JustinS00"},"content":"        Phone updatedPhone \u003d editInternshipDescriptor.getPhone().orElse(internshipToEdit.getPhone());","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"JustinS00"},"content":"        Email updatedEmail \u003d editInternshipDescriptor.getEmail().orElse(internshipToEdit.getEmail());","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"JustinS00"},"content":"        Remark updatedRemark \u003d editInternshipDescriptor.getRemark().orElse(internshipToEdit.getRemark());","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"JustinS00"},"content":"        Position updatedPosition \u003d editInternshipDescriptor.getPosition().orElse(internshipToEdit.getPosition());","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"JustinS00"},"content":"        ApplicationProcess updatedApplicationProcess \u003d editInternshipDescriptor.getApplicationProcess()","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"JustinS00"},"content":"                .orElse(internshipToEdit.getApplicationProcess());","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"JustinS00"},"content":"        Date updatedDate \u003d editInternshipDescriptor.getDate().orElse(internshipToEdit.getDate());","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"JustinS00"},"content":"        Website updatedWebsite \u003d editInternshipDescriptor.getWebsite().orElse(internshipToEdit.getWebsite());","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"JustinS00"},"content":"        Set\u003cTag\u003e updatedTags \u003d editInternshipDescriptor.getTags().orElse(internshipToEdit.getTags());","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"JustinS00"},"content":"        return new Internship(updatedName, updatedPhone, updatedEmail, updatedRemark, updatedPosition,","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"sugiyem"},"content":"                updatedApplicationProcess, updatedDate, updatedWebsite, updatedTags);","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"JustinS00"},"content":"                \u0026\u0026 editInternshipDescriptor.equals(e.editInternshipDescriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"JustinS00"},"content":"     * Stores the details to edit the internship with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"JustinS00"},"content":"     * corresponding field value of the internship.","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"JustinS00"},"content":"    public static class EditInternshipDescriptor {","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"Rachel-AG"},"content":"        private Remark remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":155,"author":{"gitId":"sugiyem"},"content":"        private Position position;","lastModifiedDate":"2022-10-09"},{"lineNumber":156,"author":{"gitId":"sugiyem"},"content":"        private ApplicationProcess applicationProcess;","lastModifiedDate":"2022-10-09"},{"lineNumber":157,"author":{"gitId":"sugiyem"},"content":"        private Date date;","lastModifiedDate":"2022-10-09"},{"lineNumber":158,"author":{"gitId":"sugiyem"},"content":"        private Website website;","lastModifiedDate":"2022-10-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"JustinS00"},"content":"        public EditInternshipDescriptor() {}","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"JustinS00"},"content":"        public EditInternshipDescriptor(EditInternshipDescriptor toCopy) {","lastModifiedDate":"2022-10-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":171,"author":{"gitId":"Rachel-AG"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2022-10-09"},{"lineNumber":172,"author":{"gitId":"sugiyem"},"content":"            setPosition(toCopy.position);","lastModifiedDate":"2022-10-09"},{"lineNumber":173,"author":{"gitId":"sugiyem"},"content":"            setApplicationProcess(toCopy.applicationProcess);","lastModifiedDate":"2022-10-09"},{"lineNumber":174,"author":{"gitId":"sugiyem"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2022-10-09"},{"lineNumber":175,"author":{"gitId":"sugiyem"},"content":"            setWebsite(toCopy.website);","lastModifiedDate":"2022-10-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"sugiyem"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, remark, position,","lastModifiedDate":"2022-10-09"},{"lineNumber":184,"author":{"gitId":"sugiyem"},"content":"                    applicationProcess, website, date, tags);","lastModifiedDate":"2022-10-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"Rachel-AG"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2022-10-09"},{"lineNumber":212,"author":{"gitId":"Rachel-AG"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"Rachel-AG"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2022-10-09"},{"lineNumber":216,"author":{"gitId":"Rachel-AG"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2022-10-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"sugiyem"},"content":"        public void setPosition(Position position) {","lastModifiedDate":"2022-10-09"},{"lineNumber":220,"author":{"gitId":"sugiyem"},"content":"            this.position \u003d position;","lastModifiedDate":"2022-10-09"},{"lineNumber":221,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":222,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":223,"author":{"gitId":"sugiyem"},"content":"        public Optional\u003cPosition\u003e getPosition() {","lastModifiedDate":"2022-10-09"},{"lineNumber":224,"author":{"gitId":"sugiyem"},"content":"            return Optional.ofNullable(position);","lastModifiedDate":"2022-10-09"},{"lineNumber":225,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":226,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":227,"author":{"gitId":"sugiyem"},"content":"        public void setApplicationProcess(ApplicationProcess applicationProcess) {","lastModifiedDate":"2022-10-09"},{"lineNumber":228,"author":{"gitId":"sugiyem"},"content":"            this.applicationProcess \u003d applicationProcess;","lastModifiedDate":"2022-10-09"},{"lineNumber":229,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":230,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":231,"author":{"gitId":"sugiyem"},"content":"        public Optional\u003cApplicationProcess\u003e getApplicationProcess() {","lastModifiedDate":"2022-10-09"},{"lineNumber":232,"author":{"gitId":"sugiyem"},"content":"            return Optional.ofNullable(applicationProcess);","lastModifiedDate":"2022-10-09"},{"lineNumber":233,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":234,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":235,"author":{"gitId":"sugiyem"},"content":"        public void setDate(Date date) {","lastModifiedDate":"2022-10-09"},{"lineNumber":236,"author":{"gitId":"sugiyem"},"content":"            this.date \u003d date;","lastModifiedDate":"2022-10-09"},{"lineNumber":237,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":238,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":239,"author":{"gitId":"sugiyem"},"content":"        public Optional\u003cDate\u003e getDate() {","lastModifiedDate":"2022-10-09"},{"lineNumber":240,"author":{"gitId":"sugiyem"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2022-10-09"},{"lineNumber":241,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":242,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":243,"author":{"gitId":"sugiyem"},"content":"        public void setWebsite(Website website) {","lastModifiedDate":"2022-10-09"},{"lineNumber":244,"author":{"gitId":"sugiyem"},"content":"            this.website \u003d website;","lastModifiedDate":"2022-10-09"},{"lineNumber":245,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":246,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":247,"author":{"gitId":"sugiyem"},"content":"        public Optional\u003cWebsite\u003e getWebsite() {","lastModifiedDate":"2022-10-09"},{"lineNumber":248,"author":{"gitId":"sugiyem"},"content":"            return Optional.ofNullable(website);","lastModifiedDate":"2022-10-09"},{"lineNumber":249,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":250,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":253,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"JustinS00"},"content":"            if (!(other instanceof EditInternshipDescriptor)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":281,"author":{"gitId":"JustinS00"},"content":"            EditInternshipDescriptor e \u003d (EditInternshipDescriptor) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":286,"author":{"gitId":"Rachel-AG"},"content":"                    \u0026\u0026 getRemark().equals(e.getRemark())","lastModifiedDate":"2022-10-09"},{"lineNumber":287,"author":{"gitId":"sugiyem"},"content":"                    \u0026\u0026 getPosition().equals(e.getPosition())","lastModifiedDate":"2022-10-09"},{"lineNumber":288,"author":{"gitId":"sugiyem"},"content":"                    \u0026\u0026 getApplicationProcess().equals(e.getApplicationProcess())","lastModifiedDate":"2022-10-09"},{"lineNumber":289,"author":{"gitId":"sugiyem"},"content":"                    \u0026\u0026 getDate().equals(e.getDate())","lastModifiedDate":"2022-10-09"},{"lineNumber":290,"author":{"gitId":"sugiyem"},"content":"                    \u0026\u0026 getWebsite().equals(e.getWebsite())","lastModifiedDate":"2022-10-09"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Rachel-AG":7,"JustinS00":72,"-":155,"sugiyem":60}},{"path":"src/main/java/seedu/phu/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Internship Book as requested ...\";","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"JustinS00":3,"-":16}},{"path":"src/main/java/seedu/phu/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.ContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":" * Finds and lists all internships in internship book whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all internships whose specified category\"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Elben85"},"content":"            + \" contain any of the specified keywords (case-insensitive) \"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Elben85"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"Elben85"},"content":"            + \"Parameters: find [c/CATEGORY] KEYWORDS...\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"Elben85"},"content":"            + \"Example: \" + COMMAND_WORD + \" c/p engineer writer\";","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"Elben85"},"content":"    private final ContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"Elben85"},"content":"    public FindCommand(ContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"        model.updateFilteredInternshipList(predicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"                String.format(Messages.MESSAGE_INTERNSHIPS_LISTED_OVERVIEW, model.getFilteredInternshipList().size()));","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Elben85":6,"JustinS00":8,"-":29}},{"path":"src/main/java/seedu/phu/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JustinS00":2,"-":19}},{"path":"src/main/java/seedu/phu/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.model.Model.PREDICATE_SHOW_ALL_INTERNSHIPS;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.ComparableCategory;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":" * Lists all internships in the internship book to the user.","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all internships\\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"            + \"List of internships can be sorted \"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"            + \"specified by the category (case-insensitive) in ascending or descending order\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"            + \"Internships are displayed as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"            + \"Parameters: [c/CATEGORY [DESCENDING \u003d false]]\\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"            + \"Examples:\\n\"","lastModifiedDate":"2022-09-22"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"            + COMMAND_WORD + \"\\n\"","lastModifiedDate":"2022-09-22"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"            + COMMAND_WORD + \" c/company_name false \\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"            + COMMAND_WORD + \" c/pr true \\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"            + COMMAND_WORD + \" c/p \\n\";","lastModifiedDate":"2022-09-22"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all internships\";","lastModifiedDate":"2022-09-22"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"    private final ComparableCategory category;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"    private final boolean isDescending;","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-09-22"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"     * Creates a ListCommand","lastModifiedDate":"2022-09-22"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-09-22"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"    public ListCommand() {","lastModifiedDate":"2022-09-22"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"        this.category \u003d ComparableCategory.NULL;","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"        this.isDescending \u003d false;","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-09-22"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-09-22"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"     * Creates a ListCommand sorted by the category in ascending or descending order","lastModifiedDate":"2022-09-22"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-09-22"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"    public ListCommand(ComparableCategory category, boolean isDescending) {","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"        this.category \u003d category;","lastModifiedDate":"2022-09-22"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"        this.isDescending \u003d isDescending;","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"        model.updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"        if (category !\u003d ComparableCategory.NULL) {","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"            model.sortList(category);","lastModifiedDate":"2022-09-22"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"            if (isDescending) {","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"                model.reverseList();","lastModifiedDate":"2022-09-22"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"            }","lastModifiedDate":"2022-09-22"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"        String additionalMessage \u003d (this.category \u003d\u003d ComparableCategory.NULL) ? \"\"","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"                : \" sorted by \" + this.category.toString();","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"        return new CommandResult(MESSAGE_SUCCESS + additionalMessage);","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"JustinS00"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"            return true;","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"        if (!(other instanceof ListCommand)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"JustinS00"},"content":"            return false;","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"JustinS00"},"content":"        // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"        ListCommand l \u003d (ListCommand) other;","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"        return this.category.equals(l.category)","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"                \u0026\u0026 this.isDescending \u003d\u003d l.isDescending;","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JustinS00":64,"-":16}},{"path":"src/main/java/seedu/phu/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.index.Indexes;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.exceptions.IllegalIndexException;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":"import seedu.phu.model.internship.ExactMatchPredicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.UniqueInternshipList;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":" * Finds and lists all details of specified internship.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"aarontangr"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"aarontangr"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"aarontangr"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"aarontangr"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all details of specified internship\"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"aarontangr"},"content":"            + \" at the given index.\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"aarontangr"},"content":"            + \"Parameters: view index\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"aarontangr"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"aarontangr"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Displaying more details\";","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"aarontangr"},"content":"    private final Indexes targetIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"aarontangr"},"content":"     * Constructor for ViewCommand","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"aarontangr"},"content":"    public ViewCommand(Indexes targetIndex) {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"aarontangr"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"aarontangr"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"aarontangr"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"aarontangr"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"        List\u003cInternship\u003e lastShownList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"        UniqueInternshipList targetInternships;","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"aarontangr"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"            targetInternships \u003d targetIndex.getAllInternshipsFromIndexes(lastShownList);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"aarontangr"},"content":"        } catch (IllegalIndexException error) {","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"aarontangr"},"content":"        List\u003cInternship\u003e internshipList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"        for (Internship internship : targetInternships) {","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"aarontangr"},"content":"            internshipList.add(internship);","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"aarontangr"},"content":"        model.updateViewItem(new ExactMatchPredicate(internshipList));","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"aarontangr"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"aarontangr"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"aarontangr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"aarontangr"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"aarontangr"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"aarontangr"},"content":"                \u0026\u0026 targetIndex.equals(((ViewCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"aarontangr"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"aarontangr":52,"JustinS00":13}},{"path":"src/main/java/seedu/phu/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands.exceptions;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"JustinS00":1,"-":16}},{"path":"src/main/java/seedu/phu/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_APPLICATION_PROCESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_WEBSITE;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.AddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.ApplicationProcess;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Date;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Position;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Remark;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Website;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_REMARK,","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"                        PREFIX_POSITION, PREFIX_APPLICATION_PROCESS, PREFIX_DATE, PREFIX_WEBSITE, PREFIX_TAG);","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"Rachel-AG"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_POSITION)","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"Rachel-AG"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).orElse(Phone.DEFAULT_VALUE));","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"Rachel-AG"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).orElse(Email.DEFAULT_VALUE));","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"Rachel-AG"},"content":"        Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).orElse(Remark.DEFAULT_VALUE));","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"Rachel-AG"},"content":"        Position position \u003d ParserUtil.parsePosition(argMultimap.getValue(PREFIX_POSITION).get());","lastModifiedDate":"2022-09-23"},{"lineNumber":57,"author":{"gitId":"Rachel-AG"},"content":"        Website website \u003d ParserUtil.parseWebsite(argMultimap.getValue(PREFIX_WEBSITE).orElse(Website.DEFAULT_VALUE));","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"Rachel-AG"},"content":"        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE)","lastModifiedDate":"2022-09-24"},{"lineNumber":59,"author":{"gitId":"Rachel-AG"},"content":"                .orElse(LocalDate.now().format(Date.DEFAULT_FORMATTER)));","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"Rachel-AG"},"content":"        ApplicationProcess applicationProcess \u003d ParserUtil.parseApplicationProcess(","lastModifiedDate":"2022-09-23"},{"lineNumber":61,"author":{"gitId":"Rachel-AG"},"content":"                argMultimap.getValue(PREFIX_APPLICATION_PROCESS).orElse(\"APPLY\"));","lastModifiedDate":"2022-09-23"},{"lineNumber":62,"author":{"gitId":"JustinS00"},"content":"        Internship internship \u003d new Internship(name, phone, email, remark, position,","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"                applicationProcess, date, website, tagList);","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"        return new AddCommand(internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Rachel-AG":13,"JustinS00":26,"-":37}},{"path":"src/main/java/seedu/phu/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"JustinS00":1,"-":59}},{"path":"src/main/java/seedu/phu/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"JustinS00":1,"-":147}},{"path":"src/main/java/seedu/phu/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"    public static final Prefix PREFIX_POSITION \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-09-23"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"    public static final Prefix PREFIX_APPLICATION_PROCESS \u003d new Prefix(\"pr/\");","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"    public static final Prefix PREFIX_WEBSITE \u003d new Prefix(\"web/\");","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"ph/\");","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"Elben85"},"content":"    public static final Prefix PREFIX_CATEGORY \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Elben85":1,"Rachel-AG":6,"JustinS00":1,"-":11}},{"path":"src/main/java/seedu/phu/logic/parser/ComparableCategoryParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.exceptions.InvalidCategoryException;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.ComparableCategory;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-09-22"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":" * Parses input arguments","lastModifiedDate":"2022-09-22"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-09-22"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"public class ComparableCategoryParser {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"    public static final String EXCEPTION_MESSAGE \u003d \"Category can only be one of the following:\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"            + \"company_name (or n), position (or p), \"","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"            + \"application_process(or pr), date (or d)\";","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-09-22"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"     * Parses the given {@code String} of arguments in the context of categories available","lastModifiedDate":"2022-09-22"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"     * and returns a Category","lastModifiedDate":"2022-09-22"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"     * @throws InvalidCategoryException if no such category is found","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-09-22"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"    public static ComparableCategory parse(String keyword) throws InvalidCategoryException {","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"        switch (keyword.toLowerCase()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"        case \"company_name\":","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"        case \"n\":","lastModifiedDate":"2022-09-22"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"            return ComparableCategory.NAME;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"        case \"application_process\":","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"        case \"pr\":","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"            return ComparableCategory.APPLICATION_PROCESS;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"        case \"position\":","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"        case \"p\":","lastModifiedDate":"2022-09-22"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"            return ComparableCategory.POSITION;","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"        case \"date\":","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"        case \"d\":","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"            return ComparableCategory.DATE;","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"        default:","lastModifiedDate":"2022-09-22"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"            throw new InvalidCategoryException(EXCEPTION_MESSAGE);","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-09-22"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-09-22"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-09-22"}],"authorContributionMap":{"JustinS00":40}},{"path":"src/main/java/seedu/phu/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.index.Indexes;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"sugiyem"},"content":"            String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-09-22"},{"lineNumber":22,"author":{"gitId":"sugiyem"},"content":"            String[] selectedIndexes \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-09-22"},{"lineNumber":23,"author":{"gitId":"sugiyem"},"content":"            Indexes indexes \u003d new Indexes(selectedIndexes);","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":25,"author":{"gitId":"sugiyem"},"content":"            return new DeleteCommand(indexes);","lastModifiedDate":"2022-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"JustinS00":5,"-":22,"sugiyem":5}},{"path":"src/main/java/seedu/phu/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_APPLICATION_PROCESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_WEBSITE;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.EditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.EditCommand.EditInternshipDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"sugiyem"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_REMARK,","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"sugiyem"},"content":"                        PREFIX_POSITION, PREFIX_APPLICATION_PROCESS, PREFIX_DATE, PREFIX_WEBSITE, PREFIX_TAG);","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"        EditInternshipDescriptor editInternshipDescriptor \u003d new EditInternshipDescriptor();","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"            editInternshipDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"            editInternshipDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"            editInternshipDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"Rachel-AG"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"            editInternshipDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"sugiyem"},"content":"        if (argMultimap.getValue(PREFIX_POSITION).isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"            editInternshipDescriptor.setPosition(ParserUtil.parsePosition(argMultimap.getValue(PREFIX_POSITION).get()));","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"sugiyem"},"content":"        if (argMultimap.getValue(PREFIX_APPLICATION_PROCESS).isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"            editInternshipDescriptor.setApplicationProcess(","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"sugiyem"},"content":"                    ParserUtil.parseApplicationProcess(argMultimap.getValue(PREFIX_APPLICATION_PROCESS).get()));","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"sugiyem"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"            editInternshipDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"sugiyem"},"content":"        if (argMultimap.getValue(PREFIX_WEBSITE).isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"            editInternshipDescriptor.setWebsite(ParserUtil.parseWebsite(argMultimap.getValue(PREFIX_WEBSITE).get()));","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editInternshipDescriptor::setTags);","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"        if (!editInternshipDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"JustinS00"},"content":"        return new EditCommand(index, editInternshipDescriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Rachel-AG":1,"JustinS00":28,"-":60,"sugiyem":11}},{"path":"src/main/java/seedu/phu/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.keyword.Keyword;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.keyword.KeywordList;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.FindCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.ContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.FindableCategory;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"Elben85"},"content":"    public static final String CONSTRAINT_MESSAGE \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Elben85"},"content":"            \"For the date category, all the keywords must be a valid date in dd-mm-yyyy format\";","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"Elben85"},"content":"        //Default category is company name","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Elben85"},"content":"        String lastCategoryString \u003d null;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Elben85"},"content":"        FindableCategory category \u003d FindableCategory.COMPANY_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Elben85"},"content":"        KeywordList keywords \u003d new KeywordList();","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"Elben85"},"content":"        String[] splittedArgs \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"Elben85"},"content":"        for (int i \u003d 0; i \u003c splittedArgs.length; ++i) {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"Elben85"},"content":"            if (splittedArgs[i].startsWith(String.valueOf(CliSyntax.PREFIX_CATEGORY))) {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Elben85"},"content":"                String categoryString \u003d splittedArgs[i]","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"Elben85"},"content":"                        .split(String.valueOf(CliSyntax.PREFIX_CATEGORY), 2)[1];","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"Elben85"},"content":"                lastCategoryString \u003d categoryString;","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"Elben85"},"content":"                continue;","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"Elben85"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"Elben85"},"content":"            keywords.addKeyword(new Keyword(splittedArgs[i]));","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"Elben85"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"Elben85"},"content":"        //at least one keyword must be specified","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"Elben85"},"content":"        if (keywords.isEmpty()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"Elben85"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"Elben85"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"Elben85"},"content":"        if (lastCategoryString !\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"Elben85"},"content":"            category \u003d FindableCategoryParser.parse(lastCategoryString);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"Elben85"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"Elben85"},"content":"        if (category \u003d\u003d FindableCategory.DATE \u0026\u0026 !keywords.isAllKeywordDate()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"Elben85"},"content":"            throw new ParseException(CONSTRAINT_MESSAGE);","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"Elben85"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"Elben85"},"content":"        return new FindCommand(new ContainsKeywordsPredicate(keywords, category));","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Elben85":33,"JustinS00":8,"-":23}},{"path":"src/main/java/seedu/phu/logic/parser/FindableCategoryParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.exceptions.InvalidCategoryException;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.FindableCategory;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"Elben85"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"Elben85"},"content":" * A class to parse user input to FindableCategory instance.","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"Elben85"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"Elben85"},"content":"public class FindableCategoryParser {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"    public static final String EXCEPTION_MESSAGE \u003d \"Category can only be one of the following:\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"            + \"company_name (or n), position (or p), \"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"            + \"application_process(or pr), tags (or t), date (or d)\";","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"Elben85"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"Elben85"},"content":"     * Parses the string to a FindableCategory instance.","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"Elben85"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"Elben85"},"content":"     * @param string user input.","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"Elben85"},"content":"     * @return a FindableCategory instance.","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"Elben85"},"content":"     * @throws InvalidCategoryException if user input is invalid.","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"Elben85"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"Elben85"},"content":"    public static FindableCategory parse(String string) throws InvalidCategoryException {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"Elben85"},"content":"        switch (string.toLowerCase()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"Elben85"},"content":"        case \"company_name\":","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Elben85"},"content":"        case \"n\":","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Elben85"},"content":"            return FindableCategory.COMPANY_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Elben85"},"content":"        case \"application_process\":","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Elben85"},"content":"        case \"pr\":","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Elben85"},"content":"            return FindableCategory.APPLICATION_PROCESS;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Elben85"},"content":"        case \"position\":","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Elben85"},"content":"        case \"p\":","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"Elben85"},"content":"            return FindableCategory.POSITION;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"Elben85"},"content":"        case \"date\":","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"Elben85"},"content":"        case \"d\":","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Elben85"},"content":"            return FindableCategory.DATE;","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"Elben85"},"content":"        case \"tags\":","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"Elben85"},"content":"        case \"t\":","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Elben85"},"content":"            return FindableCategory.TAGS;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"Elben85"},"content":"        default:","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"            throw new InvalidCategoryException(EXCEPTION_MESSAGE);","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"Elben85"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"Elben85"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Elben85":34,"JustinS00":10}},{"path":"src/main/java/seedu/phu/logic/parser/InternshipBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.AddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.Command;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.EditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.FindCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.ListCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.ViewCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"public class InternshipBookParser {","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2022-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"aarontangr"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"aarontangr"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"aarontangr":2,"JustinS00":16,"-":62}},{"path":"src/main/java/seedu/phu/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.ListCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.exceptions.InvalidCategoryException;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.ComparableCategory;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-09-22"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":" * Parses input arguments and creates a new ListCommand object","lastModifiedDate":"2022-09-22"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-09-22"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2022-09-22"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-09-22"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2022-09-22"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"     * and returns a ListCommand object for execution.","lastModifiedDate":"2022-09-22"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-09-22"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-09-22"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-09-22"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-09-22"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"        if (trimmedArgs.length() \u003d\u003d 0) {","lastModifiedDate":"2022-09-22"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"            return new ListCommand(ComparableCategory.NULL, false);","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-09-22"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_CATEGORY);","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"        if (!argMultimap.getValue(PREFIX_CATEGORY).isPresent() || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-09-22"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"        try {","lastModifiedDate":"2022-09-22"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"            String words \u003d argMultimap.getValue(PREFIX_CATEGORY).get();","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"            String[] keywords \u003d words.split(\"\\\\s+\");","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"            ComparableCategory category \u003d ComparableCategoryParser.parse(keywords[0]);","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"            boolean isDescending \u003d keywords[keywords.length - 1].equalsIgnoreCase(\"true\");","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"            return new ListCommand(category, isDescending);","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"        } catch (InvalidCategoryException ice) {","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"            throw ice;","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-09-22"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-09-22"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-09-22"}],"authorContributionMap":{"JustinS00":45}},{"path":"src/main/java/seedu/phu/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.Command;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"JustinS00":3,"-":13}},{"path":"src/main/java/seedu/phu/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.util.StringUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.ApplicationProcess;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Date;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Position;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Remark;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Website;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"Rachel-AG"},"content":"     * Parses a {@code String remark} into a {@code Remark}.","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"Rachel-AG"},"content":"     * @throws ParseException if the given {@code remark} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"Rachel-AG"},"content":"    public static Remark parseRemark(String remark) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"Rachel-AG"},"content":"        requireNonNull(remark);","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"Rachel-AG"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"Rachel-AG"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":100,"author":{"gitId":"Rachel-AG"},"content":"     * Parses a {@code String position} into a {@code Position}.","lastModifiedDate":"2022-09-24"},{"lineNumber":101,"author":{"gitId":"Rachel-AG"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-09-24"},{"lineNumber":102,"author":{"gitId":"Rachel-AG"},"content":"     *","lastModifiedDate":"2022-09-24"},{"lineNumber":103,"author":{"gitId":"Rachel-AG"},"content":"     * @throws ParseException if the given {@code position} is invalid.","lastModifiedDate":"2022-09-24"},{"lineNumber":104,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":105,"author":{"gitId":"Rachel-AG"},"content":"    public static Position parsePosition(String position) throws ParseException {","lastModifiedDate":"2022-09-23"},{"lineNumber":106,"author":{"gitId":"Rachel-AG"},"content":"        requireNonNull(position);","lastModifiedDate":"2022-09-23"},{"lineNumber":107,"author":{"gitId":"Rachel-AG"},"content":"        String trimmedPosition \u003d position.trim();","lastModifiedDate":"2022-09-23"},{"lineNumber":108,"author":{"gitId":"Rachel-AG"},"content":"        if (!Position.isValidPosition((trimmedPosition))) {","lastModifiedDate":"2022-09-23"},{"lineNumber":109,"author":{"gitId":"Rachel-AG"},"content":"            throw new ParseException(Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-23"},{"lineNumber":110,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":111,"author":{"gitId":"Rachel-AG"},"content":"        return new Position(trimmedPosition);","lastModifiedDate":"2022-09-23"},{"lineNumber":112,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":113,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":114,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":115,"author":{"gitId":"Rachel-AG"},"content":"     * Parses a {@code String website} into a {@code Website}.","lastModifiedDate":"2022-09-24"},{"lineNumber":116,"author":{"gitId":"Rachel-AG"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-09-24"},{"lineNumber":117,"author":{"gitId":"Rachel-AG"},"content":"     *","lastModifiedDate":"2022-09-24"},{"lineNumber":118,"author":{"gitId":"Rachel-AG"},"content":"     * @throws ParseException if the given {@code website} is invalid.","lastModifiedDate":"2022-09-24"},{"lineNumber":119,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":120,"author":{"gitId":"Rachel-AG"},"content":"    public static Website parseWebsite(String website) throws ParseException {","lastModifiedDate":"2022-09-23"},{"lineNumber":121,"author":{"gitId":"Rachel-AG"},"content":"        requireNonNull(website);","lastModifiedDate":"2022-09-23"},{"lineNumber":122,"author":{"gitId":"Rachel-AG"},"content":"        String trimmedWebsite \u003d website.trim();","lastModifiedDate":"2022-09-23"},{"lineNumber":123,"author":{"gitId":"Rachel-AG"},"content":"        if (!Website.isValidWebsite(trimmedWebsite)) {","lastModifiedDate":"2022-09-23"},{"lineNumber":124,"author":{"gitId":"Rachel-AG"},"content":"            throw new ParseException(Website.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-23"},{"lineNumber":125,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":126,"author":{"gitId":"Rachel-AG"},"content":"        return new Website(trimmedWebsite);","lastModifiedDate":"2022-09-23"},{"lineNumber":127,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":128,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":129,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":130,"author":{"gitId":"Rachel-AG"},"content":"     * Parses a {@code String applicationProcess} into an {@code ApplicationProcess}.","lastModifiedDate":"2022-09-24"},{"lineNumber":131,"author":{"gitId":"Rachel-AG"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-09-24"},{"lineNumber":132,"author":{"gitId":"Rachel-AG"},"content":"     *","lastModifiedDate":"2022-09-24"},{"lineNumber":133,"author":{"gitId":"Rachel-AG"},"content":"     * @throws ParseException if the given {@code applicationProcess} is invalid.","lastModifiedDate":"2022-09-24"},{"lineNumber":134,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":135,"author":{"gitId":"Rachel-AG"},"content":"    public static ApplicationProcess parseApplicationProcess(String applicationProcess) throws ParseException {","lastModifiedDate":"2022-09-23"},{"lineNumber":136,"author":{"gitId":"Rachel-AG"},"content":"        requireNonNull(applicationProcess);","lastModifiedDate":"2022-09-23"},{"lineNumber":137,"author":{"gitId":"Rachel-AG"},"content":"        String trimmedApplicationProcess \u003d applicationProcess.trim();","lastModifiedDate":"2022-09-23"},{"lineNumber":138,"author":{"gitId":"Rachel-AG"},"content":"        if (!ApplicationProcess.isValidApplicationProcess(trimmedApplicationProcess)) {","lastModifiedDate":"2022-09-23"},{"lineNumber":139,"author":{"gitId":"Rachel-AG"},"content":"            throw new ParseException(ApplicationProcess.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-23"},{"lineNumber":140,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":141,"author":{"gitId":"Rachel-AG"},"content":"        return new ApplicationProcess(trimmedApplicationProcess);","lastModifiedDate":"2022-09-23"},{"lineNumber":142,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":143,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":170,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":171,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":172,"author":{"gitId":"Rachel-AG"},"content":"     * Parses a {@code String date} into an {@code Date}.","lastModifiedDate":"2022-09-24"},{"lineNumber":173,"author":{"gitId":"Rachel-AG"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-09-24"},{"lineNumber":174,"author":{"gitId":"Rachel-AG"},"content":"     *","lastModifiedDate":"2022-09-24"},{"lineNumber":175,"author":{"gitId":"Rachel-AG"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2022-09-24"},{"lineNumber":176,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":177,"author":{"gitId":"Rachel-AG"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2022-09-23"},{"lineNumber":178,"author":{"gitId":"Rachel-AG"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-09-23"},{"lineNumber":179,"author":{"gitId":"Rachel-AG"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2022-09-23"},{"lineNumber":180,"author":{"gitId":"Rachel-AG"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2022-09-23"},{"lineNumber":181,"author":{"gitId":"Rachel-AG"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-23"},{"lineNumber":182,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":183,"author":{"gitId":"Rachel-AG"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2022-09-23"},{"lineNumber":184,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Rachel-AG":66,"JustinS00":13,"-":106}},{"path":"src/main/java/seedu/phu/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"JustinS00":1,"-":38}},{"path":"src/main/java/seedu/phu/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.index.Indexes;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.ViewCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"aarontangr"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"aarontangr"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"aarontangr"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"aarontangr"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"aarontangr"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"aarontangr"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"aarontangr"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"aarontangr"},"content":"            String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"aarontangr"},"content":"            String[] selectedIndex \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"aarontangr"},"content":"            Indexes index \u003d new Indexes(selectedIndex);","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"aarontangr"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"aarontangr"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"aarontangr"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"aarontangr"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"aarontangr"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"aarontangr":26,"JustinS00":5}},{"path":"src/main/java/seedu/phu/logic/parser/exceptions/InvalidCategoryException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser.exceptions;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Elben85"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Elben85"},"content":" * Represents an exception when a user inputs an invalid category.","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Elben85"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Elben85"},"content":"public class InvalidCategoryException extends ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"    public InvalidCategoryException(String message) {","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"        super(message);","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Elben85"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Elben85":8,"JustinS00":3}},{"path":"src/main/java/seedu/phu/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser.exceptions;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"JustinS00":2,"-":15}},{"path":"src/main/java/seedu/phu/model/InternshipBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.UniqueInternshipList;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":" * Wraps all data at the internship-book level","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":" * Duplicates are not allowed (by .isSameInternship comparison)","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"public class InternshipBook implements ReadOnlyInternshipBook {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"    private final UniqueInternshipList internships;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"    /*","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"     *   among constructors.","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"    {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"        internships \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"    public InternshipBook() {}","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"     * Creates an InternshipBook using the Internships in the {@code toBeCopied}","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"    public InternshipBook(ReadOnlyInternshipBook toBeCopied) {","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"        this();","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"     * Replaces the contents of the internship list with {@code internships}.","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"     * {@code internships} must not contain duplicate internships.","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"    public void setInternships(List\u003cInternship\u003e internships) {","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"        this.internships.setInternships(internships);","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"     * Resets the existing data of this {@code InternshipBook} with {@code newData}.","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"    public void resetData(ReadOnlyInternshipBook newData) {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"        setInternships(newData.getInternshipList());","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"    //// internship-level operations","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"     * Returns true if a internship with the same identity as {@code internship} exists in the internship book.","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"    public boolean hasInternship(Internship internship) {","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"JustinS00"},"content":"        requireNonNull(internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"        return internships.contains(internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"     * Adds a internship to the internship book.","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"JustinS00"},"content":"     * The internship must not already exist in the internship book.","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"    public void addInternship(Internship p) {","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"JustinS00"},"content":"        internships.add(p);","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"JustinS00"},"content":"     * Replaces the given internship {@code target} in the list with {@code editedInternship}.","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"JustinS00"},"content":"     * {@code target} must exist in the internship book.","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"JustinS00"},"content":"     * The internship identity of {@code editedInternship} must not be the same as another","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"JustinS00"},"content":"     * existing internship in the internship book.","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"JustinS00"},"content":"    public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"JustinS00"},"content":"        requireNonNull(editedInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"JustinS00"},"content":"        internships.setInternship(target, editedInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"JustinS00"},"content":"     * Removes {@code key} from this {@code InternshipBook}.","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"JustinS00"},"content":"     * {@code key} must exist in the internship book.","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"JustinS00"},"content":"    public void removeInternship(Internship key) {","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"JustinS00"},"content":"        internships.remove(key);","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"JustinS00"},"content":"    //// util methods","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"JustinS00"},"content":"    public String toString() {","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"JustinS00"},"content":"        return internships.asUnmodifiableObservableList().size() + \" internships\";","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"JustinS00"},"content":"        // TODO: refine later","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"JustinS00"},"content":"    public ObservableList\u003cInternship\u003e getInternshipList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"JustinS00"},"content":"        return internships.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"JustinS00"},"content":"    public void sortInternshipList(Comparator\u003cInternship\u003e comparator) {","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"JustinS00"},"content":"        internships.sortInternship(comparator);","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"JustinS00"},"content":"    public void reverseList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"JustinS00"},"content":"        internships.reverseList();","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"JustinS00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"JustinS00"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"JustinS00"},"content":"                || (other instanceof InternshipBook // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"JustinS00"},"content":"                \u0026\u0026 internships.equals(((InternshipBook) other).internships));","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"JustinS00"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"JustinS00"},"content":"        return internships.hashCode();","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"JustinS00":132}},{"path":"src/main/java/seedu/phu/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.ComparableCategory;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":" * The API of the Model component.","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"public interface Model {","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"    Predicate\u003cInternship\u003e PREDICATE_SHOW_ALL_INTERNSHIPS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"     * Returns the user prefs.","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"     * Returns the user prefs\u0027 internship book file path.","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"    Path getInternshipBookFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"     * Sets the user prefs\u0027 internship book file path.","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"    void setInternshipBookFilePath(Path internshipBookFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"     * Replaces internship book data with the data in {@code internshipBook}.","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"    void setInternshipBook(ReadOnlyInternshipBook internshipBook);","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"    /** Returns the InternshipBook */","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"    ReadOnlyInternshipBook getInternshipBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"     * Returns true if a internship with the same identity as {@code internship} exists in the internship book.","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"    boolean hasInternship(Internship internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"JustinS00"},"content":"     * Deletes the given internship.","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"     * The internship must exist in the internship book.","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"    void deleteInternship(Internship target);","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"     * Adds the given internship.","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"     * {@code internship} must not already exist in the internship book.","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"    void addInternship(Internship internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"     * Replaces the given internship {@code target} with {@code editedInternship}.","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"JustinS00"},"content":"     * {@code target} must exist in the internship book.","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"     * The internship identity of {@code editedInternship} must not be the same as","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"     * another existing internship in the internship book.","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"JustinS00"},"content":"    void setInternship(Internship target, Internship editedInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"JustinS00"},"content":"    /** Returns an unmodifiable view of the filtered internship list */","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"JustinS00"},"content":"    ObservableList\u003cInternship\u003e getFilteredInternshipList();","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"JustinS00"},"content":"     * Updates the filter of the filtered internship list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"JustinS00"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"JustinS00"},"content":"    void updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"JustinS00"},"content":"    void sortList(ComparableCategory category);","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"JustinS00"},"content":"    void reverseList();","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"aarontangr"},"content":"     * Updates the filter of the filtered internship list to only show internshipToView.","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"aarontangr"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"aarontangr"},"content":"    void viewInternship(Internship internshipToView);","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":101,"author":{"gitId":"aarontangr"},"content":"    ObservableList\u003cInternship\u003e getViewItem();","lastModifiedDate":"2022-10-18"},{"lineNumber":102,"author":{"gitId":"aarontangr"},"content":"    void updateViewItem(Predicate\u003cInternship\u003e predicate);","lastModifiedDate":"2022-10-18"},{"lineNumber":103,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"aarontangr":9,"JustinS00":94}},{"path":"src/main/java/seedu/phu/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"aarontangr"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.ComparableCategory;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"import seedu.phu.model.internship.ExactMatchPredicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"aarontangr"},"content":"import seedu.phu.model.internship.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":" * Represents the in-memory model of the internship book data.","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"    private final InternshipBook internshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"    private final FilteredList\u003cInternship\u003e filteredInternships;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"aarontangr"},"content":"    private final FilteredList\u003cInternship\u003e viewItem;","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"     * Initializes a ModelManager with the given internshipBook and userPrefs.","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"    public ModelManager(ReadOnlyInternshipBook internshipBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"        requireAllNonNull(internshipBook, userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"        logger.fine(\"Initializing with internship book: \" + internshipBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"        this.internshipBook \u003d new InternshipBook(internshipBook);","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"        filteredInternships \u003d new FilteredList\u003c\u003e(this.internshipBook.getInternshipList());","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"aarontangr"},"content":"        viewItem \u003d new FilteredList\u003c\u003e(this.internshipBook.getInternshipList());","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"aarontangr"},"content":"        updateViewItem(new NameContainsKeywordsPredicate(new ArrayList\u003c\u003e()));","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"    public ModelManager() {","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"        this(new InternshipBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"JustinS00"},"content":"        return userPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"JustinS00"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"JustinS00"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"    public Path getInternshipBookFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"        return userPrefs.getInternshipBookFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"JustinS00"},"content":"    public void setInternshipBookFilePath(Path internshipBookFilePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"JustinS00"},"content":"        requireNonNull(internshipBookFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"JustinS00"},"content":"        userPrefs.setInternshipBookFilePath(internshipBookFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"JustinS00"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d InternshipBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"JustinS00"},"content":"    public void setInternshipBook(ReadOnlyInternshipBook internshipBook) {","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"JustinS00"},"content":"        this.internshipBook.resetData(internshipBook);","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"JustinS00"},"content":"    public ReadOnlyInternshipBook getInternshipBook() {","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"JustinS00"},"content":"        return internshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"JustinS00"},"content":"    public boolean hasInternship(Internship internship) {","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"JustinS00"},"content":"        requireNonNull(internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"JustinS00"},"content":"        return internshipBook.hasInternship(internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"JustinS00"},"content":"    public void deleteInternship(Internship target) {","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"JustinS00"},"content":"        internshipBook.removeInternship(target);","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"JustinS00"},"content":"    public void addInternship(Internship internship) {","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"JustinS00"},"content":"        internshipBook.addInternship(internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"JustinS00"},"content":"        updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"JustinS00"},"content":"    public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"JustinS00"},"content":"        requireAllNonNull(target, editedInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"JustinS00"},"content":"        internshipBook.setInternship(target, editedInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"aarontangr"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"aarontangr"},"content":"    public void viewInternship(Internship internship) {","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"aarontangr"},"content":"        List\u003cInternship\u003e internshipList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"aarontangr"},"content":"        internshipList.add(internship);","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"aarontangr"},"content":"        updateViewItem(new ExactMatchPredicate(internshipList));","lastModifiedDate":"2022-10-19"},{"lineNumber":129,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"JustinS00"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Internship List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"JustinS00"},"content":"     * Returns an unmodifiable view of the list of {@code Internship} backed by the internal list of","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"JustinS00"},"content":"     * {@code versionedInternshipBook}","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"JustinS00"},"content":"    public ObservableList\u003cInternship\u003e getFilteredInternshipList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"JustinS00"},"content":"        return filteredInternships;","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"JustinS00"},"content":"    public void updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate) {","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"JustinS00"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"JustinS00"},"content":"        filteredInternships.setPredicate(predicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"aarontangr"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":149,"author":{"gitId":"aarontangr"},"content":"    public ObservableList\u003cInternship\u003e getViewItem() {","lastModifiedDate":"2022-10-18"},{"lineNumber":150,"author":{"gitId":"aarontangr"},"content":"        return viewItem;","lastModifiedDate":"2022-10-18"},{"lineNumber":151,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":152,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":153,"author":{"gitId":"aarontangr"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":154,"author":{"gitId":"aarontangr"},"content":"    public void updateViewItem(Predicate\u003cInternship\u003e predicate) {","lastModifiedDate":"2022-10-18"},{"lineNumber":155,"author":{"gitId":"aarontangr"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-18"},{"lineNumber":156,"author":{"gitId":"aarontangr"},"content":"        viewItem.setPredicate(predicate);","lastModifiedDate":"2022-10-18"},{"lineNumber":157,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":158,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":159,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"JustinS00"},"content":"    public void sortList(ComparableCategory category) {","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"JustinS00"},"content":"        requireNonNull(category);","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"JustinS00"},"content":"        internshipBook.sortInternshipList(new Comparator\u003cInternship\u003e() {","lastModifiedDate":"2022-10-13"},{"lineNumber":164,"author":{"gitId":"JustinS00"},"content":"            @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"JustinS00"},"content":"            public int compare(Internship p1, Internship p2) {","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"JustinS00"},"content":"                return p1.compareTo(p2, category);","lastModifiedDate":"2022-10-13"},{"lineNumber":167,"author":{"gitId":"JustinS00"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":168,"author":{"gitId":"JustinS00"},"content":"        });","lastModifiedDate":"2022-10-13"},{"lineNumber":169,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":170,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":171,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":172,"author":{"gitId":"JustinS00"},"content":"    public void reverseList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":173,"author":{"gitId":"JustinS00"},"content":"        internshipBook.reverseList();","lastModifiedDate":"2022-10-13"},{"lineNumber":174,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":175,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":176,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":177,"author":{"gitId":"JustinS00"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-10-13"},{"lineNumber":178,"author":{"gitId":"JustinS00"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-13"},{"lineNumber":179,"author":{"gitId":"JustinS00"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":180,"author":{"gitId":"JustinS00"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":181,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":182,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":183,"author":{"gitId":"JustinS00"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":184,"author":{"gitId":"JustinS00"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":185,"author":{"gitId":"JustinS00"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":186,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":187,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":188,"author":{"gitId":"JustinS00"},"content":"        // state check","lastModifiedDate":"2022-10-13"},{"lineNumber":189,"author":{"gitId":"JustinS00"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2022-10-13"},{"lineNumber":190,"author":{"gitId":"JustinS00"},"content":"        return internshipBook.equals(other.internshipBook)","lastModifiedDate":"2022-10-13"},{"lineNumber":191,"author":{"gitId":"JustinS00"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2022-10-13"},{"lineNumber":192,"author":{"gitId":"JustinS00"},"content":"                \u0026\u0026 filteredInternships.equals(other.filteredInternships);","lastModifiedDate":"2022-10-13"},{"lineNumber":193,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":194,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":195,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"aarontangr":26,"JustinS00":169}},{"path":"src/main/java/seedu/phu/model/ReadOnlyInternshipBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":" * Unmodifiable view of an internship book","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"public interface ReadOnlyInternshipBook {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"     * Returns an unmodifiable view of the internships list.","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"     * This list will not contain any duplicate internships.","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"    ObservableList\u003cInternship\u003e getInternshipList();","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"    void sortInternshipList(Comparator\u003cInternship\u003e comparator);","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"    void reverseList();","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"JustinS00":23}},{"path":"src/main/java/seedu/phu/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"    Path getInternshipBookFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"JustinS00":3,"-":13}},{"path":"src/main/java/seedu/phu/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"    private Path internshipBookFilePath \u003d Paths.get(\"data\" , \"internshipbook.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"        setInternshipBookFilePath(newUserPrefs.getInternshipBookFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"    public Path getInternshipBookFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"        return internshipBookFilePath;","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"    public void setInternshipBookFilePath(Path internshipBookFilePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"        requireNonNull(internshipBookFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"        this.internshipBookFilePath \u003d internshipBookFilePath;","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"                \u0026\u0026 internshipBookFilePath.equals(o.internshipBookFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"        return Objects.hash(guiSettings, internshipBookFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"JustinS00"},"content":"        sb.append(\"\\nLocal data file location : \" + internshipBookFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JustinS00":12,"-":75}},{"path":"src/main/java/seedu/phu/model/internship/ApplicationProcess.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"Rachel-AG"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":"/**","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"Rachel-AG"},"content":" * Represents an internship\u0027s application process state in the list.","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"Rachel-AG"},"content":" */","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"public class ApplicationProcess extends ComparableModel {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"     * Represents the possible state of application process of an internship.","lastModifiedDate":"2022-09-24"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"Rachel-AG"},"content":"    enum ApplicationProcessState {","lastModifiedDate":"2022-09-24"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"        APPLY, ASSESSMENT, INTERVIEW, OFFER, ACCEPTED, REJECTED;","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"Rachel-AG"},"content":"        /**","lastModifiedDate":"2022-09-24"},{"lineNumber":19,"author":{"gitId":"Rachel-AG"},"content":"         * Returns true if a given string is a valid application state.","lastModifiedDate":"2022-09-24"},{"lineNumber":20,"author":{"gitId":"Rachel-AG"},"content":"         */","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"Rachel-AG"},"content":"        public static boolean isInApplicationProcessState(String test) {","lastModifiedDate":"2022-09-24"},{"lineNumber":22,"author":{"gitId":"Rachel-AG"},"content":"            return Arrays.stream(ApplicationProcessState.values()).anyMatch(stage -\u003e stage.name().equals(test));","lastModifiedDate":"2022-09-24"},{"lineNumber":23,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-24"},{"lineNumber":24,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":25,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Application process can take the following values: \"","lastModifiedDate":"2022-09-24"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"            + \"APPLY, ASSESSMENT, INTERVIEW, OFFER, ACCEPTED, REJECTED\";","lastModifiedDate":"2022-09-24"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"    public final ApplicationProcessState value;","lastModifiedDate":"2022-09-24"},{"lineNumber":30,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":32,"author":{"gitId":"Rachel-AG"},"content":"     * Constructs an {@code ApplicationProcess}.","lastModifiedDate":"2022-09-24"},{"lineNumber":33,"author":{"gitId":"Rachel-AG"},"content":"     *","lastModifiedDate":"2022-09-24"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"     * @param state A valid state of application process.","lastModifiedDate":"2022-09-24"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"    public ApplicationProcess(String state) {","lastModifiedDate":"2022-09-24"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"        requireNonNull(state);","lastModifiedDate":"2022-09-24"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"        value \u003d ApplicationProcessState.valueOf(state.toUpperCase());","lastModifiedDate":"2022-09-24"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"     * Returns true if a given string is a valid application state.","lastModifiedDate":"2022-09-24"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"    public static boolean isValidApplicationProcess(String test) {","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"Rachel-AG"},"content":"        String upperCasedTest \u003d test.toUpperCase();","lastModifiedDate":"2022-09-23"},{"lineNumber":47,"author":{"gitId":"Rachel-AG"},"content":"        return ApplicationProcessState.isInApplicationProcessState(upperCasedTest);","lastModifiedDate":"2022-09-24"},{"lineNumber":48,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":49,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"    public int compareTo(ComparableModel other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"        if (other instanceof ApplicationProcess) {","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"            return this.toString().compareTo(((ApplicationProcess) other).toString());","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"        return 0;","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":59,"author":{"gitId":"Rachel-AG"},"content":"    public String toString() {","lastModifiedDate":"2022-09-23"},{"lineNumber":60,"author":{"gitId":"Rachel-AG"},"content":"        return value.name();","lastModifiedDate":"2022-09-23"},{"lineNumber":61,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":62,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":63,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":64,"author":{"gitId":"Rachel-AG"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-23"},{"lineNumber":65,"author":{"gitId":"Rachel-AG"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-23"},{"lineNumber":66,"author":{"gitId":"Rachel-AG"},"content":"                || (other instanceof ApplicationProcess // instanceof handles nulls","lastModifiedDate":"2022-09-23"},{"lineNumber":67,"author":{"gitId":"Rachel-AG"},"content":"                \u0026\u0026 value.equals(((ApplicationProcess) other).value)); // state check","lastModifiedDate":"2022-09-23"},{"lineNumber":68,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":69,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":70,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":71,"author":{"gitId":"Rachel-AG"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-23"},{"lineNumber":72,"author":{"gitId":"Rachel-AG"},"content":"        return value.hashCode();","lastModifiedDate":"2022-09-23"},{"lineNumber":73,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":74,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":75,"author":{"gitId":"Rachel-AG"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"Rachel-AG":65,"JustinS00":10}},{"path":"src/main/java/seedu/phu/model/internship/ComparableCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":" * Enumeration of categories which can be sorted by","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"public enum ComparableCategory {","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"    NAME,","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"    APPLICATION_PROCESS,","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"    POSITION,","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"    DATE,","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"    NULL","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"JustinS00":13}},{"path":"src/main/java/seedu/phu/model/internship/ComparableModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":" * Represents category which values can be compared","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"public abstract class ComparableModel {","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"     * Compares the values of the category","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"    public abstract int compareTo(ComparableModel o);","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"JustinS00":13}},{"path":"src/main/java/seedu/phu/model/internship/ContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Elben85"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"Elben85"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"Elben85"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.keyword.KeywordList;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Elben85"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":" * Tests if a Internship\u0027s data matches with the Keyword on the specified","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Elben85"},"content":" * category.","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"Elben85"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"public class ContainsKeywordsPredicate implements Predicate\u003cInternship\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Elben85"},"content":"    private final KeywordList keywords;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"Elben85"},"content":"    private final FindableCategory category;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"Elben85"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"Elben85"},"content":"     * Constructs a predicate with the given keywords and category.","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"Elben85"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"Elben85"},"content":"     * @param keywords a list of keywords.","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"Elben85"},"content":"     * @param category the category to test.","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"Elben85"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"Elben85"},"content":"    public ContainsKeywordsPredicate(KeywordList keywords, FindableCategory category) {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"Elben85"},"content":"        requireNonNull(category);","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"Elben85"},"content":"        requireNonNull(keywords);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"Elben85"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"Elben85"},"content":"        this.category \u003d category;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"Elben85"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"    public boolean test(Internship internship) {","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Elben85"},"content":"        switch (category) {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"Elben85"},"content":"        case COMPANY_NAME:","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"            return testName(internship.getName());","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"Elben85"},"content":"        case DATE:","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"            return testDate(internship.getDate());","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"Elben85"},"content":"        case POSITION:","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"            return testPosition(internship.getPosition());","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"Elben85"},"content":"        case APPLICATION_PROCESS:","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"            return testApplicationProcess(internship.getApplicationProcess());","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"Elben85"},"content":"        case TAGS:","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"            return testTags(internship.getTags());","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"Elben85"},"content":"        default:","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"Elben85"},"content":"            // Should not fall to default case","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"Elben85"},"content":"            return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"Elben85"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"Elben85"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"Elben85"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"Elben85"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"Elben85"},"content":"                || (other instanceof ContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"Elben85"},"content":"                \u0026\u0026 category.equals(((ContainsKeywordsPredicate) other).category)) // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"Elben85"},"content":"                \u0026\u0026 keywords.equals(((ContainsKeywordsPredicate) other).keywords);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"Elben85"},"content":"    private boolean testName(Name name) {","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"Elben85"},"content":"        return keywords.isAnyKeywordFound(name.toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"Elben85"},"content":"    private boolean testDate(Date date) {","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"Elben85"},"content":"        return keywords.isAnyKeywordFound(date.toInputFormat());","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"Elben85"},"content":"    private boolean testPosition(Position position) {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"Elben85"},"content":"        return keywords.isAnyKeywordFound(position.toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"Elben85"},"content":"    private boolean testApplicationProcess(ApplicationProcess applicationState) {","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"Elben85"},"content":"        return keywords.isAnyKeywordFound(applicationState.toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"Elben85"},"content":"    private boolean testTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"Elben85"},"content":"        boolean result \u003d false;","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"Elben85"},"content":"        for (Tag t : tags) {","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"Elben85"},"content":"            result \u003d result || keywords.isAnyKeywordFound(t.getTagName());","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"Elben85"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"Elben85"},"content":"        return result;","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"Elben85"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Elben85":79,"JustinS00":11}},{"path":"src/main/java/seedu/phu/model/internship/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"Rachel-AG"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"Rachel-AG"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"/**","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":" * Represents the date of an internship in the list.","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":" */","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"public class Date extends ComparableModel {","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"Rachel-AG"},"content":"            \"Date should be in dd-mm-yyyy format\";","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"    public static final DateTimeFormatter DEFAULT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Rachel-AG"},"content":"    public static final DateTimeFormatter DISPLAY_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"Rachel-AG"},"content":"    public final LocalDate value;","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"Rachel-AG"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"Rachel-AG"},"content":"     *","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"     * @param date A valid date in string format of dd-mm-yyyy.","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"    public Date(String date) {","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-09-23"},{"lineNumber":30,"author":{"gitId":"Rachel-AG"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"        this.value \u003d LocalDate.parse(date, DEFAULT_FORMATTER);","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":33,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-23"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2022-09-23"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"     *","lastModifiedDate":"2022-09-23"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"     * @param date A valid date.","lastModifiedDate":"2022-09-23"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-23"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"    public Date(LocalDate date) {","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"        this.value \u003d date;","lastModifiedDate":"2022-09-23"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"     * Returns true if a given string is in a valid date format.","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":47,"author":{"gitId":"Rachel-AG"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2022-09-23"},{"lineNumber":48,"author":{"gitId":"Rachel-AG"},"content":"        try {","lastModifiedDate":"2022-09-23"},{"lineNumber":49,"author":{"gitId":"Rachel-AG"},"content":"            LocalDate.parse(test, DEFAULT_FORMATTER);","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"Rachel-AG"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-23"},{"lineNumber":51,"author":{"gitId":"Rachel-AG"},"content":"            return false;","lastModifiedDate":"2022-09-23"},{"lineNumber":52,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":53,"author":{"gitId":"Rachel-AG"},"content":"        return true;","lastModifiedDate":"2022-09-23"},{"lineNumber":54,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":55,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":56,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":57,"author":{"gitId":"Rachel-AG"},"content":"     * Returns a string representation of the date in input format.","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":59,"author":{"gitId":"Rachel-AG"},"content":"    public String toInputFormat() {","lastModifiedDate":"2022-09-24"},{"lineNumber":60,"author":{"gitId":"Rachel-AG"},"content":"        return value.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2022-09-24"},{"lineNumber":61,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":62,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"Rachel-AG"},"content":"     * Returns a string representation of the date in display format.","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"Rachel-AG"},"content":"    public String toDisplayFormat() {","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"Rachel-AG"},"content":"        return DISPLAY_FORMATTER.format(value);","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"    public int compareTo(ComparableModel other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"JustinS00"},"content":"        if (other instanceof Date) {","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"            return this.value.compareTo(((Date) other).value);","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"JustinS00"},"content":"        return 0;","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":79,"author":{"gitId":"Rachel-AG"},"content":"    public String toString() {","lastModifiedDate":"2022-09-23"},{"lineNumber":80,"author":{"gitId":"Rachel-AG"},"content":"        return value.toString();","lastModifiedDate":"2022-09-23"},{"lineNumber":81,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":82,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":83,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":84,"author":{"gitId":"Rachel-AG"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-23"},{"lineNumber":85,"author":{"gitId":"Rachel-AG"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-23"},{"lineNumber":86,"author":{"gitId":"Rachel-AG"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2022-09-23"},{"lineNumber":87,"author":{"gitId":"Rachel-AG"},"content":"                \u0026\u0026 value.equals(((Date) other).value)); // state check","lastModifiedDate":"2022-09-23"},{"lineNumber":88,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":89,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":90,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":91,"author":{"gitId":"Rachel-AG"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-23"},{"lineNumber":92,"author":{"gitId":"Rachel-AG"},"content":"        return value.hashCode();","lastModifiedDate":"2022-09-23"},{"lineNumber":93,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":94,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":95,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":96,"author":{"gitId":"Rachel-AG"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"Rachel-AG":85,"JustinS00":11}},{"path":"src/main/java/seedu/phu/model/internship/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":" * Represents a Internship\u0027s email in the internship book.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"    public static final String DEFAULT_VALUE \u003d \"NA\";","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"     * @param email A valid email internship.","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"Rachel-AG"},"content":"        return test.matches(VALIDATION_REGEX) || test.equals(DEFAULT_VALUE);","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Rachel-AG":2,"JustinS00":4,"-":65}},{"path":"src/main/java/seedu/phu/model/internship/ExactMatchPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":" * Tests that a {@code Internship}\u0027s is the exact match of given internship.","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"aarontangr"},"content":"public class ExactMatchPredicate implements Predicate\u003cInternship\u003e {","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"aarontangr"},"content":"    private final List\u003cInternship\u003e internships;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"aarontangr"},"content":"    public ExactMatchPredicate(List\u003cInternship\u003e internships) {","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":"        this.internships \u003d internships;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"    public boolean test(Internship internshipY) {","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"        return internships.stream()","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"aarontangr"},"content":"                .anyMatch(internshipX -\u003e internshipX \u003d\u003d internshipY);","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"aarontangr"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"aarontangr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"aarontangr"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"aarontangr"},"content":"                || (other instanceof ExactMatchPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"aarontangr"},"content":"                \u0026\u0026 internships.equals(((ExactMatchPredicate) other).internships)); // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"aarontangr"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"aarontangr":29}},{"path":"src/main/java/seedu/phu/model/internship/FindableCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"Elben85"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"Elben85"},"content":" * A class to represent the categories compatible with find.","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"Elben85"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"Elben85"},"content":"public enum FindableCategory {","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"Elben85"},"content":"    COMPANY_NAME,","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"Elben85"},"content":"    APPLICATION_PROCESS,","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"Elben85"},"content":"    POSITION,","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"Elben85"},"content":"    DATE,","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Elben85"},"content":"    TAGS","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"Elben85"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Elben85":11,"JustinS00":1}},{"path":"src/main/java/seedu/phu/model/internship/Internship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":" * Represents a Internship in the internship book.","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"public class Internship {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"Rachel-AG"},"content":"    private final Position position;","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"Rachel-AG"},"content":"    private final Phone phone;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Rachel-AG"},"content":"    private final Email email;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Rachel-AG"},"content":"    private final Remark remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"    private final ApplicationProcess applicationProcess;","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"    private final Date date;","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"    private final Website website;","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"    public Internship(Name name, Phone phone, Email email, Remark remark, Position position,","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"                  ApplicationProcess applicationProcess, Date date, Website website, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-09-23"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"        requireAllNonNull(name, position, tags);","lastModifiedDate":"2022-09-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"        this.position \u003d position;","lastModifiedDate":"2022-09-23"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"        this.applicationProcess \u003d applicationProcess;","lastModifiedDate":"2022-09-23"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"        this.website \u003d website;","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"Rachel-AG"},"content":"    public Remark getRemark() {","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"Rachel-AG"},"content":"        return remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"Rachel-AG"},"content":"    public Position getPosition() {","lastModifiedDate":"2022-09-23"},{"lineNumber":65,"author":{"gitId":"Rachel-AG"},"content":"        return position;","lastModifiedDate":"2022-09-23"},{"lineNumber":66,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":67,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":68,"author":{"gitId":"Rachel-AG"},"content":"    public Website getWebsite() {","lastModifiedDate":"2022-09-23"},{"lineNumber":69,"author":{"gitId":"Rachel-AG"},"content":"        return website;","lastModifiedDate":"2022-09-23"},{"lineNumber":70,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":71,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":72,"author":{"gitId":"Rachel-AG"},"content":"    public Date getDate() {","lastModifiedDate":"2022-09-23"},{"lineNumber":73,"author":{"gitId":"Rachel-AG"},"content":"        return date;","lastModifiedDate":"2022-09-23"},{"lineNumber":74,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":75,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":76,"author":{"gitId":"Rachel-AG"},"content":"    public ApplicationProcess getApplicationProcess() {","lastModifiedDate":"2022-09-23"},{"lineNumber":77,"author":{"gitId":"Rachel-AG"},"content":"        return applicationProcess;","lastModifiedDate":"2022-09-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":80,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"JustinS00"},"content":"     * Compares two internship based on the category to be compared by","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"JustinS00"},"content":"     * @param o The other internship to be compared to","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"JustinS00"},"content":"     * @param category The category to be compared by","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"JustinS00"},"content":"     * @return a non-negative number if this internship is before the other and negative number otherwise","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"JustinS00"},"content":"    public int compareTo(Internship o, ComparableCategory category) {","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"JustinS00"},"content":"        switch (category) {","lastModifiedDate":"2022-09-22"},{"lineNumber":89,"author":{"gitId":"JustinS00"},"content":"        case NAME:","lastModifiedDate":"2022-09-22"},{"lineNumber":90,"author":{"gitId":"JustinS00"},"content":"            return this.getName().compareTo(o.getName());","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"JustinS00"},"content":"        case APPLICATION_PROCESS:","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"JustinS00"},"content":"            return this.getApplicationProcess().compareTo(o.getApplicationProcess());","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"JustinS00"},"content":"        case POSITION:","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"JustinS00"},"content":"            return this.getPosition().compareTo(o.getPosition());","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"JustinS00"},"content":"        case DATE:","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"JustinS00"},"content":"            return this.getDate().compareTo(o.getDate());","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"JustinS00"},"content":"        default:","lastModifiedDate":"2022-09-22"},{"lineNumber":98,"author":{"gitId":"JustinS00"},"content":"            return 0;","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-09-22"},{"lineNumber":100,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-09-22"},{"lineNumber":101,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"JustinS00"},"content":"     * Returns true if both internships have the same name and position.","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"JustinS00"},"content":"     * This defines a weaker notion of equality between two internships.","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"JustinS00"},"content":"    public boolean isSameInternship(Internship otherInternship) {","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"JustinS00"},"content":"        if (otherInternship \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"JustinS00"},"content":"        return otherInternship !\u003d null","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"JustinS00"},"content":"                \u0026\u0026 otherInternship.getName().equals(getName()) \u0026\u0026 otherInternship.getPosition().equals(getPosition());","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"JustinS00"},"content":"     * Returns true if both internships have the same identity and data fields.","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"JustinS00"},"content":"     * This defines a stronger notion of equality between two internships.","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"JustinS00"},"content":"        if (!(other instanceof Internship)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"JustinS00"},"content":"        Internship otherInternship \u003d (Internship) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"JustinS00"},"content":"        return otherInternship.getName().equals(getName())","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"JustinS00"},"content":"                \u0026\u0026 otherInternship.getPhone().equals(getPhone())","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"JustinS00"},"content":"                \u0026\u0026 otherInternship.getEmail().equals(getEmail())","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"JustinS00"},"content":"                \u0026\u0026 otherInternship.getRemark().equals(getRemark())","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"JustinS00"},"content":"                \u0026\u0026 otherInternship.getTags().equals(getTags())","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"JustinS00"},"content":"                \u0026\u0026 otherInternship.getPosition().equals(getPosition())","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"JustinS00"},"content":"                \u0026\u0026 otherInternship.getWebsite().equals(getWebsite())","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"JustinS00"},"content":"                \u0026\u0026 otherInternship.getDate().equals(getDate())","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"JustinS00"},"content":"                \u0026\u0026 otherInternship.getApplicationProcess().equals(getApplicationProcess());","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"Rachel-AG"},"content":"        return Objects.hash(name, phone, email, remark, tags, position, website, date, applicationProcess);","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"Rachel-AG"},"content":"                .append(\"; Position: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":160,"author":{"gitId":"Rachel-AG"},"content":"                .append(getPosition())","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"Rachel-AG"},"content":"                .append(\"; Application Process: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"Rachel-AG"},"content":"                .append(getApplicationProcess())","lastModifiedDate":"2022-10-09"},{"lineNumber":163,"author":{"gitId":"Rachel-AG"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":164,"author":{"gitId":"Rachel-AG"},"content":"                .append(getDate())","lastModifiedDate":"2022-10-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"Rachel-AG"},"content":"                .append(\"; Website: \")","lastModifiedDate":"2022-09-23"},{"lineNumber":170,"author":{"gitId":"Rachel-AG"},"content":"                .append(getWebsite())","lastModifiedDate":"2022-09-23"},{"lineNumber":171,"author":{"gitId":"Rachel-AG"},"content":"                .append(\"; Remark: \")","lastModifiedDate":"2022-10-09"},{"lineNumber":172,"author":{"gitId":"Rachel-AG"},"content":"                .append(getRemark());","lastModifiedDate":"2022-10-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Rachel-AG":41,"JustinS00":51,"-":90}},{"path":"src/main/java/seedu/phu/model/internship/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":" * Represents a company\u0027s name in the internship book.","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"public class Name extends ComparableModel {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"     * The first character of the company\u0027s name must not be a whitespace,","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"    public int compareTo(ComparableModel other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"        if (other instanceof Name) {","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"            return this.toString().compareTo(((Name) other).toString());","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"        return 0;","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Rachel-AG":2,"JustinS00":10,"-":54}},{"path":"src/main/java/seedu/phu/model/internship/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.util.StringUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":" * Tests that a {@code Internship}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cInternship\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"    public boolean test(Internship internship) {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(internship.getName().fullName, keyword));","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"JustinS00":6,"-":25}},{"path":"src/main/java/seedu/phu/model/internship/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":" * Represents an Internship\u0027s contact number in the internship book.","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"    public static final String DEFAULT_VALUE \u003d \"NA\";","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"        return test.matches(VALIDATION_REGEX) || test.equals(DEFAULT_VALUE);","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Rachel-AG":4,"JustinS00":2,"-":49}},{"path":"src/main/java/seedu/phu/model/internship/Position.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"Rachel-AG"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"/**","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":" * Represents the position of the internship.","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"Rachel-AG"},"content":" */","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"public class Position extends ComparableModel {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-09-23"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"            \"Position should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"    /*","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"     * The first character of the position must not be a whitespace,","lastModifiedDate":"2022-09-23"},{"lineNumber":15,"author":{"gitId":"Rachel-AG"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"    // TODO modify accordingly to the requirement for position","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"Rachel-AG"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-09-23"},{"lineNumber":19,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":20,"author":{"gitId":"Rachel-AG"},"content":"    public final String positionName;","lastModifiedDate":"2022-09-23"},{"lineNumber":21,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":22,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"Rachel-AG"},"content":"     * Constructs a {@code Position}.","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"Rachel-AG"},"content":"     *","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"Rachel-AG"},"content":"     * @param position A valid position.","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"    public Position(String position) {","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"        requireNonNull(position);","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"        checkArgument(isValidPosition(position), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-23"},{"lineNumber":30,"author":{"gitId":"Rachel-AG"},"content":"        positionName \u003d position;","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":32,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":33,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-23"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"     * Returns true if a given string is a valid position.","lastModifiedDate":"2022-09-23"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-23"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"    public static boolean isValidPosition(String test) {","lastModifiedDate":"2022-09-23"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-09-23"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"    public int compareTo(ComparableModel other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"        if (other instanceof Position) {","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"            return this.toString().compareTo(((Position) other).toString());","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"        return 0;","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":48,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":49,"author":{"gitId":"Rachel-AG"},"content":"    public String toString() {","lastModifiedDate":"2022-09-23"},{"lineNumber":50,"author":{"gitId":"Rachel-AG"},"content":"        return positionName;","lastModifiedDate":"2022-09-23"},{"lineNumber":51,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":52,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":53,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":54,"author":{"gitId":"Rachel-AG"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-23"},{"lineNumber":55,"author":{"gitId":"Rachel-AG"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-23"},{"lineNumber":56,"author":{"gitId":"Rachel-AG"},"content":"                || (other instanceof Position // instanceof handles nulls","lastModifiedDate":"2022-09-23"},{"lineNumber":57,"author":{"gitId":"Rachel-AG"},"content":"                \u0026\u0026 positionName.equals(((Position) other).positionName)); // state check","lastModifiedDate":"2022-09-23"},{"lineNumber":58,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":59,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":60,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":61,"author":{"gitId":"Rachel-AG"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-23"},{"lineNumber":62,"author":{"gitId":"Rachel-AG"},"content":"        return positionName.hashCode();","lastModifiedDate":"2022-09-23"},{"lineNumber":63,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":64,"author":{"gitId":"Rachel-AG"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"Rachel-AG":54,"JustinS00":10}},{"path":"src/main/java/seedu/phu/model/internship/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"Rachel-AG"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":" * Represents a Internship\u0027s remark in the internship book.","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":" * Guarantees: immutable;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Rachel-AG"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"Rachel-AG"},"content":"public class Remark {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"    public static final String DEFAULT_VALUE \u003d \"\";","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":"    public final String value;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"Rachel-AG"},"content":"     * Constructs an {@code Remark}.","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Rachel-AG"},"content":"    public Remark(String remark) {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Rachel-AG"},"content":"        requireNonNull(remark);","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"Rachel-AG"},"content":"        value \u003d remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"Rachel-AG"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"        return value;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"Rachel-AG"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Rachel-AG"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"Rachel-AG"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Rachel-AG":39,"JustinS00":2}},{"path":"src/main/java/seedu/phu/model/internship/UniqueInternshipList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.exceptions.DuplicateInternshipException;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.exceptions.InternshipNotFoundException;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":" * A list of internships that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":" * A internship is considered unique by comparing using {@code Internship#isSameInternship(Internship)}. As such,","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":" * adding and updating of internships uses Internship#isSameInternship(Internship) for equality so as to ensure that","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":" * the internship being added or updated is unique in terms of identity in the UniqueInternshipList. However,","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":" * the removal of a internship uses Internship#equals(Object) so as to ensure that the internship with exactly the same","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":" * fields will be removed.","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":" *","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":" *","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":" * @see Internship#isSameInternship(Internship)","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"public class UniqueInternshipList implements Iterable\u003cInternship\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"    private final ObservableList\u003cInternship\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"    private final ObservableList\u003cInternship\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"     * Returns true if the list contains an equivalent internship as the given argument.","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"    public boolean contains(Internship toCheck) {","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"        return internalList.stream().anyMatch(toCheck::isSameInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"     * Adds a internship to the list.","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"     * The internship must not already exist in the list.","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"    public void add(Internship toAdd) {","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"            throw new DuplicateInternshipException();","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"     * Replaces the internship {@code target} in the list with {@code editedInternship}.","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"     * The internship identity of {@code editedInternship} must not be the same as another","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"     * existing internship in the list.","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"    public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"        requireAllNonNull(target, editedInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"            throw new InternshipNotFoundException();","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"        if (!target.isSameInternship(editedInternship) \u0026\u0026 contains(editedInternship)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"            throw new DuplicateInternshipException();","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"JustinS00"},"content":"        internalList.set(index, editedInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"    public void sortInternship(Comparator\u003cInternship\u003e comparator) {","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"        internalList.sort(comparator);","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"    };","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"JustinS00"},"content":"    public void reverseList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"JustinS00"},"content":"        Collections.reverse(internalList);","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"JustinS00"},"content":"     * Removes the equivalent internship from the list.","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"JustinS00"},"content":"     * The internship must exist in the list.","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"JustinS00"},"content":"    public void remove(Internship toRemove) {","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"JustinS00"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"JustinS00"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"JustinS00"},"content":"            throw new InternshipNotFoundException();","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"JustinS00"},"content":"    public void setInternships(UniqueInternshipList replacement) {","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"JustinS00"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"JustinS00"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"JustinS00"},"content":"     * Replaces the contents of this list with {@code internships}.","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"JustinS00"},"content":"     * {@code internships} must not contain duplicate internships.","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"JustinS00"},"content":"    public void setInternships(List\u003cInternship\u003e internships) {","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"JustinS00"},"content":"        requireAllNonNull(internships);","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"JustinS00"},"content":"        if (!internshipsAreUnique(internships)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"JustinS00"},"content":"            throw new DuplicateInternshipException();","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"JustinS00"},"content":"        internalList.setAll(internships);","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"JustinS00"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"JustinS00"},"content":"    public ObservableList\u003cInternship\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"JustinS00"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"JustinS00"},"content":"    public Iterator\u003cInternship\u003e iterator() {","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"JustinS00"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"JustinS00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"JustinS00"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"JustinS00"},"content":"                || (other instanceof UniqueInternshipList // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"JustinS00"},"content":"                        \u0026\u0026 internalList.equals(((UniqueInternshipList) other).internalList));","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"JustinS00"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"JustinS00"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"JustinS00"},"content":"    public String toString() {","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"JustinS00"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"JustinS00"},"content":"        int index \u003d 1;","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"JustinS00"},"content":"        for (Internship internship : this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"JustinS00"},"content":"            builder.append(index);","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"JustinS00"},"content":"            builder.append(\". \");","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"JustinS00"},"content":"            builder.append(internship.toString());","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"JustinS00"},"content":"            builder.append(\"\\n\");","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"JustinS00"},"content":"            index++;","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"JustinS00"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"JustinS00"},"content":"     * Returns true if {@code internships} contains only unique internships.","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"JustinS00"},"content":"    private boolean internshipsAreUnique(List\u003cInternship\u003e internships) {","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"JustinS00"},"content":"        for (int i \u003d 0; i \u003c internships.size() - 1; i++) {","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"JustinS00"},"content":"            for (int j \u003d i + 1; j \u003c internships.size(); j++) {","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"JustinS00"},"content":"                if (internships.get(i).isSameInternship(internships.get(j))) {","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"JustinS00"},"content":"                    return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"JustinS00"},"content":"                }","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"JustinS00"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":164,"author":{"gitId":"JustinS00"},"content":"        return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"JustinS00":166}},{"path":"src/main/java/seedu/phu/model/internship/Website.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"Rachel-AG"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"/**","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":" * Represents the website of the company of the internship.","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"Rachel-AG"},"content":" */","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"Rachel-AG"},"content":"public class Website {","lastModifiedDate":"2022-09-23"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Web must be a URL\";","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    //@@author TomC-reused","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //Reused from https://stackoverflow.com/questions/163360","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"^(https?|ftp|file)://[-a-zA-Z0-9+\u0026@#/%?\u003d~_|!:,.;]*[-a-zA-Z0-9+\u0026@#/%\u003d~_|]\";","lastModifiedDate":"2022-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"Rachel-AG"},"content":"    public static final String DEFAULT_VALUE \u003d \"NA\";","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"Rachel-AG"},"content":"    public final String value;","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":22,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"Rachel-AG"},"content":"     * Constructs an {@code Website}.","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"Rachel-AG"},"content":"     *","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"     * @param website A valid website internship.","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"    public Website(String website) {","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"        requireNonNull(website);","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"        checkArgument(isValidWebsite(website), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-23"},{"lineNumber":30,"author":{"gitId":"Rachel-AG"},"content":"        value \u003d website;","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":32,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":33,"author":{"gitId":"Rachel-AG"},"content":"    /**","lastModifiedDate":"2022-09-24"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"     * Returns true if a given string is a valid website.","lastModifiedDate":"2022-09-24"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"     */","lastModifiedDate":"2022-09-24"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"    public static boolean isValidWebsite(String test) {","lastModifiedDate":"2022-09-23"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"        return test.matches(VALIDATION_REGEX) || test.equals(DEFAULT_VALUE);","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"    public String toString() {","lastModifiedDate":"2022-09-23"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"        return value;","lastModifiedDate":"2022-09-23"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"Rachel-AG"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-23"},{"lineNumber":47,"author":{"gitId":"Rachel-AG"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-23"},{"lineNumber":48,"author":{"gitId":"Rachel-AG"},"content":"                || (other instanceof Website // instanceof handles nulls","lastModifiedDate":"2022-09-23"},{"lineNumber":49,"author":{"gitId":"Rachel-AG"},"content":"                \u0026\u0026 value.equals(((Website) other).value)); // state check","lastModifiedDate":"2022-09-23"},{"lineNumber":50,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":51,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":52,"author":{"gitId":"Rachel-AG"},"content":"    @Override","lastModifiedDate":"2022-09-23"},{"lineNumber":53,"author":{"gitId":"Rachel-AG"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-23"},{"lineNumber":54,"author":{"gitId":"Rachel-AG"},"content":"        return value.hashCode();","lastModifiedDate":"2022-09-23"},{"lineNumber":55,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":56,"author":{"gitId":"Rachel-AG"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"Rachel-AG":48,"JustinS00":3,"-":5}},{"path":"src/main/java/seedu/phu/model/internship/exceptions/DuplicateInternshipException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship.exceptions;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":" * Signals that the operation will result in duplicate Internships (Internships are considered duplicates","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":" * if they have the same identity).","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"public class DuplicateInternshipException extends RuntimeException {","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"    public DuplicateInternshipException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"        super(\"Operation would result in duplicate internships\");","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"JustinS00":11}},{"path":"src/main/java/seedu/phu/model/internship/exceptions/InternshipNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship.exceptions;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":" * Signals that the operation is unable to find the specified internship.","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"public class InternshipNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"JustinS00":6}},{"path":"src/main/java/seedu/phu/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":" * Represents a Tag in the internship book.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"Elben85"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"Elben85"},"content":"     * Get tag name without being formatted.","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"Elben85"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"Elben85"},"content":"     * @return tag name.","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"Elben85"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"Elben85"},"content":"    public String getTagName() {","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"Elben85"},"content":"        return tagName;","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Elben85":8,"JustinS00":3,"-":51}},{"path":"src/main/java/seedu/phu/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.InternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ReadOnlyInternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.ApplicationProcess;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Date;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Position;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Remark;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Website;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":" * Contains utility methods for populating {@code InternshipBook} with sample data.","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"    public static Internship[] getSampleInternships() {","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"        return new Internship[] {","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"            new Internship(new Name(\"Google\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"                new Remark(\"Blk 30 Geylang Street 29, #06-40\"), new Position(\"Backend Intern\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"                new ApplicationProcess(\"Apply\"), new Date(\"23-09-2022\"),","lastModifiedDate":"2022-09-23"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"                new Website(\"https://careers.google.com/jobs\"), getTagSet(\"friends\")),","lastModifiedDate":"2022-09-23"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"            new Internship(new Name(\"TikTok\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"                new Remark(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Position(\"Frontend Intern\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"Rachel-AG"},"content":"                new ApplicationProcess(\"offer\"), new Date(\"05-10-2022\"),","lastModifiedDate":"2022-09-23"},{"lineNumber":33,"author":{"gitId":"Rachel-AG"},"content":"                new Website(\"https://tiktok.com/careers\"), getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2022-09-23"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"            new Internship(new Name(\"Amazon\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"                new Remark(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Position(\"Fullstack Intern\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"                new ApplicationProcess(\"accepted\"), new Date(\"01-08-2022\"),","lastModifiedDate":"2022-09-23"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"                new Website(\"https://amazon.com/careers\"), getTagSet(\"neighbours\")),","lastModifiedDate":"2022-09-23"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"            new Internship(new Name(\"Grab\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"                new Remark(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Position(\"Data Analyst Intern\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"                new ApplicationProcess(\"assessment\"), new Date(\"01-11-2022\"),","lastModifiedDate":"2022-09-23"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"                new Website(\"https://grab.com/careers\"), getTagSet(\"family\")),","lastModifiedDate":"2022-09-23"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"            new Internship(new Name(\"Meta\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"                new Remark(\"Blk 47 Tampines Street 20, #17-35\"), new Position(\"Software Engineer Intern\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"                new ApplicationProcess(\"rejected\"), new Date(\"10-07-2022\"),","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"                new Website(\"https://grab.com/careers\"), getTagSet(\"classmates\")),","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"            new Internship(new Name(\"Shopback\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"Rachel-AG"},"content":"                new Remark(\"Blk 45 Aljunied Street 85, #11-31\"), new Position(\"AI Intern\"),","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"Rachel-AG"},"content":"                new ApplicationProcess(\"interview\"), new Date(\"10-10-2022\"),","lastModifiedDate":"2022-09-23"},{"lineNumber":49,"author":{"gitId":"Rachel-AG"},"content":"                new Website(\"https://shopback.com/careers\"), getTagSet(\"colleagues\"))","lastModifiedDate":"2022-09-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"    public static ReadOnlyInternshipBook getSampleInternshipBook() {","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"        InternshipBook sampleAb \u003d new InternshipBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"        for (Internship sampleInternship : getSampleInternships()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"            sampleAb.addInternship(sampleInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Rachel-AG":18,"JustinS00":26,"-":26}},{"path":"src/main/java/seedu/phu/storage/InternshipBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.InternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ReadOnlyInternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":" * Represents a storage for {@link InternshipBook}.","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"public interface InternshipBookStorage {","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"    Path getInternshipBookFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"     * Returns InternshipBook data as a {@link ReadOnlyInternshipBook}.","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"    Optional\u003cReadOnlyInternshipBook\u003e readInternshipBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"     * @see #getInternshipBookFilePath()","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"    Optional\u003cReadOnlyInternshipBook\u003e readInternshipBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"     * Saves the given {@link ReadOnlyInternshipBook} to the storage.","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"     * @param internshipBook cannot be null.","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"    void saveInternshipBook(ReadOnlyInternshipBook internshipBook) throws IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"     * @see #saveInternshipBook(ReadOnlyInternshipBook)","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"    void saveInternshipBook(ReadOnlyInternshipBook internshipBook, Path filePath) throws IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"JustinS00":46}},{"path":"src/main/java/seedu/phu/storage/JsonAdaptedInternship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.ApplicationProcess;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Date;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Position;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Remark;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Website;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":" * Jackson-friendly version of {@link Internship}.","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"class JsonAdaptedInternship {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Internship\u0027s %s field is missing!\";","lastModifiedDate":"2022-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"    private final String remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"    private final String position;","lastModifiedDate":"2022-09-23"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"    private final String website;","lastModifiedDate":"2022-09-23"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"    private final String date;","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"    private final String applicationProcess;","lastModifiedDate":"2022-09-23"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"     * Constructs a {@code JsonAdaptedInternship} with the given internship details.","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"    public JsonAdaptedInternship(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"Rachel-AG"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"Rachel-AG"},"content":"                             @JsonProperty(\"position\") String position,","lastModifiedDate":"2022-09-24"},{"lineNumber":49,"author":{"gitId":"Rachel-AG"},"content":"                             @JsonProperty(\"applicationProcess\") String applicationProcess,","lastModifiedDate":"2022-09-24"},{"lineNumber":50,"author":{"gitId":"Rachel-AG"},"content":"                             @JsonProperty(\"date\") String date, @JsonProperty(\"website\") String website,","lastModifiedDate":"2022-09-24"},{"lineNumber":51,"author":{"gitId":"Rachel-AG"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"Rachel-AG"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"Rachel-AG"},"content":"        this.position \u003d position;","lastModifiedDate":"2022-09-23"},{"lineNumber":60,"author":{"gitId":"Rachel-AG"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-09-23"},{"lineNumber":61,"author":{"gitId":"Rachel-AG"},"content":"        this.website \u003d website;","lastModifiedDate":"2022-09-23"},{"lineNumber":62,"author":{"gitId":"Rachel-AG"},"content":"        this.applicationProcess \u003d applicationProcess;","lastModifiedDate":"2022-09-23"},{"lineNumber":63,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"     * Converts a given {@code Internship} into this class for Jackson use.","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"    public JsonAdaptedInternship(Internship source) {","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"Rachel-AG"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"Rachel-AG"},"content":"        position \u003d source.getPosition().positionName;","lastModifiedDate":"2022-09-23"},{"lineNumber":78,"author":{"gitId":"Rachel-AG"},"content":"        date \u003d source.getDate().toInputFormat();","lastModifiedDate":"2022-09-24"},{"lineNumber":79,"author":{"gitId":"Rachel-AG"},"content":"        website \u003d source.getWebsite().value;","lastModifiedDate":"2022-09-23"},{"lineNumber":80,"author":{"gitId":"Rachel-AG"},"content":"        applicationProcess \u003d source.getApplicationProcess().toString();","lastModifiedDate":"2022-09-23"},{"lineNumber":81,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"JustinS00"},"content":"     * Converts this Jackson-friendly adapted internship object into the model\u0027s {@code Internship} object.","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"JustinS00"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted internship.","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"JustinS00"},"content":"    public Internship toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"JustinS00"},"content":"        final List\u003cTag\u003e internshipTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"JustinS00"},"content":"            internshipTags.add(tag.toModelType());","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"Rachel-AG"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"Rachel-AG"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"Rachel-AG"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"JustinS00"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(internshipTags);","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":126,"author":{"gitId":"Rachel-AG"},"content":"        if (position \u003d\u003d null) {","lastModifiedDate":"2022-09-23"},{"lineNumber":127,"author":{"gitId":"Rachel-AG"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2022-09-24"},{"lineNumber":128,"author":{"gitId":"Rachel-AG"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, Position.class.getSimpleName()));","lastModifiedDate":"2022-09-24"},{"lineNumber":129,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":130,"author":{"gitId":"Rachel-AG"},"content":"        if (!Position.isValidPosition(position)) {","lastModifiedDate":"2022-09-23"},{"lineNumber":131,"author":{"gitId":"Rachel-AG"},"content":"            throw new IllegalValueException(Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-23"},{"lineNumber":132,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":133,"author":{"gitId":"Rachel-AG"},"content":"        final Position modelPosition \u003d new Position(position);","lastModifiedDate":"2022-09-23"},{"lineNumber":134,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":135,"author":{"gitId":"Rachel-AG"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2022-09-23"},{"lineNumber":136,"author":{"gitId":"Rachel-AG"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2022-09-23"},{"lineNumber":137,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":138,"author":{"gitId":"Rachel-AG"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2022-09-23"},{"lineNumber":139,"author":{"gitId":"Rachel-AG"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-23"},{"lineNumber":140,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":141,"author":{"gitId":"Rachel-AG"},"content":"        final Date modelDate \u003d new Date(date);","lastModifiedDate":"2022-09-23"},{"lineNumber":142,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":143,"author":{"gitId":"Rachel-AG"},"content":"        if (website \u003d\u003d null) {","lastModifiedDate":"2022-09-23"},{"lineNumber":144,"author":{"gitId":"Rachel-AG"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Website.class.getSimpleName()));","lastModifiedDate":"2022-09-23"},{"lineNumber":145,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":146,"author":{"gitId":"Rachel-AG"},"content":"        if (!Website.isValidWebsite(website)) {","lastModifiedDate":"2022-09-23"},{"lineNumber":147,"author":{"gitId":"Rachel-AG"},"content":"            throw new IllegalValueException(Website.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-23"},{"lineNumber":148,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":149,"author":{"gitId":"Rachel-AG"},"content":"        final Website modelWebsite \u003d new Website(website);","lastModifiedDate":"2022-09-23"},{"lineNumber":150,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":151,"author":{"gitId":"Rachel-AG"},"content":"        if (applicationProcess \u003d\u003d null) {","lastModifiedDate":"2022-09-23"},{"lineNumber":152,"author":{"gitId":"Rachel-AG"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2022-09-24"},{"lineNumber":153,"author":{"gitId":"Rachel-AG"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, ApplicationProcess.class.getSimpleName()));","lastModifiedDate":"2022-09-24"},{"lineNumber":154,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":155,"author":{"gitId":"Rachel-AG"},"content":"        if (!ApplicationProcess.isValidApplicationProcess(applicationProcess)) {","lastModifiedDate":"2022-09-23"},{"lineNumber":156,"author":{"gitId":"Rachel-AG"},"content":"            throw new IllegalValueException(ApplicationProcess.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-23"},{"lineNumber":157,"author":{"gitId":"Rachel-AG"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":158,"author":{"gitId":"Rachel-AG"},"content":"        final ApplicationProcess modelApplicationProcess \u003d new ApplicationProcess(applicationProcess);","lastModifiedDate":"2022-09-23"},{"lineNumber":159,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":160,"author":{"gitId":"JustinS00"},"content":"        return new Internship(modelName, modelPhone, modelEmail, modelRemark, modelPosition,","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"Rachel-AG"},"content":"                modelApplicationProcess, modelDate, modelWebsite, modelTags);","lastModifiedDate":"2022-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Rachel-AG":63,"JustinS00":25,"-":76}},{"path":"src/main/java/seedu/phu/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JustinS00":3,"-":45}},{"path":"src/main/java/seedu/phu/storage/JsonInternshipBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.util.FileUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.util.JsonUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ReadOnlyInternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":" * A class to access InternshipBook data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"public class JsonInternshipBookStorage implements InternshipBookStorage {","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonInternshipBookStorage.class);","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"    private Path filePath;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"    public JsonInternshipBookStorage(Path filePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"    public Path getInternshipBookFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"        return filePath;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"    public Optional\u003cReadOnlyInternshipBook\u003e readInternshipBook() throws DataConversionException {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"        return readInternshipBook(filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"     * Similar to {@link #readInternshipBook()}.","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"    public Optional\u003cReadOnlyInternshipBook\u003e readInternshipBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"        Optional\u003cJsonSerializableInternshipBook\u003e jsonInternshipBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"                filePath, JsonSerializableInternshipBook.class);","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"        if (!jsonInternshipBook.isPresent()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"            return Optional.of(jsonInternshipBook.get().toModelType());","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"    public void saveInternshipBook(ReadOnlyInternshipBook internshipBook) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"        saveInternshipBook(internshipBook, filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"     * Similar to {@link #saveInternshipBook(ReadOnlyInternshipBook)}.","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"JustinS00"},"content":"    public void saveInternshipBook(ReadOnlyInternshipBook internshipBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"        requireNonNull(internshipBook);","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableInternshipBook(internshipBook), filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"JustinS00":80}},{"path":"src/main/java/seedu/phu/storage/JsonSerializableInternshipBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.InternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ReadOnlyInternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":" * An Immutable InternshipBook that is serializable to JSON format.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"@JsonRootName(value \u003d \"internshipbook\")","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"class JsonSerializableInternshipBook {","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"    public static final String MESSAGE_DUPLICATE_INTERNSHIP \u003d \"Internships list contains duplicate internship(s).\";","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"    private final List\u003cJsonAdaptedInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"     * Constructs a {@code JsonSerializableInternshipBook} with the given internships.","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"    public JsonSerializableInternshipBook(@JsonProperty(\"internships\") List\u003cJsonAdaptedInternship\u003e internships) {","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"        this.internships.addAll(internships);","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"     * Converts a given {@code ReadOnlyInternshipBook} into this class for Jackson use.","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableInternshipBook}.","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"    public JsonSerializableInternshipBook(ReadOnlyInternshipBook source) {","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"        internships.addAll(source.getInternshipList().stream()","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"                .map(JsonAdaptedInternship::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"     * Converts this internship book into the model\u0027s {@code InternshipBook} object.","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"    public InternshipBook toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"        InternshipBook internshipBook \u003d new InternshipBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"        for (JsonAdaptedInternship jsonAdaptedInternship : internships) {","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"            Internship internship \u003d jsonAdaptedInternship.toModelType();","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"            if (internshipBook.hasInternship(internship)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"            internshipBook.addInternship(internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"        return internshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"JustinS00":61}},{"path":"src/main/java/seedu/phu/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.util.JsonUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"JustinS00":5,"-":42}},{"path":"src/main/java/seedu/phu/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ReadOnlyInternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":" * API of the Storage component","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"public interface Storage extends InternshipBookStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"    Path getInternshipBookFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"    Optional\u003cReadOnlyInternshipBook\u003e readInternshipBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"    void saveInternshipBook(ReadOnlyInternshipBook internshipBook) throws IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"JustinS00":32}},{"path":"src/main/java/seedu/phu/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ReadOnlyInternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":" * Manages storage of InternshipBook data in local storage.","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"    private InternshipBookStorage internshipBookStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"     * Creates a {@code StorageManager} with the given {@code InternshipBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"    public StorageManager(InternshipBookStorage internshipBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"        this.internshipBookStorage \u003d internshipBookStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d InternshipBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"    public Path getInternshipBookFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"        return internshipBookStorage.getInternshipBookFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"    public Optional\u003cReadOnlyInternshipBook\u003e readInternshipBook() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"        return readInternshipBook(internshipBookStorage.getInternshipBookFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"JustinS00"},"content":"    public Optional\u003cReadOnlyInternshipBook\u003e readInternshipBook(Path filePath)","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"        return internshipBookStorage.readInternshipBook(filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"    public void saveInternshipBook(ReadOnlyInternshipBook internshipBook) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"        saveInternshipBook(internshipBook, internshipBookStorage.getInternshipBookFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"    public void saveInternshipBook(ReadOnlyInternshipBook internshipBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"JustinS00"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"        internshipBookStorage.saveInternshipBook(internshipBook, filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"JustinS00":79}},{"path":"src/main/java/seedu/phu/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":" * Represents a storage for {@link seedu.phu.model.UserPrefs}.","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"     * Saves the given {@link seedu.phu.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"JustinS00":6,"-":30}},{"path":"src/main/java/seedu/phu/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.CommandResult;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"JustinS00"},"content":"         * @see seedu.phu.logic.Logic#execute(String)","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"JustinS00":5,"-":80}},{"path":"src/main/java/seedu/phu/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-w17-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"aarontangr":1,"JustinS00":2,"-":99}},{"path":"src/main/java/seedu/phu/ui/InternshipCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":" * An UI component that displays information of a {@code Internship}.","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"public class InternshipCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"    private static final String FXML \u003d \"InternshipListCard.fxml\";","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/internshipbook-level4/issues/336\"\u003eThe issue on InternshipBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"    public final Internship internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"    private Label remark;","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"    private Label position;","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"    @FXML","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"Rachel-AG"},"content":"    private Label applicationProcess;","lastModifiedDate":"2022-09-23"},{"lineNumber":47,"author":{"gitId":"Rachel-AG"},"content":"    @FXML","lastModifiedDate":"2022-09-23"},{"lineNumber":48,"author":{"gitId":"Rachel-AG"},"content":"    private Label date;","lastModifiedDate":"2022-09-23"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"Rachel-AG"},"content":"    @FXML","lastModifiedDate":"2022-09-23"},{"lineNumber":51,"author":{"gitId":"Rachel-AG"},"content":"    private Label website;","lastModifiedDate":"2022-09-23"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"Rachel-AG"},"content":"    @FXML","lastModifiedDate":"2022-09-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"     * Creates a {@code InternshipCode} with the given {@code Internship} and index to display.","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"    public InternshipCard(Internship internship, int displayedIndex) {","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"        this.internship \u003d internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"        name.setText(internship.getName().fullName);","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"        /*","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"        phone.setText(\"phone: \" + internship.getPhone().value);","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"JustinS00"},"content":"        remark.setText(\"remark: \" + internship.getRemark().value);","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"        email.setText(\"email: \" + internship.getEmail().value);","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"         */","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"        position.setText(internship.getPosition().positionName);","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"        String stateStyleClass \u003d \"application_process-\" + internship.getApplicationProcess().toString();","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"JustinS00"},"content":"        applicationProcess.getStyleClass().add(stateStyleClass);","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"        applicationProcess.setText(internship.getApplicationProcess().toString());","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"JustinS00"},"content":"        date.setText(internship.getDate().toDisplayFormat());","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"        /*","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"        website.setText(\"website: \" + internship.getWebsite().value);","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"         */","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"JustinS00"},"content":"        internship.getTags().stream()","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"JustinS00"},"content":"        if (!(other instanceof InternshipCard)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"JustinS00"},"content":"        InternshipCard card \u003d (InternshipCard) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"JustinS00"},"content":"                \u0026\u0026 internship.equals(card.internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Rachel-AG":9,"JustinS00":34,"-":58}},{"path":"src/main/java/seedu/phu/ui/InternshipListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":" * Panel containing the list of internships.","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"public class InternshipListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"    private static final String FXML \u003d \"InternshipListPanel.fxml\";","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(InternshipListPanel.class);","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"    private ListView\u003cInternship\u003e internshipListView;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"     * Creates a {@code InternshipListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"    public InternshipListPanel(ObservableList\u003cInternship\u003e internshipList) {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"        super(FXML);","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"        internshipListView.setItems(internshipList);","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"        internshipListView.setCellFactory(listView -\u003e new InternshipListViewCell());","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Internship} using a {@code InternshipCard}.","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"    class InternshipListViewCell extends ListCell\u003cInternship\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"        protected void updateItem(Internship internship, boolean empty) {","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"            super.updateItem(internship, empty);","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"            if (empty || internship \u003d\u003d null) {","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"                setText(null);","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"            } else {","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"                setGraphic(new InternshipCard(internship, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"JustinS00":49}},{"path":"src/main/java/seedu/phu/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.Logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.CommandResult;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"    private InternshipListPanel internshipListPanel;","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"aarontangr"},"content":"    private ViewCommandPanel viewCommandPanel;","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"    private StackPane internshipListPanelPlaceholder;","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"aarontangr"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"aarontangr"},"content":"    private StackPane viewCommandPanelPlaceholder;","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"JustinS00"},"content":"        internshipListPanel \u003d new InternshipListPanel(logic.getFilteredInternshipList());","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"JustinS00"},"content":"        internshipListPanelPlaceholder.getChildren().add(internshipListPanel.getRoot());","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"aarontangr"},"content":"        viewCommandPanel \u003d new ViewCommandPanel(logic.getViewItem());","lastModifiedDate":"2022-10-18"},{"lineNumber":121,"author":{"gitId":"aarontangr"},"content":"        viewCommandPanelPlaceholder.getChildren().add(viewCommandPanel.getRoot());","lastModifiedDate":"2022-10-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"JustinS00"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getInternshipBookFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"JustinS00"},"content":"    public InternshipListPanel getInternshipListPanel() {","lastModifiedDate":"2022-10-13"},{"lineNumber":173,"author":{"gitId":"JustinS00"},"content":"        return internshipListPanel;","lastModifiedDate":"2022-10-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"JustinS00"},"content":"     * @see seedu.phu.logic.Logic#execute(String)","lastModifiedDate":"2022-10-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"aarontangr"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"aarontangr":7,"JustinS00":15,"-":180}},{"path":"src/main/java/seedu/phu/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"JustinS00":1,"-":27}},{"path":"src/main/java/seedu/phu/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JustinS00":1,"-":27}},{"path":"src/main/java/seedu/phu/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"JustinS00":1,"-":12}},{"path":"src/main/java/seedu/phu/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.MainApp;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.LogsCenter;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.util.StringUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.Logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/pleasehireus_icon.png\";","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"aarontangr"},"content":"        primaryStage.setResizable(false);","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"aarontangr":1,"JustinS00":6,"-":82}},{"path":"src/main/java/seedu/phu/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.MainApp;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"JustinS00":2,"-":86}},{"path":"src/main/java/seedu/phu/ui/ViewCommandCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"package seedu.phu.ui;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"aarontangr"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"aarontangr"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"aarontangr"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":" * A UI component that displays additional information of a specific {@code Internship}.","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"aarontangr"},"content":"public class ViewCommandCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"    private static final String FXML \u003d \"ViewCommandCard.fxml\";","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"aarontangr"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"aarontangr"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"aarontangr"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"aarontangr"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"aarontangr"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/internshipbook-level4/issues/336\"\u003eThe issue on InternshipBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"aarontangr"},"content":"    public final Internship internship;","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"aarontangr"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"aarontangr"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"aarontangr"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"aarontangr"},"content":"    private Label name;","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"aarontangr"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"aarontangr"},"content":"    private Label id;","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"aarontangr"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"aarontangr"},"content":"    private Label phone;","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"aarontangr"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"aarontangr"},"content":"    private Label remark;","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"aarontangr"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"aarontangr"},"content":"    private Label email;","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"aarontangr"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"aarontangr"},"content":"    private Label position;","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"aarontangr"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"aarontangr"},"content":"    private Label applicationProcess;","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"aarontangr"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"aarontangr"},"content":"    private Label date;","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"aarontangr"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"aarontangr"},"content":"    private Label website;","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"aarontangr"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"aarontangr"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"aarontangr"},"content":"     * Creates a {@code InternshipCode} with the given {@code Internship} and index to display.","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"aarontangr"},"content":"    public ViewCommandCard(Internship internship, int displayedIndex) {","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"aarontangr"},"content":"        super(FXML);","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"aarontangr"},"content":"        this.internship \u003d internship;","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"aarontangr"},"content":"        name.setText(internship.getName().fullName);","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"aarontangr"},"content":"        phone.setText(internship.getPhone().value);","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"aarontangr"},"content":"        remark.setText(internship.getRemark().value);","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"aarontangr"},"content":"        email.setText(internship.getEmail().value);","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"aarontangr"},"content":"        position.setText(internship.getPosition().positionName);","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"aarontangr"},"content":"        String stateStyleClass \u003d \"application_process-\" + internship.getApplicationProcess().toString();","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"aarontangr"},"content":"        applicationProcess.getStyleClass().add(stateStyleClass);","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"aarontangr"},"content":"        applicationProcess.setText(internship.getApplicationProcess().toString());","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"aarontangr"},"content":"        date.setText(internship.getDate().toDisplayFormat());","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"aarontangr"},"content":"        website.setText(internship.getWebsite().value);","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"aarontangr"},"content":"        internship.getTags().stream()","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"aarontangr"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"aarontangr"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"aarontangr"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"aarontangr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"aarontangr"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"aarontangr"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-18"},{"lineNumber":78,"author":{"gitId":"aarontangr"},"content":"            return true;","lastModifiedDate":"2022-10-18"},{"lineNumber":79,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":80,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"aarontangr"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-18"},{"lineNumber":82,"author":{"gitId":"aarontangr"},"content":"        if (!(other instanceof InternshipCard)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"aarontangr"},"content":"            return false;","lastModifiedDate":"2022-10-18"},{"lineNumber":84,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":85,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":86,"author":{"gitId":"aarontangr"},"content":"        // state check","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"aarontangr"},"content":"        ViewCommandCard card \u003d (ViewCommandCard) other;","lastModifiedDate":"2022-10-18"},{"lineNumber":88,"author":{"gitId":"aarontangr"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"aarontangr"},"content":"                \u0026\u0026 internship.equals(card.internship);","lastModifiedDate":"2022-10-18"},{"lineNumber":90,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":91,"author":{"gitId":"aarontangr"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"aarontangr":91}},{"path":"src/main/java/seedu/phu/ui/ViewCommandPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"package seedu.phu.ui;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"aarontangr"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"aarontangr"},"content":"import seedu.phu.commons.core.LogsCenter;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"aarontangr"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":" * Panel containing an internship with additional details.","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"aarontangr"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"public class ViewCommandPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"    private static final String FXML \u003d \"ViewCommandPanel.fxml\";","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(InternshipListPanel.class);","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"aarontangr"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"aarontangr"},"content":"    private ListView\u003cInternship\u003e viewCommandItem;","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"aarontangr"},"content":"     * Creates a {@code InternshipListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"aarontangr"},"content":"    public ViewCommandPanel(ObservableList\u003cInternship\u003e internshipList) {","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"aarontangr"},"content":"        super(FXML);","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"aarontangr"},"content":"        viewCommandItem.setItems(internshipList);","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"aarontangr"},"content":"        viewCommandItem.setCellFactory(listView -\u003e new InternshipListViewCell());","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"aarontangr"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"aarontangr"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Internship} using a {@code InternshipCard}.","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"aarontangr"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"aarontangr"},"content":"    class InternshipListViewCell extends ListCell\u003cInternship\u003e {","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"aarontangr"},"content":"        @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"aarontangr"},"content":"        protected void updateItem(Internship internship, boolean empty) {","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"aarontangr"},"content":"            super.updateItem(internship, empty);","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"aarontangr"},"content":"            if (empty || internship \u003d\u003d null) {","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"aarontangr"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"aarontangr"},"content":"                setText(null);","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"aarontangr"},"content":"            } else {","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"aarontangr"},"content":"                setGraphic(new ViewCommandCard(internship, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"aarontangr"},"content":"            }","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"aarontangr"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"aarontangr":49}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"JustinS00"},"content":".application_process-APPLY {","lastModifiedDate":"2022-10-17"},{"lineNumber":136,"author":{"gitId":"JustinS00"},"content":"    -fx-text-fill: #7ED957 !important;","lastModifiedDate":"2022-10-17"},{"lineNumber":137,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":138,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":139,"author":{"gitId":"JustinS00"},"content":".application_process-ASSESSMENT {","lastModifiedDate":"2022-10-17"},{"lineNumber":140,"author":{"gitId":"JustinS00"},"content":"    -fx-text-fill: #004AAD !important;","lastModifiedDate":"2022-10-17"},{"lineNumber":141,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":142,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":143,"author":{"gitId":"JustinS00"},"content":".application_process-INTERVIEW {","lastModifiedDate":"2022-10-17"},{"lineNumber":144,"author":{"gitId":"JustinS00"},"content":"    -fx-text-fill: #FF66C4 !important;","lastModifiedDate":"2022-10-17"},{"lineNumber":145,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":146,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":147,"author":{"gitId":"JustinS00"},"content":".application_process-OFFER {","lastModifiedDate":"2022-10-17"},{"lineNumber":148,"author":{"gitId":"JustinS00"},"content":"    -fx-text-fill: #FF914D !important;","lastModifiedDate":"2022-10-17"},{"lineNumber":149,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":150,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":151,"author":{"gitId":"JustinS00"},"content":".application_process-ACCEPTED {","lastModifiedDate":"2022-10-17"},{"lineNumber":152,"author":{"gitId":"JustinS00"},"content":"    -fx-text-fill: #008037 !important;","lastModifiedDate":"2022-10-17"},{"lineNumber":153,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":154,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":155,"author":{"gitId":"JustinS00"},"content":".application_process-REJECTED {","lastModifiedDate":"2022-10-17"},{"lineNumber":156,"author":{"gitId":"JustinS00"},"content":"    -fx-text-fill: #FF1616 !important;","lastModifiedDate":"2022-10-17"},{"lineNumber":157,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":158,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"JustinS00"},"content":"#filterField, #internshipListPanel, #internshipWebpage {","lastModifiedDate":"2022-10-13"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":376,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"JustinS00":25,"-":351}},{"path":"src/main/resources/view/InternshipListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"    \u003cVBox alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"5\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"        \u003cInsets top\u003d\"10\" right\u003d\"15\" bottom\u003d\"5\" left\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"TOP_RIGHT\"\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"        \u003cLabel fx:id\u003d\"applicationProcess\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$applicationProcess\" alignment\u003d\"TOP_RIGHT\"/\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"        \u003cminWidth\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"          \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"          \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"        \u003c/minWidth\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"80\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"      \u003cLabel fx:id\u003d\"position\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$position\"/\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"Rachel-AG"},"content":"      \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Rachel-AG":2,"JustinS00":15,"-":32}},{"path":"src/main/resources/view/InternshipListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"  VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"  \u003cListView fx:id\u003d\"internshipListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"aarontangr":1,"JustinS00":1,"-":6}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"aarontangr"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"aarontangr"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"PleaseHireUs\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"    \u003cImage url\u003d\"@/images/pleasehireus_icon.png\" /\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"aarontangr"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"aarontangr"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"aarontangr"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"aarontangr"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"aarontangr"},"content":"        \u003cGridPane maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"aarontangr"},"content":"          \u003cVBox fx:id\u003d\"internshipList\" minWidth\u003d\"500.0\" prefHeight\u003d\"300.0\" prefWidth\u003d\"250.0\" styleClass\u003d\"pane-with-border\" GridPane.rowSpan\u003d\"2\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"aarontangr"},"content":"              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"aarontangr"},"content":"            \u003cStackPane fx:id\u003d\"internshipListPanelPlaceholder\" alignment\u003d\"CENTER_LEFT\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"aarontangr"},"content":"          \u003cVBox fx:id\u003d\"viewCommand\" maxHeight\u003d\"180.0\" minWidth\u003d\"500.0\" prefHeight\u003d\"180.0\" styleClass\u003d\"pane-with-border\" GridPane.columnIndex\u003d\"1\" alignment\u003d\"TOP_RIGHT\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"aarontangr"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"aarontangr"},"content":"              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"aarontangr"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"aarontangr"},"content":"            \u003cStackPane fx:id\u003d\"viewCommandPanelPlaceholder\" alignment\u003d\"TOP_RIGHT\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"aarontangr"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"aarontangr"},"content":"          \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"aarontangr"},"content":"            \u003cColumnConstraints maxWidth\u003d\"Infinity\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"aarontangr"},"content":"            \u003cColumnConstraints /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"aarontangr"},"content":"          \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"aarontangr"},"content":"          \u003crowConstraints\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"aarontangr"},"content":"            \u003cRowConstraints maxHeight\u003d\"Infinity\" minHeight\u003d\"150.0\" prefHeight\u003d\"150.0\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"aarontangr"},"content":"            \u003cRowConstraints maxHeight\u003d\"Infinity\" minHeight\u003d\"150.0\" prefHeight\u003d\"250.0\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"aarontangr"},"content":"          \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"aarontangr"},"content":"        \u003c/GridPane\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"aarontangr":34,"JustinS00":1,"-":46}},{"path":"src/main/resources/view/ViewCommandCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"aarontangr"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"aarontangr"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"aarontangr"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"aarontangr"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"        \u003cVBox alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"5\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"aarontangr"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"15\" bottom\u003d\"5\" left\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"aarontangr"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"aarontangr"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"TOP_RIGHT\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"aarontangr"},"content":"                \u003cLabel fx:id\u003d\"applicationProcess\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$applicationProcess\" alignment\u003d\"TOP_RIGHT\"/\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"aarontangr"},"content":"                \u003cminWidth\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"aarontangr"},"content":"                    \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"aarontangr"},"content":"                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"aarontangr"},"content":"                \u003c/minWidth\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"aarontangr"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"aarontangr"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"aarontangr"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"80\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"aarontangr"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"aarontangr"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"aarontangr"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"aarontangr"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"aarontangr"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"aarontangr"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"aarontangr"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"aarontangr"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"aarontangr"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"aarontangr"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"aarontangr"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"aarontangr"},"content":"            \u003cLabel fx:id\u003d\"position\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$position\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"aarontangr"},"content":"            \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"aarontangr"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"aarontangr"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"aarontangr"},"content":"            \u003cLabel fx:id\u003d\"website\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$website\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"aarontangr"},"content":"            \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"aarontangr"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"aarontangr"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"aarontangr"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"aarontangr":50}},{"path":"src/main/resources/view/ViewCommandPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxWidth\u003d\"500\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":"    \u003cListView fx:id\u003d\"viewCommandItem\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"aarontangr":8}},{"path":"src/test/java/seedu/phu/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"JustinS00":1,"-":57}},{"path":"src/test/java/seedu/phu/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"JustinS00":1,"-":26}},{"path":"src/test/java/seedu/phu/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JustinS00":2,"-":133}},{"path":"src/test/java/seedu/phu/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.core.index;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"        final Index fifthInternshipIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"        assertTrue(fifthInternshipIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"        assertTrue(fifthInternshipIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"        assertTrue(fifthInternshipIndex.equals(fifthInternshipIndex));","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"        assertFalse(fifthInternshipIndex.equals(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"        assertFalse(fifthInternshipIndex.equals(5.0f));","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"        assertFalse(fifthInternshipIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"JustinS00":9,"-":51}},{"path":"src/test/java/seedu/phu/commons/core/index/IndexesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sugiyem"},"content":"package seedu.phu.commons.core.index;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"sugiyem"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"sugiyem"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"sugiyem"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"sugiyem"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"sugiyem"},"content":"import static seedu.phu.testutil.TypicalInternships.BENSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"sugiyem"},"content":"import static seedu.phu.testutil.TypicalInternships.getTypicalInternships;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"sugiyem"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"sugiyem"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"sugiyem"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"sugiyem"},"content":"import seedu.phu.commons.exceptions.IllegalIndexException;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"sugiyem"},"content":"import seedu.phu.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"sugiyem"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"sugiyem"},"content":"import seedu.phu.model.internship.UniqueInternshipList;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"sugiyem"},"content":"public class IndexesTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"sugiyem"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"sugiyem"},"content":"    public void createIndexesByParsing_validInput() {","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"sugiyem"},"content":"        try {","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"sugiyem"},"content":"            String[] unParsedIndexes \u003d {\"1\", \"2\"};","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"sugiyem"},"content":"            Indexes createdIndexes \u003d new Indexes(unParsedIndexes);","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"sugiyem"},"content":"            Indexes expectedIndexes \u003d new Indexes(Set.of(Index.fromOneBased(1), Index.fromOneBased(2)));","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"sugiyem"},"content":"            assertTrue(expectedIndexes.equals(createdIndexes));","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"sugiyem"},"content":"        } catch (ParseException error) {","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"sugiyem"},"content":"            fail(\"Should not have thrown exception!\");","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"sugiyem"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"sugiyem"},"content":"    public void createIndexesByParsing_invalidInput_throwsParseException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"sugiyem"},"content":"        String[] invalidUnParsedIndexes \u003d {\"0\"};","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"sugiyem"},"content":"        assertThrows(ParseException.class, () -\u003e new Indexes(invalidUnParsedIndexes));","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"sugiyem"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"sugiyem"},"content":"    public void getInternshipsFromIndexes_validIndexes() {","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"sugiyem"},"content":"        try {","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"sugiyem"},"content":"            List\u003cInternship\u003e internshipList \u003d getTypicalInternships();","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"sugiyem"},"content":"            Indexes validIndexes \u003d new Indexes(Set.of(Index.fromOneBased(2)));","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"sugiyem"},"content":"            assert(internshipList.size() \u003e\u003d 2); // confirm that validIndexes is indeed valid","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"sugiyem"},"content":"            UniqueInternshipList returnedInternshipList \u003d validIndexes.getAllInternshipsFromIndexes(internshipList);","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"sugiyem"},"content":"            UniqueInternshipList expectedInternshipList \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"sugiyem"},"content":"            expectedInternshipList.add(BENSON);","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"sugiyem"},"content":"            assertTrue(returnedInternshipList.equals(expectedInternshipList));","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"sugiyem"},"content":"        } catch (IllegalIndexException error) {","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"sugiyem"},"content":"            fail(\"Should not have thrown exception!\");","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"sugiyem"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"sugiyem"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"sugiyem"},"content":"    public void getInternshipsFromIndexes_invalidIndexes_throwsIllegalIndexException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"sugiyem"},"content":"        List\u003cInternship\u003e internshipList \u003d getTypicalInternships();","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"sugiyem"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(internshipList.size() + 1);","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"sugiyem"},"content":"        Indexes invalidIndexes \u003d new Indexes(Set.of(Index.fromOneBased(1), outOfBoundIndex));","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"sugiyem"},"content":"        assertThrows(IllegalIndexException.class, () -\u003e invalidIndexes.getAllInternshipsFromIndexes(internshipList));","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"sugiyem"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"sugiyem"},"content":"    public void equals() {","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"sugiyem"},"content":"        Indexes firstAndSecondInternshipIndexes \u003d new Indexes(Set.of(Index.fromOneBased(1), Index.fromOneBased(2)));","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"sugiyem"},"content":"        Indexes secondAndFirstInternshipIndexes \u003d new Indexes(Set.of(Index.fromOneBased(2), Index.fromOneBased(1)));","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"sugiyem"},"content":"        Indexes secondInternshipIndexes \u003d new Indexes(Set.of(Index.fromOneBased(2)));","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"sugiyem"},"content":"        // same set of index -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"sugiyem"},"content":"        assertTrue(firstAndSecondInternshipIndexes.equals(new Indexes(Set.of(","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"sugiyem"},"content":"                Index.fromOneBased(1), Index.fromOneBased(2)))));","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"sugiyem"},"content":"        assertTrue(firstAndSecondInternshipIndexes.equals(secondAndFirstInternshipIndexes));","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"sugiyem"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"sugiyem"},"content":"        assertTrue(firstAndSecondInternshipIndexes.equals(firstAndSecondInternshipIndexes));","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"sugiyem"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"sugiyem"},"content":"        assertFalse(firstAndSecondInternshipIndexes.equals(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"sugiyem"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"sugiyem"},"content":"        assertFalse(firstAndSecondInternshipIndexes.equals(5.0f));","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"sugiyem"},"content":"        // different set of index -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"sugiyem"},"content":"        assertFalse(firstAndSecondInternshipIndexes.equals(secondInternshipIndexes));","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"sugiyem"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"sugiyem":87}},{"path":"src/test/java/seedu/phu/commons/core/keyword/KeywordListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.core.keyword;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Elben85"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Elben85"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Elben85"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Elben85"},"content":"public class KeywordListTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"Elben85"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"Elben85"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"Elben85"},"content":"        KeywordList firstList \u003d prepareList(\"a\", \"b\", \"c\");","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"Elben85"},"content":"        KeywordList secondList \u003d prepareList(\"c\", \"b\", \"a\");","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Elben85"},"content":"        KeywordList thirdList \u003d prepareList(\"sf\", \"wegweg\");","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Elben85"},"content":"        KeywordList fourthList \u003d prepareList(\"a\", \"b\", \"c\", \"c\");","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Elben85"},"content":"        // same object -\u003e return true","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Elben85"},"content":"        assertTrue(firstList.equals(firstList));","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Elben85"},"content":"        // same values -\u003e return true","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Elben85"},"content":"        assertTrue(firstList.equals(prepareList(\"a\", \"b\", \"c\")));","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"Elben85"},"content":"        // different type -\u003e return false","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Elben85"},"content":"        assertFalse(firstList.equals(37591832));","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Elben85"},"content":"        // null -\u003e return true","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Elben85"},"content":"        assertFalse(firstList.equals(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Elben85"},"content":"        // same values with different order -\u003e return true","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Elben85"},"content":"        assertTrue(firstList.equals(secondList));","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Elben85"},"content":"        // different values -\u003e return false","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Elben85"},"content":"        assertFalse(firstList.equals(thirdList));","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Elben85"},"content":"        // same values with duplicates -\u003e return true","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Elben85"},"content":"        assertTrue(firstList.equals(fourthList));","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Elben85"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"Elben85"},"content":"    public void isEmpty() {","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"Elben85"},"content":"        KeywordList emptyList \u003d prepareList();","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"Elben85"},"content":"        KeywordList nonEmptyList \u003d prepareList(\"some\", \"keywords\");","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"Elben85"},"content":"        // empty list -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"Elben85"},"content":"        assertTrue(emptyList.isEmpty());","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"Elben85"},"content":"        // non-empty list -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"Elben85"},"content":"        assertFalse(nonEmptyList.isEmpty());","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"Elben85"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"Elben85"},"content":"    public void isAnyKeywordFound() {","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"Elben85"},"content":"        KeywordList keywords \u003d prepareList(\"leet\", \"code\", \"forces\");","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"Elben85"},"content":"        // does not match any keyword -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"Elben85"},"content":"        assertFalse(keywords.isAnyKeywordFound(\"optiver\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"Elben85"},"content":"        // empty string -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"Elben85"},"content":"        assertFalse(keywords.isAnyKeywordFound(\"\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"Elben85"},"content":"        // match all keyword -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"Elben85"},"content":"        assertTrue(keywords.isAnyKeywordFound(\"leetcodeforces\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"Elben85"},"content":"        // math one of the keyword -\u003e returns ture","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"Elben85"},"content":"        assertTrue(keywords.isAnyKeywordFound(\"MayTheForcesBeWithYou\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"Elben85"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"Elben85"},"content":"    public void isAllKeywordDate() {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"Elben85"},"content":"        // one or more invalid date format -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"Elben85"},"content":"        assertFalse(prepareList(\"02-02-2022\", \"2022-02-02\").isAllKeywordDate());","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"Elben85"},"content":"        assertFalse(prepareList(\"msokdmvm\", \"02-02-2022\").isAllKeywordDate());","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"Elben85"},"content":"        // all keywords is in valid date format -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"Elben85"},"content":"        assertTrue(prepareList(\"02-02-2022\", \"01-02-2022\", \"03-12-2012\").isAllKeywordDate());","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"Elben85"},"content":"    private KeywordList prepareList(String ...args) {","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"Elben85"},"content":"        KeywordList keywords \u003d new KeywordList();","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"Elben85"},"content":"        for (String s : args) {","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"Elben85"},"content":"            keywords.addKeyword(new Keyword(s));","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"Elben85"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"Elben85"},"content":"        return keywords;","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"Elben85"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"Elben85":85,"JustinS00":1}},{"path":"src/test/java/seedu/phu/commons/core/keyword/KeywordTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.core.keyword;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Elben85"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Elben85"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Elben85"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Elben85"},"content":"public class KeywordTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"Elben85"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"Elben85"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"Elben85"},"content":"        String firstWord \u003d \"test1\";","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"Elben85"},"content":"        String secondWord \u003d \"test2\";","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Elben85"},"content":"        Keyword firstKeyword \u003d new Keyword(firstWord);","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"Elben85"},"content":"        Keyword secondKeyword \u003d new Keyword(secondWord);","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Elben85"},"content":"        // same object -\u003e return true","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Elben85"},"content":"        assertTrue(firstKeyword.equals(firstKeyword));","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Elben85"},"content":"        // same values -\u003e return true","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Elben85"},"content":"        assertTrue(firstKeyword.equals(new Keyword(firstWord)));","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Elben85"},"content":"        // different type -\u003e return false","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Elben85"},"content":"        assertFalse(firstKeyword.equals(2814));","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Elben85"},"content":"        // null -\u003e return false","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Elben85"},"content":"        assertFalse(firstKeyword.equals(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Elben85"},"content":"        // different value -\u003e return false","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Elben85"},"content":"        assertFalse(firstKeyword.equals(secondKeyword));","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Elben85"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Elben85"},"content":"    public void isKeywordFound() {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Elben85"},"content":"        Keyword keyword \u003d new Keyword(\"test\");","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Elben85"},"content":"        // empty string -\u003e return false","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Elben85"},"content":"        assertFalse(keyword.isKeywordFound(\"\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Elben85"},"content":"        // keyword not found -\u003e return false","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Elben85"},"content":"        assertFalse(keyword.isKeywordFound(\"aiqbfwiwbseg\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Elben85"},"content":"        // exact match -\u003e return true","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Elben85"},"content":"        assertTrue(keyword.isKeywordFound(\"test\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Elben85"},"content":"        // keyword contained -\u003e return true","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"Elben85"},"content":"        assertTrue(keyword.isKeywordFound(\"912941testing90490193\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"Elben85"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"Elben85"},"content":"    public void isDate() {","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"Elben85"},"content":"        // not a date -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"Elben85"},"content":"        assertFalse(new Keyword(\"1284nwef\").isDate());","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"Elben85"},"content":"        // date in dd-mm-yyyy format -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"Elben85"},"content":"        assertTrue(new Keyword(\"02-12-2022\").isDate());","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"Elben85"},"content":"        // date not in dd-mm-yyyy format -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"Elben85"},"content":"        assertFalse(new Keyword(\"2022-02-02\").isDate());","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"Elben85"},"content":"        assertFalse(new Keyword(\"10 Aug 2021\").isDate());","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"Elben85"},"content":"        assertFalse(new Keyword(\"12-30-2021\").isDate());","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"Elben85"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"Elben85":62,"JustinS00":1}},{"path":"src/test/java/seedu/phu/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"        assertNotNull(AppUtil.getImage(\"/images/internship_book_32.png\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"JustinS00":3,"-":33}},{"path":"src/test/java/seedu/phu/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"JustinS00":3,"-":105}},{"path":"src/test/java/seedu/phu/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.Config;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"JustinS00":4,"-":112}},{"path":"src/test/java/seedu/phu/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JustinS00":2,"-":21}},{"path":"src/test/java/seedu/phu/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.testutil.TestUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JustinS00":3,"-":42}},{"path":"src/test/java/seedu/phu/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"JustinS00":2,"-":141}},{"path":"src/test/java/seedu/phu/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.core.Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.POSITION_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.AddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.CommandResult;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.ListCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ReadOnlyInternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Date;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.storage.JsonInternshipBookStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.storage.StorageManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"        JsonInternshipBookStorage internshipBookStorage \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"                new JsonInternshipBookStorage(temporaryFolder.resolve(\"internshipBook.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"        StorageManager storage \u003d new StorageManager(internshipBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"        // Setup LogicManager with JsonInternshipBookIoExceptionThrowingStub","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"        JsonInternshipBookStorage internshipBookStorage \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"                new JsonInternshipBookIoExceptionThrowingStub(temporaryFolder","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"JustinS00"},"content":"                        .resolve(\"ioExceptionInternshipBook.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"JustinS00"},"content":"        StorageManager storage \u003d new StorageManager(internshipBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"Rachel-AG"},"content":"                + REMARK_DESC_AMY + POSITION_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"JustinS00"},"content":"        Internship expectedInternship \u003d new InternshipBuilder(AMY).withTags().withApplicationProcess(\"apply\")","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"Rachel-AG"},"content":"                .withDate(LocalDate.now().format(Date.DEFAULT_FORMATTER)).withWebsite(\"NA\").build();","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"JustinS00"},"content":"        expectedModel.addInternship(expectedInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"JustinS00"},"content":"    public void getFilteredInternshipList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"JustinS00"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredInternshipList().remove(0));","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"JustinS00"},"content":"        Model expectedModel \u003d new ModelManager(model.getInternshipBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"JustinS00"},"content":"    private static class JsonInternshipBookIoExceptionThrowingStub extends JsonInternshipBookStorage {","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"JustinS00"},"content":"        private JsonInternshipBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"JustinS00"},"content":"        public void saveInternshipBook(ReadOnlyInternshipBook internshipBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Rachel-AG":4,"JustinS00":41,"-":122}},{"path":"src/test/java/seedu/phu/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.getTypicalInternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"    private Model model;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"        model \u003d new ModelManager(getTypicalInternshipBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"    public void execute_newInternship_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"        Internship validInternship \u003d new InternshipBuilder().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"        Model expectedModel \u003d new ModelManager(model.getInternshipBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"        expectedModel.addInternship(validInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"        assertCommandSuccess(new AddCommand(validInternship), model,","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validInternship), expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"    public void execute_duplicateInternship_throwsCommandException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"        Internship internshipInList \u003d model.getInternshipBook().getInternshipList().get(0);","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"        assertCommandFailure(new AddCommand(internshipInList), model, AddCommand.MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"JustinS00":45}},{"path":"src/test/java/seedu/phu/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.InternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ReadOnlyInternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.ComparableCategory;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"    public void constructor_nullInternship_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"    public void execute_internshipAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"        ModelStubAcceptingInternshipAdded modelStub \u003d new ModelStubAcceptingInternshipAdded();","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"        Internship validInternship \u003d new InternshipBuilder().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"        CommandResult commandResult \u003d new AddCommand(validInternship).execute(modelStub);","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validInternship), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"        assertEquals(Arrays.asList(validInternship), modelStub.internshipsAdded);","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"    public void execute_duplicateInternship_throwsCommandException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"        Internship validInternship \u003d new InternshipBuilder().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"        AddCommand addCommand \u003d new AddCommand(validInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"        ModelStub modelStub \u003d new ModelStubWithInternship(validInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"                AddCommand.MESSAGE_DUPLICATE_INTERNSHIP, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"        Internship alice \u003d new InternshipBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"        Internship bob \u003d new InternshipBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"JustinS00"},"content":"        // different internship -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"JustinS00"},"content":"        public Path getInternshipBookFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"JustinS00"},"content":"        public void setInternshipBookFilePath(Path internshipBookFilePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"JustinS00"},"content":"        public void addInternship(Internship internship) {","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"JustinS00"},"content":"        public void setInternshipBook(ReadOnlyInternshipBook newData) {","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"JustinS00"},"content":"        public ReadOnlyInternshipBook getInternshipBook() {","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"JustinS00"},"content":"        public boolean hasInternship(Internship internship) {","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"JustinS00"},"content":"        public void deleteInternship(Internship target) {","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"JustinS00"},"content":"        public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"JustinS00"},"content":"        public ObservableList\u003cInternship\u003e getFilteredInternshipList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"JustinS00"},"content":"        public void updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate) {","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":153,"author":{"gitId":"aarontangr"},"content":"        @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":154,"author":{"gitId":"aarontangr"},"content":"        public ObservableList\u003cInternship\u003e getViewItem() {","lastModifiedDate":"2022-10-19"},{"lineNumber":155,"author":{"gitId":"aarontangr"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":156,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":157,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":158,"author":{"gitId":"aarontangr"},"content":"        @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":159,"author":{"gitId":"aarontangr"},"content":"        public void updateViewItem(Predicate\u003cInternship\u003e predicate) {","lastModifiedDate":"2022-10-19"},{"lineNumber":160,"author":{"gitId":"aarontangr"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":161,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":162,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":163,"author":{"gitId":"JustinS00"},"content":"        @Override","lastModifiedDate":"2022-09-22"},{"lineNumber":164,"author":{"gitId":"JustinS00"},"content":"        public void sortList(ComparableCategory category) {","lastModifiedDate":"2022-10-09"},{"lineNumber":165,"author":{"gitId":"JustinS00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-09-22"},{"lineNumber":166,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-09-22"},{"lineNumber":167,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":168,"author":{"gitId":"JustinS00"},"content":"        @Override","lastModifiedDate":"2022-09-22"},{"lineNumber":169,"author":{"gitId":"JustinS00"},"content":"        public void reverseList() {","lastModifiedDate":"2022-09-22"},{"lineNumber":170,"author":{"gitId":"JustinS00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-09-22"},{"lineNumber":171,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-09-22"},{"lineNumber":172,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":173,"author":{"gitId":"aarontangr"},"content":"        @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":174,"author":{"gitId":"aarontangr"},"content":"        public void viewInternship(Internship internshipToView) {","lastModifiedDate":"2022-10-14"},{"lineNumber":175,"author":{"gitId":"aarontangr"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":176,"author":{"gitId":"aarontangr"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"JustinS00"},"content":"     * A Model stub that contains a single internship.","lastModifiedDate":"2022-10-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"JustinS00"},"content":"    private class ModelStubWithInternship extends ModelStub {","lastModifiedDate":"2022-10-13"},{"lineNumber":183,"author":{"gitId":"JustinS00"},"content":"        private final Internship internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"JustinS00"},"content":"        ModelStubWithInternship(Internship internship) {","lastModifiedDate":"2022-10-13"},{"lineNumber":186,"author":{"gitId":"JustinS00"},"content":"            requireNonNull(internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":187,"author":{"gitId":"JustinS00"},"content":"            this.internship \u003d internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"JustinS00"},"content":"        public boolean hasInternship(Internship internship) {","lastModifiedDate":"2022-10-13"},{"lineNumber":192,"author":{"gitId":"JustinS00"},"content":"            requireNonNull(internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":193,"author":{"gitId":"JustinS00"},"content":"            return this.internship.isSameInternship(internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"JustinS00"},"content":"     * A Model stub that always accept the internship being added.","lastModifiedDate":"2022-10-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"JustinS00"},"content":"    private class ModelStubAcceptingInternshipAdded extends ModelStub {","lastModifiedDate":"2022-10-13"},{"lineNumber":201,"author":{"gitId":"JustinS00"},"content":"        final ArrayList\u003cInternship\u003e internshipsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"JustinS00"},"content":"        public boolean hasInternship(Internship internship) {","lastModifiedDate":"2022-10-13"},{"lineNumber":205,"author":{"gitId":"JustinS00"},"content":"            requireNonNull(internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":206,"author":{"gitId":"JustinS00"},"content":"            return internshipsAdded.stream().anyMatch(internship::isSameInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"JustinS00"},"content":"        public void addInternship(Internship internship) {","lastModifiedDate":"2022-10-13"},{"lineNumber":211,"author":{"gitId":"JustinS00"},"content":"            requireNonNull(internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":212,"author":{"gitId":"JustinS00"},"content":"            internshipsAdded.add(internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"JustinS00"},"content":"        public ReadOnlyInternshipBook getInternshipBook() {","lastModifiedDate":"2022-10-13"},{"lineNumber":217,"author":{"gitId":"JustinS00"},"content":"            return new InternshipBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"aarontangr":15,"JustinS00":67,"-":139}},{"path":"src/test/java/seedu/phu/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.getTypicalInternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.InternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"public class ClearCommandTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"    public void execute_emptyInternshipBook_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"    public void execute_nonEmptyInternshipBook_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"        Model model \u003d new ModelManager(getTypicalInternshipBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalInternshipBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"        expectedModel.setInternshipBook(new InternshipBook());","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"JustinS00":32}},{"path":"src/test/java/seedu/phu/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"JustinS00":1,"-":53}},{"path":"src/test/java/seedu/phu/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_APPLICATION_PROCESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_WEBSITE;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.InternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.testutil.EditInternshipDescriptorBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"    public static final String VALID_POSITION_AMY \u003d \"Backend Intern\";","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"    public static final String VALID_POSITION_BOB \u003d \"FullStack Developer Intern\";","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"    public static final String VALID_APPLICATION_PROCESS_AMY \u003d \"interview\";","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"    public static final String VALID_APPLICATION_PROCESS_BOB \u003d \"Assessment\";","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"    public static final String VALID_DATE_AMY \u003d \"11-03-2023\";","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"Rachel-AG"},"content":"    public static final String VALID_DATE_BOB \u003d \"05-12-2022\";","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"Rachel-AG"},"content":"    public static final String VALID_WEBSITE_AMY \u003d \"https://www.amy.website.com/careers\";","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"Rachel-AG"},"content":"    public static final String VALID_WEBSITE_BOB \u003d \"https://www.bobwebsite.com/careers\";","lastModifiedDate":"2022-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"Rachel-AG"},"content":"    public static final String REMARK_DESC_AMY \u003d \" \" + PREFIX_REMARK + VALID_REMARK_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"Rachel-AG"},"content":"    public static final String REMARK_DESC_BOB \u003d \" \" + PREFIX_REMARK + VALID_REMARK_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"Rachel-AG"},"content":"    public static final String POSITION_DESC_AMY \u003d \" \" + PREFIX_POSITION + VALID_POSITION_AMY;","lastModifiedDate":"2022-09-25"},{"lineNumber":61,"author":{"gitId":"Rachel-AG"},"content":"    public static final String POSITION_DESC_BOB \u003d \" \" + PREFIX_POSITION + VALID_POSITION_BOB;","lastModifiedDate":"2022-09-25"},{"lineNumber":62,"author":{"gitId":"Rachel-AG"},"content":"    public static final String APPLICATION_PROCESS_DESC_BOB \u003d \" \" + PREFIX_APPLICATION_PROCESS","lastModifiedDate":"2022-09-25"},{"lineNumber":63,"author":{"gitId":"Rachel-AG"},"content":"            + VALID_APPLICATION_PROCESS_BOB;","lastModifiedDate":"2022-09-25"},{"lineNumber":64,"author":{"gitId":"Rachel-AG"},"content":"    public static final String APPLICATION_PROCESS_DESC_AMY \u003d \" \" + PREFIX_APPLICATION_PROCESS","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"Rachel-AG"},"content":"            + VALID_APPLICATION_PROCESS_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"Rachel-AG"},"content":"    public static final String DATE_DESC_AMY \u003d \" \" + PREFIX_DATE + VALID_DATE_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"Rachel-AG"},"content":"    public static final String DATE_DESC_BOB \u003d \" \" + PREFIX_DATE + VALID_DATE_BOB;","lastModifiedDate":"2022-09-25"},{"lineNumber":68,"author":{"gitId":"Rachel-AG"},"content":"    public static final String WEBSITE_DESC_AMY \u003d \" \" + PREFIX_WEBSITE + VALID_WEBSITE_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"Rachel-AG"},"content":"    public static final String WEBSITE_DESC_BOB \u003d \" \" + PREFIX_WEBSITE + VALID_WEBSITE_BOB;","lastModifiedDate":"2022-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"Rachel-AG"},"content":"    public static final String INVALID_APPLICATION_PROCESS_DESC \u003d \" \" + PREFIX_APPLICATION_PROCESS + \"Test\";","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"Rachel-AG"},"content":"    public static final String INVALID_POSITION_DESC \u003d \" \" + PREFIX_POSITION + \"softw@re engineer\"; // \u0027@\u0027 not allowed","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"Rachel-AG"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \" + PREFIX_DATE + \"1-09-2022\"; // date should be 2 digits","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"Rachel-AG"},"content":"    public static final String INVALID_WEBSITE_DESC \u003d \" \" + PREFIX_WEBSITE","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"Rachel-AG"},"content":"            + \"www.invalid.com/jobs\"; // must start with https / http","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"JustinS00"},"content":"    public static final EditCommand.EditInternshipDescriptor DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"JustinS00"},"content":"    public static final EditCommand.EditInternshipDescriptor DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"JustinS00"},"content":"        DESC_AMY \u003d new EditInternshipDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"Rachel-AG"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withRemark(VALID_REMARK_AMY)","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"sugiyem"},"content":"                .withPosition(VALID_POSITION_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"JustinS00"},"content":"        DESC_BOB \u003d new EditInternshipDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"Rachel-AG"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"sugiyem"},"content":"                .withPosition(VALID_POSITION_BOB).withApplicationProcess(VALID_APPLICATION_PROCESS_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"sugiyem"},"content":"                .withDate(VALID_DATE_BOB).withWebsite(VALID_WEBSITE_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"JustinS00"},"content":"     * - the internship book, filtered internship list and selected internship in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"JustinS00"},"content":"        InternshipBook expectedInternshipBook \u003d new InternshipBook(actualModel.getInternshipBook());","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"JustinS00"},"content":"        List\u003cInternship\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredInternshipList());","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":139,"author":{"gitId":"JustinS00"},"content":"        assertEquals(expectedInternshipBook, actualModel.getInternshipBook());","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"JustinS00"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredInternshipList());","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"JustinS00"},"content":"     * Updates {@code model}\u0027s filtered list to show only the internship at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"JustinS00"},"content":"     * {@code model}\u0027s internship book.","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"JustinS00"},"content":"    public static void showInternshipAtIndex(Model model, Index ... targetIndexes) {","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"sugiyem"},"content":"        List\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-22"},{"lineNumber":148,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":149,"author":{"gitId":"sugiyem"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2022-09-22"},{"lineNumber":150,"author":{"gitId":"JustinS00"},"content":"            assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredInternshipList().size());","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"JustinS00"},"content":"            Internship internship \u003d model.getFilteredInternshipList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"JustinS00"},"content":"            final String[] splitName \u003d internship.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":155,"author":{"gitId":"sugiyem"},"content":"            keywords.addAll(Arrays.asList(splitName[0]));","lastModifiedDate":"2022-09-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"JustinS00"},"content":"        model.updateFilteredInternshipList(new NameContainsKeywordsPredicate(keywords));","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":160,"author":{"gitId":"JustinS00"},"content":"        // assertEquals(1, model.getFilteredInternshipList().size());","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Rachel-AG":29,"JustinS00":35,"-":89,"sugiyem":9}},{"path":"src/test/java/seedu/phu/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.showInternshipAtIndex;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalIndexes.INDEXES_FIRST_AND_SECOND_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalIndexes.INDEXES_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalIndexes.INDEXES_SECOND_AND_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalIndexes.INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.getTypicalInternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.index.Indexes;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.UniqueInternshipList;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"    private Model model \u003d new ModelManager(getTypicalInternshipBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"    public void execute_oneValidIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"        Internship internshipToDelete \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEXES_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"        UniqueInternshipList listOfInternshipsToDelete \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"        listOfInternshipsToDelete.add(internshipToDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_INTERNSHIP_SUCCESS,","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"                listOfInternshipsToDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getInternshipBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"        expectedModel.deleteInternship(internshipToDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"    public void execute_multipleValidIndexesUnfilteredList_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"        Internship firstInternshipToDelete \u003d model.getFilteredInternshipList()","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"                .get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"        Internship secondInternshipToDelete \u003d model.getFilteredInternshipList()","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"                .get(INDEX_SECOND_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"JustinS00"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEXES_FIRST_AND_SECOND_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getInternshipBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"        expectedModel.deleteInternship(firstInternshipToDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"JustinS00"},"content":"        expectedModel.deleteInternship(secondInternshipToDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"            deleteCommand.execute(model);","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"            assertEquals(model, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"JustinS00"},"content":"            fail(\"Should not have thrown any exception.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"    public void execute_invalidOneIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredInternshipList().size() + 1);","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"JustinS00"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new Indexes(Set.of(outOfBoundIndex)));","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"JustinS00"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"JustinS00"},"content":"    public void execute_invalidMultipleIndexesUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"JustinS00"},"content":"        Index firstIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"JustinS00"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredInternshipList().size() + 1);","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"JustinS00"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"JustinS00"},"content":"                new Indexes(Set.of(firstIndex, outOfBoundIndex)));","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"JustinS00"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"JustinS00"},"content":"    public void execute_validOneIndexFilteredList_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"JustinS00"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"JustinS00"},"content":"        Internship internshipToDelete \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"JustinS00"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEXES_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"JustinS00"},"content":"        UniqueInternshipList listOfInternshipsToDelete \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"JustinS00"},"content":"        listOfInternshipsToDelete.add(internshipToDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"JustinS00"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_INTERNSHIP_SUCCESS,","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"JustinS00"},"content":"                listOfInternshipsToDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"JustinS00"},"content":"        Model expectedModel \u003d new ModelManager(model.getInternshipBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"JustinS00"},"content":"        expectedModel.deleteInternship(internshipToDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"JustinS00"},"content":"        showNoInternship(expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"JustinS00"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"JustinS00"},"content":"    public void execute_validMultipleIndexesFilteredList_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"JustinS00"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP, INDEX_SECOND_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"JustinS00"},"content":"        Internship firstInternshipToDelete \u003d model.getFilteredInternshipList()","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"JustinS00"},"content":"                .get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"JustinS00"},"content":"        Internship secondInternshipToDelete \u003d model.getFilteredInternshipList()","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"JustinS00"},"content":"                .get(INDEX_SECOND_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"JustinS00"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEXES_FIRST_AND_SECOND_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"JustinS00"},"content":"        Model expectedModel \u003d new ModelManager(model.getInternshipBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"JustinS00"},"content":"        expectedModel.deleteInternship(firstInternshipToDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"JustinS00"},"content":"        expectedModel.deleteInternship(secondInternshipToDelete);","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"JustinS00"},"content":"        showNoInternship(expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"JustinS00"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"JustinS00"},"content":"            deleteCommand.execute(model);","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"JustinS00"},"content":"            assertEquals(model, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"JustinS00"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"JustinS00"},"content":"            fail(\"Should not have thrown any exception.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"JustinS00"},"content":"    public void execute_invalidOneIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"JustinS00"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"JustinS00"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"JustinS00"},"content":"        // ensures that outOfBoundIndex is still in bounds of internship book list","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"JustinS00"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getInternshipBook().getInternshipList().size());","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"JustinS00"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new Indexes(Set.of(outOfBoundIndex)));","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"JustinS00"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"JustinS00"},"content":"    public void execute_invalidMultipleIndexesFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"JustinS00"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"JustinS00"},"content":"        Index validIndex \u003d INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"JustinS00"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"JustinS00"},"content":"        // ensures that outOfBoundIndex is still in bounds of internship book list","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"JustinS00"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getInternshipBook().getInternshipList().size());","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"JustinS00"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"JustinS00"},"content":"                new Indexes(Set.of(validIndex, outOfBoundIndex)));","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"JustinS00"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":164,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"JustinS00"},"content":"    public void equals() {","lastModifiedDate":"2022-10-13"},{"lineNumber":167,"author":{"gitId":"JustinS00"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEXES_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":168,"author":{"gitId":"JustinS00"},"content":"        DeleteCommand deleteFirstAndSecondCommand \u003d new DeleteCommand(INDEXES_FIRST_AND_SECOND_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":169,"author":{"gitId":"JustinS00"},"content":"        DeleteCommand deleteSecondAndFirstCommand \u003d new DeleteCommand(INDEXES_SECOND_AND_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":170,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":171,"author":{"gitId":"JustinS00"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":172,"author":{"gitId":"JustinS00"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-10-13"},{"lineNumber":173,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":174,"author":{"gitId":"JustinS00"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":175,"author":{"gitId":"JustinS00"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEXES_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":176,"author":{"gitId":"JustinS00"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-10-13"},{"lineNumber":177,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":178,"author":{"gitId":"JustinS00"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":179,"author":{"gitId":"JustinS00"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-10-13"},{"lineNumber":180,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":181,"author":{"gitId":"JustinS00"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":182,"author":{"gitId":"JustinS00"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":183,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":184,"author":{"gitId":"JustinS00"},"content":"        // different internships -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":185,"author":{"gitId":"JustinS00"},"content":"        assertFalse(deleteFirstCommand.equals(deleteFirstAndSecondCommand));","lastModifiedDate":"2022-10-13"},{"lineNumber":186,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":187,"author":{"gitId":"JustinS00"},"content":"        // different order but same internships -\u003e return true","lastModifiedDate":"2022-10-13"},{"lineNumber":188,"author":{"gitId":"JustinS00"},"content":"        assertTrue(deleteFirstAndSecondCommand.equals(deleteSecondAndFirstCommand));","lastModifiedDate":"2022-10-13"},{"lineNumber":189,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":190,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":191,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":192,"author":{"gitId":"JustinS00"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-10-13"},{"lineNumber":193,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":194,"author":{"gitId":"JustinS00"},"content":"    private void showNoInternship(Model model) {","lastModifiedDate":"2022-10-13"},{"lineNumber":195,"author":{"gitId":"JustinS00"},"content":"        model.updateFilteredInternshipList(p -\u003e false);","lastModifiedDate":"2022-10-13"},{"lineNumber":196,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":197,"author":{"gitId":"JustinS00"},"content":"        assertTrue(model.getFilteredInternshipList().isEmpty());","lastModifiedDate":"2022-10-13"},{"lineNumber":198,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":199,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"JustinS00":199}},{"path":"src/test/java/seedu/phu/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.showInternshipAtIndex;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalIndexes.INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.getTypicalInternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.EditCommand.EditInternshipDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.InternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.testutil.EditInternshipDescriptorBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"public class EditCommandTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"    private Model model \u003d new ModelManager(getTypicalInternshipBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"        Internship editedInternship \u003d new InternshipBuilder().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder(editedInternship).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_INTERNSHIP, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_INTERNSHIP_SUCCESS, editedInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"        Model expectedModel \u003d new ModelManager(new InternshipBook(model.getInternshipBook()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"        expectedModel.setInternship(model.getFilteredInternshipList().get(0), editedInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"        Index indexLastInternship \u003d Index.fromOneBased(model.getFilteredInternshipList().size());","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"        Internship lastInternship \u003d model.getFilteredInternshipList().get(indexLastInternship.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"        InternshipBuilder internshipInList \u003d new InternshipBuilder(lastInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"        Internship editedInternship \u003d internshipInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"JustinS00"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastInternship, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_INTERNSHIP_SUCCESS, editedInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"JustinS00"},"content":"        Model expectedModel \u003d new ModelManager(new InternshipBook(model.getInternshipBook()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"        expectedModel.setInternship(lastInternship, editedInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_INTERNSHIP, new EditInternshipDescriptor());","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"JustinS00"},"content":"        Internship editedInternship \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_INTERNSHIP_SUCCESS, editedInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"JustinS00"},"content":"        Model expectedModel \u003d new ModelManager(new InternshipBook(model.getInternshipBook()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"JustinS00"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"JustinS00"},"content":"    public void execute_allFieldsSpecifiedFilteredList_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"JustinS00"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"JustinS00"},"content":"        Internship editedInternship \u003d new InternshipBuilder().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"JustinS00"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_INTERNSHIP,","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"JustinS00"},"content":"                new EditInternshipDescriptorBuilder(editedInternship).build());","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"JustinS00"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_INTERNSHIP_SUCCESS, editedInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"JustinS00"},"content":"        Model expectedModel \u003d new ModelManager(new InternshipBook(model.getInternshipBook()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"JustinS00"},"content":"        expectedModel.setInternship(model.getFilteredInternshipList().get(0), editedInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"JustinS00"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"JustinS00"},"content":"    public void execute_someFieldsSpecifiedFilteredList_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"JustinS00"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"JustinS00"},"content":"        Internship internshipInFilteredList \u003d model.getFilteredInternshipList()","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"JustinS00"},"content":"                .get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"JustinS00"},"content":"        Internship editedInternship \u003d new InternshipBuilder(internshipInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"JustinS00"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_INTERNSHIP,","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"JustinS00"},"content":"                new EditInternshipDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"JustinS00"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_INTERNSHIP_SUCCESS, editedInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"JustinS00"},"content":"        Model expectedModel \u003d new ModelManager(new InternshipBook(model.getInternshipBook()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"JustinS00"},"content":"        expectedModel.setInternship(model.getFilteredInternshipList().get(0), editedInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"JustinS00"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"JustinS00"},"content":"    public void execute_noFieldSpecifiedFilteredList_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"JustinS00"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"JustinS00"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_INTERNSHIP, new EditInternshipDescriptor());","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"JustinS00"},"content":"        Internship editedInternship \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"JustinS00"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_INTERNSHIP_SUCCESS, editedInternship);","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"JustinS00"},"content":"        Model expectedModel \u003d new ModelManager(new InternshipBook(model.getInternshipBook()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"JustinS00"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"JustinS00"},"content":"    public void execute_duplicateInternshipUnfilteredList_failure() {","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"JustinS00"},"content":"        Internship firstInternship \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"JustinS00"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder(firstInternship).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"JustinS00"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_INTERNSHIP, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"JustinS00"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"JustinS00"},"content":"    public void execute_duplicateInternshipFilteredList_failure() {","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"JustinS00"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"JustinS00"},"content":"        // edit internship in filtered list into a duplicate in internship book","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"JustinS00"},"content":"        Internship internshipInList \u003d model.getInternshipBook().getInternshipList()","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"JustinS00"},"content":"                .get(INDEX_SECOND_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"JustinS00"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_INTERNSHIP,","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"JustinS00"},"content":"                new EditInternshipDescriptorBuilder(internshipInList).build());","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"JustinS00"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"JustinS00"},"content":"    public void execute_invalidInternshipIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"JustinS00"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredInternshipList().size() + 1);","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"JustinS00"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"JustinS00"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"JustinS00"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":164,"author":{"gitId":"JustinS00"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"JustinS00"},"content":"     * but smaller than size of internship book","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":167,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":168,"author":{"gitId":"JustinS00"},"content":"    public void execute_invalidInternshipIndexFilteredList_failure() {","lastModifiedDate":"2022-10-13"},{"lineNumber":169,"author":{"gitId":"JustinS00"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":170,"author":{"gitId":"JustinS00"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":171,"author":{"gitId":"JustinS00"},"content":"        // ensures that outOfBoundIndex is still in bounds of internship book list","lastModifiedDate":"2022-10-13"},{"lineNumber":172,"author":{"gitId":"JustinS00"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getInternshipBook().getInternshipList().size());","lastModifiedDate":"2022-10-13"},{"lineNumber":173,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":174,"author":{"gitId":"JustinS00"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-13"},{"lineNumber":175,"author":{"gitId":"JustinS00"},"content":"                new EditInternshipDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-13"},{"lineNumber":176,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":177,"author":{"gitId":"JustinS00"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-13"},{"lineNumber":178,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":179,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":180,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":181,"author":{"gitId":"JustinS00"},"content":"    public void equals() {","lastModifiedDate":"2022-10-13"},{"lineNumber":182,"author":{"gitId":"JustinS00"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_INTERNSHIP, DESC_AMY);","lastModifiedDate":"2022-10-13"},{"lineNumber":183,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":184,"author":{"gitId":"JustinS00"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":185,"author":{"gitId":"JustinS00"},"content":"        EditInternshipDescriptor copyDescriptor \u003d new EditInternshipDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-13"},{"lineNumber":186,"author":{"gitId":"JustinS00"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_INTERNSHIP, copyDescriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":187,"author":{"gitId":"JustinS00"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-13"},{"lineNumber":188,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":189,"author":{"gitId":"JustinS00"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":190,"author":{"gitId":"JustinS00"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-13"},{"lineNumber":191,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":192,"author":{"gitId":"JustinS00"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":193,"author":{"gitId":"JustinS00"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":194,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":195,"author":{"gitId":"JustinS00"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":196,"author":{"gitId":"JustinS00"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-13"},{"lineNumber":197,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":198,"author":{"gitId":"JustinS00"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":199,"author":{"gitId":"JustinS00"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_INTERNSHIP, DESC_AMY)));","lastModifiedDate":"2022-10-13"},{"lineNumber":200,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":201,"author":{"gitId":"JustinS00"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":202,"author":{"gitId":"JustinS00"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_INTERNSHIP, DESC_BOB)));","lastModifiedDate":"2022-10-13"},{"lineNumber":203,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":204,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":205,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"JustinS00":205}},{"path":"src/test/java/seedu/phu/logic/commands/EditInternshipDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_APPLICATION_PROCESS_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_POSITION_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_WEBSITE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.EditCommand.EditInternshipDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.testutil.EditInternshipDescriptorBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"public class EditInternshipDescriptorTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"    public void equals() {","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"        EditInternshipDescriptor descriptorWithSameValues \u003d new EditInternshipDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"        EditInternshipDescriptor editedAmy \u003d new EditInternshipDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"        editedAmy \u003d new EditInternshipDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"        editedAmy \u003d new EditInternshipDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"        // different internship -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"Rachel-AG"},"content":"        editedAmy \u003d new EditInternshipDescriptorBuilder(DESC_AMY).withRemark(VALID_REMARK_BOB).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"        // different position -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"        editedAmy \u003d new EditInternshipDescriptorBuilder(DESC_AMY).withPosition(VALID_POSITION_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"        // different application process -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"        editedAmy \u003d new EditInternshipDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"                .withApplicationProcess(VALID_APPLICATION_PROCESS_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"JustinS00"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"        editedAmy \u003d new EditInternshipDescriptorBuilder(DESC_AMY).withDate(VALID_DATE_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"JustinS00"},"content":"        // different website -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"        editedAmy \u003d new EditInternshipDescriptorBuilder(DESC_AMY).withWebsite(VALID_WEBSITE_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"        editedAmy \u003d new EditInternshipDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Rachel-AG":2,"JustinS00":78}},{"path":"src/test/java/seedu/phu/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"JustinS00":5,"-":15}},{"path":"src/test/java/seedu/phu/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.core.Messages.MESSAGE_INTERNSHIPS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.ALICE;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.BENSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.CARL;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.DANIEL;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.ELLE;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.FIONA;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.getTypicalInternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.keyword.Keyword;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.keyword.KeywordList;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.ContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.FindableCategory;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"    private Model model \u003d new ModelManager(getTypicalInternshipBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalInternshipBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"Elben85"},"content":"        KeywordList firstKeywords \u003d prepareKeywords(\"optiver\", \"jane\");","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Elben85"},"content":"        KeywordList secondKeywords \u003d prepareKeywords(\"jane\", \"optiver\");","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Elben85"},"content":"        KeywordList thirdKeywords \u003d prepareKeywords(\"hrt\", \"jane\");","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Elben85"},"content":"        KeywordList fourthKeywords \u003d prepareKeywords(\"optiver\", \"jane\", \"jane\");","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Elben85"},"content":"        ContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Elben85"},"content":"                new ContainsKeywordsPredicate(firstKeywords, FindableCategory.COMPANY_NAME);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Elben85"},"content":"        ContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Elben85"},"content":"                new ContainsKeywordsPredicate(firstKeywords, FindableCategory.DATE);","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Elben85"},"content":"        ContainsKeywordsPredicate thirdPredicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"Elben85"},"content":"                new ContainsKeywordsPredicate(secondKeywords, FindableCategory.COMPANY_NAME);","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Elben85"},"content":"        ContainsKeywordsPredicate fourthPredicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"Elben85"},"content":"                new ContainsKeywordsPredicate(thirdKeywords, FindableCategory.COMPANY_NAME);","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"Elben85"},"content":"        ContainsKeywordsPredicate fifthPredicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"Elben85"},"content":"                new ContainsKeywordsPredicate(fourthKeywords, FindableCategory.COMPANY_NAME);","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"Elben85"},"content":"        FindCommand findThirdCommand \u003d new FindCommand(thirdPredicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"Elben85"},"content":"        FindCommand findFourthCommand \u003d new FindCommand(fourthPredicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"Elben85"},"content":"        FindCommand findFifthCommand \u003d new FindCommand(fifthPredicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"Elben85"},"content":"        // same categories and keywords -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"Elben85"},"content":"        // different category -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"Elben85"},"content":"        // same category and keywords but with different order -\u003e return true","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"Elben85"},"content":"        assertTrue(findFirstCommand.equals(findThirdCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"Elben85"},"content":"        //different keywords -\u003e return false","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"Elben85"},"content":"        assertFalse(findFirstCommand.equals(findFourthCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"Elben85"},"content":"        //same keywords with duplicate -\u003e return true","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"Elben85"},"content":"        assertTrue(findFirstCommand.equals(findFifthCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"Elben85"},"content":"    public void execute_companyNameCategory_multipleMatches() {","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"JustinS00"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INTERNSHIPS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"Elben85"},"content":"        ContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"Elben85"},"content":"                preparePredicate(FindableCategory.COMPANY_NAME, \"Kurz\", \"Elle\", \"Kunz\");","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"JustinS00"},"content":"        expectedModel.updateFilteredInternshipList(predicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"JustinS00"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredInternshipList());","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":96,"author":{"gitId":"Elben85"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"Elben85"},"content":"    public void execute_applicationProcessCategory_multipleMatches() {","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"JustinS00"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INTERNSHIPS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"Elben85"},"content":"        ContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"Elben85"},"content":"                preparePredicate(FindableCategory.APPLICATION_PROCESS, \"interview\", \"assessment\");","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"Elben85"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"JustinS00"},"content":"        expectedModel.updateFilteredInternshipList(predicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"Elben85"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"JustinS00"},"content":"        assertEquals(Arrays.asList(BENSON, DANIEL), model.getFilteredInternshipList());","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"Elben85"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"Elben85"},"content":"    public void execute_positionCategory_multipleMatches() {","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"JustinS00"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INTERNSHIPS_LISTED_OVERVIEW, 5);","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"Elben85"},"content":"        ContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"Elben85"},"content":"                preparePredicate(FindableCategory.POSITION, \"engin\");","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"Elben85"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"JustinS00"},"content":"        expectedModel.updateFilteredInternshipList(predicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"Elben85"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"JustinS00"},"content":"        assertEquals(Arrays.asList(BENSON, CARL, DANIEL, ELLE, FIONA), model.getFilteredInternshipList());","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"Elben85"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"Elben85"},"content":"    public void execute_dateCategory_singleMatch() {","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"JustinS00"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INTERNSHIPS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"Elben85"},"content":"        ContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"Elben85"},"content":"                preparePredicate(FindableCategory.DATE, \"11-12-2022\", \"12-10-2022\");","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"Elben85"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"JustinS00"},"content":"        expectedModel.updateFilteredInternshipList(predicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"Elben85"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"JustinS00"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredInternshipList());","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"Elben85"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"Elben85"},"content":"    public void execute_tagsCategory_singleMatch() {","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"JustinS00"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INTERNSHIPS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"Elben85"},"content":"        ContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"Elben85"},"content":"                preparePredicate(FindableCategory.TAGS, \"owes\", \"random\", \"sugiyem\");","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"Elben85"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"JustinS00"},"content":"        expectedModel.updateFilteredInternshipList(predicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"Elben85"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"JustinS00"},"content":"        assertEquals(Arrays.asList(BENSON), model.getFilteredInternshipList());","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":141,"author":{"gitId":"Elben85"},"content":"     * Parses {@code keywords} into a {@code ContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":143,"author":{"gitId":"Elben85"},"content":"    private ContainsKeywordsPredicate preparePredicate(FindableCategory category, String ...keywords) {","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"Elben85"},"content":"        KeywordList keywordList \u003d prepareKeywords(keywords);","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"Elben85"},"content":"        return new ContainsKeywordsPredicate(keywordList, category);","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":147,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"Elben85"},"content":"    private KeywordList prepareKeywords(String ...keywords) {","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"Elben85"},"content":"        KeywordList keywordList \u003d new KeywordList();","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"Elben85"},"content":"        for (String k : keywords) {","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"Elben85"},"content":"            keywordList.addKeyword(new Keyword(k));","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"Elben85"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"Elben85"},"content":"        return keywordList;","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Elben85":75,"JustinS00":35,"-":47}},{"path":"src/test/java/seedu/phu/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"JustinS00":5,"-":15}},{"path":"src/test/java/seedu/phu/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.showInternshipAtIndex;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.ALICE;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.BENSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.CARL;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.DANIEL;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.ELLE;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.FIONA;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.GEORGE;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.getTypicalInternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.InternshipBook;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.ComparableCategory;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"        model \u003d new ModelManager(getTypicalInternshipBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"        expectedModel \u003d new ModelManager(model.getInternshipBook(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"    public void equals() {","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"        ComparableCategory nameCategory \u003d ComparableCategory.NAME;","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"        ComparableCategory dateCategory \u003d ComparableCategory.DATE;","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"        ListCommand listFirstCommand \u003d new ListCommand(nameCategory, false);","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"        ListCommand listSecondCommand \u003d new ListCommand(nameCategory, true);","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"        ListCommand listThirdCommand \u003d new ListCommand(dateCategory, false);","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"        ListCommand listFirstCommandCopy \u003d new ListCommand(nameCategory, false);","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"        assertTrue(listFirstCommand.equals(listFirstCommand));","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"        assertFalse(listFirstCommand.equals(1));","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"        assertFalse(listFirstCommand.equals(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"        // same categories and keywords -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"        assertTrue(listFirstCommand.equals(listFirstCommandCopy));","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"        // different sort order","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"        assertFalse(listFirstCommand.equals(listSecondCommand));","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"        // different category -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"        assertFalse(listFirstCommand.equals(listThirdCommand));","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"    public void execute_listIsNotSortedAscending_showsEverything() {","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"JustinS00"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"JustinS00"},"content":"        ListCommand newCommand \u003d new ListCommand(ComparableCategory.NULL, false);","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"JustinS00"},"content":"        assertCommandSuccess(newCommand, model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"JustinS00"},"content":"    public void execute_listByCompanyNameAscending_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"JustinS00"},"content":"        InternshipBook expectedInternship \u003d new InternshipBook();","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(ALICE);","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(BENSON);","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(CARL);","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(DANIEL);","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(ELLE);","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(FIONA);","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(GEORGE);","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"JustinS00"},"content":"        expectedModel \u003d new ModelManager(expectedInternship, new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"JustinS00"},"content":"        assertCommandSuccess(new ListCommand(ComparableCategory.NAME, false), model,","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"JustinS00"},"content":"                ListCommand.MESSAGE_SUCCESS + \" sorted by \" + ComparableCategory.NAME, expectedModel);","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"JustinS00"},"content":"    public void execute_listByCompanyNameDescending_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"JustinS00"},"content":"        InternshipBook expectedInternship \u003d new InternshipBook();","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(GEORGE);","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(FIONA);","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(ELLE);","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(DANIEL);","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(CARL);","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(BENSON);","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(ALICE);","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"JustinS00"},"content":"        expectedModel \u003d new ModelManager(expectedInternship, new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"JustinS00"},"content":"        assertCommandSuccess(new ListCommand(ComparableCategory.NAME, true), model,","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"JustinS00"},"content":"                ListCommand.MESSAGE_SUCCESS + \" sorted by \" + ComparableCategory.NAME, expectedModel);","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"JustinS00"},"content":"    public void execute_listByPositionAscending_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"JustinS00"},"content":"        InternshipBook expectedInternship \u003d new InternshipBook();","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(FIONA); //AI engineer","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(ALICE); //Backend Intern","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(GEORGE); //Data analyst","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(CARL); //backend engineer","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(ELLE); //data engineer","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(DANIEL); //frontend engineer","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(BENSON); //software engineer","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"JustinS00"},"content":"        expectedModel \u003d new ModelManager(expectedInternship, new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"JustinS00"},"content":"        assertCommandSuccess(new ListCommand(ComparableCategory.POSITION, false), model,","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"JustinS00"},"content":"                ListCommand.MESSAGE_SUCCESS + \" sorted by \" + ComparableCategory.POSITION, expectedModel);","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":132,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":133,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"JustinS00"},"content":"    public void execute_listByDateAscending_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"JustinS00"},"content":"        InternshipBook expectedInternship \u003d new InternshipBook();","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(DANIEL); //14-09-2022","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(BENSON); //24-09-2022","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(CARL); //24-09-2022","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(ELLE); //24-09-2022","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(FIONA); //24-09-2022","lastModifiedDate":"2022-10-14"},{"lineNumber":141,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(GEORGE); //24-09-2022","lastModifiedDate":"2022-10-14"},{"lineNumber":142,"author":{"gitId":"JustinS00"},"content":"        expectedInternship.addInternship(ALICE); //11-12-2022","lastModifiedDate":"2022-10-14"},{"lineNumber":143,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":144,"author":{"gitId":"JustinS00"},"content":"        expectedModel \u003d new ModelManager(expectedInternship, new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":145,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":146,"author":{"gitId":"JustinS00"},"content":"        assertCommandSuccess(new ListCommand(ComparableCategory.DATE, false), model,","lastModifiedDate":"2022-10-14"},{"lineNumber":147,"author":{"gitId":"JustinS00"},"content":"                ListCommand.MESSAGE_SUCCESS + \" sorted by \" + ComparableCategory.DATE, expectedModel);","lastModifiedDate":"2022-10-14"},{"lineNumber":148,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"JustinS00":121,"-":28}},{"path":"src/test/java/seedu/phu/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"package seedu.phu.logic.commands;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.showInternshipAtIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":"import static seedu.phu.testutil.TypicalIndexes.INDEXES_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"aarontangr"},"content":"import static seedu.phu.testutil.TypicalIndexes.INDEXES_SECOND_INTERNSHIP;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"aarontangr"},"content":"import static seedu.phu.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"aarontangr"},"content":"import static seedu.phu.testutil.TypicalIndexes.INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"aarontangr"},"content":"import static seedu.phu.testutil.TypicalInternships.getTypicalInternshipBook;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"aarontangr"},"content":"import java.util.List;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"aarontangr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"aarontangr"},"content":"import seedu.phu.commons.core.Messages;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"aarontangr"},"content":"import seedu.phu.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"aarontangr"},"content":"import seedu.phu.commons.core.index.Indexes;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"aarontangr"},"content":"import seedu.phu.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"aarontangr"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"aarontangr"},"content":"import seedu.phu.model.ModelManager;","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"aarontangr"},"content":"import seedu.phu.model.UserPrefs;","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"aarontangr"},"content":"import seedu.phu.model.internship.ExactMatchPredicate;","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"aarontangr"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"aarontangr"},"content":"import seedu.phu.model.internship.UniqueInternshipList;","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"aarontangr"},"content":"public class ViewCommandTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"aarontangr"},"content":"    private Model model;","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"aarontangr"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"aarontangr"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"aarontangr"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"aarontangr"},"content":"        model \u003d new ModelManager(getTypicalInternshipBook(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"aarontangr"},"content":"        expectedModel \u003d new ModelManager(model.getInternshipBook(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"aarontangr"},"content":"    @Test","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"aarontangr"},"content":"    public void equals() throws ParseException {","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"aarontangr"},"content":"        Internship firstInternship \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"aarontangr"},"content":"        List\u003cInternship\u003e forPredicate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"aarontangr"},"content":"        forPredicate.add(firstInternship);","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"aarontangr"},"content":"        ViewCommand firstViewCommand \u003d new ViewCommand(INDEXES_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"aarontangr"},"content":"        ViewCommand secondViewCommand \u003d new ViewCommand(INDEXES_SECOND_INTERNSHIP);","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"aarontangr"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"aarontangr"},"content":"        assertTrue(firstViewCommand.equals(firstViewCommand));","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"aarontangr"},"content":"        // same categories and keywords -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"aarontangr"},"content":"        ViewCommand firstViewCommandCopy \u003d new ViewCommand(INDEXES_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"aarontangr"},"content":"        assertTrue(firstViewCommand.equals(firstViewCommandCopy));","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"aarontangr"},"content":"        // different target index -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"aarontangr"},"content":"        assertFalse(firstViewCommand.equals(secondViewCommand));","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"aarontangr"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"aarontangr"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"aarontangr"},"content":"        Internship firstInternship \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"aarontangr"},"content":"        List\u003cInternship\u003e forPredicate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"aarontangr"},"content":"        forPredicate.add(firstInternship);","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"aarontangr"},"content":"        model.updateViewItem(new ExactMatchPredicate(forPredicate));","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"aarontangr"},"content":"        Internship internshipToView \u003d model.getViewItem().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"aarontangr"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEXES_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"aarontangr"},"content":"        UniqueInternshipList listOfInternshipsToView \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"aarontangr"},"content":"        listOfInternshipsToView.add(internshipToView);","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"aarontangr"},"content":"        String expectedMessage \u003d String.format(ViewCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"aarontangr"},"content":"                listOfInternshipsToView);","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"aarontangr"},"content":"        expectedModel.viewInternship(internshipToView);","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"aarontangr"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"aarontangr"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"aarontangr"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"aarontangr"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredInternshipList().size() + 1);","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"aarontangr"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(new Indexes(Set.of(outOfBoundIndex)));","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"aarontangr"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"aarontangr"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"aarontangr"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"aarontangr"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"aarontangr"},"content":"        showInternshipAtIndex(expectedModel, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"aarontangr"},"content":"        Internship firstInternship \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"aarontangr"},"content":"        List\u003cInternship\u003e forPredicate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"aarontangr"},"content":"        forPredicate.add(firstInternship);","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"aarontangr"},"content":"        model.updateViewItem(new ExactMatchPredicate(forPredicate));","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"aarontangr"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEXES_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"aarontangr"},"content":"        UniqueInternshipList listOfInternshipsToView \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"aarontangr"},"content":"        listOfInternshipsToView.add(firstInternship);","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"aarontangr"},"content":"        String expectedMessage \u003d String.format(ViewCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"aarontangr"},"content":"                listOfInternshipsToView);","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"aarontangr"},"content":"        expectedModel.viewInternship(firstInternship);","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"aarontangr"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"aarontangr"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"aarontangr"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"aarontangr"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"aarontangr"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"aarontangr"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(new Indexes(Set.of(outOfBoundIndex)));","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"aarontangr"},"content":"        // ensures that outOfBoundIndex is still in bounds of internship book list","lastModifiedDate":"2022-10-14"},{"lineNumber":120,"author":{"gitId":"aarontangr"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getInternshipBook().getInternshipList().size());","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"aarontangr"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-19"},{"lineNumber":123,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"aarontangr"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"aarontangr":124}},{"path":"src/test/java/seedu/phu/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.APPLICATION_PROCESS_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.APPLICATION_PROCESS_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.DATE_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.INVALID_APPLICATION_PROCESS_DESC;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.INVALID_POSITION_DESC;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.INVALID_WEBSITE_DESC;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.POSITION_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.POSITION_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.REMARK_DESC_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_POSITION_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.WEBSITE_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.WEBSITE_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.AddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"Rachel-AG"},"content":"import seedu.phu.model.internship.ApplicationProcess;","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Date;","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"Rachel-AG"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"Rachel-AG"},"content":"import seedu.phu.model.internship.Name;","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"Rachel-AG"},"content":"import seedu.phu.model.internship.Position;","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"Rachel-AG"},"content":"import seedu.phu.model.internship.Remark;","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"Rachel-AG"},"content":"import seedu.phu.model.internship.Website;","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"        Internship expectedInternship \u003d new InternshipBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"Rachel-AG"},"content":"                + REMARK_DESC_BOB + TAG_DESC_FRIEND + POSITION_DESC_BOB + APPLICATION_PROCESS_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"                + DATE_DESC_BOB + WEBSITE_DESC_BOB, new AddCommand(expectedInternship));","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"Rachel-AG"},"content":"                + REMARK_DESC_BOB + TAG_DESC_FRIEND + POSITION_DESC_BOB + APPLICATION_PROCESS_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"                + DATE_DESC_BOB + WEBSITE_DESC_BOB, new AddCommand(expectedInternship));","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"Rachel-AG"},"content":"                + REMARK_DESC_BOB + TAG_DESC_FRIEND + POSITION_DESC_BOB + APPLICATION_PROCESS_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"                + DATE_DESC_BOB + WEBSITE_DESC_BOB, new AddCommand(expectedInternship));","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"Rachel-AG"},"content":"                + REMARK_DESC_BOB + TAG_DESC_FRIEND + POSITION_DESC_BOB + APPLICATION_PROCESS_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"Rachel-AG"},"content":"                + DATE_DESC_BOB + WEBSITE_DESC_BOB, new AddCommand(expectedInternship));","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"Rachel-AG"},"content":"        // multiple remarks - last remark accepted","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"Rachel-AG"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + REMARK_DESC_AMY","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"Rachel-AG"},"content":"                + REMARK_DESC_BOB + TAG_DESC_FRIEND + POSITION_DESC_BOB + APPLICATION_PROCESS_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"Rachel-AG"},"content":"                + DATE_DESC_BOB + WEBSITE_DESC_BOB, new AddCommand(expectedInternship));","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"Rachel-AG"},"content":"        // multiple positions - last position accepted","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"Rachel-AG"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"Rachel-AG"},"content":"                + TAG_DESC_FRIEND + POSITION_DESC_AMY + POSITION_DESC_BOB + APPLICATION_PROCESS_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"Rachel-AG"},"content":"                + DATE_DESC_BOB + WEBSITE_DESC_BOB, new AddCommand(expectedInternship));","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"Rachel-AG"},"content":"        // multiple application processes - last application process accepted","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"Rachel-AG"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"Rachel-AG"},"content":"                + TAG_DESC_FRIEND + POSITION_DESC_BOB + APPLICATION_PROCESS_DESC_AMY + APPLICATION_PROCESS_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"JustinS00"},"content":"                + DATE_DESC_BOB + WEBSITE_DESC_BOB, new AddCommand(expectedInternship));","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"Rachel-AG"},"content":"        // multiple dates - last date accepted","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"Rachel-AG"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"Rachel-AG"},"content":"                + TAG_DESC_FRIEND + POSITION_DESC_BOB + APPLICATION_PROCESS_DESC_BOB + DATE_DESC_AMY","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"JustinS00"},"content":"                + DATE_DESC_BOB + WEBSITE_DESC_BOB, new AddCommand(expectedInternship));","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"Rachel-AG"},"content":"        // multiple websites - last website accepted","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"Rachel-AG"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"Rachel-AG"},"content":"                + TAG_DESC_FRIEND + POSITION_DESC_BOB + APPLICATION_PROCESS_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"Rachel-AG"},"content":"                + DATE_DESC_BOB + WEBSITE_DESC_AMY + WEBSITE_DESC_BOB, new AddCommand(expectedInternship));","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"Rachel-AG"},"content":"        Internship expectedInternshipMultipleTags \u003d new InternshipBuilder(BOB)","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"Rachel-AG"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"Rachel-AG"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"Rachel-AG"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + POSITION_DESC_BOB + APPLICATION_PROCESS_DESC_BOB","lastModifiedDate":"2022-09-25"},{"lineNumber":115,"author":{"gitId":"JustinS00"},"content":"                + DATE_DESC_BOB + WEBSITE_DESC_BOB, new AddCommand(expectedInternshipMultipleTags));","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"Rachel-AG"},"content":"        Internship expectedInternship \u003d new InternshipBuilder(AMY).withTags().build();","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"Rachel-AG"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + REMARK_DESC_AMY","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"Rachel-AG"},"content":"                        + POSITION_DESC_AMY + APPLICATION_PROCESS_DESC_AMY + DATE_DESC_AMY + WEBSITE_DESC_AMY,","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"JustinS00"},"content":"                new AddCommand(expectedInternship));","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"Rachel-AG"},"content":"        // no application process","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"Rachel-AG"},"content":"        Internship expectedInternship1 \u003d new InternshipBuilder(AMY).withApplicationProcess(\"apply\").build();","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"Rachel-AG"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + REMARK_DESC_AMY","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"Rachel-AG"},"content":"                        + POSITION_DESC_AMY + DATE_DESC_AMY + WEBSITE_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"Rachel-AG"},"content":"                new AddCommand(expectedInternship1));","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":132,"author":{"gitId":"Rachel-AG"},"content":"        // no date","lastModifiedDate":"2022-10-14"},{"lineNumber":133,"author":{"gitId":"Rachel-AG"},"content":"        Internship expectedInternship2 \u003d new InternshipBuilder(AMY)","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"Rachel-AG"},"content":"                .withDate(LocalDate.now().format(Date.DEFAULT_FORMATTER)).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"Rachel-AG"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + REMARK_DESC_AMY","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"Rachel-AG"},"content":"                        + POSITION_DESC_AMY + APPLICATION_PROCESS_DESC_AMY + WEBSITE_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"Rachel-AG"},"content":"                new AddCommand(expectedInternship2));","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"Rachel-AG"},"content":"        // no phone","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"Rachel-AG"},"content":"        Internship expectedInternship3 \u003d new InternshipBuilder(AMY).withPhone(Phone.DEFAULT_VALUE).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":141,"author":{"gitId":"Rachel-AG"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + EMAIL_DESC_AMY + REMARK_DESC_AMY + POSITION_DESC_AMY","lastModifiedDate":"2022-10-14"},{"lineNumber":142,"author":{"gitId":"Rachel-AG"},"content":"                        + APPLICATION_PROCESS_DESC_AMY + DATE_DESC_AMY + WEBSITE_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-14"},{"lineNumber":143,"author":{"gitId":"Rachel-AG"},"content":"                new AddCommand(expectedInternship3));","lastModifiedDate":"2022-10-14"},{"lineNumber":144,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":145,"author":{"gitId":"Rachel-AG"},"content":"        // no email","lastModifiedDate":"2022-10-14"},{"lineNumber":146,"author":{"gitId":"Rachel-AG"},"content":"        Internship expectedInternship4 \u003d new InternshipBuilder(AMY).withEmail(Email.DEFAULT_VALUE).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":147,"author":{"gitId":"Rachel-AG"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + REMARK_DESC_AMY + POSITION_DESC_AMY","lastModifiedDate":"2022-10-14"},{"lineNumber":148,"author":{"gitId":"Rachel-AG"},"content":"                        + APPLICATION_PROCESS_DESC_AMY + DATE_DESC_AMY + WEBSITE_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-14"},{"lineNumber":149,"author":{"gitId":"Rachel-AG"},"content":"                new AddCommand(expectedInternship4));","lastModifiedDate":"2022-10-14"},{"lineNumber":150,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":151,"author":{"gitId":"Rachel-AG"},"content":"        // no website","lastModifiedDate":"2022-10-14"},{"lineNumber":152,"author":{"gitId":"Rachel-AG"},"content":"        Internship expectedInternship5 \u003d new InternshipBuilder(AMY).withWebsite(Website.DEFAULT_VALUE).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":153,"author":{"gitId":"Rachel-AG"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-14"},{"lineNumber":154,"author":{"gitId":"Rachel-AG"},"content":"                        + REMARK_DESC_AMY + POSITION_DESC_AMY + APPLICATION_PROCESS_DESC_AMY + DATE_DESC_AMY","lastModifiedDate":"2022-10-14"},{"lineNumber":155,"author":{"gitId":"Rachel-AG"},"content":"                        + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-14"},{"lineNumber":156,"author":{"gitId":"Rachel-AG"},"content":"                new AddCommand(expectedInternship5));","lastModifiedDate":"2022-10-14"},{"lineNumber":157,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":158,"author":{"gitId":"Rachel-AG"},"content":"        // no remark","lastModifiedDate":"2022-10-14"},{"lineNumber":159,"author":{"gitId":"Rachel-AG"},"content":"        Internship expectedInternship6 \u003d new InternshipBuilder(AMY).withRemark(Remark.DEFAULT_VALUE).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":160,"author":{"gitId":"Rachel-AG"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + POSITION_DESC_AMY","lastModifiedDate":"2022-10-14"},{"lineNumber":161,"author":{"gitId":"Rachel-AG"},"content":"                        + APPLICATION_PROCESS_DESC_AMY + DATE_DESC_AMY + WEBSITE_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-14"},{"lineNumber":162,"author":{"gitId":"Rachel-AG"},"content":"                new AddCommand(expectedInternship6));","lastModifiedDate":"2022-10-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"Rachel-AG"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + POSITION_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"Rachel-AG"},"content":"        // missing position prefix","lastModifiedDate":"2022-10-14"},{"lineNumber":173,"author":{"gitId":"Rachel-AG"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_POSITION_BOB, expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"Rachel-AG"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_POSITION_BOB, expectedMessage);","lastModifiedDate":"2022-10-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"Rachel-AG"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":183,"author":{"gitId":"Rachel-AG"},"content":"                + TAG_DESC_FRIEND + POSITION_DESC_BOB + APPLICATION_PROCESS_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":184,"author":{"gitId":"Rachel-AG"},"content":"                + DATE_DESC_BOB + WEBSITE_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"Rachel-AG"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":188,"author":{"gitId":"Rachel-AG"},"content":"                + REMARK_DESC_BOB + TAG_DESC_FRIEND + POSITION_DESC_BOB + APPLICATION_PROCESS_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":189,"author":{"gitId":"Rachel-AG"},"content":"                + DATE_DESC_BOB + WEBSITE_DESC_BOB, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"Rachel-AG"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2022-10-14"},{"lineNumber":193,"author":{"gitId":"Rachel-AG"},"content":"                + REMARK_DESC_BOB + TAG_DESC_FRIEND + POSITION_DESC_BOB + APPLICATION_PROCESS_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":194,"author":{"gitId":"Rachel-AG"},"content":"                + DATE_DESC_BOB + WEBSITE_DESC_BOB, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"Rachel-AG"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":198,"author":{"gitId":"Rachel-AG"},"content":"                + INVALID_TAG_DESC + TAG_DESC_FRIEND + POSITION_DESC_BOB + APPLICATION_PROCESS_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":199,"author":{"gitId":"Rachel-AG"},"content":"                + DATE_DESC_BOB + WEBSITE_DESC_BOB, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":200,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":201,"author":{"gitId":"Rachel-AG"},"content":"        // invalid position","lastModifiedDate":"2022-10-14"},{"lineNumber":202,"author":{"gitId":"Rachel-AG"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":203,"author":{"gitId":"Rachel-AG"},"content":"                + TAG_DESC_FRIEND + INVALID_POSITION_DESC + APPLICATION_PROCESS_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":204,"author":{"gitId":"Rachel-AG"},"content":"                + DATE_DESC_BOB + WEBSITE_DESC_BOB, Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":205,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":206,"author":{"gitId":"Rachel-AG"},"content":"        // invalid application process","lastModifiedDate":"2022-10-14"},{"lineNumber":207,"author":{"gitId":"Rachel-AG"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":208,"author":{"gitId":"Rachel-AG"},"content":"                + TAG_DESC_FRIEND + POSITION_DESC_BOB + INVALID_APPLICATION_PROCESS_DESC","lastModifiedDate":"2022-10-14"},{"lineNumber":209,"author":{"gitId":"Rachel-AG"},"content":"                + DATE_DESC_BOB + WEBSITE_DESC_BOB, ApplicationProcess.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":210,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":211,"author":{"gitId":"Rachel-AG"},"content":"        // invalid date","lastModifiedDate":"2022-10-14"},{"lineNumber":212,"author":{"gitId":"Rachel-AG"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":213,"author":{"gitId":"Rachel-AG"},"content":"                + TAG_DESC_FRIEND + POSITION_DESC_BOB + APPLICATION_PROCESS_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":214,"author":{"gitId":"Rachel-AG"},"content":"                + INVALID_DATE_DESC + WEBSITE_DESC_BOB, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":215,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":216,"author":{"gitId":"Rachel-AG"},"content":"        // invalid website","lastModifiedDate":"2022-10-14"},{"lineNumber":217,"author":{"gitId":"Rachel-AG"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":218,"author":{"gitId":"Rachel-AG"},"content":"                + TAG_DESC_FRIEND + POSITION_DESC_BOB + APPLICATION_PROCESS_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":219,"author":{"gitId":"Rachel-AG"},"content":"                + DATE_DESC_BOB + INVALID_WEBSITE_DESC, Website.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":222,"author":{"gitId":"Rachel-AG"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_DATE_DESC","lastModifiedDate":"2022-10-14"},{"lineNumber":223,"author":{"gitId":"Rachel-AG"},"content":"                + POSITION_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":227,"author":{"gitId":"Rachel-AG"},"content":"                        + REMARK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + POSITION_DESC_BOB,","lastModifiedDate":"2022-10-14"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Rachel-AG":131,"JustinS00":43,"-":56}},{"path":"src/test/java/seedu/phu/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"JustinS00":1,"-":149}},{"path":"src/test/java/seedu/phu/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.Command;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"JustinS00":3,"-":36}},{"path":"src/test/java/seedu/phu/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalIndexes.INDEXES_FIRST_AND_SECOND_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalIndexes.INDEXES_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"sugiyem"},"content":"    public void parse_validOneArg_returnsDeleteCommand() {","lastModifiedDate":"2022-09-22"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEXES_FIRST_INTERNSHIP));","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"sugiyem"},"content":"    }","lastModifiedDate":"2022-09-22"},{"lineNumber":28,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":29,"author":{"gitId":"sugiyem"},"content":"    @Test","lastModifiedDate":"2022-09-22"},{"lineNumber":30,"author":{"gitId":"sugiyem"},"content":"    public void parse_validMultipleArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-09-22"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"        assertParseSuccess(parser, \"1 2\", new DeleteCommand(INDEXES_FIRST_AND_SECOND_INTERNSHIP));","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"JustinS00":9,"-":24,"sugiyem":5}},{"path":"src/test/java/seedu/phu/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.APPLICATION_PROCESS_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.DATE_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.POSITION_DESC_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.REMARK_DESC_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_APPLICATION_PROCESS_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_POSITION_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_WEBSITE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.WEBSITE_DESC_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalIndexes.INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalIndexes.INDEX_THIRD_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.EditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.EditCommand.EditInternshipDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.testutil.EditInternshipDescriptorBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"JustinS00"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Internship} being edited,","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"Rachel-AG"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_REMARK_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"JustinS00"},"content":"        Index targetIndex \u003d INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":117,"author":{"gitId":"Rachel-AG"},"content":"                + EMAIL_DESC_AMY + REMARK_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"sugiyem"},"content":"                + POSITION_DESC_AMY + APPLICATION_PROCESS_DESC_BOB + DATE_DESC_BOB","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"sugiyem"},"content":"                + WEBSITE_DESC_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"JustinS00"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"Rachel-AG"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withRemark(VALID_REMARK_AMY)","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"sugiyem"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withPosition(VALID_POSITION_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"sugiyem"},"content":"                .withApplicationProcess(VALID_APPLICATION_PROCESS_BOB).withDate(VALID_DATE_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"sugiyem"},"content":"                .withWebsite(VALID_WEBSITE_BOB).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"JustinS00"},"content":"        Index targetIndex \u003d INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"JustinS00"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"JustinS00"},"content":"        Index targetIndex \u003d INDEX_THIRD_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"JustinS00"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":154,"author":{"gitId":"JustinS00"},"content":"        descriptor \u003d new EditInternshipDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"JustinS00"},"content":"        descriptor \u003d new EditInternshipDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"Rachel-AG"},"content":"        // remark","lastModifiedDate":"2022-10-14"},{"lineNumber":165,"author":{"gitId":"Rachel-AG"},"content":"        userInput \u003d targetIndex.getOneBased() + REMARK_DESC_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":166,"author":{"gitId":"Rachel-AG"},"content":"        descriptor \u003d new EditInternshipDescriptorBuilder().withRemark(VALID_REMARK_AMY).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"JustinS00"},"content":"        descriptor \u003d new EditInternshipDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":175,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":176,"author":{"gitId":"sugiyem"},"content":"        // position","lastModifiedDate":"2022-10-09"},{"lineNumber":177,"author":{"gitId":"sugiyem"},"content":"        userInput \u003d targetIndex.getOneBased() + POSITION_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":178,"author":{"gitId":"JustinS00"},"content":"        descriptor \u003d new EditInternshipDescriptorBuilder().withPosition(VALID_POSITION_AMY).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":179,"author":{"gitId":"sugiyem"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":180,"author":{"gitId":"sugiyem"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-09"},{"lineNumber":181,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":182,"author":{"gitId":"sugiyem"},"content":"        // application process","lastModifiedDate":"2022-10-09"},{"lineNumber":183,"author":{"gitId":"sugiyem"},"content":"        userInput \u003d targetIndex.getOneBased() + APPLICATION_PROCESS_DESC_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":184,"author":{"gitId":"JustinS00"},"content":"        descriptor \u003d new EditInternshipDescriptorBuilder()","lastModifiedDate":"2022-10-13"},{"lineNumber":185,"author":{"gitId":"sugiyem"},"content":"                .withApplicationProcess(VALID_APPLICATION_PROCESS_BOB).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":186,"author":{"gitId":"sugiyem"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":187,"author":{"gitId":"sugiyem"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-09"},{"lineNumber":188,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":189,"author":{"gitId":"sugiyem"},"content":"        // date","lastModifiedDate":"2022-10-09"},{"lineNumber":190,"author":{"gitId":"sugiyem"},"content":"        userInput \u003d targetIndex.getOneBased() + DATE_DESC_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":191,"author":{"gitId":"JustinS00"},"content":"        descriptor \u003d new EditInternshipDescriptorBuilder().withDate(VALID_DATE_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":192,"author":{"gitId":"sugiyem"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":193,"author":{"gitId":"sugiyem"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-09"},{"lineNumber":194,"author":{"gitId":"sugiyem"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":195,"author":{"gitId":"sugiyem"},"content":"        // website","lastModifiedDate":"2022-10-09"},{"lineNumber":196,"author":{"gitId":"sugiyem"},"content":"        userInput \u003d targetIndex.getOneBased() + WEBSITE_DESC_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":197,"author":{"gitId":"JustinS00"},"content":"        descriptor \u003d new EditInternshipDescriptorBuilder().withWebsite(VALID_WEBSITE_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":198,"author":{"gitId":"sugiyem"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":199,"author":{"gitId":"sugiyem"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":204,"author":{"gitId":"JustinS00"},"content":"        Index targetIndex \u003d INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":205,"author":{"gitId":"Rachel-AG"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + REMARK_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-14"},{"lineNumber":206,"author":{"gitId":"Rachel-AG"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + REMARK_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-14"},{"lineNumber":207,"author":{"gitId":"Rachel-AG"},"content":"                + PHONE_DESC_BOB + REMARK_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"JustinS00"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-13"},{"lineNumber":210,"author":{"gitId":"Rachel-AG"},"content":"                .withEmail(VALID_EMAIL_BOB).withRemark(VALID_REMARK_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-14"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"JustinS00"},"content":"        Index targetIndex \u003d INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":222,"author":{"gitId":"JustinS00"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"Rachel-AG"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + REMARK_DESC_BOB","lastModifiedDate":"2022-10-14"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":229,"author":{"gitId":"JustinS00"},"content":"        descriptor \u003d new EditInternshipDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-13"},{"lineNumber":230,"author":{"gitId":"Rachel-AG"},"content":"                .withRemark(VALID_REMARK_BOB).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":237,"author":{"gitId":"JustinS00"},"content":"        Index targetIndex \u003d INDEX_THIRD_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"JustinS00"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Rachel-AG":16,"JustinS00":64,"-":139,"sugiyem":26}},{"path":"src/test/java/seedu/phu/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.keyword.Keyword;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.keyword.KeywordList;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.FindCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.ContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.FindableCategory;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"Elben85"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Elben85"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Elben85"},"content":"        KeywordList keywords1 \u003d prepareKeywords(\"Alice\", \"Bob\");","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Elben85"},"content":"        KeywordList keywords2 \u003d prepareKeywords(\"02-02-2022\", \"10-12-2022\");","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Elben85"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Elben85"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Elben85"},"content":"                new FindCommand(new ContainsKeywordsPredicate(","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Elben85"},"content":"                        keywords1, FindableCategory.COMPANY_NAME));","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Elben85"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"Elben85"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Elben85"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"Elben85"},"content":"        // Tests all possible categories","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"Elben85"},"content":"        FindableCategory[] categories \u003d FindableCategory.values();","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"Elben85"},"content":"        for (FindableCategory category : categories) {","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"Elben85"},"content":"            String input \u003d CliSyntax.PREFIX_CATEGORY + category.name() + \" 02-02-2022 10-12-2022\";","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"Elben85"},"content":"            FindCommand expected \u003d (new FindCommand(","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"Elben85"},"content":"                    new ContainsKeywordsPredicate(keywords2, category)","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"Elben85"},"content":"            ));","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"Elben85"},"content":"            assertParseSuccess(parser, input, expected);","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"Elben85"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"Elben85"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"Elben85"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"Elben85"},"content":"        // Invalid category","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"        assertParseFailure(parser, \"c/Random 123\", FindableCategoryParser.EXCEPTION_MESSAGE);","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"Elben85"},"content":"        // No Keywords Given","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"Elben85"},"content":"        assertParseFailure(parser, \"c/n\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"Elben85"},"content":"        // Date category with invalid date keywords","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"Elben85"},"content":"        assertParseFailure(parser, \"c/d 2022-02-02\", FindCommandParser.CONSTRAINT_MESSAGE);","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"Elben85"},"content":"    private KeywordList prepareKeywords(String ...keywords) {","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"Elben85"},"content":"        KeywordList keywordList \u003d new KeywordList();","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"Elben85"},"content":"        for (String k : keywords) {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"Elben85"},"content":"            keywordList.addKeyword(new Keyword(k));","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"Elben85"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"Elben85"},"content":"        return keywordList;","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Elben85":49,"JustinS00":10,"-":15}},{"path":"src/test/java/seedu/phu/logic/parser/FindableCategoryParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Elben85"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Elben85"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Elben85"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.exceptions.InvalidCategoryException;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.FindableCategory;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Elben85"},"content":"public class FindableCategoryParserTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Elben85"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Elben85"},"content":"    public void parse_companyNameCategory() throws InvalidCategoryException {","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Elben85"},"content":"        assertEquals(FindableCategory.COMPANY_NAME,","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Elben85"},"content":"                FindableCategoryParser.parse(\"company_name\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Elben85"},"content":"        assertEquals(FindableCategory.COMPANY_NAME,","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Elben85"},"content":"                FindableCategoryParser.parse(\"n\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Elben85"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Elben85"},"content":"    public void parse_tagCategory() throws InvalidCategoryException {","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Elben85"},"content":"        assertEquals(FindableCategory.TAGS,","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Elben85"},"content":"                FindableCategoryParser.parse(\"tags\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Elben85"},"content":"        assertEquals(FindableCategory.TAGS,","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Elben85"},"content":"                FindableCategoryParser.parse(\"t\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Elben85"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Elben85"},"content":"    public void parse_applicationProcessCategory() throws InvalidCategoryException {","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Elben85"},"content":"        assertEquals(FindableCategory.APPLICATION_PROCESS,","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Elben85"},"content":"                FindableCategoryParser.parse(\"application_process\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Elben85"},"content":"        assertEquals(FindableCategory.APPLICATION_PROCESS,","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Elben85"},"content":"                FindableCategoryParser.parse(\"pr\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"Elben85"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"Elben85"},"content":"    public void parse_positionCategory() throws InvalidCategoryException {","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"Elben85"},"content":"        assertEquals(FindableCategory.POSITION,","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"Elben85"},"content":"                FindableCategoryParser.parse(\"position\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"Elben85"},"content":"        assertEquals(FindableCategory.POSITION,","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"Elben85"},"content":"                FindableCategoryParser.parse(\"p\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"Elben85"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"Elben85"},"content":"    public void parse_dateCategory() throws InvalidCategoryException {","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"Elben85"},"content":"        assertEquals(FindableCategory.DATE,","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"Elben85"},"content":"                FindableCategoryParser.parse(\"date\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"Elben85"},"content":"        assertEquals(FindableCategory.DATE,","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"Elben85"},"content":"                FindableCategoryParser.parse(\"d\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"Elben85"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"Elben85"},"content":"    public void parse_unknownCategory_throwsException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"Elben85"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"Elben85"},"content":"            FindableCategoryParser.parse(\"iaebfinqoaewf\");","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"Elben85"},"content":"            fail();","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"Elben85"},"content":"        } catch (InvalidCategoryException e) {","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"Elben85"},"content":"            //pass","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"Elben85"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"Elben85"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Elben85":63,"JustinS00":3}},{"path":"src/test/java/seedu/phu/logic/parser/InternshipBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalIndexes.INDEXES_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"Elben85"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Elben85"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Elben85"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.keyword.Keyword;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.keyword.KeywordList;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.AddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.EditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.EditCommand.EditInternshipDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.FindCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.ListCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.ContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.FindableCategory;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.testutil.EditInternshipDescriptorBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.testutil.InternshipUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"public class InternshipBookParserTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"    private final InternshipBookParser parser \u003d new InternshipBookParser();","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"        Internship internship \u003d new InternshipBuilder().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(InternshipUtil.getAddCommand(internship));","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"        assertEquals(new AddCommand(internship), command);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_INTERNSHIP.getOneBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"        assertEquals(new DeleteCommand(INDEXES_FIRST_INTERNSHIP), command);","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"        Internship internship \u003d new InternshipBuilder().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder(internship).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"JustinS00"},"content":"                + INDEX_FIRST_INTERNSHIP.getOneBased() + \" \"","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"                + InternshipUtil.getEditInternshipDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_INTERNSHIP, descriptor), command);","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"Elben85"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"Elben85"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"Elben85"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"Elben85"},"content":"        KeywordList keywordList \u003d new KeywordList();","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"Elben85"},"content":"        for (String s : keywords) {","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"Elben85"},"content":"            keywordList.addKeyword(new Keyword(s));","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"Elben85"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"Elben85"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"Elben85"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"Elben85"},"content":"                FindCommand.COMMAND_WORD + \" \" + CliSyntax.PREFIX_CATEGORY + \"n \"","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"Elben85"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"Elben85"},"content":"        assertEquals(new FindCommand(new ContainsKeywordsPredicate(","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"Elben85"},"content":"                keywordList, FindableCategory.COMPANY_NAME)), command);","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"Elben85"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"JustinS00"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" c/n true\") instanceof ListCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Elben85":20,"JustinS00":38,"-":57}},{"path":"src/test/java/seedu/phu/logic/parser/ListCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.ListCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.ComparableCategory;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"public class ListCommandParserTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"    private ListCommandParser parser \u003d new ListCommandParser();","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"    public void parse_emptyArg() {","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"        assertParseSuccess(parser, \"\", new ListCommand());","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"    public void parse_validArgs() {","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_CATEGORY + \"n\",","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"                new ListCommand(ComparableCategory.NAME, false));","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_CATEGORY + \"p\",","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"                new ListCommand(ComparableCategory.POSITION, false));","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_CATEGORY + \"pr\",","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"                new ListCommand(ComparableCategory.APPLICATION_PROCESS, false));","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_CATEGORY + \"d\",","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"                new ListCommand(ComparableCategory.DATE, false));","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_CATEGORY + \"company_name true\",","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"                new ListCommand(ComparableCategory.NAME, true));","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_CATEGORY + \"Company_Name true\",","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"                new ListCommand(ComparableCategory.NAME, true));","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"        // Additional arguments given","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_CATEGORY + \"n true something\",","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"                new ListCommand(ComparableCategory.NAME, false));","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"        // More than one category given (last category is chosen)","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_CATEGORY + \"n \" + PREFIX_CATEGORY + \"pr true\",","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"                new ListCommand(ComparableCategory.APPLICATION_PROCESS, true));","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"        // Invalid category","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"        assertParseFailure(parser, \" \" + PREFIX_CATEGORY + \"Random 123\",","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"                ComparableCategoryParser.EXCEPTION_MESSAGE);","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"        // Last category is invalid","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"        assertParseFailure(parser, \" \" + PREFIX_CATEGORY + \"n \" + PREFIX_CATEGORY + \"web\",","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"                ComparableCategoryParser.EXCEPTION_MESSAGE);","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"        // No category Given","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"        assertParseFailure(parser, \" \" + PREFIX_CATEGORY,","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"                ComparableCategoryParser.EXCEPTION_MESSAGE);","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"        // Invalid preamble","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"        assertParseFailure(parser, \" 1234 \" + PREFIX_CATEGORY + \"n\",","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"JustinS00":60}},{"path":"src/test/java/seedu/phu/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Remark;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"    private static final String INVALID_INTERNSHIP \u003d \" \";","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"Rachel-AG"},"content":"    private static final String VALID_REMARK \u003d \"123 Main Street #0505\";","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"        assertEquals(INDEX_FIRST_INTERNSHIP, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"        assertEquals(INDEX_FIRST_INTERNSHIP, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"Rachel-AG"},"content":"    public void parseRemark_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"Rachel-AG"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRemark((String) null));","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"Rachel-AG"},"content":"    public void parseRemark_validValueWithoutWhitespace_returnsRemark() throws Exception {","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"Rachel-AG"},"content":"        Remark expectedRemark \u003d new Remark(VALID_REMARK);","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"Rachel-AG"},"content":"        assertEquals(expectedRemark, ParserUtil.parseRemark(VALID_REMARK));","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"Rachel-AG"},"content":"    public void parseRemark_validValueWithWhitespace_returnsTrimmedRemark() throws Exception {","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"JustinS00"},"content":"        String internshipWithWhitespace \u003d WHITESPACE + VALID_REMARK + WHITESPACE;","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"Rachel-AG"},"content":"        Remark expectedRemark \u003d new Remark(VALID_REMARK);","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"JustinS00"},"content":"        assertEquals(expectedRemark, ParserUtil.parseRemark(internshipWithWhitespace));","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Rachel-AG":8,"JustinS00":15,"-":169}},{"path":"src/test/java/seedu/phu/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"aarontangr"},"content":"package seedu.phu.logic.parser;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"aarontangr"},"content":"import static seedu.phu.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"aarontangr"},"content":"import static seedu.phu.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"aarontangr"},"content":"import static seedu.phu.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"aarontangr"},"content":"import static seedu.phu.testutil.TypicalIndexes.INDEXES_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"aarontangr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"aarontangr"},"content":"import seedu.phu.logic.commands.ViewCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"aarontangr"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"aarontangr"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"aarontangr"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"    public void parse_validOneArg_returnsViewCommand() {","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"        assertParseSuccess(parser, \"1\", new ViewCommand(INDEXES_FIRST_INTERNSHIP));","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"aarontangr"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"aarontangr"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"aarontangr"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"aarontangr"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"aarontangr"},"content":"}","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"aarontangr"},"content":"","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"aarontangr":26}},{"path":"src/test/java/seedu/phu/model/InternshipBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.ALICE;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.getTypicalInternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.exceptions.DuplicateInternshipException;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"public class InternshipBookTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"    private final InternshipBook internshipBook \u003d new InternshipBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"        assertEquals(Collections.emptyList(), internshipBook.getInternshipList());","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"        assertThrows(NullPointerException.class, () -\u003e internshipBook.resetData(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"    public void resetData_withValidReadOnlyInternshipBook_replacesData() {","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"        InternshipBook newData \u003d getTypicalInternshipBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"        internshipBook.resetData(newData);","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"        assertEquals(newData, internshipBook);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"    public void resetData_withDuplicateInternships_throwsDuplicateInternshipException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"        // Two internships with the same identity fields","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"Rachel-AG"},"content":"        Internship editedAlice \u003d new InternshipBuilder(ALICE).withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"                .build();","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"        List\u003cInternship\u003e newInternships \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"        InternshipBookStub newData \u003d new InternshipBookStub(newInternships);","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"        assertThrows(DuplicateInternshipException.class, () -\u003e internshipBook.resetData(newData));","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"    public void hasInternship_nullInternship_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"JustinS00"},"content":"        assertThrows(NullPointerException.class, () -\u003e internshipBook.hasInternship(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"JustinS00"},"content":"    public void hasInternship_internshipNotInInternshipBook_returnsFalse() {","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"        assertFalse(internshipBook.hasInternship(ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"    public void hasInternship_internshipInInternshipBook_returnsTrue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"JustinS00"},"content":"        internshipBook.addInternship(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"        assertTrue(internshipBook.hasInternship(ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"    public void hasInternship_internshipWithSameIdentityFieldsInInternshipBook_returnsTrue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"        internshipBook.addInternship(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"Rachel-AG"},"content":"        Internship editedAlice \u003d new InternshipBuilder(ALICE).withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"JustinS00"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"JustinS00"},"content":"                .build();","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"JustinS00"},"content":"        assertTrue(internshipBook.hasInternship(editedAlice));","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"JustinS00"},"content":"    public void getInternshipList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"JustinS00"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e internshipBook.getInternshipList().remove(0));","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"JustinS00"},"content":"     * A stub ReadOnlyInternshipBook whose internships list can violate interface constraints.","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"JustinS00"},"content":"    private static class InternshipBookStub implements ReadOnlyInternshipBook {","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"JustinS00"},"content":"        private final ObservableList\u003cInternship\u003e internships \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"JustinS00"},"content":"        InternshipBookStub(Collection\u003cInternship\u003e internships) {","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"JustinS00"},"content":"            this.internships.setAll(internships);","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"JustinS00"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"JustinS00"},"content":"        public ObservableList\u003cInternship\u003e getInternshipList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"JustinS00"},"content":"            return internships;","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"JustinS00"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"JustinS00"},"content":"        public void sortInternshipList(Comparator\u003cInternship\u003e comparator) {","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"JustinS00"},"content":"            internships.sort(comparator);","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"JustinS00"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"JustinS00"},"content":"        public void reverseList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"JustinS00"},"content":"            Collections.reverse(internships);","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Rachel-AG":3,"JustinS00":113}},{"path":"src/test/java/seedu/phu/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.model.Model.PREDICATE_SHOW_ALL_INTERNSHIPS;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.ALICE;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.BENSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.testutil.InternshipBookBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"        assertEquals(new InternshipBook(), new InternshipBook(modelManager.getInternshipBook()));","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"        userPrefs.setInternshipBookFilePath(Paths.get(\"internship/book/file/path\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"        userPrefs.setInternshipBookFilePath(Paths.get(\"new/internship/book/file/path\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"    public void setInternshipBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setInternshipBookFilePath(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"    public void setInternshipBookFilePath_validPath_setsInternshipBookFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"        Path path \u003d Paths.get(\"internship/book/file/path\");","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"        modelManager.setInternshipBookFilePath(path);","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"JustinS00"},"content":"        assertEquals(path, modelManager.getInternshipBookFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"    public void hasInternship_nullInternship_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasInternship(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"JustinS00"},"content":"    public void hasInternship_internshipNotInInternshipBook_returnsFalse() {","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"JustinS00"},"content":"        assertFalse(modelManager.hasInternship(ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"JustinS00"},"content":"    public void hasInternship_internshipInInternshipBook_returnsTrue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"JustinS00"},"content":"        modelManager.addInternship(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"JustinS00"},"content":"        assertTrue(modelManager.hasInternship(ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"JustinS00"},"content":"    public void getFilteredInternshipList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"JustinS00"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredInternshipList().remove(0));","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"JustinS00"},"content":"        InternshipBook internshipBook \u003d new InternshipBookBuilder().withInternship(ALICE)","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"JustinS00"},"content":"                .withInternship(BENSON).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"JustinS00"},"content":"        InternshipBook differentInternshipBook \u003d new InternshipBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"JustinS00"},"content":"        modelManager \u003d new ModelManager(internshipBook, userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"JustinS00"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(internshipBook, userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"JustinS00"},"content":"        // different internshipBook -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"JustinS00"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentInternshipBook, userPrefs)));","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":122,"author":{"gitId":"JustinS00"},"content":"        modelManager.updateFilteredInternshipList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"JustinS00"},"content":"        assertFalse(modelManager.equals(new ModelManager(internshipBook, userPrefs)));","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"JustinS00"},"content":"        modelManager.updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"JustinS00"},"content":"        differentUserPrefs.setInternshipBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"JustinS00"},"content":"        assertFalse(modelManager.equals(new ModelManager(internshipBook, differentUserPrefs)));","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"JustinS00":38,"-":95}},{"path":"src/test/java/seedu/phu/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"    public void setInternshipBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setInternshipBookFilePath(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"JustinS00":4,"-":17}},{"path":"src/test/java/seedu/phu/model/internship/ApplicationProcessTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Rachel-AG"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Rachel-AG"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Rachel-AG"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Rachel-AG"},"content":"public class ApplicationProcessTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ApplicationProcess(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Rachel-AG"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"    public void constructor_invalidApplicationProcess_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"        String invalidApplicationProcess \u003d \"\";","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Rachel-AG"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidApplicationProcess));","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Rachel-AG"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Rachel-AG"},"content":"    public void isValidApplicationProcess() {","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Rachel-AG"},"content":"        // null application process","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Rachel-AG"},"content":"        assertThrows(NullPointerException.class, () -\u003e ApplicationProcess.isValidApplicationProcess(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"        // invalid application process","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"        assertFalse(ApplicationProcess.isValidApplicationProcess(\"aapply\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"        assertFalse(ApplicationProcess.isValidApplicationProcess(\"tech interview\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Rachel-AG"},"content":"        // valid application process","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"        assertTrue(ApplicationProcess.isValidApplicationProcess(\"APPLY\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Rachel-AG"},"content":"        assertTrue(ApplicationProcess.isValidApplicationProcess(\"Apply\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Rachel-AG"},"content":"        assertTrue(ApplicationProcess.isValidApplicationProcess(\"apply\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"        assertTrue(ApplicationProcess.isValidApplicationProcess(\"AppLy\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"        assertTrue(ApplicationProcess.isValidApplicationProcess(\"ASSESSMENT\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"        assertTrue(ApplicationProcess.isValidApplicationProcess(\"INTERVIEW\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"        assertTrue(ApplicationProcess.isValidApplicationProcess(\"OFFER\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"        assertTrue(ApplicationProcess.isValidApplicationProcess(\"ACCEPTED\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"        assertTrue(ApplicationProcess.isValidApplicationProcess(\"REJECTED\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Rachel-AG":41}},{"path":"src/test/java/seedu/phu/model/internship/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Rachel-AG"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Rachel-AG"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Rachel-AG"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Rachel-AG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"public class DateTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"        String nullDate \u003d null;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Rachel-AG"},"content":"        LocalDate nullLocalDate \u003d null;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(nullDate));","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(nullLocalDate));","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Rachel-AG"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Rachel-AG"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Rachel-AG"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Rachel-AG"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"    public void isValidDate() {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"        // null date","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"        // invalid date","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Rachel-AG"},"content":"        assertFalse(Date.isValidDate(\"\")); // empty string","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Rachel-AG"},"content":"        assertFalse(Date.isValidDate(\" \")); // spaces only","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"        assertFalse(Date.isValidDate(\"91\")); // less than 3 numbers","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"        assertFalse(Date.isValidDate(\"5 Jan 2022\")); // non-numeric","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"        assertFalse(Date.isValidDate(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"        assertFalse(Date.isValidDate(\"12-12-12\")); // year should be 4 digits","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"        assertFalse(Date.isValidDate(\"12/12/1212\")); // slash instead of dash","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"        assertFalse(Date.isValidDate(\"12-13-1212\")); // invalid month","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"        assertFalse(Date.isValidDate(\"32-13-1212\")); // invalid date","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"        assertFalse(Date.isValidDate(\"29-2-2022\")); // month should be 2 digits","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"Rachel-AG"},"content":"        assertFalse(Date.isValidDate(\"9-02-2022\")); // date should be 2 digits","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"Rachel-AG"},"content":"        // valid date","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"        assertTrue(Date.isValidDate(\"12-12-1212\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"Rachel-AG"},"content":"        assertTrue(Date.isValidDate(\"09-02-2022\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"Rachel-AG"},"content":"        assertTrue(Date.isValidDate(\"29-02-2022\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"Rachel-AG"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Rachel-AG":49}},{"path":"src/test/java/seedu/phu/model/internship/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"JustinS00":2,"-":66}},{"path":"src/test/java/seedu/phu/model/internship/InternshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.ALICE;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"public class InternshipTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"        Internship internship \u003d new InternshipBuilder().build();","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e internship.getTags().remove(0));","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"    public void isSameInternship() {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"        assertTrue(ALICE.isSameInternship(ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"        assertFalse(ALICE.isSameInternship(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"        Internship editedAlice \u003d new InternshipBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"                .withRemark(VALID_REMARK_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"        assertTrue(ALICE.isSameInternship(editedAlice));","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"        editedAlice \u003d new InternshipBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"        assertFalse(ALICE.isSameInternship(editedAlice));","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"        Internship editedBob \u003d new InternshipBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"        assertFalse(BOB.isSameInternship(editedBob));","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"        editedBob \u003d new InternshipBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"        assertFalse(BOB.isSameInternship(editedBob));","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"    public void equals() {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"        Internship aliceCopy \u003d new InternshipBuilder(ALICE).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"JustinS00"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"JustinS00"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"        // different internship -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"JustinS00"},"content":"        Internship editedAlice \u003d new InternshipBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"JustinS00"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"        editedAlice \u003d new InternshipBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"JustinS00"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"JustinS00"},"content":"        editedAlice \u003d new InternshipBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"JustinS00"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"JustinS00"},"content":"        // different internship -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"Rachel-AG"},"content":"        editedAlice \u003d new InternshipBuilder(ALICE).withRemark(VALID_REMARK_BOB).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"JustinS00"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"JustinS00"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"JustinS00"},"content":"        editedAlice \u003d new InternshipBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"JustinS00"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Rachel-AG":7,"JustinS00":84}},{"path":"src/test/java/seedu/phu/model/internship/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"        // different internship -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"        assertFalse(predicate.test(new InternshipBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"        assertFalse(predicate.test(new InternshipBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"        // Keywords match phone, email and internship, but does not match name","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"JustinS00"},"content":"        assertFalse(predicate.test(new InternshipBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"Rachel-AG"},"content":"                .withEmail(\"alice@email.com\").withRemark(\"Main Street\").build()));","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Rachel-AG":1,"JustinS00":11,"-":63}},{"path":"src/test/java/seedu/phu/model/internship/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"JustinS00":2,"-":38}},{"path":"src/test/java/seedu/phu/model/internship/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"JustinS00":2,"-":38}},{"path":"src/test/java/seedu/phu/model/internship/PositionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Rachel-AG"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Rachel-AG"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Rachel-AG"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Rachel-AG"},"content":"public class PositionTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Position(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"    public void constructor_invalidPosition_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Rachel-AG"},"content":"        String invalidPosition \u003d \"\";","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Rachel-AG"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Position(invalidPosition));","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Rachel-AG"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Rachel-AG"},"content":"    public void isValidPosition() {","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Rachel-AG"},"content":"        // null position","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Rachel-AG"},"content":"        assertThrows(NullPointerException.class, () -\u003e Position.isValidPosition(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"        // invalid position","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"        assertFalse(Position.isValidPosition(\"\")); // empty string","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"        assertFalse(Position.isValidPosition(\" \")); // spaces only","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Rachel-AG"},"content":"        assertFalse(Position.isValidPosition(\"Fullst@ck Engineer\")); // non-alpha numeric","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"        assertFalse(Position.isValidPosition(\"Fullstack Engineer \u0026 Devel0per*\")); // non-alpha numeric","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Rachel-AG"},"content":"        // valid position","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"        assertTrue(Position.isValidPosition(\"developer\")); // 1 word","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"        assertTrue(Position.isValidPosition(\"software developer\")); // 2 words","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"        assertTrue(Position.isValidPosition(\"software developer and tester\")); // more than 2 words","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"        assertTrue(Position.isValidPosition(\"software devel0per\")); // 2 words","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"Rachel-AG"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Rachel-AG":41}},{"path":"src/test/java/seedu/phu/model/internship/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":"public class RemarkTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"Rachel-AG"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"Rachel-AG":12,"JustinS00":2}},{"path":"src/test/java/seedu/phu/model/internship/UniqueInternshipListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.ALICE;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.exceptions.DuplicateInternshipException;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.exceptions.InternshipNotFoundException;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"public class UniqueInternshipListTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"    private final UniqueInternshipList uniqueInternshipList \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"    public void contains_nullInternship_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInternshipList.contains(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"    public void contains_internshipNotInList_returnsFalse() {","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"        assertFalse(uniqueInternshipList.contains(ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"    public void contains_internshipInList_returnsTrue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"        uniqueInternshipList.add(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"        assertTrue(uniqueInternshipList.contains(ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"    public void contains_internshipWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"        uniqueInternshipList.add(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"        Internship editedAlice \u003d new InternshipBuilder(ALICE).withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"                .build();","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"        assertTrue(uniqueInternshipList.contains(editedAlice));","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"    public void add_nullInternship_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInternshipList.add(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"    public void add_duplicateInternship_throwsDuplicateInternshipException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"        uniqueInternshipList.add(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"        assertThrows(DuplicateInternshipException.class, () -\u003e uniqueInternshipList.add(ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"    public void setInternship_nullTargetInternship_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInternshipList.setInternship(null, ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"    public void setInternship_nullEditedInternship_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInternshipList.setInternship(ALICE, null));","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"    public void setInternship_targetInternshipNotInList_throwsInternshipNotFoundException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"        assertThrows(InternshipNotFoundException.class, () -\u003e uniqueInternshipList.setInternship(ALICE, ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"    public void setInternship_editedInternshipIsSameInternship_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"JustinS00"},"content":"        uniqueInternshipList.add(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"JustinS00"},"content":"        uniqueInternshipList.setInternship(ALICE, ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"JustinS00"},"content":"        UniqueInternshipList expectedUniqueInternshipList \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"JustinS00"},"content":"        expectedUniqueInternshipList.add(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"JustinS00"},"content":"        assertEquals(expectedUniqueInternshipList, uniqueInternshipList);","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"JustinS00"},"content":"    public void setInternship_editedInternshipHasSameIdentity_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"JustinS00"},"content":"        uniqueInternshipList.add(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"Rachel-AG"},"content":"        Internship editedAlice \u003d new InternshipBuilder(ALICE).withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"JustinS00"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"JustinS00"},"content":"                .build();","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"JustinS00"},"content":"        uniqueInternshipList.setInternship(ALICE, editedAlice);","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"JustinS00"},"content":"        UniqueInternshipList expectedUniqueInternshipList \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"JustinS00"},"content":"        expectedUniqueInternshipList.add(editedAlice);","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"JustinS00"},"content":"        assertEquals(expectedUniqueInternshipList, uniqueInternshipList);","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"JustinS00"},"content":"    public void setInternship_editedInternshipHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"JustinS00"},"content":"        uniqueInternshipList.add(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"JustinS00"},"content":"        uniqueInternshipList.setInternship(ALICE, BOB);","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"JustinS00"},"content":"        UniqueInternshipList expectedUniqueInternshipList \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"JustinS00"},"content":"        expectedUniqueInternshipList.add(BOB);","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"JustinS00"},"content":"        assertEquals(expectedUniqueInternshipList, uniqueInternshipList);","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"JustinS00"},"content":"    public void setInternship_editedInternshipHasNonUniqueIdentity_throwsDuplicateInternshipException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"JustinS00"},"content":"        uniqueInternshipList.add(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"JustinS00"},"content":"        uniqueInternshipList.add(BOB);","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"JustinS00"},"content":"        assertThrows(DuplicateInternshipException.class, () -\u003e uniqueInternshipList.setInternship(ALICE, BOB));","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"JustinS00"},"content":"    public void remove_nullInternship_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"JustinS00"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInternshipList.remove(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"JustinS00"},"content":"    public void remove_internshipDoesNotExist_throwsInternshipNotFoundException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"JustinS00"},"content":"        assertThrows(InternshipNotFoundException.class, () -\u003e uniqueInternshipList.remove(ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"JustinS00"},"content":"    public void remove_existingInternship_removesInternship() {","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"JustinS00"},"content":"        uniqueInternshipList.add(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"JustinS00"},"content":"        uniqueInternshipList.remove(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"JustinS00"},"content":"        UniqueInternshipList expectedUniqueInternshipList \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"JustinS00"},"content":"        assertEquals(expectedUniqueInternshipList, uniqueInternshipList);","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"JustinS00"},"content":"    public void setInternships_nullUniqueInternshipList_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"JustinS00"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"JustinS00"},"content":"                -\u003e uniqueInternshipList.setInternships((UniqueInternshipList) null));","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"JustinS00"},"content":"    public void setInternships_uniqueInternshipList_replacesOwnListWithProvidedUniqueInternshipList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"JustinS00"},"content":"        uniqueInternshipList.add(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"JustinS00"},"content":"        UniqueInternshipList expectedUniqueInternshipList \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"JustinS00"},"content":"        expectedUniqueInternshipList.add(BOB);","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"JustinS00"},"content":"        uniqueInternshipList.setInternships(expectedUniqueInternshipList);","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"JustinS00"},"content":"        assertEquals(expectedUniqueInternshipList, uniqueInternshipList);","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"JustinS00"},"content":"    public void setInternships_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"JustinS00"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInternshipList.setInternships((List\u003cInternship\u003e) null));","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"JustinS00"},"content":"    public void setInternships_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"JustinS00"},"content":"        uniqueInternshipList.add(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"JustinS00"},"content":"        List\u003cInternship\u003e internshipList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"JustinS00"},"content":"        uniqueInternshipList.setInternships(internshipList);","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"JustinS00"},"content":"        UniqueInternshipList expectedUniqueInternshipList \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"JustinS00"},"content":"        expectedUniqueInternshipList.add(BOB);","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"JustinS00"},"content":"        assertEquals(expectedUniqueInternshipList, uniqueInternshipList);","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"JustinS00"},"content":"    public void setInternships_listWithDuplicateInternships_throwsDuplicateInternshipException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":164,"author":{"gitId":"JustinS00"},"content":"        List\u003cInternship\u003e listWithDuplicateInternships \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"JustinS00"},"content":"        assertThrows(DuplicateInternshipException.class, ()","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"JustinS00"},"content":"                -\u003e uniqueInternshipList.setInternships(listWithDuplicateInternships));","lastModifiedDate":"2022-10-13"},{"lineNumber":167,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":168,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":169,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":170,"author":{"gitId":"JustinS00"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":171,"author":{"gitId":"JustinS00"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-13"},{"lineNumber":172,"author":{"gitId":"JustinS00"},"content":"            -\u003e uniqueInternshipList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-13"},{"lineNumber":173,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":174,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Rachel-AG":4,"JustinS00":170}},{"path":"src/test/java/seedu/phu/model/internship/WebsiteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Rachel-AG"},"content":"package seedu.phu.model.internship;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Rachel-AG"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"Rachel-AG"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"Rachel-AG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"Rachel-AG"},"content":"public class WebsiteTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"Rachel-AG"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"Rachel-AG"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"Rachel-AG"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Website(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Rachel-AG"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"    public void constructor_invalidWebsite_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"Rachel-AG"},"content":"        String invalidWebsite \u003d \"\";","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"Rachel-AG"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidWebsite));","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Rachel-AG"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"Rachel-AG"},"content":"    public void isValidWebsite() {","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"Rachel-AG"},"content":"        // null website","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"Rachel-AG"},"content":"        assertThrows(NullPointerException.class, () -\u003e Website.isValidWebsite(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"        // invalid website","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"        assertFalse(Website.isValidWebsite(\"\")); // empty string","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"        assertFalse(Website.isValidWebsite(\" \")); // spaces only","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"        assertFalse(Website.isValidWebsite(\"https:\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"Rachel-AG"},"content":"        assertFalse(Website.isValidWebsite(\"https://\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Rachel-AG"},"content":"        assertFalse(Website.isValidWebsite(\"www.google.com/jobs/results\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Rachel-AG"},"content":"        // valid websites","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Rachel-AG"},"content":"        assertTrue(Website.isValidWebsite(\"http://careers.google.com/jobs/results\")); // unsafe url","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"        assertTrue(Website.isValidWebsite(\"https://careers.google.com/jobs/results/115402744447017670/\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"        assertTrue(Website.isValidWebsite(\"https://example.com/web/jobs\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"        assertTrue(Website.isValidWebsite(\"https://example.sg/careers/swe\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"Rachel-AG"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Rachel-AG":39}},{"path":"src/test/java/seedu/phu/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.model.tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"JustinS00":2,"-":24}},{"path":"src/test/java/seedu/phu/storage/JsonAdaptedInternshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.storage.JsonAdaptedInternship.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.BENSON;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Remark;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"public class JsonAdaptedInternshipTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"    private static final String INVALID_INTERNSHIP \u003d \" \";","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"    private static final String INVALID_POSITION \u003d \"intern @Google\";","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"Rachel-AG"},"content":"    private static final String INVALID_DATE \u003d \"12/12/12\";","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"Rachel-AG"},"content":"    private static final String INVALID_APPLICATION_PROCESS \u003d \"application\";","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"Rachel-AG"},"content":"    private static final String INVALID_WEBSITE \u003d \"www.invalid.com\";","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"    private static final String VALID_INTERNSHIP \u003d BENSON.getRemark().toString();","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"    private static final String VALID_POSITION \u003d BENSON.getPosition().toString();","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"Rachel-AG"},"content":"    private static final String VALID_DATE \u003d BENSON.getDate().toString();","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"Rachel-AG"},"content":"    private static final String VALID_APPLICATION_PROCESS \u003d BENSON.getApplicationProcess().toString();","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"Rachel-AG"},"content":"    private static final String VALID_WEBSITE \u003d BENSON.getWebsite().toString();","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"    public void toModelType_validInternshipDetails_returnsInternship() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"        JsonAdaptedInternship internship \u003d new JsonAdaptedInternship(BENSON);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"        assertEquals(BENSON, internship.toModelType());","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"                new JsonAdaptedInternship(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_INTERNSHIP, VALID_POSITION,","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"Rachel-AG"},"content":"                        VALID_APPLICATION_PROCESS, VALID_DATE, VALID_WEBSITE, VALID_TAGS);","lastModifiedDate":"2022-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"        JsonAdaptedInternship internship \u003d new JsonAdaptedInternship(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"                VALID_INTERNSHIP, VALID_POSITION, VALID_APPLICATION_PROCESS, VALID_DATE, VALID_WEBSITE, VALID_TAGS);","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"                new JsonAdaptedInternship(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_INTERNSHIP, VALID_POSITION,","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"Rachel-AG"},"content":"                        VALID_APPLICATION_PROCESS, VALID_DATE, VALID_WEBSITE, VALID_TAGS);","lastModifiedDate":"2022-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"JustinS00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"        JsonAdaptedInternship internship \u003d new JsonAdaptedInternship(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"                VALID_INTERNSHIP, VALID_POSITION, VALID_APPLICATION_PROCESS, VALID_DATE, VALID_WEBSITE, VALID_TAGS);","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"JustinS00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"JustinS00"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"JustinS00"},"content":"                new JsonAdaptedInternship(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_INTERNSHIP, VALID_POSITION,","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"Rachel-AG"},"content":"                        VALID_APPLICATION_PROCESS, VALID_DATE, VALID_WEBSITE, VALID_TAGS);","lastModifiedDate":"2022-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"JustinS00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"JustinS00"},"content":"        JsonAdaptedInternship internship \u003d new JsonAdaptedInternship(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"JustinS00"},"content":"                VALID_INTERNSHIP, VALID_POSITION, VALID_APPLICATION_PROCESS, VALID_DATE, VALID_WEBSITE, VALID_TAGS);","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"JustinS00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"Rachel-AG"},"content":"    public void toModelType_nullRemark_throwsIllegalValueException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"JustinS00"},"content":"        JsonAdaptedInternship internship \u003d new JsonAdaptedInternship(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"JustinS00"},"content":"                null, VALID_POSITION, VALID_APPLICATION_PROCESS, VALID_DATE, VALID_WEBSITE, VALID_TAGS);","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"Rachel-AG"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName());","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"JustinS00"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"JustinS00"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"JustinS00"},"content":"                new JsonAdaptedInternship(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_INTERNSHIP, VALID_POSITION,","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"Rachel-AG"},"content":"                        VALID_APPLICATION_PROCESS, VALID_DATE, VALID_WEBSITE, invalidTags);","lastModifiedDate":"2022-09-25"},{"lineNumber":115,"author":{"gitId":"JustinS00"},"content":"        assertThrows(IllegalValueException.class, internship::toModelType);","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Rachel-AG":14,"JustinS00":39,"-":65}},{"path":"src/test/java/seedu/phu/storage/JsonInternshipBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.ALICE;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.HOON;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.IDA;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.getTypicalInternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.InternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ReadOnlyInternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"public class JsonInternshipBookStorageTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonInternshipBookStorageTest\");","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"    @TempDir","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"    public void readInternshipBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"        assertThrows(NullPointerException.class, () -\u003e readInternshipBook(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"    private java.util.Optional\u003cReadOnlyInternshipBook\u003e readInternshipBook(String filePath) throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"        return new JsonInternshipBookStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"                .readInternshipBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"                : null;","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"        assertFalse(readInternshipBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"        assertThrows(DataConversionException.class, ()","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"                -\u003e readInternshipBook(\"notJsonFormatInternshipBook.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"    public void readInternshipBook_invalidInternshipInternshipBook_throwDataConversionException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"        assertThrows(DataConversionException.class, ()","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"                -\u003e readInternshipBook(\"invalidInternshipInternshipBook.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"JustinS00"},"content":"    public void readInternshipBook_invalidAndValidInternshipInternshipBook_throwDataConversionException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"        assertThrows(DataConversionException.class, ()","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"                -\u003e readInternshipBook(\"invalidAndValidInternshipInternshipBook.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"    public void readAndSaveInternshipBook_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"        Path filePath \u003d testFolder.resolve(\"TempInternshipBook.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"        InternshipBook original \u003d getTypicalInternshipBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"        JsonInternshipBookStorage jsonInternshipBookStorage \u003d new JsonInternshipBookStorage(filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"        jsonInternshipBookStorage.saveInternshipBook(original, filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"JustinS00"},"content":"        ReadOnlyInternshipBook readBack \u003d jsonInternshipBookStorage.readInternshipBook(filePath).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"        assertEquals(original, new InternshipBook(readBack));","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"JustinS00"},"content":"        original.addInternship(HOON);","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"JustinS00"},"content":"        original.removeInternship(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"JustinS00"},"content":"        jsonInternshipBookStorage.saveInternshipBook(original, filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"JustinS00"},"content":"        readBack \u003d jsonInternshipBookStorage.readInternshipBook(filePath).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"JustinS00"},"content":"        assertEquals(original, new InternshipBook(readBack));","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"JustinS00"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"JustinS00"},"content":"        original.addInternship(IDA);","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"JustinS00"},"content":"        jsonInternshipBookStorage.saveInternshipBook(original); // file path not specified","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"JustinS00"},"content":"        readBack \u003d jsonInternshipBookStorage.readInternshipBook().get(); // file path not specified","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"JustinS00"},"content":"        assertEquals(original, new InternshipBook(readBack));","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"JustinS00"},"content":"    public void saveInternshipBook_nullInternshipBook_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"JustinS00"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveInternshipBook(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"JustinS00"},"content":"     * Saves {@code internshipBook} at the specified {@code filePath}.","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"JustinS00"},"content":"    private void saveInternshipBook(ReadOnlyInternshipBook internshipBook, String filePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"JustinS00"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"JustinS00"},"content":"            new JsonInternshipBookStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"JustinS00"},"content":"                    .saveInternshipBook(internshipBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"JustinS00"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"JustinS00"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"JustinS00"},"content":"    public void saveInternshipBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"JustinS00"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveInternshipBook(new InternshipBook(), null));","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"JustinS00":114}},{"path":"src/test/java/seedu/phu/storage/JsonSerializableInternshipBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.util.JsonUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.InternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.testutil.TypicalInternships;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"public class JsonSerializableInternshipBookTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableInternshipBookTest\");","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"    private static final Path TYPICAL_INTERNSHIPS_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"            .resolve(\"typicalInternshipInternshipBook.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"    private static final Path INVALID_INTERNSHIP_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"            .resolve(\"invalidInternshipInternshipBook.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"    private static final Path DUPLICATE_INTERNSHIP_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"            .resolve(\"duplicateInternshipInternshipBook.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"    public void toModelType_typicalInternshipsFile_success() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"        JsonSerializableInternshipBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_INTERNSHIPS_FILE,","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"                JsonSerializableInternshipBook.class).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"        InternshipBook internshipBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"        InternshipBook typicalInternshipsInternshipBook \u003d TypicalInternships.getTypicalInternshipBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"        assertEquals(internshipBookFromFile, typicalInternshipsInternshipBook);","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"    public void toModelType_invalidInternshipFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"        JsonSerializableInternshipBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_INTERNSHIP_FILE,","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"                JsonSerializableInternshipBook.class).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"    public void toModelType_duplicateInternships_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"        JsonSerializableInternshipBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_INTERNSHIP_FILE,","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"                JsonSerializableInternshipBook.class).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableInternshipBook.MESSAGE_DUPLICATE_INTERNSHIP,","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"JustinS00":50}},{"path":"src/test/java/seedu/phu/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"        userPrefs.setInternshipBookFilePath(Paths.get(\"internshipbook.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"JustinS00":6,"-":117}},{"path":"src/test/java/seedu/phu/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.TypicalInternships.getTypicalInternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.InternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.ReadOnlyInternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"        JsonInternshipBookStorage internshipBookStorage \u003d new JsonInternshipBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"        storageManager \u003d new StorageManager(internshipBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"    public void internshipBookReadSave() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"         * {@link JsonInternshipBookStorage} class.","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonInternshipBookStorageTest} class.","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"        InternshipBook original \u003d getTypicalInternshipBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"        storageManager.saveInternshipBook(original);","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"        ReadOnlyInternshipBook retrieved \u003d storageManager.readInternshipBook().get();","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"        assertEquals(original, new InternshipBook(retrieved));","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"    public void getInternshipBookFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"        assertNotNull(storageManager.getInternshipBookFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JustinS00":17,"-":51}},{"path":"src/test/java/seedu/phu/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"JustinS00":1,"-":33}},{"path":"src/test/java/seedu/phu/testutil/EditInternshipDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.EditCommand.EditInternshipDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.ApplicationProcess;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Date;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Position;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Remark;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Website;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":" * A utility class to help with building EditInternshipDescriptor objects.","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"public class EditInternshipDescriptorBuilder {","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"    private EditInternshipDescriptor descriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"    public EditInternshipDescriptorBuilder() {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"        descriptor \u003d new EditInternshipDescriptor();","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"    public EditInternshipDescriptorBuilder(EditInternshipDescriptor descriptor) {","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"        this.descriptor \u003d new EditInternshipDescriptor(descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"     * Returns an {@code EditInternshipDescriptor} with fields containing {@code internship}\u0027s details","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"    public EditInternshipDescriptorBuilder(Internship internship) {","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"        descriptor \u003d new EditInternshipDescriptor();","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"        descriptor.setName(internship.getName());","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"        descriptor.setPhone(internship.getPhone());","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"        descriptor.setEmail(internship.getEmail());","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"        descriptor.setRemark(internship.getRemark());","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"        descriptor.setPosition(internship.getPosition());","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"        descriptor.setApplicationProcess(internship.getApplicationProcess());","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"        descriptor.setDate(internship.getDate());","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"        descriptor.setWebsite(internship.getWebsite());","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"        descriptor.setTags(internship.getTags());","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"     * Sets the {@code Name} of the {@code EditInternshipDescriptor} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"    public EditInternshipDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"     * Sets the {@code Phone} of the {@code EditInternshipDescriptor} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"    public EditInternshipDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"JustinS00"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"     * Sets the {@code Email} of the {@code EditInternshipDescriptor} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"    public EditInternshipDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"Rachel-AG"},"content":"     * Sets the {@code Remark} of the {@code EditInternshipDescriptor} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"Rachel-AG"},"content":"    public EditInternshipDescriptorBuilder withRemark(String remark) {","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"Rachel-AG"},"content":"        descriptor.setRemark(new Remark(remark));","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"JustinS00"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"JustinS00"},"content":"     * Sets the {@code Position} of the {@code EditInternshipDescriptor} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"JustinS00"},"content":"    public EditInternshipDescriptorBuilder withPosition(String position) {","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"JustinS00"},"content":"        descriptor.setPosition(new Position(position));","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"JustinS00"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"JustinS00"},"content":"     * Sets the {@code ApplicationProcess} of the {@code EditInternshipDescriptor} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"JustinS00"},"content":"    public EditInternshipDescriptorBuilder withApplicationProcess(String applicationProcess) {","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"JustinS00"},"content":"        descriptor.setApplicationProcess(new ApplicationProcess(applicationProcess));","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"JustinS00"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"JustinS00"},"content":"     * Sets the {@code Date} of the {@code EditInternshipDescriptor} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"JustinS00"},"content":"    public EditInternshipDescriptorBuilder withDate(String date) {","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"JustinS00"},"content":"        descriptor.setDate(new Date(date));","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"JustinS00"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"JustinS00"},"content":"     * Sets the {@code Website} of the {@code EditInternshipDescriptor} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"JustinS00"},"content":"    public EditInternshipDescriptorBuilder withWebsite(String website) {","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"JustinS00"},"content":"        descriptor.setWebsite(new Website(website));","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"JustinS00"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"JustinS00"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditInternshipDescriptor}","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"JustinS00"},"content":"     * that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"JustinS00"},"content":"    public EditInternshipDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"JustinS00"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"JustinS00"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"JustinS00"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"JustinS00"},"content":"    public EditInternshipDescriptor build() {","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"JustinS00"},"content":"        return descriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"Rachel-AG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Rachel-AG":4,"JustinS00":124}},{"path":"src/test/java/seedu/phu/testutil/InternshipBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.InternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":" * A utility class to help with building Internshipbook objects.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":" *     {@code InternshipBook ab \u003d new InternshipBookBuilder().withInternship(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"public class InternshipBookBuilder {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"    private InternshipBook internshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"    public InternshipBookBuilder() {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"        internshipBook \u003d new InternshipBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"    public InternshipBookBuilder(InternshipBook internshipBook) {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"        this.internshipBook \u003d internshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"     * Adds a new {@code Internship} to the {@code InternshipBook} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"    public InternshipBookBuilder withInternship(Internship internship) {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"        internshipBook.addInternship(internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"    public InternshipBook build() {","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"        return internshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"JustinS00":34}},{"path":"src/test/java/seedu/phu/testutil/InternshipBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.ApplicationProcess;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Date;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Email;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Name;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Position;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Remark;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Website;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":" * A utility class to help with building Internship objects.","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"public class InternshipBuilder {","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"Rachel-AG"},"content":"    public static final String DEFAULT_INTERNSHIP \u003d \"winter internship \u002722\";","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"    public static final String DEFAULT_POSITION \u003d \"Software Intern\";","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"    public static final String DEFAULT_APPLICATION_PROCESS \u003d \"interview\";","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"    public static final String DEFAULT_DATE \u003d \"01-12-2022\";","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"    public static final String DEFAULT_WEBSITE \u003d \"https://defaultweb.com/careers\";","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"    private Name name;","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"    private Phone phone;","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"    private Email email;","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"    private Remark remark;","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"    private Position position;","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"    private ApplicationProcess applicationProcess;","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"    private Date date;","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"    private Website website;","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"     * Creates a {@code InternshipBuilder} with the default details.","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"    public InternshipBuilder() {","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"        remark \u003d new Remark(DEFAULT_INTERNSHIP);","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"        position \u003d new Position(DEFAULT_POSITION);","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"        applicationProcess \u003d new ApplicationProcess(DEFAULT_APPLICATION_PROCESS);","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"        date \u003d new Date(DEFAULT_DATE);","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"        website \u003d new Website(DEFAULT_WEBSITE);","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"     * Initializes the InternshipBuilder with the data of {@code internshipToCopy}.","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"    public InternshipBuilder(Internship internshipToCopy) {","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"JustinS00"},"content":"        name \u003d internshipToCopy.getName();","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"        phone \u003d internshipToCopy.getPhone();","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"        email \u003d internshipToCopy.getEmail();","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"        remark \u003d internshipToCopy.getRemark();","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"JustinS00"},"content":"        tags \u003d new HashSet\u003c\u003e(internshipToCopy.getTags());","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"        position \u003d internshipToCopy.getPosition();","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"        applicationProcess \u003d internshipToCopy.getApplicationProcess();","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"        date \u003d internshipToCopy.getDate();","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"        website \u003d internshipToCopy.getWebsite();","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"     * Sets the {@code Name} of the {@code Internship} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"    public InternshipBuilder withName(String name) {","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"JustinS00"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Internship} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"JustinS00"},"content":"    public InternshipBuilder withTags(String ... tags) {","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"JustinS00"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"JustinS00"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"Rachel-AG"},"content":"     * Sets the {@code Remark} of the {@code Remark} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"Rachel-AG"},"content":"    public InternshipBuilder withRemark(String remark) {","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"Rachel-AG"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"JustinS00"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"JustinS00"},"content":"     * Sets the {@code Phone} of the {@code Internship} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"JustinS00"},"content":"    public InternshipBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"JustinS00"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"JustinS00"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"JustinS00"},"content":"     * Sets the {@code Email} of the {@code Internship} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"JustinS00"},"content":"    public InternshipBuilder withEmail(String email) {","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"JustinS00"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"JustinS00"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"JustinS00"},"content":"     * Sets the {@code Position} of the {@code Internship} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"JustinS00"},"content":"    public InternshipBuilder withPosition(String position) {","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"JustinS00"},"content":"        this.position \u003d new Position(position);","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"JustinS00"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"JustinS00"},"content":"     * Sets the {@code ApplicationProcess} of the {@code Internship} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"JustinS00"},"content":"    public InternshipBuilder withApplicationProcess(String applicationProcess) {","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"JustinS00"},"content":"        this.applicationProcess \u003d new ApplicationProcess(applicationProcess);","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"JustinS00"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"JustinS00"},"content":"     * Sets the {@code Date} of the {@code Internship} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"JustinS00"},"content":"    public InternshipBuilder withDate(String date) {","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"JustinS00"},"content":"        this.date \u003d new Date(date);","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"JustinS00"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"JustinS00"},"content":"     * Sets the {@code Website} of the {@code Internship} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"JustinS00"},"content":"    public InternshipBuilder withWebsite(String website) {","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"JustinS00"},"content":"        this.website \u003d new Website(website);","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"JustinS00"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"JustinS00"},"content":"    public Internship build() {","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"JustinS00"},"content":"        return new Internship(name, phone, email, remark, position, applicationProcess, date, website, tags);","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Rachel-AG":4,"JustinS00":145}},{"path":"src/test/java/seedu/phu/testutil/InternshipUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_APPLICATION_PROCESS;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.parser.CliSyntax.PREFIX_WEBSITE;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.AddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.logic.commands.EditCommand.EditInternshipDescriptor;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.tag.Tag;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":" * A utility class for Internship.","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"public class InternshipUtil {","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"     * Returns an add command string for adding the {@code internship}.","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"    public static String getAddCommand(Internship internship) {","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getInternshipDetails(internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"     * Returns the part of command string for the given {@code internship}\u0027s details.","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"JustinS00"},"content":"    public static String getInternshipDetails(Internship internship) {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"        sb.append(PREFIX_NAME + internship.getName().fullName + \" \");","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"        sb.append(PREFIX_PHONE + internship.getPhone().value + \" \");","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"        sb.append(PREFIX_EMAIL + internship.getEmail().value + \" \");","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"JustinS00"},"content":"        sb.append(PREFIX_REMARK + internship.getRemark().value + \" \");","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"        sb.append(PREFIX_POSITION + internship.getPosition().positionName + \" \");","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"        sb.append(PREFIX_APPLICATION_PROCESS + internship.getApplicationProcess().toString() + \" \");","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"        sb.append(PREFIX_DATE + internship.getDate().toInputFormat() + \" \");","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"        sb.append(PREFIX_WEBSITE + internship.getWebsite().value + \" \");","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"JustinS00"},"content":"        internship.getTags().stream().forEach(","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"        );","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"JustinS00"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"     * Returns the part of command string for the given {@code EditInternshipDescriptor}\u0027s details.","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"    public static String getEditInternshipDescriptorDetails(EditInternshipDescriptor descriptor) {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"JustinS00"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"JustinS00"},"content":"        descriptor.getRemark().ifPresent(internship -\u003e sb.append(PREFIX_REMARK).append(internship.value).append(\" \"));","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"        descriptor.getPosition().ifPresent(position -\u003e sb.append(PREFIX_POSITION).append(position.positionName)","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"                .append(\" \"));","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"JustinS00"},"content":"        descriptor.getApplicationProcess().ifPresent(applicationProcess -\u003e sb.append(PREFIX_APPLICATION_PROCESS)","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"                .append(applicationProcess.value).append(\" \"));","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"        descriptor.getDate().ifPresent(date -\u003e sb.append(PREFIX_DATE).append(date.toInputFormat()).append(\" \"));","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"JustinS00"},"content":"        descriptor.getWebsite().ifPresent(website -\u003e sb.append(PREFIX_WEBSITE).append(website.value).append(\" \"));","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"JustinS00"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"JustinS00"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"            } else {","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"JustinS00"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"JustinS00"},"content":"            }","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"JustinS00"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"JustinS00":77}},{"path":"src/test/java/seedu/phu/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JustinS00":1,"-":71}},{"path":"src/test/java/seedu/phu/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"     * Returns the middle index of the internship in the {@code model}\u0027s internship list.","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"        return Index.fromOneBased(model.getFilteredInternshipList().size() / 2);","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"     * Returns the last index of the internship in the {@code model}\u0027s internship list.","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"        return Index.fromOneBased(model.getFilteredInternshipList().size());","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"     * Returns the internship in the {@code model}\u0027s internship list at {@code index}.","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"JustinS00"},"content":"    public static Internship getInternship(Model model, Index index) {","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"        return model.getFilteredInternshipList().get(index.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JustinS00":11,"-":44}},{"path":"src/test/java/seedu/phu/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.commons.core.index.Indexes;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"public class TypicalIndexes {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"    public static final Index INDEX_FIRST_INTERNSHIP \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"    public static final Index INDEX_SECOND_INTERNSHIP \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"    public static final Index INDEX_THIRD_INTERNSHIP \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"JustinS00"},"content":"    public static final Indexes INDEXES_FIRST_INTERNSHIP \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"JustinS00"},"content":"            new Indexes(Set.of(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"aarontangr"},"content":"    public static final Indexes INDEXES_SECOND_INTERNSHIP \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"aarontangr"},"content":"            new Indexes(Set.of(Index.fromOneBased(2)));","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"JustinS00"},"content":"    public static final Indexes INDEXES_FIRST_AND_SECOND_INTERNSHIP \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"            new Indexes(Set.of(Index.fromOneBased(1), Index.fromOneBased(2)));","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"    public static final Indexes INDEXES_SECOND_AND_FIRST_INTERNSHIP \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"            new Indexes(Set.of(Index.fromOneBased(2), Index.fromOneBased(1)));","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"aarontangr":2,"JustinS00":21}},{"path":"src/test/java/seedu/phu/testutil/TypicalInternships.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_APPLICATION_PROCESS_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_APPLICATION_PROCESS_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_DATE_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_POSITION_AMY;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_POSITION_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"Rachel-AG"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_WEBSITE_AMY;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.logic.commands.CommandTestUtil.VALID_WEBSITE_BOB;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"JustinS00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"JustinS00"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"JustinS00"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.InternshipBook;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.model.internship.Internship;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"JustinS00"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"JustinS00"},"content":" * A utility class containing a list of {@code Internship} objects to be used in tests.","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"JustinS00"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"JustinS00"},"content":"public class TypicalInternships {","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"JustinS00"},"content":"    public static final Internship ALICE \u003d new InternshipBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Rachel-AG"},"content":"            .withRemark(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"JustinS00"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"JustinS00"},"content":"            .withTags(\"friends\").withPosition(\"Backend Intern\").withApplicationProcess(\"APPLY\")","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"JustinS00"},"content":"            .withDate(\"11-12-2022\").withWebsite(\"https://careers.google.com/jobs\").build();","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"JustinS00"},"content":"    public static final Internship BENSON \u003d new InternshipBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"Rachel-AG"},"content":"            .withRemark(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"JustinS00"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"JustinS00"},"content":"            .withTags(\"owesMoney\", \"friends\").withPosition(\"software engineer\").withApplicationProcess(\"ASSESSMENT\")","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"JustinS00"},"content":"            .withDate(\"24-09-2022\").withWebsite(\"https://www.grab.com/sg/about\").build();","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"JustinS00"},"content":"    public static final Internship CARL \u003d new InternshipBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"Rachel-AG"},"content":"            .withEmail(\"heinz@example.com\").withRemark(\"wall street\").withPosition(\"backend engineer\")","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"JustinS00"},"content":"            .withApplicationProcess(\"APPLY\").withDate(\"24-09-2022\").withWebsite(\"NA\").build();","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"JustinS00"},"content":"    public static final Internship DANIEL \u003d new InternshipBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"Rachel-AG"},"content":"            .withEmail(\"cornelia@example.com\").withRemark(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"JustinS00"},"content":"            .withPosition(\"frontend engineer\").withApplicationProcess(\"INTERVIEW\")","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"JustinS00"},"content":"            .withDate(\"14-09-2022\").withWebsite(\"NA\").build();","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"JustinS00"},"content":"    public static final Internship ELLE \u003d new InternshipBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"Rachel-AG"},"content":"            .withEmail(\"werner@example.com\").withRemark(\"michegan ave\").withPosition(\"data engineer\")","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"JustinS00"},"content":"            .withApplicationProcess(\"APPLY\").withDate(\"24-09-2022\").withWebsite(\"NA\").build();","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"JustinS00"},"content":"    public static final Internship FIONA \u003d new InternshipBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"Rachel-AG"},"content":"            .withEmail(\"lydia@example.com\").withRemark(\"little tokyo\").withPosition(\"AI engineer\")","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"JustinS00"},"content":"            .withApplicationProcess(\"APPLY\").withApplicationProcess(\"APPLY\").withDate(\"24-09-2022\")","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"JustinS00"},"content":"            .withWebsite(\"NA\").build();","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"JustinS00"},"content":"    public static final Internship GEORGE \u003d new InternshipBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"Rachel-AG"},"content":"            .withEmail(\"anna@example.com\").withRemark(\"4th street\").withPosition(\"Data analyst\")","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"JustinS00"},"content":"            .withApplicationProcess(\"APPLY\").withApplicationProcess(\"APPLY\").withDate(\"24-09-2022\")","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"JustinS00"},"content":"            .withWebsite(\"NA\").build();","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"JustinS00"},"content":"    // Manually added","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"JustinS00"},"content":"    public static final Internship HOON \u003d new InternshipBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"Rachel-AG"},"content":"            .withEmail(\"stefan@example.com\").withRemark(\"little india\").build();","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"JustinS00"},"content":"    public static final Internship IDA \u003d new InternshipBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"Rachel-AG"},"content":"            .withEmail(\"hans@example.com\").withRemark(\"chicago ave\").build();","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"JustinS00"},"content":"    // Manually added - Internship\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"JustinS00"},"content":"    public static final Internship AMY \u003d new InternshipBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"Rachel-AG"},"content":"            .withEmail(VALID_EMAIL_AMY).withRemark(VALID_REMARK_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"Rachel-AG"},"content":"            .withPosition(VALID_POSITION_AMY).withApplicationProcess(VALID_APPLICATION_PROCESS_AMY)","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"Rachel-AG"},"content":"            .withDate(VALID_DATE_AMY).withWebsite(VALID_WEBSITE_AMY).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"JustinS00"},"content":"    public static final Internship BOB \u003d new InternshipBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"Rachel-AG"},"content":"            .withEmail(VALID_EMAIL_BOB).withRemark(VALID_REMARK_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"Rachel-AG"},"content":"            .withPosition(VALID_POSITION_BOB).withApplicationProcess(VALID_APPLICATION_PROCESS_BOB)","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"JustinS00"},"content":"            .withDate(VALID_DATE_BOB).withWebsite(VALID_WEBSITE_BOB).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"JustinS00"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"JustinS00"},"content":"    private TypicalInternships() {} // prevents instantiation","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"JustinS00"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"JustinS00"},"content":"     * Returns an {@code InternshipBook} with all the typical internships.","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"JustinS00"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"JustinS00"},"content":"    public static InternshipBook getTypicalInternshipBook() {","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"JustinS00"},"content":"        InternshipBook ab \u003d new InternshipBook();","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"JustinS00"},"content":"        for (Internship internship : getTypicalInternships()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"JustinS00"},"content":"            ab.addInternship(internship);","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"JustinS00"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"JustinS00"},"content":"        return ab;","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"JustinS00"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"JustinS00"},"content":"    public static List\u003cInternship\u003e getTypicalInternships() {","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"JustinS00"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"JustinS00"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"JustinS00"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"Rachel-AG":19,"JustinS00":78}},{"path":"src/test/java/seedu/phu/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"JustinS00":1,"-":34}},{"path":"src/test/java/seedu/phu/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JustinS00"},"content":"package seedu.phu.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"JustinS00"},"content":"import static seedu.phu.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"JustinS00"},"content":"import seedu.phu.MainApp;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"JustinS00":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"\u003c?import seedu.phu.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"JustinS00":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"JustinS00"},"content":"\u003cfx:root type\u003d\"seedu.phu.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"JustinS00":1,"-":5}}]
